      SUBROUTINE DPPLO1(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  MAXNPP,
     1                  IBUGG3,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--FORM A Y PLOT, A Y VERSUS X PLOT, A SUBSET PLOT,
C              AND OTHER SIMILAR TYPE PLOTS
C              WHEN HAVE NO VERSUS AND NO EQUALS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1977.
C     UPDATED         --JANUARY   1978.
C     UPDATED         --FEBRUARY  1978.
C     UPDATED         --MAY       1978.
C     UPDATED         --JUNE      1978.
C     UPDATED         --JULY      1978.
C     UPDATED         --NOVEMBER  1978.
C     UPDATED         --FEBRUARY  1979.
C     UPDATED         --MARCH     1979.
C     UPDATED         --JULY      1979.
C     UPDATED         --JANUARY   1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --MARCH     1988. FIX PLOT Y FOR ... WHEN I OUT OF BOUNDS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ICASEQ
      CHARACTER*4 IHVERT
      CHARACTER*4 IHVER2
      CHARACTER*4 IHHOR
      CHARACTER*4 IHHOR2
      CHARACTER*4 IHSET
      CHARACTER*4 IHSET2
      CHARACTER*4 IERRO4
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPL'
      ISUBN2='O1  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      NUMAR1=0
      D2MIN=0.0
      DEL=0.0
C
C               ********************************
C               **  STEP 10--                 **
C               **  TREAT THE CASE WHEN HAVE  **
C               **  NO    VERSUS        AND   **
C               **  NO    FOR X =             **
C               ********************************
C
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPLO1--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPLOTV,NPLOTP,NS,MAXNPP
   52   FORMAT('NPLOTV,NPLOTP,NS,MAXNPP = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IAND1,IAND2,IBUGG3,IBUGQ
   53   FORMAT('ICASPL,IAND1,IAND2,IBUGG3,IBUGQ = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)IFOUND,IERROR
   55   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE VALIDITY OF ARGUMENT 1      **
C               **  (THIS WILL BE THE VERTICAL VARIABLE)  **
C               ********************************************
C
      ISTEPN='11'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHVERT=IHARG(1)
      IHVER2=IHARG2(1)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHVERT,IHVER2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IVAV=IVALUE(ILOCV)
      NLOCAL=IN(ILOCV)
C
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,1107)IHVERT,IHVER2,ILOCV,IERROR,IVAV,NLOCAL
 1107   FORMAT('IHVERT,IHVER2,ILOCV,IERROR,IVAV,NLOCAL = ',
     1         A4,A4,2X,I8,2X,A4,I8,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *****************************************
C               **  STEP 12--                          **
C               **  CHECK TO SEE THE TYPE CASE--       **
C               **    1) UNQUALIFIED (THAT IS, FULL);  **
C               **    2) SUBSET/EXCEPT; OR             **
C               **    3) FOR.                          **
C               *****************************************
C
      ISTEPN='12'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.LT.1)GOTO1290
      DO1200J=1,NUMARG
        J1=J
        IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ') GOTO1210
        IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ') GOTO1210
        IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ') GOTO1220
 1200 CONTINUE
      GOTO1290
 1210 CONTINUE
      ICASEQ='SUBS'
      ILOCQ=J1
      GOTO1290
 1220 CONTINUE
      ICASEQ='FOR'
      ILOCQ=J1
      GOTO1290
 1290 CONTINUE
C
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,1291)NUMARG,ILOCQ
 1291   FORMAT('NUMARG,ILOCQ = ',12I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************************
C               **  STEP 13--                              **
C               **  FORM THE VECTOR ISUB(.)                **
C               **  DEPENDING ON THE TYPE OF CASE          **
C               **  FOR THE QUALIFIER.                     **
C               *********************************************
C
      ISTEPN='13'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASEQ.EQ.'SUBS')THEN
        NIOLD=NLOCAL
        CALL DPSUBS(NIOLD,ILOCS,NS,IBUGQ,IERRO4)
        NQ=NIOLD
      ELSEIF(ICASEQ.EQ.'FOR')THEN
        NIOLD=NLOCAL
        CALL DPFOR(NIOLD,NFOR,IROW1,IROWN,
     1             NLOCAL,ILOCS,NS,IBUGQ,IERRO4)
        NQ=NFOR
        IF(NS.GT.NIOLD)NS=NIOLD
      ELSE
        DO1315I=1,NLOCAL
          ISUB(I)=1
 1315   CONTINUE
        NQ=NLOCAL
      ENDIF
C
C               **********************************************************
C               **  STEP 14--                                           **
C               **  BRANCH ACCORDING TO THE NUMBER OF ARGUMENTS BEFORE  **
C               **  'SUBS', 'FOR', AND 'AND'.                          **
C               **********************************************************
C
      ISTEPN='14'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ILOCA=NUMARG+1
      IF(IHARG(NUMARG).EQ.'AND')ILOCA=NUMARG
      IF(ILOCA.LT.ILOCQ)NUMAR1=ILOCA-1
      IF(ILOCQ.LT.ILOCA)NUMAR1=ILOCQ-1
      IF(ILOCA.EQ.ILOCQ)NUMAR1=NUMARG
      IF(NUMAR1.EQ.1)GOTO1500
      IF(NUMAR1.EQ.2)GOTO1600
      IF(NUMAR1.EQ.3)GOTO1700
C
      WRITE(ICOUT,1401)
 1401 FORMAT('***** ERROR IN DPPLO1--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1402)
 1402 FORMAT('      NUMAR1 NOT = 1, 2, OR 3. ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1403)NUMAR1
 1403 FORMAT('      NUMAR1 = ',I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1404)NUMARG,IHARG(NUMARG),ILOCA,ILOCQ
 1404 FORMAT('      NUMARG,IHARG(NUMARG),ILOCA,ILOCQ = ',
     1       I6,2X,A4,2I6)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1408)
 1408 FORMAT('      THE COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,1409)(IANS(I),I=1,IWIDTH)
 1409   FORMAT('      ',100A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IERROR='YES'
      GOTO9000
C
C               *************************************************************
C               **  STEP 15--                                              **
C               **  TREAT THE 1 VARIABLE CASE (WITH NO VS AND NO =) CASE.  **
C               *************************************************************
C
 1500 CONTINUE
      ISTEPN='15'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ****************************************
C               **  STEP 15.1--                       **
C               **  CHECK THE VALIDITY OF ARGUMENT 1  **
C               ****************************************
C
      IHVERT=IHARG(1)
      IHVER2=IHARG2(1)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHVERT,IHVER2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IVAV=IVALUE(ILOC)
C
C               *************************************************************
C               **  STEP 15.2--                                            **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS                  **
C               **  VARIABLES (Y(.) AND X(.), RESPECTIVELY) FOR THE PLOT.  **
C               **  RESET THE D(.) VECTOR TO ONES.                         **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).          **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).          **
C               *************************************************************
C
      ISTEPN='15.2'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IAND1.EQ.'NO')GOTO1519
      IF(NPLOTP.LE.0)GOTO1519
      D1MAX=D(1)
      DO1510I=1,NPLOTP
      IF(D(I).GT.D1MAX)D1MAX=D(I)
 1510 CONTINUE
      D2MIN=1.0
      IF(IAND1.EQ.'YES')DEL=D1MAX-D2MIN+1.0
 1519 CONTINUE
C
      L=NPLOTP
C
      DO1520I=1,NLOCAL
      IF(ISUB(I).EQ.0)GOTO1520
      L=L+1
C
      IF(L.LE.MAXNPP)GOTO1529
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1521)
 1521 FORMAT('***** ERROR IN DPPLO1--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1523)
 1523 FORMAT('      THE NUMBER OF PLOT POINTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1524)MAXNPP
 1524 FORMAT('      HAS JUST EXCEEDED ',I8,' *****')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1525)I,NLOCAL,L,MAXN,MAXNPP,NPLOTP
 1525 FORMAT('I,NLOCAL,L,MAXN,MAXNPP,NPLOTP = ',6I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1526)IAND1,IAND2,IFOUND,IERROR
 1526 FORMAT('IAND1,IAND2,IFOUND,IERROR = ',A4,2X,A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      GOTO9000
 1529 CONTINUE
C
      IJ=MAXN*(IVAV-1)+I
      IF(IVAV.LE.MAXCOL)Y(L)=V(IJ)
      IF(IVAV.EQ.MAXCP1)Y(L)=PRED(I)
      IF(IVAV.EQ.MAXCP2)Y(L)=RES(I)
      IF(IVAV.EQ.MAXCP3)Y(L)=YPLOT(I)
      IF(IVAV.EQ.MAXCP4)Y(L)=XPLOT(I)
      IF(IVAV.EQ.MAXCP5)Y(L)=X2PLOT(I)
      IF(IVAV.EQ.MAXCP6)Y(L)=TAGPLO(I)
      X(L)=L
      IF(IAND1.EQ.'NO')D(L)=1.0
      IF(IAND1.EQ.'YES')D(L)=1.0+DEL
 1520 CONTINUE
      NPLOTP=L
      NPLOTV=1
      IF(IAND1.EQ.'YES'.AND.NPLOTV.GT.1)NPLOTV=NPLOTV
      GOTO9000
C
C               *************************************************************
C               **  STEP 16--                                              **
C               **  TREAT THE 2 VARIABLE CASE (WITH NO VS AND NO =) CASE.  **
C               *************************************************************
C
 1600 CONTINUE
      ISTEPN='16'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ****************************************
C               **  STEP 16.1--                       **
C               **  CHECK THE VALIDITY OF ARGUMENT 1  **
C               ****************************************
C
      ISTEPN='16.1'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHVERT=IHARG(1)
      IHVER2=IHARG2(1)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHVERT,IHVER2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IVAV=IVALUE(ILOCV)
C
C               ****************************************
C               **  STEP 16.2--                       **
C               **  CHECK THE VALIDITY OF ARGUMENT 2  **
C               ****************************************
C
      ISTEPN='16.2'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHHOR=IHARG(2)
      IHHOR2=IHARG2(2)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHHOR,IHHOR2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCH,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IHAV=IVALUE(ILOCH)
C
C               *************************************************************
C               **  STEP 16.3--                                            **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS                  **
C               **  VARIABLES (Y(.) AND X(.), RESPECTIVELY) FOR THE PLOT.  **
C               **  RESET THE D(.) VECTOR TO ONES.                         **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).          **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).          **
C               *************************************************************
C
      ISTEPN='16.3'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IAND1.EQ.'NO')GOTO1619
      IF(NPLOTP.LE.0)GOTO1619
      D1MAX=D(1)
      DO1610I=1,NPLOTP
      IF(D(I).GT.D1MAX)D1MAX=D(I)
 1610 CONTINUE
      D2MIN=1.0
      IF(IAND1.EQ.'YES')DEL=D1MAX-D2MIN+1.0
 1619 CONTINUE
C
      L=NPLOTP
C
      NLOCAL=IN(ILOCV)
      DO1620I=1,NLOCAL
      IF(ISUB(I).EQ.0)GOTO1620
      L=L+1
C
      IF(L.LE.MAXNPP)GOTO1629
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1621)
 1621 FORMAT('***** ERROR IN DPPLO1--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1623)
 1623 FORMAT('      THE NUMBER OF PLOT POINTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1624)MAXNPP
 1624 FORMAT('      HAS JUST EXCEEDED ',I8,' *****')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1625)I,NLOCAL,L,MAXN,MAXNPP,NPLOTP
 1625 FORMAT('I,NLOCAL,L,MAXN,MAXNPP,NPLOTP = ',6I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1626)IAND1,IAND2,IFOUND,IERROR
 1626 FORMAT('IAND1,IAND2,IFOUND,IERROR = ',A4,2X,A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      GOTO9000
 1629 CONTINUE
C
      IJ=MAXN*(IVAV-1)+I
      IF(IVAV.LE.MAXCOL)Y(L)=V(IJ)
      IF(IVAV.EQ.MAXCP1)Y(L)=PRED(I)
      IF(IVAV.EQ.MAXCP2)Y(L)=RES(I)
      IF(IVAV.EQ.MAXCP3)Y(L)=YPLOT(I)
      IF(IVAV.EQ.MAXCP4)Y(L)=XPLOT(I)
      IF(IVAV.EQ.MAXCP5)Y(L)=X2PLOT(I)
      IF(IVAV.EQ.MAXCP6)Y(L)=TAGPLO(I)
      IJ=MAXN*(IHAV-1)+I
      IF(IHAV.LE.MAXCOL)X(L)=V(IJ)
      IF(IHAV.EQ.MAXCP1)X(L)=PRED(I)
      IF(IHAV.EQ.MAXCP2)X(L)=RES(I)
      IF(IHAV.EQ.MAXCP3)X(L)=YPLOT(I)
      IF(IHAV.EQ.MAXCP4)X(L)=XPLOT(I)
      IF(IHAV.EQ.MAXCP5)X(L)=X2PLOT(I)
      IF(IHAV.EQ.MAXCP6)X(L)=TAGPLO(I)
      IF(IAND1.EQ.'NO')D(L)=1.0
      IF(IAND1.EQ.'YES')D(L)=1.0+DEL
 1620 CONTINUE
      NPLOTP=L
      NPLOTV=2
      IF(IAND1.EQ.'YES'.AND.NPLOTV.GT.2)NPLOTV=NPLOTV
      GOTO9000
C
C               *************************************************************
C               **  STEP 17--                                              **
C               **  TREAT THE 3 VARIABLE CASE (WITH NO VS AND NO =) CASE.  **
C               *************************************************************
C
 1700 CONTINUE
      ISTEPN='17'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               ****************************************
C               **  STEP 17.1--                       **
C               **  CHECK THE VALIDITY OF ARGUMENT 1  **
C               ****************************************
C
      ISTEPN='17.1'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHVERT=IHARG(1)
      IHVER2=IHARG2(1)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHVERT,IHVER2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IVAV=IVALUE(ILOCV)
C
C               ****************************************
C               **  STEP 17.2--                       **
C               **  CHECK THE VALIDITY OF ARGUMENT 2  **
C               ****************************************
C
      ISTEPN='17.2'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHHOR=IHARG(2)
      IHHOR2=IHARG2(2)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHHOR,IHHOR2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCH,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IHAV=IVALUE(ILOCH)
C
C               ****************************************
C               **  STEP 17.3--                       **
C               **  CHECK THE VALIDITY OF ARGUMENT 3  **
C               ****************************************
C
      ISTEPN='17.3'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHSET=IHARG(3)
      IHSET2=IHARG2(3)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHSET,IHSET2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCD,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      ISETV=IVALUE(ILOCD)
C
C               *************************************************************
C               **  STEP 17.4--                                            **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS                  **
C               **  VARIABLES (Y(.) AND X(.), RESPECTIVELY) FOR THE PLOT.  **
C               **  RESET THE D(.) VECTOR TO ONES.                         **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).          **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).          **
C               *************************************************************
C
      ISTEPN='17.4'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IAND1.EQ.'NO')GOTO1719
      IF(NPLOTP.LE.0)GOTO1719
      D1MAX=D(1)
      DO1710I=1,NPLOTP
      IF(D(I).GT.D1MAX)D1MAX=D(I)
 1710 CONTINUE
      I=1
      IJ=MAXN*(ISETV-1)+I
      IF(ISETV.LE.MAXCOL)D2MIN=V(IJ)
      IF(ISETV.EQ.MAXCP1)D2MIN=PRED(I)
      IF(ISETV.EQ.MAXCP2)D2MIN=RES(I)
      IF(ISETV.EQ.MAXCP3)D2MIN=YPLOT(I)
      IF(ISETV.EQ.MAXCP4)D2MIN=XPLOT(I)
      IF(ISETV.EQ.MAXCP5)D2MIN=X2PLOT(I)
      IF(ISETV.EQ.MAXCP6)D2MIN=TAGPLO(I)
      NLOCAL=IN(ILOCV)
      DO1711I=1,NLOCAL
      IJ=MAXN*(ISETV-1)+I
      IF(ISETV.LE.MAXCOL)GOTO1712
      IF(ISETV.EQ.MAXCP1)GOTO1713
      IF(ISETV.EQ.MAXCP2)GOTO1714
      IF(ISETV.EQ.MAXCP3)GOTO1715
      IF(ISETV.EQ.MAXCP4)GOTO1716
      IF(ISETV.EQ.MAXCP5)GOTO1717
      IF(ISETV.EQ.MAXCP6)GOTO1718
 1712 CONTINUE
      IF(V(IJ).LT.D2MIN)D2MIN=V(IJ)
      GOTO1711
 1713 CONTINUE
      IF(PRED(I).LT.D2MIN)D2MIN=PRED(I)
      GOTO1711
 1714 CONTINUE
      IF(RES(I).LT.D2MIN)D2MIN=RES(I)
      GOTO1711
 1715 CONTINUE
      IF(YPLOT(I).LT.D2MIN)D2MIN=YPLOT(I)
      GOTO1711
 1716 CONTINUE
      IF(XPLOT(I).LT.D2MIN)D2MIN=XPLOT(I)
      GOTO1711
 1717 CONTINUE
      IF(X2PLOT(I).LT.D2MIN)D2MIN=X2PLOT(I)
      GOTO1711
 1718 CONTINUE
      IF(TAGPLO(I).LT.D2MIN)D2MIN=TAGPLO(I)
      GOTO1711
 1711 CONTINUE
      IF(IAND1.EQ.'YES')DEL=D1MAX-D2MIN+1.0
 1719 CONTINUE
C
      L=NPLOTP
C
      NLOCAL=IN(ILOCV)
      DO1720I=1,NLOCAL
      IF(ISUB(I).EQ.0)GOTO1720
      L=L+1
C
      IF(L.LE.MAXNPP)GOTO1729
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1721)
 1721 FORMAT('***** ERROR IN DPPLO1--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1723)
 1723 FORMAT('      THE NUMBER OF PLOT POINTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1724)MAXNPP
 1724 FORMAT('      HAS JUST EXCEEDED ',I8,' *****')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1725)I,NLOCAL,L,MAXN,MAXNPP,NPLOTP
 1725 FORMAT('I,NLOCAL,L,MAXN,MAXNPP,NPLOTP = ',6I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1726)IAND1,IAND2,IFOUND,IERROR
 1726 FORMAT('IAND1,IAND2,IFOUND,IERROR = ',A4,2X,A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      GOTO9000
 1729 CONTINUE
C
      IJ=MAXN*(IVAV-1)+I
      IF(IVAV.LE.MAXCOL)Y(L)=V(IJ)
      IF(IVAV.EQ.MAXCP1)Y(L)=PRED(I)
      IF(IVAV.EQ.MAXCP2)Y(L)=RES(I)
      IF(IVAV.EQ.MAXCP3)Y(L)=YPLOT(I)
      IF(IVAV.EQ.MAXCP4)Y(L)=XPLOT(I)
      IF(IVAV.EQ.MAXCP5)Y(L)=X2PLOT(I)
      IF(IVAV.EQ.MAXCP6)Y(L)=TAGPLO(I)
      IJ=MAXN*(IHAV-1)+I
      IF(IHAV.LE.MAXCOL)X(L)=V(IJ)
      IF(IHAV.EQ.MAXCP1)X(L)=PRED(I)
      IF(IHAV.EQ.MAXCP2)X(L)=RES(I)
      IF(IHAV.EQ.MAXCP3)X(L)=YPLOT(I)
      IF(IHAV.EQ.MAXCP4)X(L)=XPLOT(I)
      IF(IHAV.EQ.MAXCP5)X(L)=X2PLOT(I)
      IF(IHAV.EQ.MAXCP6)X(L)=TAGPLO(I)
      IJ=MAXN*(ISETV-1)+I
      IF(IAND1.EQ.'NO'.AND.ISETV.LE.MAXCOL)D(L)=V(IJ)
      IF(IAND1.EQ.'NO'.AND.ISETV.EQ.MAXCP1)D(L)=PRED(I)
      IF(IAND1.EQ.'NO'.AND.ISETV.EQ.MAXCP2)D(L)=RES(I)
      IF(IAND1.EQ.'NO'.AND.ISETV.EQ.MAXCP3)D(L)=YPLOT(I)
      IF(IAND1.EQ.'NO'.AND.ISETV.EQ.MAXCP4)D(L)=XPLOT(I)
      IF(IAND1.EQ.'NO'.AND.ISETV.EQ.MAXCP5)D(L)=X2PLOT(I)
      IF(IAND1.EQ.'NO'.AND.ISETV.EQ.MAXCP6)D(L)=TAGPLO(I)
      IF(IAND1.EQ.'YES'.AND.ISETV.LE.MAXCOL)D(L)=V(IJ)+DEL
      IF(IAND1.EQ.'YES'.AND.ISETV.EQ.MAXCP1)D(L)=PRED(I)+DEL
      IF(IAND1.EQ.'YES'.AND.ISETV.EQ.MAXCP2)D(L)=RES(I)+DEL
      IF(IAND1.EQ.'YES'.AND.ISETV.EQ.MAXCP3)D(L)=YPLOT(I)+DEL
      IF(IAND1.EQ.'YES'.AND.ISETV.EQ.MAXCP4)D(L)=XPLOT(I)+DEL
      IF(IAND1.EQ.'YES'.AND.ISETV.EQ.MAXCP5)D(L)=X2PLOT(I)+DEL
      IF(IAND1.EQ.'YES'.AND.ISETV.EQ.MAXCP6)D(L)=TAGPLO(I)+DEL
 1720 CONTINUE
      NPLOTP=L
      NPLOTV=3
      IF(IAND1.EQ.'YES'.AND.NPLOTV.GT.3)NPLOTV=NPLOTV
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPLO1--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR,ICASPL,IAND1,IAND2
 9012   FORMAT('IFOUND,IERROR,ICASPL,IAND1,IAND2 = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,MAXNPP
 9013   FORMAT('NPLOTV,NPLOTP,NS,MAXNPP = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9020)
 9020   FORMAT('I,Y(.),X(.),D(.),ISUB(.)--')
        CALL DPWRST('XXX','BUG ')
        DO9021I=1,NPLOTP
          WRITE(ICOUT,9022)I,Y(I),X(I),D(I),ISUB(I)
 9022     FORMAT(I8,3F15.7,I8)
          CALL DPWRST('XXX','BUG ')
 9021   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPLO2(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1IVSLOC,NUMVS,
     1MAXNPP,
     1IBUGG3,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--FORM A Y PLOT, A Y VERSUS X PLOT, A SUBSET PLOT,
C              AND OTHER SIMILAR TYPE PLOTS
C              WHEN HAVE 1 OR MORE VERSUS ENTERED.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1977.
C     UPDATED         --JANUARY   1978.
C     UPDATED         --FEBRUARY  1978.
C     UPDATED         --MAY       1978.
C     UPDATED         --JUNE      1978.
C     UPDATED         --JULY      1978.
C     UPDATED         --NOVEMBER  1978.
C     UPDATED         --FEBRUARY  1979.
C     UPDATED         --MARCH     1979.
C     UPDATED         --JULY      1979.
C     UPDATED         --JANUARY   1981.
C     UPDATED         --AUGUST    1981.
C     UPDATED         --OCTOBER   1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --MARCH     1988. FIX PLOT Y X FOR .. WHEN I OUT OF BOUNDS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASEQ
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IHVERT
      CHARACTER*4 IHVER2
      CHARACTER*4 IHHOR
      CHARACTER*4 IHHOR2
      CHARACTER*4 IERRO4
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION IVSLOC(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPL'
      ISUBN2='O2  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
CCCCC MAXNPP=1000
C
      KSTART=0
C
      DEL=0.0
C
C               ***************************************************
C               **  STEP 20--                                    **
C               **  TREAT THE CASE WHEN HAVE 1 OR MORE 'VERSUS'  **
C               **  ENTERED                                      **
C               ****************************************************
C
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPLO2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPLOTV,NPLOTP,NS,MAXNPP
   52   FORMAT('NPLOTV,NPLOTP,NS,MAXNPP = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IAND1,IAND2
   53   FORMAT('ICASPL,IAND1,IAND2 = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IBUGG3,IBUGQ,IFOUND,IERROR
   54   FORMAT('IBUGG3,IBUGQ,IFOUND,IERROR = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ISTEPN='20'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *****************************************
C               **  STEP 21--                          **
C               **  CHECK TO SEE THE TYPE CASE--       **
C               **    1) UNQUALIFIED (THAT IS, FULL);  **
C               **    2) SUBSET/EXCEPT; OR             **
C               **    3) FOR.                          **
C               *****************************************
C
      ISTEPN='21'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.LT.1)GOTO2190
      DO2100J=1,NUMARG
      J1=J
      IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ') GOTO2110
      IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ') GOTO2110
      IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ') GOTO2120
 2100 CONTINUE
      GOTO2190
 2110 CONTINUE
      ICASEQ='SUBS'
      ILOCQ=J1
      GOTO2190
 2120 CONTINUE
      ICASEQ='FOR'
      ILOCQ=J1
      GOTO2190
 2190 CONTINUE
      IF(IBUGG3.EQ.'OFF')GOTO2195
      WRITE(ICOUT,2191)NUMARG,ILOCQ
 2191 FORMAT('NUMARG,ILOCQ = ',2I8)
      CALL DPWRST('XXX','BUG ')
 2195 CONTINUE
C
C               **********************************
C               **  STEP 22--                   **
C               **  DETERMINE WHICH VARIABLES   **
C               **  ARE TO BE GROUPED TOGETHER  **
C               **********************************
C
      ISTEPN='22'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      L=NPLOTP
C
      NEWSET=0
      DO2200J=1,NUMVS
      JM1=J-1
      IF(J.EQ.1)KSTART=1
      IF(J.GE.2)KSTART=IVSLOC(JM1)+2
      KSTOP=IVSLOC(J)-1
      IVS=IVSLOC(J)
C
      IVSP1=IVS+1
      DO2210K=KSTART,KSTOP
      NEWSET=NEWSET+1
C
      IHVERT=IHARG(K)
      IHVER2=IHARG2(K)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHVERT,IHVER2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IVAV=IVALUE(ILOCV)
      NLOCAL=IN(ILOCV)
C
      IHHOR=IHARG(IVSP1)
      IHHOR2=IHARG2(IVSP1)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHHOR,IHHOR2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCH,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IHAV=IVALUE(ILOCH)
C
      ISETV=NEWSET
C
      IF(IAND1.EQ.'NO')GOTO2280
      IF(NPLOTP.LE.0)GOTO2280
      D1MAX=D(1)
      DO2220I=1,NPLOTP
      IF(D(I).GT.D1MAX)D1MAX=D(I)
 2220 CONTINUE
      D2MIN=1.0
      IF(IAND1.EQ.'YES')DEL=D1MAX-D2MIN+1.0
 2280 CONTINUE
C
      IF(IBUGG3.EQ.'ON')WRITE(ICOUT,2282)IHVERT,ILOCV,IERROR,IVAV,NLOCAL
 2282 FORMAT('IHVERT,ILOCV,IERROR,IVAV,NLOCAL = ',
     1A4,2X,I8,2X,A4,2X,A4,2X,I8)
      IF(IBUGG3.EQ.'ON')CALL DPWRST('XXX','BUG ')
C
C               *********************************************
C               **  STEP 23--                              **
C               **  FORM THE VECTOR ISUB(.)                **
C               **  DEPENDING ON THE TYPE OF CASE          **
C               **  FOR THE QUALIFIER.                     **
C               **  BRANCH TO THE PROPER CASE.             **
C               *********************************************
C
      ISTEPN='23'
      IF(IBUGG3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASEQ.EQ.'FULL')GOTO2310
      IF(ICASEQ.EQ.'SUBS')GOTO2320
      IF(ICASEQ.EQ.'FOR')GOTO2330
CCCCC IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ') GOTO2320
CCCCC IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ') GOTO2320
CCCCC IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ') GOTO2330
C
 2310 CONTINUE
      DO2315I=1,NLOCAL
      ISUB(I)=1
 2315 CONTINUE
      NQ=NLOCAL
      GOTO2350
C
 2320 CONTINUE
      NIOLD=NLOCAL
      CALL DPSUBS(NIOLD,ILOCS,NS,IBUGQ,IERRO4)
      NQ=NIOLD
      GOTO2350
C
 2330 CONTINUE
      NIOLD=NLOCAL
      CALL DPFOR(NIOLD,NFOR,IROW1,IROWN,
     1NLOCAL,ILOCS,NS,IBUGQ,IERRO4)
      NQ=NFOR
CCCCC THE FOLLOWING LINE WAS INSERTED MARCH 1988
      IF(NS.GT.NIOLD)NS=NIOLD
      GOTO2350
C
 2350 CONTINUE
C
      DO2360I=1,NLOCAL
      IF(ISUB(I).EQ.0)GOTO2360
      L=L+1
C
      IF(L.LE.MAXNPP)GOTO2369
      WRITE(ICOUT,2362)
 2362 FORMAT('***** PLOT FORMATION ERROR IN DPPLO2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2363)
 2363 FORMAT('      THE NUMBER OF PLOT POINTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2364)MAXNPP
 2364 FORMAT('      HAS JUST EXCEEDED ',I8,' *****')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 2369 CONTINUE
C
      IJ=MAXN*(IVAV-1)+I
      IF(IVAV.LE.MAXCOL)Y(L)=V(IJ)
      IF(IVAV.EQ.MAXCP1)Y(L)=PRED(I)
      IF(IVAV.EQ.MAXCP2)Y(L)=RES(I)
      IF(IVAV.EQ.MAXCP3)Y(L)=YPLOT(I)
      IF(IVAV.EQ.MAXCP4)Y(L)=XPLOT(I)
      IF(IVAV.EQ.MAXCP5)Y(L)=X2PLOT(I)
      IF(IVAV.EQ.MAXCP6)Y(L)=TAGPLO(I)
      IJ=MAXN*(IHAV-1)+I
      IF(IHAV.LE.MAXCOL)X(L)=V(IJ)
      IF(IHAV.EQ.MAXCP1)X(L)=PRED(I)
      IF(IHAV.EQ.MAXCP2)X(L)=RES(I)
      IF(IHAV.EQ.MAXCP3)Y(L)=YPLOT(I)
      IF(IHAV.EQ.MAXCP4)Y(L)=XPLOT(I)
      IF(IHAV.EQ.MAXCP5)Y(L)=X2PLOT(I)
      IF(IHAV.EQ.MAXCP6)Y(L)=TAGPLO(I)
      IF(IAND1.EQ.'NO')D(L)=ISETV
      IF(IAND1.EQ.'YES')D(L)=ISETV+DEL
 2360 CONTINUE
 2210 CONTINUE
 2200 CONTINUE
      NPLOTP=L
C
      DHOLD=D(1)
      DO2370I=1,NPLOTP
      IF(D(I).NE.DHOLD)GOTO2375
 2370 CONTINUE
      NPLOTV=2
      GOTO2399
 2375 CONTINUE
      NPLOTV=3
      GOTO2399
C
 2399 CONTINUE
      GOTO9000
C
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPLO2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR,IBUGG3,IBUGQ
 9012   FORMAT('IFOUND,IERROR,IBUGG3,IBUGQ = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,MAXNPP,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,MAXNPP,ICASPL,IAND1,IAND2 = ',
     1         4I8,2(2X,A4),2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPLO3(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  PARAM,IPARN,IPARN2,NUMPAR,
     1                  ITYPEH,IW2HOL,IW22HO,W2HOLD,NWHOLD,
     1                  IFOLOC,
     1                  MAXNPP,IANGLU,IBUGG3,IBUGCO,IBUGEV,IBUGQ,
     1                  ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--FORM A PLOT OF A FUNCTION
C              WHEN HAVE 1 OR MORE    =    ENTERED,
C              THAT IS, WHEN HAVE   PLOT Y = ... FOR X = ...
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1977.
C     UPDATED         --JANUARY   1978.
C     UPDATED         --FEBRUARY  1978.
C     UPDATED         --MAY       1978.
C     UPDATED         --JUNE      1978.
C     UPDATED         --JULY      1978.
C     UPDATED         --NOVEMBER  1978.
C     UPDATED         --FEBRUARY  1979.
C     UPDATED         --MARCH     1979.
C     UPDATED         --JULY      1979.
C     UPDATED         --JANUARY   1981.
C     UPDATED         --FEBRUARY  1981.
C     UPDATED         --AUGUST    1981.
C     UPDATED         --OCTOBER   1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --APRIL     1992. FIX   PLOT CONSTANT
C     UPDATED         --MAY       1994. SUPPRESS MESSAGE FOR POINT PLOT
C     UPDATED         --SEPTEMBER 2015. SUPPORT FOR FUNCTION BLOCK
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IPARN
      CHARACTER*4 IPARN2
      CHARACTER*4 ITYPEH
      CHARACTER*4 IW2HOL
      CHARACTER*4 IW22HO
      CHARACTER*4 IANGLU
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGCO
      CHARACTER*4 IBUGEV
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IFTEXP
      CHARACTER*4 IFTORD
      CHARACTER*4 IFORSW
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IWD1
      CHARACTER*4 IWD12
      CHARACTER*4 IWD2
      CHARACTER*4 IWD22
      CHARACTER*4 IVERTI
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IHPARN
      CHARACTER*4 IHPAR2
      CHARACTER*4 IVDU11
      CHARACTER*4 IVDU12
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION PARAM(*)
      DIMENSION IPARN(*)
      DIMENSION IPARN2(*)
C
      DIMENSION ITYPEH(*)
      DIMENSION IW2HOL(*)
      DIMENSION IW22HO(*)
      DIMENSION W2HOLD(*)
C
      DIMENSION IFOLOC(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOFB.INC'
C
      CHARACTER*8 IFBNAM
      CHARACTER*8 IFBANS
      CHARACTER*4 IFEESV
      COMMON/IFEED/IFEESV
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPL'
      ISUBN2='O3  '
      IFTORD='DATA'
      IFTEXP='+'
      IFORSW='E'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
      LOCDU1=0
      I2=0
      DEL=0.0
      NUMIT=1
      N2F=0
      IP7=0
C
C
C     CHECK IF FIRST ARGUMENT IS A FUNCTION BLOCK NAME
C
      IFLGFB=0
      IFBNAM=' '
      IFBANS=' '
      IF(IHARG(1).EQ.IFBNA1(1:4) .AND. IHARG2(1).EQ.IFBNA1(5:8))THEN
        IFLGFB=1
        IFBNAM=IFBNA1
        IFBANS=IFBAN1
      ELSEIF(IHARG(1).EQ.IFBNA2(1:4) .AND. IHARG2(1).EQ.IFBNA2(5:8))THEN
        IFLGFB=2
        IFBNAM=IFBNA2
        IFBANS=IFBAN2
      ELSEIF(IHARG(1).EQ.IFBNA3(1:4) .AND. IHARG2(1).EQ.IFBNA3(5:8))THEN
        IFLGFB=3
        IFBNAM=IFBNA3
        IFBANS=IFBAN3
      ENDIF
C
C               *******************************************************
C               **  TREAT THE CASE WHEN HAVE 1 OR MORE '=' ENTERED   **
C               **  THAT IS, TREAT THE PLOT Y = ... FOR X = ... CASE **
C               *******************************************************
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PLO3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPLO3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPLOTV,NPLOTP,NS,MAXNPP,IFOLOC(1)
   52   FORMAT('NPLOTV,NPLOTP,NS,MAXNPP,IFOLOC(1) = ',4I8,G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IAND1,IAND2,IFOUND,IERROR
   53   FORMAT('ICASPL,IAND1,IAND2,IFOUND,IERROR = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IANGLU,IBUGG3,IBUGCO,IBUGEV,IBUGQ
   54   FORMAT('IANGLU,IBUGG3,IBUGCO,IBUGEV,IBUGQ = ',
     1         4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *******************************************
C               **  STEP 2--                             **
C               **  DETERMINE THE MAX TRACE DESIGNATION  **
C               **  (A NUMBER) AS CONTAINED              **
C               **  IN THE VECTOR D(.).                  **
C               *******************************************
C
      ISTEPN='2'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PLO3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IAND1.EQ.'YES' .AND. NPLOTP.GT.0)THEN
        D1MAX=D(1)
        DO110I=1,NPLOTP
          IF(D(I).GT.D1MAX)D1MAX=D(I)
  110   CONTINUE
        D2MIN=1.0
        IF(IAND1.EQ.'YES')DEL=D1MAX-D2MIN+1.0
      ENDIF
C
C               ************************************************
C               **  STEP 3--                                  **
C               **  DETERMINE THE NAME OF THE DUMMY VARIABLE  **
C               **  (IT NEVER GETS STORED PERMANENTLY)        **
C               **  IMMEDIATELY FOLLOWING 'FOR'.              **
C               ************************************************
C
      ISTEPN='3'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PLO3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO3100J=1,NUMARG
        J2=J
        IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')GOTO3110
 3100 CONTINUE
      IBRAN=3101
      WRITE(ICOUT,3101)
 3101 FORMAT('***** ERROR IN DPPLO3--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3102)
 3102 FORMAT('      THE STRING    FOR    NOT FOUND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3103)
 3103 FORMAT('      EVEN THOUGH THE STRING    =    WAS FOUND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3104)
 3104 FORMAT('      THE ENTIRE COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,3105)(IANS(I),I=1,MIN(100,IWIDTH))
 3105   FORMAT('      ',100A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IERROR='YES'
      GOTO9000
C
 3110 CONTINUE
      IFOLP0=J2
C
      IF(IFOLP0.GE.NUMARG)THEN
        WRITE(ICOUT,3101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3122)
 3122   FORMAT('      THE WORD    FOR    WAS THE FINAL WORD ON THE ',
     1         'COMMAND LINE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3124)
 3124   FORMAT('      THE WORD    FOR    SHOULD HAVE BEEN FOLLOWED ',
     1         'BY 5    WORDS   --')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3126)
 3126   FORMAT('      1) A DUMMY VARIABLE NAME;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3127)
 3127   FORMAT('      2) AN EQUAL SIGN;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3128)
 3128   FORMAT('      3) ONE LIMIT (LOWER OR UPPER) FOR THE DUMMY ',
     1         'VARIABLE;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3129)
 3129   FORMAT('      4) THE INCREMENT FOR THE DUMMY VARIABLE;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3130)
 3130   FORMAT('      5) THE OTHER LIMIT (UPPER OR LOWER) ',
     1         'FOR THE DUMMY VARIABLE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3104)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,3105)(IANS(I),I=1,MIN(100,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IFOLP1=IFOLP0+1
      IVDU11=IHARG(IFOLP1)
      IVDU12=IHARG2(IFOLP1)
C
C               *******************************************
C               **  STEP 4--                             **
C               **  EVALUATE THE FUNCTION OVER           **
C               **  THE VARIOUS POINTS IN THE INTERVAL.  **
C               *******************************************
C
      ISTEPN='4'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PLO3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMAM1=NUMARG-1
      NUMAM2=NUMARG-2
      NUMAM3=NUMARG-3
C
      ILOCA=NUMAM2
      IF(IHARG(NUMARG).EQ.'AND '.AND.IHARG2(NUMARG).EQ.'    ')
     1ILOCA=NUMAM3
      IF(IARGT(ILOCA).EQ.'NUMB')THEN
        START=ARG(ILOCA)
      ELSEIF(IARGT(ILOCA).EQ.'WORD')THEN
        IH=IHARG(ILOCA)
        IH2=IHARG2(ILOCA)
        IHWUSE='P'
        MESSAG='YES'
        CALL CHECKN(IH,IH2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        START=VALUE(ILOC)
      ELSE
        GOTO3270
      ENDIF
C
      ILOCA=NUMAM1
      IF(IHARG(NUMARG).EQ.'AND '.AND.IHARG2(NUMARG).EQ.'    ')
     1   ILOCA=NUMAM2
      IF(IARGT(ILOCA).EQ.'NUMB')THEN
        AINC=ARG(ILOCA)
      ELSEIF(IARGT(ILOCA).EQ.'WORD')THEN
        IH=IHARG(ILOCA)
        IH2=IHARG2(ILOCA)
        IHWUSE='P'
        MESSAG='YES'
        CALL CHECKN(IH,IH2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        AINC=VALUE(ILOC)
      ELSE
        GOTO3270
      ENDIF
C
      ILOCA=NUMARG
      IF(IHARG(NUMARG).EQ.'AND '.AND.IHARG2(NUMARG).EQ.'    ')
     1  ILOCA=NUMAM1
      IF(IARGT(ILOCA).EQ.'NUMB')THEN
        STOP=ARG(ILOCA)
      ELSEIF(IARGT(ILOCA).EQ.'WORD')THEN
        IH=IHARG(ILOCA)
        IH2=IHARG2(ILOCA)
        IHWUSE='P'
        MESSAG='YES'
        CALL CHECKN(IH,IH2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        STOP=VALUE(ILOC)
      ELSE
        GOTO3270
      ENDIF
C
      IF(START.NE.STOP.AND.AINC.NE.0.0)THEN
C
C       *****THE FOLLOWING CORRECTIVE LINE ADDED AUGUST 1983*****
C
        IF(START.EQ.STOP)AINC=0.0
        IF(START.LT.STOP.AND.AINC.LT.0.0)AINC=-AINC
        IF(START.GT.STOP.AND.AINC.GT.0.0)AINC=-AINC
C
C       *****THE FOLLOWING 2 CORRECTIVE LINES ADDED AUGUST 1983*****
C
        IF(AINC.EQ.0.0)THEN
          NUMIT=1
        ELSEIF(AINC.NE.0.0)THEN
          NUMIT=INT((STOP-START)/AINC + 0.1)
          IF(NUMIT.LT.0)NUMIT=-NUMIT
        ENDIF
        NUMIT=NUMIT+1
      ELSE
        NUMIT=1
      ENDIF
C
C               ******************************************************
C               **  STEP 5--                                        **
C               **  EXTRACT THE FUNCTIONAL                          **
C               **  EXPRESSION FROM THE INPUT COMMAND LINE.         **
C               ******************************************************
C
      ISTEPN='5'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PLO3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MAXN2=MAXCHF
      MAXN3=MAXCHF
      MAXN4=MAXCHF
C
      IF(IHARG(2).EQ.'=   '.AND.IHARG2(2).EQ.'    ')THEN
        IWD1='=   '
        IWD12='    '
      ELSE
        IWD1='PLOT'
        IWD12='    '
      ENDIF
C
      IWD2='FOR'
      IWD22=' '
      CALL DPEXST(IANS,IWIDTH,IWD1,IWD12,IWD2,IWD22,MAXN2,
     1            IFUNC2,N2F,IBUGG3,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IF(IFOUND.EQ.'NO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3372)
 3372   FORMAT('      INVALID COMMAND FORM FOR FUNCTION PLOTTING.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3373)
 3373   FORMAT('      GENERAL FORM--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3374)
 3374   FORMAT('      PLOT ... = ...  FOR ... = ... ...')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3104)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,3105)(IANS(I),I=1,IWIDTH)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               *********************************************************
C               **  STEP 5.1--                                         **
C               **  FIRST CHECK TO SEE IF HAVE THE VERTICAL LINES CASE;**
C               **  THEN EXTRACT THE UNDERLYING FUNCTION FROM          **
C               **  FUNCTION DEFINITIONS.                              **
C               *********************************************************
C
      ISTEPN='5.1'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PLO3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IVERTI='NO'
      IVERT1=0
      IVERT2=0
      DO3380I=1,NUMARG
        IF(IHARG(I).EQ.'VERT'.AND.IHARG2(I).EQ.'ICAL')THEN
          IF(IP7.LE.N2F)THEN
            IF(IFUNC2(I)  .EQ.'V' .AND. IFUNC2(I+1).EQ.'E' .AND.
     1         IFUNC2(I+2).EQ.'R' .AND. IFUNC2(I+3).EQ.'T' .AND.
     1         IFUNC2(I+4).EQ.'I' .AND. IFUNC2(I+5).EQ.'C' .AND.
     1         IFUNC2(I+6).EQ.'A' .AND. IFUNC2(I+7).EQ.'L')THEN
              IVERTI='YES'
              IVERT1=I
              IVERT2=I+7
              IF(I+8.LE.N2F .AND. IFUNC2(I+8).EQ.' ')THEN
                IVERT2=I+8
              ELSEIF(I+10.LE.N2F)THEN
                IF(IFUNC2(I+8).EQ.'L'.AND.IFUNC2(I+9).EQ.'Y'.AND.
     1             IFUNC2(I+10).EQ.' ')IVERT2=I+10
              ENDIF
            ENDIF
          ELSE
            GOTO3399
          ENDIF
C
          IC=0
          DO3391II=1,N2F
            IF(IVERT1.LE.II.AND.II.LE.IVERT2)GOTO3391
            IC=IC+1
            IFUNC2(IC)=IFUNC2(I)
 3391     CONTINUE
          N2FOLD=N2F
          N2FNEW=IC
C
          N2FNP1=N2FNEW+1
          IF(N2FNP1.LE.N2FOLD)THEN
            DO3392IC=N2FNP1,N2FOLD
              IFUNC2(IC)=' '
 3392       CONTINUE
          ENDIF
          N2F=N2FNEW
          GOTO3399
        ENDIF
 3380 CONTINUE
 3399 CONTINUE
C
      IF(IFLGFB.LE.0)THEN
        CALL DPEXFU(IFUNC2,N2F,IHNAME,IHNAM2,IUSE,IVSTAR,IVSTOP,
     1              NUMNAM,IANS,IWIDTH,IFUNC,NUMCHF,MAXCHF,IFUNC3,
     1              N3F,MAXN3,
     1              IBUGG3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
C               **********************************************************
C               **  STEP 6--                                            **
C               **  MAKE A NON-CALCULATING PASS AT THE FUNCTION         **
C               **  SO AS TO EXTRACT ALL PARAMETER AND VARIABLE NAMES.  **
C               **********************************************************
C
        ISTEPN='6'
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PLO3')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IPASS=1
        CALL COMPIM(IFUNC3,N3F,IPASS,PARAM,IPARN,IPARN2,NUMPV,
     1              IANGLU,ITYPEH,IW2HOL,IW22HO,W2HOLD,NWHOLD,AJUNK,
     1              IBUGCO,IBUGEV,IERROR)
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PLO3')THEN
          WRITE(ICOUT,3411)NUMPV,IPARN(1),IPARN2(1),PARAM(1)
 3411     FORMAT('NUMPV,IPARN(1),IPARN2(1),PARAM(1) = ',
     1         I8,2X,A4,2X,A4,E15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C 
        IF(IERROR.EQ.'YES')GOTO9000
C
C               ***********************************************
C               **  STEP 7--                                 **
C               **  CHECK THAT ALL PARAMETERS                **
C               **  IN THE FUNCTION ARE ALREADY PRESENT      **
C               **  IN THE AVAILABLE NAME LIST IHNAME(.).    **
C               **  ALSO CHECK THAT THE VARIABLE NAME        **
C               **  THAT FOLLOWS FOR (THAT IS, THE DUMMY     **
C               **  VARIABLE) IS IN THE FUNCTION.            **
C               ***********************************************
C
        ISTEPN='7'
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PLO3')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IP=0
        IV=0
        IF(NUMPV.GE.1)THEN
          DO3600J=1,NUMPV
            IHPARN=IPARN(J)
            IHPAR2=IPARN2(J)
            IF(IHPARN.EQ.IVDU11.AND.IHPAR2.EQ.IVDU12)THEN
              IV=IV+1
              LOCDU1=J
            ELSE
              IHWUSE='P'
              MESSAG='YES'
              CALL CHECKN(IHPARN,IHPAR2,IHWUSE,
     1                    IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,
     1                    NUMNAM,MAXNAM,
     1                    ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
              IF(IERROR.EQ.'YES')GOTO9000
              IP=IP+1
              PARAM(J)=VALUE(ILOCP)
            ENDIF
 3600     CONTINUE
        ENDIF
C
CCCCC   THE FOLLOWING 5 LINES WERE ADDED   APRIL 1992 (JJF)
        IF(LOCDU1.LE.0)THEN
           IV=IV+1
           NUMPV=NUMPV+1
           LOCDU1=NUMPV
        ENDIF
        NUMPAR=IP
        NUMVAR=IV
C
      ENDIF
C
C               ******************************
C               **  STEP 8--                **
C               **  EVALUATE THE FUNCTION.  **
C               ******************************
C
      ISTEPN='8'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PLO3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IPASS=2
      L=NPLOTP
      L2=L
      DO3800I=1,NUMIT
        I2=I
        AI=I
        RESULT=START+(AI-1.0)*AINC
C
        IF(I.GT.1)THEN
          IF((START.LT.STOP.AND.RESULT.GT.STOP) .OR.
     1      (START.GT.STOP.AND.RESULT.LT.STOP))THEN
            N2=I2-1
            GOTO3889
          ENDIF
        ENDIF
        L2=L2+1
C
        IF(L2.GT.MAXNPP)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,3101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,3822)MAXNPP
 3822     FORMAT('      THE NUMBER OF PLOT POINTS HAS JUST EXCEEDED ',
     1           I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        XTEMP=RESULT
C
        IF(IFLGFB.LE.0)THEN
          PARAM(LOCDU1)=XTEMP
          CALL COMPIM(IFUNC3,N3F,IPASS,PARAM,IPARN,IPARN2,NUMPV,
     1                IANGLU,ITYPEH,IW2HOL,IW22HO,W2HOLD,NWHOLD,YTEMP,
     1                IBUGCO,IBUGEV,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
        ELSE
C
C         FUNCTION BLOCK CASE:
C
C            STEP 1: COMPUTE FUNCTION BLOCK (BUT FIRST SET CURRENT
C                    VALUE OF DESIRED PARAMETER)
C
          IFEESV=IFEEDB
          IFEEDB='OFF'
C
          IF(IHARG(1).EQ.IFBNA1(1:4) .AND. IHARG2(1).EQ.IFBNA1(5:8))THEN
            IH=IFBPL1(1)(1:4)
            IH2=IFBPL1(1)(5:8)
          ELSEIF(IHARG(1).EQ.IFBNA2(1:4) .AND.
     1           IHARG2(1).EQ.IFBNA2(5:8))THEN
            IH=IFBPL2(1)(1:4)
            IH2=IFBPL2(1)(5:8)
          ELSEIF(IHARG(1).EQ.IFBNA3(1:4) .AND.
     1           IHARG2(1).EQ.IFBNA3(5:8))THEN
            IH=IFBPL3(1)(1:4)
            IH2=IFBPL3(1)(5:8)
          ENDIF
C
          DO3905II=1,NUMNAM
            IF(IH.EQ.IHNAME(II) .AND. IH2.EQ.IHNAM2(II) .AND.
     1         IUSE(II).EQ.'P')THEN
              VALUE(II)=XTEMP
              IVALUE(II)=INT(XTEMP+0.5)
              GOTO3909
            ENDIF
 3905     CONTINUE
C
C         PARAMETER NAME NOT FOUND IN CURRENT LIST, SO NEED TO ADD
C         TO NAME LIST
C
          IF(NUMNAM.LT.MAXNAM)THEN
            NUMNAM=NUMNAM+1
            IHNAME(NUMNAM)=IH
            IHNAM2(NUMNAM)=IH2
            IUSE(NUMNAM)='P'
            VALUE(NUMNAM)=XTEMP
            IVALUE(NUMNAM)=INT(XTEMP+ 0.5)
          ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3101)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3907)
 3907       FORMAT('      MAXIMUM NUMBER OF NAMES EXCEEDED.')
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
 3909     CONTINUE
C
          CALL DPFBEX(IFBNAM,IANGLU,ISEED,IFTEXP,IFTORD,IFORSW,
     1                IBUGG3,IBUGG3,IBUGCO,IBUGEV,IBUGEV,
     1                ISUBRO,IFOUND,IERROR)
          IFEEDB=IFEESV
          IF(IERROR.EQ.'YES')GOTO9000
C
C            STEP 2: RETRIEVE RESPONSE
C
          DO3920II=1,NUMNAM
            IF(IFBANS(1:4).EQ.IHNAME(II) .AND.
     1         IFBANS(5:8).EQ.IHNAM2(II))THEN
              IF(IUSE(II).EQ.'P')THEN
                YTEMP=VALUE(II)
                GOTO3929
              ELSEIF(IUSE(II).EQ.'V')THEN
                ICOLR=IVALUE(II)
                IJ=MAXN*(ICOLR-1)+1
                IF(ICOLR.LE.MAXCOL)YTEMP=V(IJ)
                IF(ICOLR.EQ.MAXCP1)YTEMP=PRED(1)
                IF(ICOLR.EQ.MAXCP2)YTEMP=RES(1)
                IF(ICOLR.EQ.MAXCP3)YTEMP=YPLOT(1)
                IF(ICOLR.EQ.MAXCP4)YTEMP=XPLOT(1)
                IF(ICOLR.EQ.MAXCP5)YTEMP=X2PLOT(1)
                IF(ICOLR.EQ.MAXCP6)YTEMP=TAGPLO(1)
                GOTO3929
              ENDIF
            ENDIF
 3920     CONTINUE
C
C         PARAMETER/VARIABLE NAME NOT FOUND
C
          WRITE(ICOUT,3101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,3921)
 3921     FORMAT('      EXPECTED PARAMETER/VARIABLE NOT FOUND IN NAME ',
     1           'TABLE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,3923)IFBANS
 3923     FORMAT('      EXPECTED NAME = ',A8)
          CALL DPWRST('XXX','BUG ')
C
 3929     CONTINUE
C
        ENDIF
C
        IF(IVERTI.EQ.'YES')THEN
          HOLD=YTEMP
          YTEMP=XTEMP
          XTEMP=HOLD
        ENDIF
C
        Y(L2)=YTEMP
        X(L2)=XTEMP
        IF(IAND1.EQ.'NO')D(L2)=1.0
        IF(IAND1.EQ.'YES')D(L2)=1.0+DEL
 3800 CONTINUE
      N2=I2
C
 3889 CONTINUE
      L=L2
      NPLOTP=L
C
C               *****************************
C               **  STEP 9--               **
C               **  DETERMINE THE NUMBER   **
C               **  OF PLOT VARIABLES.     **
C               **  STORE THIS IN NPLOTV.  **
C               *****************************
C
      ISTEPN='9'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PLO3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NPLOTV=2
      DHOLD=D(1)
      DO3830I=1,NPLOTP
        IF(D(I).NE.DHOLD)THEN
          NPLOTV=3
          GOTO3890
        ENDIF
 3830 CONTINUE
 3890 CONTINUE
      GOTO9000
C
C               *****************************
C               **  STEP 10--              **
C               **  ERROR SECTION          **
C               *****************************
C
 3270 CONTINUE
      WRITE(ICOUT,3271)
 3271 FORMAT('***** INTERNAL ERROR IN DPPLO3--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3272)
 3272 FORMAT('      AN ARGUMENT TYPE WHICH SHOULD BE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3273)
 3273 FORMAT('      EITHER A NUMBER OR A WORD, IS NEITHER.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3274)IHARG(ILOCA),IHARG2(ILOCA)
 3274 FORMAT('      ARGUMENT                  = ',A4,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3275)ILOCA
 3275 FORMAT('      LOCATION IN ARGUMENT LIST = ',I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3276)IARGT(ILOCA)
 3276 FORMAT('      ARGUMENT TYPE             = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,3104)
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,3105)(IANS(I),I=1,IWIDTH)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IERROR='YES'
      GOTO9000
C
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PLO3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPLO3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,MAXNPP,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,MAXNPP,ICASPL,IAND1,IAND2 = ',
     1         4I8,3(2X,A4))
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPLOT(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  IANGLU,MAXNPP,
     1                  IBUGG2,IBUGG3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,
     1                  IFOUND,IERROR)
C
C     PURPOSE--FORM A Y PLOT, A Y VS. X PLOT, A SUBSET PLOT,
C              AND OTHER SIMILAR TYPE PLOTS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1977.
C     UPDATED         --JANUARY   1978.
C     UPDATED         --FEBRUARY  1978.
C     UPDATED         --MAY       1978.
C     UPDATED         --JUNE      1978.
C     UPDATED         --JULY      1978.
C     UPDATED         --NOVEMBER  1978.
C     UPDATED         --FEBRUARY  1979.
C     UPDATED         --MARCH     1979.
C     UPDATED         --JULY      1979.
C     UPDATED         --JANUARY   1981.
C     UPDATED         --MARCH     1981.
C     UPDATED         --AUGUST    1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --APRIL     1992. FIX PLOT WITH NO ARGS
C     UPDATED         --JUNE      2022. FIX BUG WHEN HAVE 2 OR MORE
C                                       SUBSET CLAUSES WITH "="
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IANGLU
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGCO
      CHARACTER*4 IBUGEV
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IPARN
      CHARACTER*4 IPARN2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
C     ***** THE FOLLOWING 4 DIMENSIONS RAISED FROM 150 TO 225 AUGUST 1983 *****
C     ***** THE FOLLOWING 4 DIMENSIONS RAISED FROM 225 TO 1000 AUGUST 1986 *****
CCCCC DIMENSION ITYPEH(225)
CCCCC DIMENSION IW2HOL(225)
CCCCC DIMENSION IW22HO(225)
CCCCC DIMENSION W2HOLD(225)
      CHARACTER*4 ITYPEH(1000)
      CHARACTER*4 IW2HOL(1000)
      CHARACTER*4 IW22HO(1000)
      DIMENSION W2HOLD(1000)
C
      DIMENSION PARAM(100)
      DIMENSION IPARN(100)
      DIMENSION IPARN2(100)
C
      DIMENSION IVSLOC(100)
      DIMENSION IEQLOC(100)
      DIMENSION IFOLOC(100)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPPL'
      ISUBN2='OT  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C     ***** THE FOLLOWING 6 LINES INSERTED AUGUST 1983 *****
CCCCC DO40I=1,225
      DO40I=1,1000
        ITYPEH(I)='    '
        IW2HOL(I)='    '
        IW22HO(I)='    '
        W2HOLD(I)=0.0
   40 CONTINUE
C
      DO45I=1,100
        IVSLOC(I)=-1
        IEQLOC(I)=-1
        IFOLOC(I)=-1
   45 CONTINUE
C
C               ***************************
C               **  TREAT THE PLOT CASE  **
C               ***************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PLOT')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPLOTV,NPLOTP,NS,MAXNPP
   52   FORMAT('NPLOTV,NPLOTP,NS,MAXNPP = ',4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IAND1,IAND2,IFOUND,IERROR
   53   FORMAT('ICASPL,IAND1,IAND2,IFOUND,IERROR = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IANGLU,IBUGG2,IBUGG3,IBUGCO,IBUGEV,IBUGQ
   54   FORMAT('IANGLU,IBUGG2,IBUGG3,IBUGCO,IBUGEV,IBUGQ = ',
     1         5(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *******************************************************
C               **  STEP 1--                                         **
C               **  CHECK FOR THE PROPER NUMBER OF INPUT ARGUMENTS.  **
C               *******************************************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLOT')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MINNA=0
      MAXNA=100
      CALL CHECKA(NUMARG,MINNA,MAXNA,IANS,IWIDTH,ISUBN1,ISUBN2,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               *******************************************
C               **  STEP 2--                             **
C               **  DETERMINE IF HAD OR HAVE THE 'AND'   **
C               **  CONTINUATION CASE.                   **
C               **  IF THE PREVIOUS PLOT COMMAND LINE    **
C               **  HAD AN 'AND' CONTINUATION,           **
C               **  OR IF THE PRESENT PLOT COMMAND LINE  **
C               **  HAS AN 'AND' CONTINUATION,           **
C               **  THEN SET SOME FLAG VARIABLES.        **
C               *******************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IAND1.EQ.'NO')NPLOTV=0
      IF(IAND1.EQ.'NO')NPLOTP=0
      IAND2='NO'
      IF(NUMARG.LE.0)IAND2='NO'
CCCCC THE FOLLOWING LINE WAS FIXED   APRIL 1992
CCCCC IF(NUMARG.GE.1.AND.IHARG(NUMARG).EQ.'AND')IAND2='YES'
      IF(NUMARG.GE.1)THEN
         IF(IHARG(NUMARG).EQ.'AND')IAND2='YES'
      ENDIF
      L=NPLOTP
C
C               ***************************************
C               **  STEP 3--                         **
C               **  DETERMINE THE TYPE OF PLOT CASE  **
C               **  (FOR THIS COMMAND LINE ONLY)--   **
C               **       1)  PLOT                    **
C               **       2)  PLOT ... VERSUS         **
C               **       3)  PLOT ... FOR X =        **
C               **       4)  OTHER THAN THE ABOVE.   **
C               ***************************************
C
      ISTEPN='3'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLOT')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)THEN
        ICASPL='NODA'
        IFOUND='YES'
        IERROR='NO'
        NS=0
        GOTO9000
      ENDIF
C
      ICASPL='NOVE'
C
      NUMEQ=0
      NUMFO=0
      NUMVS=0
      NUMDV=0
      DO811J=1,NUMARG
        J2=J
        IF(IHARG(J).EQ.'=')THEN
          NUMEQ=NUMEQ+1
          IEQLOC(NUMEQ)=J2
        ELSEIF(IHARG(J).EQ.'VS' .OR. IHARG(J).EQ.'VS. ' .OR.
     1        (IHARG(J).EQ.'VERS' .AND. IHARG2(J).EQ.'US  '))THEN
          NUMVS=NUMVS+1
          IVSLOC(NUMVS)=J2
        ELSEIF(IHARG(J).EQ.'FOR')THEN
          JP1=J+1
          IF(JP1.GT.NUMARG)GOTO837
          IF(IHARG(JP1).EQ.'I   '.AND.IHARG2(JP1).EQ.'    ')GOTO837
          IF(IHARG(JP1).EQ.'ROW '.AND.IHARG2(JP1).EQ.'    ')GOTO837
          NUMDV=NUMDV+1
  837     CONTINUE
          NUMFO=NUMFO+1
          IFOLOC(NUMFO)=J2
        ENDIF
  811 CONTINUE
C
C     2022/06: BUG WHEN TWO OR MORE SUBSET CLAUSES HAVE "="
C              WITH NO FOR CLAUSE
C
      IF(NUMEQ.EQ.0)ICASPL='NOVE'
      IF(NUMEQ.EQ.1.AND.NUMFO.EQ.1.AND.NUMDV.LE.0)ICASPL='NOVE'
      IF(NUMEQ.EQ.1.AND.NUMFO.EQ.1.AND.NUMDV.GE.1)ICASPL='EFE'
      IF(NUMEQ.EQ.2.AND.NUMFO.EQ.2.AND.NUMDV.GE.1)ICASPL='EFE'
      IF(NUMEQ.GE.2)ICASPL='EFE'
      IF(ICASPL.EQ.'EFE' .AND. NUMFO.EQ.0)ICASPL='NOVE'
      IF(NUMVS.GE.1)ICASPL='VS'
C
C               ******************************************
C               **  STEP 4--                            **
C               **  BRANCH ACCORDING TO THE PLOT CASE.  **
C               ******************************************
C
      ISTEPN='4'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLOT')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IFOUND='YES'
C
      IF(ICASPL.EQ.'NOVE')THEN
        CALL DPPLO1(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1              MAXNPP,
     1              IBUGG3,IBUGQ,IFOUND,IERROR)
      ELSEIF(ICASPL.EQ.'VS')THEN
        CALL DPPLO2(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1              IVSLOC,NUMVS,
     1              MAXNPP,
     1              IBUGG3,IBUGQ,IFOUND,IERROR)
      ELSEIF(ICASPL.EQ.'EFE')THEN
        CALL DPPLO3(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1              PARAM,IPARN,IPARN2,NUMPAR,
     1              ITYPEH,IW2HOL,IW22HO,W2HOLD,NWHOLD,
     1              IFOLOC,
     1              MAXNPP,IANGLU,IBUGG3,IBUGCO,IBUGEV,IBUGQ,
     1              ISUBRO,IFOUND,IERROR)
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PLOT')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END OF DPPLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         3I8,3(2X,A4))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9020)
 9020   FORMAT('I,Y(.),X(.),D(.),ISUB(.)--')
        CALL DPWRST('XXX','BUG ')
        DO9021I=1,NPLOTP
          WRITE(ICOUT,9022)I,Y(I),X(I),D(I),ISUB(I)
 9022     FORMAT(I8,3G15.7,I8)
          CALL DPWRST('XXX','BUG ')
 9021   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPLSY(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A SYMBOL PLOT--
C              THE COMMAND HAS THE FOLLOWING FORMAT:
C                  SYMBOL PLOT Y X <SIZE> <SYMBOL> <COLOR> <FILL>
C              ONLY THE Y VARIABLE IS REQUIRED.  IF ONLY Y AND X ARE
C              GIVEN, THIS COMMAND IS SIMILAR TO THE PLOT Y X
C              COMMAND.  IF A SIZE VARIABLE IS GIVEN, THE CHARACTER
C              SIZE OF PLOT CHARACTER WILL BE SCALED ACCORDING TO THAT
C              VARIABLE.  THE SYMBOL VARIABLE IDENTIFIES THE SYMBOL
C              TO USE (SPECIFY AS AN INDEX BETWEEN 1 AND 100, USE THE
C              CORRESPONDING VALUE FROM THE CHARACTER ...  COMMAND).
C              THE COLOR COMMAND IDENTIFIES THE COLOR FOR THE PLOT
C              CHARACTER (AGAIN AN INDEX FROM 1 TO 100, USE CHAR COLOR
C              COMMAND SETTINGS).  THE FILL VARIABLE IDENTIFIES
C              WHETHER THE PLOT SYMBOL WILL BE FILLED (0 FOR NO FILL
C              ANYTHING ELSE TO FILL WITH SOLID PATTERN).
C                   PLSYOR ARROW <FIXED/VARIABLE>
C     EXAMPLE--SYMBOL PLOT Y X  SIZE SYMBOL COLOR FILL
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--92/8
C     ORIGINAL VERSION--AUGUST    1992.
C     UPDATED         --FEBRUARY  2011. USE DPPARS AND DPPAR5
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION Y2(MAXOBV)
      DIMENSION Y3(MAXOBV)
      DIMENSION Y4(MAXOBV)
      DIMENSION Y5(MAXOBV)
      DIMENSION Y6(MAXOBV)
CCCCC FOLLOWING LINES ADDED JUNE, 1990
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y2(1))
      EQUIVALENCE (GARBAG(IGARB3),Y3(1))
      EQUIVALENCE (GARBAG(IGARB4),Y4(1))
      EQUIVALENCE (GARBAG(IGARB5),Y5(1))
      EQUIVALENCE (GARBAG(IGARB6),Y6(1))
CCCCC END CHANGE
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      IFOUND='NO'
      ISUBN1='DPPL'
      ISUBN2='SY  '
      ICASPL='SYMB'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ***********************************
C               **  TREAT THE SYMBOL PLOT CASE   **
C               ***********************************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLSY')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPLSY--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGG2,IBUGG3,IBUGQ,ISUBRO
   52   FORMAT('IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IAND1,IAND2,MAXN,NS
   53   FORMAT('ICASPL,IAND1,IAND2,MAXN,NS = ',3(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='11'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLSY')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'PLOT')THEN
        ILASTC=1
      ELSE
        GOTO9000
      ENDIF
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      IFOUND='YES'
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLSY')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='SYMBOL PLOT'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=6
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLSY')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),IVARTY(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),IVARTY(I) = ',I8,2X,A4,A4,2X,3I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      ICOL=1
      CALL DPPAR5(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Y1,Y2,Y3,Y4,Y5,Y6,Y6,NLOCAL,
     1            IBUGG3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C
C               *******************************************************
C               **  STEP 8--                                         **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS            **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.               **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).    **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).    **
C               *******************************************************
C
      ISTEPN='5'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLSY')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,5001)NLOCAL,ICASPL
 5001   FORMAT('NLOCAL,ICASPL=',I5,1X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      CALL DPPLS2(Y1,Y2,Y3,Y4,Y5,Y6,NLOCAL,ICASPL,NUMVAR,
     1            Y,X,D,DSIZE,DSYMB,DCOLOR,DFILL,
     1            NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
C               *****************
C               **  STEP 9--   **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLSY')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPLSY--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IFOUND,IERROR
 9013   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NPLOTV,NPLOTP,NLOCAL,ICASPL,IAND1,IAND2
 9014   FORMAT('NPLOTV,NPLOTP,NLOCAL,ICASPL,IAND1,IAND2 = ',
     1         3I8,2X,2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        IF(NLOCAL.GE.1)THEN
         DO9042I=1,NLOCAL
           WRITE(ICOUT,9043)I,Y1(I),Y2(I),Y3(I),Y4(I),Y5(I),Y6(I)
 9043      FORMAT('I,Y1(I),Y2(I),Y3(I),Y4(I)Y5(I),Y(6) = ',I8,6E15.7)
           CALL DPWRST('XXX','BUG ')
 9042    CONTINUE
        ENDIF
        IF(NPLOTP.GE.1)THEN
          DO9052I=1,NPLOTP
            WRITE(ICOUT,9053)I,Y(I),X(I),D(I),DSIZE(I),DSYMB(I),
     1                       DCOLOR(I),DFILL(I)
 9053       FORMAT('I,Y(I),X(I),D(I),DSIZE(I),DSYMB(I),DCOLOR(I),',
     1             'DFILL(I) = ',I8,7F12.5)
            CALL DPWRST('XXX','BUG ')
 9052     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPLS2(Y1,Y2,Y3,Y4,Y5,Y6,NZ,ICASPL,NUMV2,
     1Y,X,D,DSIZE,DSYMB,DCOLOR,DFILL,
     1N2,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE
C              A SYMBOL PLOT
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--92/8
C     ORIGINAL VERSION--AUGUST    1992.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION Y3(*)
      DIMENSION Y4(*)
      DIMENSION Y5(*)
      DIMENSION Y6(*)
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION D(*)
      DIMENSION DSIZE(*)
      DIMENSION DSYMB(*)
      DIMENSION DCOLOR(*)
      DIMENSION DFILL(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPL'
      ISUBN2='S2  '
      IERROR='NO'
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(NZ.LT.1)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN SYMBOL PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 1;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)NZ
   34   FORMAT('      THE NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PLS2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPPLS2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)ICASPL,NZ,N2,NPLOTV,NUMV2
   72   FORMAT('ICASPL,NZ,N2,NPLOTV,NUMV2 = ',A4,2X,4I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 1--                          **
C               **  INITIALIZE DSIZE, ETC.            **
C               ****************************************
C
      DO100I=1,NZ
        Y(I)=Y1(I)
        D(I)=1.0
        DSIZE(I)=1.0
        DSYMB(I)=1.0
        DCOLOR(I)=1.0
        DFILL(I)=0.0
 100  CONTINUE
C
C               ****************************************
C               **  STEP 2--                          **
C               **  IF NO X, CREATE IT                **
C               ****************************************
C
      IF(NUMV2.LT.2)THEN
        DO200I=1,NZ
        X(I)=REAL(I)
 200    CONTINUE
        GOTO8000
      ELSE
        DO210I=1,NZ
        X(I)=Y2(I)
 210    CONTINUE
      ENDIF
C
C               ****************************************
C               **  STEP 3--                          **
C               **  HANDLE THE SIZE VARIABLE          **
C               ****************************************
C
      IF(NUMV2.GE.3)THEN
        AMAXSZ=0.0
        DO300I=1,NZ
          ATEMP=ABS(Y3(I))
          IF(ATEMP.GT.AMAXSZ)AMAXSZ=ATEMP
 300    CONTINUE
        DO310I=1,NZ
          ATEMP=ABS(Y3(I))/AMAXSZ
          IF(ATEMP.GT.1.0)ATEMP=1.0
          IF(ATEMP.LT.0.05)ATEMP=0.05
          DSIZE(I)=ATEMP
 310    CONTINUE
C
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PLS2')THEN
          WRITE(ICOUT,371)
  371     FORMAT('***** AFTER CALCULATING SIZE --')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,372)AMAXSZ
  372     FORMAT('AMAXSZ = ',G15.7)
          CALL DPWRST('XXX','BUG ')
          DO381I=1,10
            WRITE(ICOUT,382)I,Y3(I),DSIZE(I)
  382       FORMAT('I,Y3(I),DSIZE(I) = ',I4,E15.7,1X,F8.5)
            CALL DPWRST('XXX','BUG ')
  381     CONTINUE
        ENDIF
C
      ENDIF
C
C               ****************************************
C               **  STEP 4--                          **
C               **  HANDLE THE SYMBOL VARIABLE        **
C               **  SHOULD BE AN INDEX BETWEEN 1 AND  **
C               **  100                               **
C               ****************************************
C
      IF(NUMV2.GE.4)THEN
        DO400I=1,NZ
          DSYMB(I)=Y4(I)
          DSYMB(I)=ABS(DSYMB(I))
          IF(DSYMB(I).LT.0.5)DSYMB(I)=1.0
          IF(DSYMB(I).GT.99.5)DSYMB(I)=100.0
 400    CONTINUE
      ENDIF
C
C               ****************************************
C               **  STEP 5--                          **
C               **  HANDLE THE COLOR  VARIABLE        **
C               **  SHOULD BE AN INDEX BETWEEN 1 AND  **
C               **  100                               **
C               ****************************************
C
      IF(NUMV2.GE.5)THEN
        DO500I=1,NZ
          DCOLOR(I)=Y5(I)
          DCOLOR(I)=ABS(DCOLOR(I))
          IF(DCOLOR(I).LT.0.5)DCOLOR(I)=1.0
          IF(DCOLOR(I).GT.99.5)DCOLOR(I)=100.0
 500    CONTINUE
      ENDIF
C
C               ****************************************
C               **  STEP 6--                          **
C               **  HANDLE THE FILL   VARIABLE        **
C               **  SHOULD BE 0 FOR NO FILL, ANYTHING **
C               **  ELSE FOR SOLID FILL               **
C               ****************************************
C
      IF(NUMV2.GE.5)THEN
        DO600I=1,NZ
          DFILL(I)=Y6(I)
          IF(DFILL(I).GE.-0.5.AND.DFILL(I).LE.0.5)THEN
            DFILL(I)=0.0
          ELSE
            DFILL(I)=1.0
          ENDIF
 600    CONTINUE
      ENDIF
C
 8000 CONTINUE
      N2=NZ
      NPLOTV=3
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PLS2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPLS2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,IERROR,NZ,N2,NPLOTV
 9012   FORMAT('ICASPL,IERROR,NZ,N2,NPLOTV = ',2(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        IF(NZ.GE.1)THEN
          DO9021I=1,NZ
            WRITE(ICOUT,9022)I,Y1(I),Y2(I),Y3(I),Y4(I)
 9022       FORMAT('I,Y1(I),Y2(I),Y3(I) = ',I8,4E12.5)
            CALL DPWRST('XXX','BUG ')
 9021     CONTINUE
        ENDIF
        DO9035I=1,N2
          WRITE(ICOUT,9036)I,Y(I),X(I),D(I)
 9036     FORMAT('I,Y(I),X(I),D(I) = ',I8,2E15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9035   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPMTI(IANS,IANSLC,IWIDTH,IHARG,IHARG2,NUMARG,
     1                  IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--EXTRACT THE STRING TO BE USED AS A TITLE
C              FOR SUBSEQUENT SAVED PIXMAPS;
C     INPUT  ARGUMENTS--IANS   (A  CHARACTER VECTOR)
C                     --IWIDTH
C                     --IHARG  (A  CHARACTER VECTOR)
C                     --IHARG2  (A  CHARACTER VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--97/4
C     ORIGINAL VERSION--APRIL      1997.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IANS
      CHARACTER*4 IANSLC
      CHARACTER*4 IHARG
      CHARACTER*4 IHARG2
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IANS(*)
      DIMENSION IANSLC(*)
      DIMENSION IHARG(*)
      DIMENSION IHARG2(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOPM.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(IBUGP2.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('AT THE BEGINNING OF DPPMTI--')
        CALL DPWRST('XXX','BUG ')
        DO60I=1,NUMARG
          WRITE(ICOUT,61)I,IHARG(I),IHARG2(I)
   61     FORMAT('I,IHARG(I),IHARG2(I) = ',I8,2X,2A4)
          CALL DPWRST('XXX','BUG ')
   60   CONTINUE
      ENDIF
C
C     *****************************************
C     **  STEP 1--                           **
C     **  DETERMINE THE COMMAND              **
C     **  (TITLE) AND ITS LOCATION           **
C     **  ON THE LINE.                       **
C     *****************************************
C
      DO1000I=1,IWIDTH
      I2=I
      IP1=I+1
      IP2=I+2
      IP3=I+3
      IP4=I+4
      IP5=I+5
      IP6=I+6
      IF(IANS(I).EQ.'T'.AND.IANS(IP1).EQ.'I'
     1.AND.IANS(IP2).EQ.'T'.AND.IANS(IP3).EQ.'L'
     1.AND.IANS(IP4).EQ.'E')
     1GOTO100
C
 1000 CONTINUE
      WRITE(ICOUT,1001)
 1001 FORMAT('***** ERROR IN DPPMTI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1002)
 1002 FORMAT('      NO MATCH FOR COMMAND.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO800
C
C     **********************************************************
C     **  STEP 2--                                            **
C     **  DEFINE THE START POSITION (ISTART) FOR THE STRING.  **
C     **********************************************************
C
  100 CONTINUE
      ISTART=I2+6
      GOTO300
C
C     ********************************************************
C     **  STEP 3--                                          **
C     **  DEFINE THE STOP POSITION (ISTOP) FOR THE STRING.  **
C     ********************************************************
C
  300 CONTINUE
      IFOUND='YES'
      ISTOP=0
      IF(ISTART.GT.IWIDTH)GOTO329
      DO320I=ISTART,IWIDTH
      IREV=IWIDTH-I+ISTART
      IF(IANS(IREV).NE.' ')GOTO325
  320 CONTINUE
      GOTO329
  325 CONTINUE
      ISTOP=IREV
  329 CONTINUE
C
C     *****************************************
C     **  STEP 4--                           **
C     **  COPY OVER THE STRING OF INTEREST.  **
C     *****************************************
C
      IF(ISTART.GT.ISTOP)GOTO359
      IF(ISTOP.EQ.0)GOTO359
      IPXMCM(NUMPXM+1)=' '
      J=0
      DO350I=ISTART,ISTOP
      J=J+1
      IPXMCM(NUMPXM+1)(J:J)=IANSLC(I)(1:1)
  350 CONTINUE
      NCTITL=J
      GOTO800
  359 CONTINUE
C
C     ************************************
C     **  STEP 5--                      **
C     **  TREAT THE EMPTY-STRING CASE.  **
C     ************************************
C
      NCTITL=0
      GOTO800
C
C     ***************************
C     **  STEP 6--             **
C     **  PRINT OUT A MESSAGE  **
C     ***************************
C
  800 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO889
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,811)
  811 FORMAT('THE TITLE FOR THE NEXT SAVED PIXMAP HAS JUST BEEN ',
     1'SET TO')
      CALL DPWRST('XXX','BUG ')
      IF(NCTITL.EQ.0)THEN
        WRITE(ICOUT,999)
      ELSE IF(NCTITL.GE.1)THEN
        WRITE(ICOUT,812)(IPXMCM(NUMPXM+1)(I:I),I=1,NCTITL)
      ENDIF
      CALL DPWRST('XXX','BUG ')
  812 FORMAT(10X,120A1)
  889 CONTINUE
      GOTO9000
C
C     ****************
C     **  STEP 90-- **
C     **  EXIT      **
C     ****************
C
 9000 CONTINUE
      IF(IBUGP2.NE.'ON')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('AT THE END       OF DPPMTI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)NCTITL
 9012 FORMAT('NCTITL = ',I5)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPPOI2(X1,Y1,IFIG,
     1                  ILINPA,ILINCO,ILINC2,MAXLN,PLINTH,
     1                  AREGBA,IREBLI,IREBCO,IREBC2,MAXRG,PREBTH,
     1                  IREFSW,IREFCO,IREFC2,
     1                  IREPTY,IREPLI,IREPCO,IREPC2,PREPTH,PREPSP,
     1                  PTEXHE,PTEXWI,PTEXVG,PTEXHG)
C
C     PURPOSE--DRAW A POINT WITH THE COORDINATES (X1,Y1)
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--APRIL     1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --JANUARY   1989. MODIFY CALLS TO DPDRPL (ALAN)
C     UPDATED         --JANUARY   1989. MODIFY CALL  TO DPFIRE (ALAN)
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLOR
C
C-----NON-COMMON VARIABLES-------------------------------------
C
      CHARACTER*4 IFIG
      CHARACTER*4 IPATT2
C
      CHARACTER*4 ILINPA
      CHARACTER*4 ILINCO
C
      CHARACTER*4 IREBLI
      CHARACTER*4 IREBCO
      CHARACTER*4 IREFSW
      CHARACTER*4 IREFCO
      CHARACTER*4 IREPTY
      CHARACTER*4 IREPLI
      CHARACTER*4 IREPCO
C
      CHARACTER*4 IPATT
      CHARACTER*4 ICOLF
      CHARACTER*4 ICOLP
      CHARACTER*4 ICOL
      CHARACTER*4 IFLAG
C
      DIMENSION PX(10)
      DIMENSION PY(10)
CCCCC DIMENSION PX3(10)
CCCCC DIMENSION PY3(10)
C
      DIMENSION ILINPA(*)
      DIMENSION ILINCO(*)
      DIMENSION ILINC2(MAXLN,3)
      DIMENSION PLINTH(*)
C
      DIMENSION AREGBA(*)
      DIMENSION IREBLI(*)
      DIMENSION IREBCO(*)
      DIMENSION IREBC2(MAXRG,3)
      DIMENSION PREBTH(*)
      DIMENSION IREFSW(*)
      DIMENSION IREFCO(*)
      DIMENSION IREFC2(MAXRG,3)
      DIMENSION IREPTY(*)
      DIMENSION IREPLI(*)
      DIMENSION IREPCO(*)
      DIMENSION IREPC2(MAXRG,3)
      DIMENSION PREPTH(*)
      DIMENSION PREPSP(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOGR.INC'
      INCLUDE 'DPCOBE.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(IBUGG4.EQ.'OFF'.AND.ISUBG4.NE.'POI2')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPPOI2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)X1,Y1
   53 FORMAT('X1,Y1 = ',2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,59)IFIG
   59 FORMAT('IFIG = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,61)ILINPA(1),ILINCO(1),PLINTH(1)
   61 FORMAT('ILINPA(1),ILINCO(1),PLINTH(1) = ',A4,2X,A4,E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)AREGBA(1)
   62 FORMAT('AREGBA(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,63)IREBLI(1),IREBCO(1),PREBTH(1)
   63 FORMAT('IREBLI(1),IREBCO(1),PREBTH(1) = ',A4,2X,A4,E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,64)IREFSW(1),IREFCO(1)
   64 FORMAT('IREFSW(1),IREFCO(1) = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,65)IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1)
   65 FORMAT('IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1) = ',
     1A4,2X,A4,2X,A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,69)PTEXHE,PTEXWI
   69 FORMAT('PTEXHE,PTEXWI= ',2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,70)PTEXVG,PTEXHG
   70 FORMAT('PTEXVG,PTEXHG= ',2E15.6)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,79)IBUGG4,ISUBG4,IERRG4
   79 FORMAT('IBUGG4,ISUBG4,IERRG4 = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
   90 CONTINUE
C
C               *********************************
C               **  STEP 1--                   **
C               **  DETERMINE THE COORDINATES  **
C               **  FOR THE POINT              **
C               *********************************
C
      PX(1)=X1
      PY(1)=Y1
C
      PX(2)=X1
      PY(2)=Y1
C
      NP=2
C
C               ***********************
C               **  STEP 2--         **
C               **  FILL THE FIGURE  **
C               **  (IF CALLED FOR)  **
C               ***********************
C
      IF(IREFSW(1).EQ.'OFF')GOTO2190
      IPATT=IREPTY(1)
      IPATT2='SOLI'
      PTHICK=PREPTH(1)
      PXGAP=PREPSP(1)
      PYGAP=PREPSP(1)
      ICOLF=IREFCO(1)
      ICOLFR=IREFC2(1,1)
      ICOLFG=IREFC2(1,2)
      ICOLFB=IREFC2(1,3)
      ICOLP=IREPCO(1)
      ICOLPR=IREPC2(1,1)
      ICOLPG=IREPC2(1,2)
      ICOLPB=IREPC2(1,3)
      ICOLBR=IREBC2(1,1)
      ICOLBG=IREBC2(1,2)
      ICOLBB=IREBC2(1,3)
      CALL DPFIRE(PX,PY,NP,
     1            IFIG,IPATT,PTHICK,PXGAP,PYGAP,
     1            ICOLF,ICOLFR,ICOLFG,ICOLFB,
     1            ICOLP,ICOLPR,ICOLPG,ICOLPB,
     1            IPATT2)
 2190 CONTINUE
C
C               ***************************
C               **  STEP 3--             **
C               **  DRAW OUT THE FIGURE  **
C               ***************************
C
      IPATT=ILINPA(1)
      PTHICK=PLINTH(1)
      ICOL=ILINCO(1)
      ICOLR=ILINC2(1,1)
      ICOLG=ILINC2(1,2)
      ICOLB=ILINC2(1,3)
      IFLAG='ON'
      CALL DPDRPL(PX,PY,NP,
     1            IFIG,IPATT,PTHICK,
     1            ICOL,ICOLR,ICOLG,ICOLB,
     1            JPATT,JTHICK,PTHIC2,JCOL,IFLAG)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'POI2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPOI2--')
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NP
          WRITE(ICOUT,9016)I,PX(I),PY(I)
 9016     FORMAT('I,PX(I),PY(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
        WRITE(ICOUT,9039)IBUGG4,ISUBG4,IERRG4,NP
 9039   FORMAT('IBUGG4,ISUBG4,IERRG4,NP = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPOIN(IHARG,IARGT,ARG,NUMARG,
     1                  PXSTAR,PYSTAR,PXEND,PYEND,
     1                  ILINPA,ILINCO,ILINC2,MAXLNZ,PLINTH,
     1                  AREGBA,IREBLI,IREBCO,IREBC2,MAXRGZ,PREBTH,
     1                  IREFSW,IREFCO,IREFC2,
     1                  IREPTY,IREPLI,IREPCO,IREPC2,PREPTH,PREPSP,
     1                  PTEXHE,PTEXWI,PTEXVG,PTEXHG,
     1                  IGRASW,IDIASW,
     1                  PGRAXF,PGRAYF,PDIAXC,PDIAYC,PDIAX2,PDIAY2,
     1                  PDIAHE,PDIAWI,PDIAVG,PDIAHG,
     1                  NUMDEV,IDMANU,IDMODE,IDMOD2,IDMOD3,
     1                  IDPOWE,IDCONT,IDCOLO,IDNVPP,IDNHPP,IDUNIT,
     1                  IDNVOF,IDNHOF,IDFONT,UNITSW,PDSCAL,
     1                  IBACCO,IBACC2,
     1                  IBUGD2,IFOUND,IERROR)
C
C     PURPOSE--DRAW ONE OR MORE POINTS (DEPENDING ON HOW MANY NUMBERS
C              ARE PROVIDED).  THE COORDINATES ARE IN STANDARDIZED UNITS
C              OF 0 TO 100.
C     NOTE--THE INPUT COORDINATES DEFINE THE POINT.
C     NOTE-THE USUAL INPUT NUMBER OF COORDINATES IS 1 AND THEREFORE
C          THE USUAL INPUT NUMBER OF NUMBERS IS 2*1 = 2.
C     NOTE--IF NO NUMBERS ARE PROVIDED, THEN THE DRAWN POINT WILL BE
C           AT THE LAST CURSOR POSITION
C     NOTE--IF 2 NUMBERS ARE PROVIDED, THEN THE DRAWN POINT WILL BE AT
C           THE ABSOLUTE (X,Y) POSITION AS DEFINED BY THE 2 NUMBERS
C     NOTE--AND SO FORTH FOR 2, 3, 4, ... NUMBERS.
C     INPUT  ARGUMENTS--IHARG
C                     --IARGT
C                     --ARG
C                     --NUMARG
C                     --PXSTAR
C                     --PYSTAR
C     OUTPUT ARGUMENTS--PXEND
C                     --PYEND
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--APRIL     1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --NOVEMBER  1982.
C     UPDATED         --JANUARY   1989. CALL LIST FOR OFFSET VAR (ALAN)
C     UPDATED         --MARCH     1997. SUPPORT FOR DEVICE FONT (ALAN)
C     UPDATED         --JULY      1997. SUPPORT FOR "DATA" UNITS (ALAN)
C     UPDATED         --DECEMBER  2018. CHECK FOR DISCRETE, NULL, OR
C                                       NONE DEVICE
C     UPDATED         --DECEMBER  2018. SUPPORT FOR "DEVICE ... SCALE"
C                                       COMMAND
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLORS
C
C-----NON-COMMON VARIABLES-----------------------------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 ILINPA
      CHARACTER*4 ILINCO
C
      CHARACTER*4 IREBLI
      CHARACTER*4 IREBCO
      CHARACTER*4 IREFSW
      CHARACTER*4 IREFCO
      CHARACTER*4 IREPTY
      CHARACTER*4 IREPLI
      CHARACTER*4 IREPCO
C
      CHARACTER*4 IGRASW
      CHARACTER*4 IDIASW
C
      CHARACTER*4 IDMANU
      CHARACTER*4 IDMODE
      CHARACTER*4 IDMOD2
      CHARACTER*4 IDMOD3
      CHARACTER*4 IDPOWE
      CHARACTER*4 IDCONT
      CHARACTER*4 IDCOLO
CCCCC ADD FOLLOWING LINE MARCH 1997.
      CHARACTER*4 IDFONT
CCCCC ADD FOLLOWING LINE JULY 1997.
      CHARACTER*4 UNITSW
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IBUGD2
      CHARACTER*4 IERROR
      CHARACTER*4 ISUBRO
C
      CHARACTER*4 IFIG
      CHARACTER*4 IBELSW
      CHARACTER*4 IERASW
      CHARACTER*4 IBACCO
      CHARACTER*4 ICOPSW
      CHARACTER*4 ITYPEO
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
      DIMENSION ILINPA(*)
      DIMENSION ILINCO(*)
      DIMENSION ILINC2(MAXLNZ,3)
      DIMENSION PLINTH(*)
C
      DIMENSION AREGBA(*)
      DIMENSION IREBLI(*)
      DIMENSION IREBCO(*)
      DIMENSION IREBC2(MAXRGZ,3)
      DIMENSION PREBTH(*)
      DIMENSION IREFSW(*)
      DIMENSION IREFCO(*)
      DIMENSION IREFC2(MAXRGZ,3)
      DIMENSION IREPTY(*)
      DIMENSION IREPLI(*)
      DIMENSION IREPCO(*)
      DIMENSION IREPC2(MAXRGZ,3)
      DIMENSION PREPTH(*)
      DIMENSION PREPSP(*)
      DIMENSION PDSCAL(*)
C
      DIMENSION IDMANU(*)
      DIMENSION IDMODE(*)
      DIMENSION IDMOD2(*)
      DIMENSION IDMOD3(*)
      DIMENSION IDPOWE(*)
      DIMENSION IDCONT(*)
      DIMENSION IDCOLO(*)
CCCCC ADD FOLLOWING LINE MARCH 1997.
      DIMENSION IDFONT(*)
      DIMENSION IDNVPP(*)
      DIMENSION IDNHPP(*)
      DIMENSION IDUNIT(*)
C
      DIMENSION IDNVOF(*)
      DIMENSION IDNHOF(*)
      DIMENSION IBACC2(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOGR.INC'
      INCLUDE 'DPCOBE.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      IERRG4=IERROR
CCCCC IBUGG4=IBUGD2
CCCCC ISUBG4=ISUBRO
C
      ILOCFN=0
      NUMNUM=0
C
      X1=0.0
      Y1=0.0
      X2=0.0
      Y2=0.0
C
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'POIN')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPOIN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)NUMARG,NUMDEV
   53   FORMAT('NUMARG,NUMDEV = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMARG
          WRITE(ICOUT,56)I,IHARG(I),IARGT(I),ARG(I)
   56     FORMAT('I,IHARG(I),IARGT(I),ARG(I) = ',I8,2(2X,A4),G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)PXSTAR,PYSTAR,PXEND,PYEND
   57   FORMAT('PXSTAR,PYSTAR,PXEND,PYEND = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,61)ILINPA(1),ILINCO(1),PLINTH(1)
   61   FORMAT('ILINPA(1),ILINCO(1),PLINTH(1) = ',2(A4,2X),G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,63)IREBLI(1),IREBCO(1),PREBTH(1),AREGBA(1)
   63   FORMAT('IREBLI(1),IREBCO(1),PREBTH(1),AREGBA(1) = ',
     1         2(A4,2X),2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,64)IREFSW(1),IREFCO(1)
   64   FORMAT('IREFSW(1),IREFCO(1) = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,65)IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1)
   65   FORMAT('IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1) = ',
     1         3(A4,2X),2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,69)PTEXHE,PTEXWI,PTEXVG,PTEXHG
   69   FORMAT('PTEXHE,PTEXWI,PTEXVG,PTEXHG = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,76)IGRASW,IDIASW
   76   FORMAT('IGRASW,IDIASW = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,77)PGRAXF,PGRAYF,PDIAXC,PDIAYC
   77   FORMAT('PGRAXF,PGRAYF,PDIAXC,PDIAYC = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,78)PDIAHE,PDIAWI,PDIAVG,PDIAHG
   78   FORMAT('PDIAHE,PDIAWI,PDIAVG,PDIAHG = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        DO81I=1,NUMDEV
          WRITE(ICOUT,82)IDMANU(I),IDMODE(I),IDMOD2(I),IDMOD3(I)
   82     FORMAT('IDMANU(I),IDMODE(I),IDMOD2(I),IDMOD3(I) = ',
     1           3(A4,2X),A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,83)IDPOWE(I),IDCONT(I),IDCOLO(I)
   83     FORMAT('IDPOWE(I),IDCONT(I),IDCOLO(I) = ',2(A4,2X),A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,84)IDNVPP(I),IDNHPP(I),IDUNIT(I)
   84     FORMAT('IDNVPP(I),IDNHPP(I),IDUNIT(I) = ',3I8)
          CALL DPWRST('XXX','BUG ')
   81   CONTINUE
        WRITE(ICOUT,88)IBUGG4,ISUBG4,IERRG4,IBUGD2,IFOUND,IERROR
   88   FORMAT('IBUGG4,ISUBG4,IERRG4,IBUGD2,IFOUND,IERROR = ',
     1         5(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IFIG='POIN'
      NUMPT=1
      NUMPT2=2*NUMPT
C
C               ********************************
C               **  STEP 0--                  **
C               **  STEP THROUGH EACH DEVICE  **
C               ********************************
C
      IF(NUMDEV.LE.0)GOTO9000
      DO8000IDEVIC=1,NUMDEV
C
      IF(IDPOWE(IDEVIC).EQ.'OFF')GOTO8000
      IF(IDMANU(IDEVIC).EQ.'OFF')GOTO8000
      IF(IDMANU(IDEVIC).EQ.'NULL')GOTO8000
      IF(IDMANU(IDEVIC).EQ.'NONE')GOTO8000
      IF(IDMANU(IDEVIC).EQ.'DISC')GOTO8000
C
      IMANUF=IDMANU(IDEVIC)
      IMODEL=IDMODE(IDEVIC)
      IMODE2=IDMOD2(IDEVIC)
      IMODE3=IDMOD3(IDEVIC)
      IGCONT=IDCONT(IDEVIC)
      IGCOLO=IDCOLO(IDEVIC)
      IGFONT=IDFONT(IDEVIC)
      NUMVPP=IDNVPP(IDEVIC)
      NUMHPP=IDNHPP(IDEVIC)
      ANUMVP=NUMVPP
      ANUMHP=NUMHPP
      IOFFSV=IDNVOF(IDEVIC)
      IOFFSH=IDNHOF(IDEVIC)
      IGUNIT=IDUNIT(IDEVIC)
      PCHSCA=PDSCAL(IDEVIC)
C
C               ************************************
C               **  STEP 1--                      **
C               **  CARRY OUT OPENING OPERATIONS  **
C               **  ON THE GRAPHICS DEVICES       **
C               ************************************
C
      CALL DPOPDE
C
      IBELSW='OFF'
      NUMRIN=0
      IERASW='OFF'
C
      CALL DPOPPL(IGRASW,IBELSW,NUMRIN,IERASW,IBACCO,IBACC2)
C
C               *****************************************
C               **  STEP 2--                           **
C               **  SEARCH FOR COMMAND SPECIFICATIONS  **
C               *****************************************
C
      IF(NUMARG.GE.2.AND.
     1IARGT(1).EQ.'NUMB'.AND.IARGT(2).EQ.'NUMB')
     1GOTO1111
      IF(NUMARG.GE.3.AND.IHARG(1).EQ.'ABSO'.AND.
     1IARGT(2).EQ.'NUMB'.AND.IARGT(3).EQ.'NUMB')
     1GOTO1112
      IF(NUMARG.GE.3.AND.IHARG(1).EQ.'RELA'.AND.
     1IARGT(2).EQ.'NUMB'.AND.IARGT(3).EQ.'NUMB')
     1GOTO1113
      GOTO1130
C
 1111 CONTINUE
      ITYPEO='ABSO'
      ILOCFN=1
      GOTO1119
C
 1112 CONTINUE
      ITYPEO='ABSO'
      ILOCFN=2
      GOTO1119
C
 1113 CONTINUE
      ITYPEO='RELA'
      ILOCFN=2
      GOTO1119
 1119 CONTINUE
C
      IF(ILOCFN.GT.NUMARG)GOTO1129
      DO1120I=ILOCFN,NUMARG
      IF(IARGT(I).EQ.'NUMB')GOTO1120
      GOTO1129
 1120 CONTINUE
      IFOUND='YES'
      GOTO1149
 1129 CONTINUE
      GOTO1130
C
 1130 CONTINUE
      IERRG4='YES'
      WRITE(ICOUT,1131)
 1131 FORMAT('***** ERROR IN DPPOIN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1132)
 1132 FORMAT('      ILLEGAL FORM FOR DRAW ',
     1'COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1134)
 1134 FORMAT('      TEST EXAMPLE TO DEMONSTRATE THE ',
     1'PROPER FORM--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1135)
 1135 FORMAT('      SUPPOSE IT IS DESIRED TO DRAW A POINT ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1136)
 1136 FORMAT('      AT 20 20 ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('      THEN THE ALLOWABLE FORMS ARE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      POINT 20 20 ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      BOX ABSOLUTE 20 20 ')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
 1149 CONTINUE
C
C               ****************************
C               **  STEP 3--              **
C               **  DRAW OUT THE LINE(S)  **
C               ****************************
C
      NUMNUM=NUMARG-ILOCFN+1
      IF(NUMNUM.LT.NUMPT2)GOTO1151
      GOTO1152
C
 1151 CONTINUE
      J=ILOCFN-1
      X1=PXSTAR
      Y1=PYSTAR
      GOTO1170
C
 1152 CONTINUE
      J=ILOCFN
      IF(J.GT.NUMARG)GOTO1190
      X1=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
      IF(UNITSW.EQ.'DATA')CALL DPCODS('X',X1,X1,IBUGD2,ISUBRO,IERROR)
      J=J+1
      IF(J.GT.NUMARG)GOTO1190
      Y1=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
      IF(UNITSW.EQ.'DATA')CALL DPCODS('Y',Y1,Y1,IBUGD2,ISUBRO,IERROR)
      GOTO1170
C
 1160 CONTINUE
      J=J+1
      IF(J.GT.NUMARG)GOTO1190
      X2=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
      IF(UNITSW.EQ.'DATA')CALL DPCODS('X',X2,X2,IBUGD2,ISUBRO,IERROR)
      IF(ITYPEO.EQ.'RELA')X2=X1+X2
      J=J+1
      IF(J.GT.NUMARG)GOTO1190
      Y2=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
      IF(UNITSW.EQ.'DATA')CALL DPCODS('Y',Y2,Y2,IBUGD2,ISUBRO,IERROR)
      IF(ITYPEO.EQ.'RELA')Y2=Y1+Y2
      X1=X2
      Y1=Y2
      GOTO1170
C
 1170 CONTINUE
      CALL DPPOI2(X1,Y1,IFIG,
     1            ILINPA,ILINCO,ILINC2,MAXLNZ,PLINTH,
     1            AREGBA,IREBLI,IREBCO,IREBC2,MAXRGZ,PREBTH,
     1            IREFSW,IREFCO,IREFC2,
     1            IREPTY,IREPLI,IREPCO,IREPC2,PREPTH,PREPSP,
     1            PTEXHE,PTEXWI,PTEXVG,PTEXHG)
C
      X1=X1
      Y1=Y1
C
      GOTO1160
 1190 CONTINUE
C
      PXEND=X1
      PYEND=Y1
C
C               ************************************
C               **  STEP 4--                      **
C               **  CARRY OUT CLOSING OPERATIONS  **
C               **  ON THE GRAPHICS DEVICES       **
C               ************************************
C
      ICOPSW='OFF'
      NUMCOP=0
      CALL DPCLPL(ICOPSW,NUMCOP,
     1PGRAXF,PGRAYF,
     1IGRASW,PDIAXC,PDIAYC,PDIAX2,PDIAY2,
     1PDIAHE,PDIAWI,PDIAVG,PDIAHG)
C
      CALL DPCLDE
C
 8000 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'POIN')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPOIN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ILOCFN,NUMNUM
 9012   FORMAT('ILOCFN,NUMNUM = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)X1,Y1
 9013   FORMAT('X1,Y1 = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)PXSTAR,PYSTAR,PXEND,PYEND
 9015   FORMAT('PXSTAR,PYSTAR,PXEND,PYEND = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9027)IFOUND,IERROR
 9027   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPOIS(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  CLLIMI,CLWIDT,
     1                  IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE ONE OF THE FOLLOWING PLOTS:
C              POISSON PLOT Y X
C              POISSON PLOT Y
C              NEGATIVE BINOMIAL PLOT Y X
C              NEGATIVE BINOMIAL PLOT Y
C              BINOMIAL PLOT Y X
C              BINOMIAL PLOT Y
C              GEOMETRIC PLOT Y X
C              GEOMETRIC PLOT Y
C              LOGARITHMIC SERIES PLOT Y X
C              LOGARITHMIC SERIES PLOT Y
C     REFERENCE--MICHAEL FRIENDLY (200), "VISUALIZING CATEGORICAL
C                DATA", SAS PUBLISHING, PP. 49-56.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATROY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/5
C     ORIGINAL VERSION--MAY       2007.
C     UPDATED         --JANUARY   2012. USE DPPARS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IDATSW
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISTEPN
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IH
      CHARACTER*4 IH2
C
      CHARACTER*20 IDIST
C
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=10)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      DIMENSION CLLIMI(*)
      DIMENSION CLWIDT(*)
C
      DIMENSION Y1(MAXOBV)
      DIMENSION X1(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION TEMP4(MAXOBV)
      DIMENSION WEIGHH(MAXOBV)
      DIMENSION WEIGHV(MAXOBV)
C
      EQUIVALENCE (GARBAG(IGARB1),X1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y1(1))
      EQUIVALENCE (GARBAG(IGARB3),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB4),TEMP2(1))
      EQUIVALENCE (GARBAG(IGARB5),TEMP3(1))
      EQUIVALENCE (GARBAG(IGARB6),TEMP4(1))
      EQUIVALENCE (GARBAG(IGARB7),WEIGHH(1))
      EQUIVALENCE (GARBAG(IGARB8),WEIGHV(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPPO'
      ISUBN2='IS  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ************************************
C               **  TREAT THE POISSON       PLOT  **
C               ************************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'POIS ')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPOIS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2
   52   FORMAT('ICASPL,IAND1,IAND2 = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ,ISUBRO
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',A4,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'POIS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICOM.EQ.'POIS' .AND. IHARG(1).EQ.'PLOT')THEN
        ILASTC=1
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
        ICASPL='POIS'
        IDIST='POISSON'
      ELSEIF(ICOM.EQ.'GEOM' .AND. IHARG(1).EQ.'PLOT')THEN
        ILASTC=1
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
        ICASPL='GEOM'
        IDIST='GEOMETRIC'
      ELSEIF(ICOM.EQ.'BINO' .AND. IHARG(1).EQ.'PLOT')THEN
        ILASTC=1
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
        ICASPL='BINO'
        IDIST='BINOMIAL'
      ELSEIF(ICOM.EQ.'LOGA' .AND. IHARG(1).EQ.'SERI' .AND.
     1       IHARG(2).EQ.'PLOT')THEN
        ILASTC=2
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
        ICASPL='LOGS'
        IDIST='LOGARITHMIC SERIES'
      ELSEIF(ICOM.EQ.'NEGA' .AND. IHARG(1).EQ.'BINO' .AND.
     1       IHARG(2).EQ.'PLOT')THEN
        ILASTC=2
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
        IFOUND='YES'
        ICASPL='NBIN'
        IDIST='NEGATIVE BINOMIAL'
      ELSE
        IFOUND='NO'
        GOTO9000
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'POIS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME(1:20)=IDIST(1:20)
      INAME(21:25)=' PLOT'
      MINNA=1
      MAXNA=100
      MINN2=1
      IFLAGE=1
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=2
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'POIS')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      ICOL=1
      IF(NUMVAR.EQ.1)THEN
        IDATSW='RAW'
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              X1,X1,X1,NLOCAL,NLOCAL,NLOCAL,ICASE,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
      ELSE
        IDATSW='FREQ'
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y1,X1,X1,NLOCAL,NLOCAL,NLOCAL,ICASE,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
      ENDIF
      IF(IERROR.EQ.'YES')GOTO9000
C
C               ****************************************************
C               **  STEP 7--                                      **
C               **  DETERMINE IF THE ANALYST                      **
C               **  HAS SPECIFIED    1)  THE CLASS WIDTH,         **
C               **                   2)  THE MIN POINT OF THE     **
C               **                       FIRST CELL,              **
C               **                   3)  THE MAX POINT OF THE     **
C               **                       LAST  CELL,              **
C               **  FOR THE DISTRIBUTIONAL ANALYSIS.              **
C               **  IF NON-DEFAULT, USE THE SPECIFIED VALUES.     **
C               **  IF DEFAULT, USE THE DEFAULT VALUES--          **
C               **     1)  CLASS WIDTH = .3 OF A SAMPLE STANDARD  **
C               **         DEVIATION;                             **
C               **     2)  START = SAMPLE MEAN - 6*(SAMPLE        **
C               **         STANDARD DEVIATION);                   **
C               **     3)  STOP  = SAMPLE MEAN + 6*(SAMPLE        **
C               **         STANDARD DEVIATION);                   **
C               **  NOTE THAT THE DEFAULT SETTINGS ARE IN FACT    **
C               ****************************************************
C
      ISTEPN='7'
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'POIS')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CLWID=CLWIDT(1)
      XSTART=CLLIMI(1)
      XSTOP=CLLIMI(2)
C
C               *****************************************************
C               **  STEP 8--                                       **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C               **  RESET THE VECTOR D(.) TO ALL ONES.             **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).  **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).  **
C               *****************************************************
C
      IF(ICASPL.EQ.'LOGS'.AND.IPOILV.EQ.'ON')THEN
        IH='THET'
        IH2='A   '
        IHWUSE='P'
        MESSAG='YES'
        CALL CHECKN(IH,IH2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        THETA=VALUE(ILOCP)
      ELSEIF(ICASPL.EQ.'BINO'.AND.IPOILV.EQ.'ON')THEN
        IH='N   '
        IH2='    '
        IHWUSE='P'
        MESSAG='YES'
        CALL CHECKN(IH,IH2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        NTRIAL=INT(VALUE(ILOCP)+0.5)
      ELSEIF(ICASPL.EQ.'NBIN'.AND.IPOILV.EQ.'ON')THEN
        IH='K   '
        IH2='    '
        IHWUSE='P'
        MESSAG='YES'
        CALL CHECKN(IH,IH2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        AKNB=VALUE(ILOCP)
      ENDIF
C
      CALL DPPOIZ(Y1,X1,NLOCAL,NUMVAR,
     1            WEIGHH,WEIGHV,TEMP1,TEMP2,TEMP3,TEMP4,
     1            IDATSW,ICASPL,IPOILV,
     1            THETA,NTRIAL,AKNB,
     1            PPA0,PPA1,PPA0AD,PPA1AD,
     1            ALMBPP,ALMBP2,PPP,PP2,THETPP,THETP2,
     1            Y,X,D,NPLOTP,NPLOTV,ISUBRO,IBUGG3,IERROR)
C
      IH='PPA0'
      IH2='    '
      VALUE0=PPA0
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGG3,IERROR)
C
      IH='PPA1'
      IH2='    '
      VALUE0=PPA1
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGG3,IERROR)
C
      IH='PPA0'
      IH2='ADJU'
      VALUE0=PPA0AD
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGG3,IERROR)
C
      IH='PPA1'
      IH2='ADJU'
      VALUE0=PPA1AD
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGG3,IERROR)
C
      IF(ICASPL.EQ.'POIS')THEN
        IH='LAMB'
        IH2='DAPP'
        VALUE0=ALMBPP
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
        IH='LAMB'
        IH2='DAPA'
        VALUE0=ALMBP2
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
      ENDIF
C
      IF(ICASPL.EQ.'GEOM' .OR. ICASPL.EQ.'BINO' .OR.
     1   ICASPL.EQ.'NBIN')THEN
        IH='PPP '
        IH2='    '
        VALUE0=PPP
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
        IH='PPPA'
        IH2='DJ  '
        VALUE0=PP2
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
      ENDIF
C
      IF(ICASPL.EQ.'LOGS')THEN
        IH='THET'
        IH2='APP '
        VALUE0=THETPP
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
        IH='THET'
        IH2='APPA'
        VALUE0=THETP2
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'POIS')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPOIS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR,CLWID,XSTART,XSTOP
 9012   FORMAT('IFOUND,IERROR,CLWID,XSTART,XSTOP = ',2(A4,2X),3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',3I8,3(2X,A4))
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.GE.1)THEN
          DO9015I=1,NPLOTP
            WRITE(ICOUT,9016)I,Y(I),X(I),D(I)
 9016       FORMAT('I,Y(I),X(I),D(I) = ',I8,3G15.7)
            CALL DPWRST('XXX','BUG ')
 9015     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPOIZ(Y,X,N,NVAR,
     1                  WEIGHH,WEIGHV,TEMP1,TEMP2,TEMP3,TEMP4,
     1                  IDATSW,ICASPL,IPOILV,
     1                  THETA,NTRIAL,AKNB,
     1                  PPA0,PPA1,PPA0AD,PPA1AD,
     1                  ALMBPP,ALMBP2,PPP,PP2,THETPP,THETP2,
     1                  Y2,X2,D2,N2,NPLOTV,ISUBRO,IBUGG3,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE A POISSON PLOT
C     REFERENCE--MICHAEL FRIENDLY (200), "VISUALIZING CATEGORICAL
C                DATA", SAS PUBLISHING, PP. 49-56.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATROY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/5
C     ORIGINAL VERSION--MAY       2007.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IDATSW
      CHARACTER*4 ICASPL
      CHARACTER*4 IPOILV
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGG3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 IRELAT
      CHARACTER*4 IRHSTG
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DOUBLE PRECISION DTERM1
      DOUBLE PRECISION DTERM2
      DOUBLE PRECISION DTERM3
C
      DOUBLE PRECISION DLNGAM
      DOUBLE PRECISION DBINLN
C
      EXTERNAL DLNGAM
      EXTERNAL DBINLN
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION WEIGHH(*)
      DIMENSION WEIGHV(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
      DIMENSION TEMP3(*)
      DIMENSION TEMP4(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPO'
      ISUBN2='IZ  '
      IWRITE='OFF'
      IERROR='NO'
C
      ALAMB=CPUMIN
      NTOT=0
      NTEMP=0
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('***** AT THE BEGINNING OF DPPOIZ--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)N,NVAR,NPLOTV,IDATSW
   72   FORMAT('N,NVAR,NPLOTV,IDATSW = ',3I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO73I=1,N
          WRITE(ICOUT,74)I,Y(I),X(I)
   74     FORMAT('I, Y(I), X(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   73   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='11'
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NVAR.EQ.1)THEN
        HOLD=Y(1)
        DO1135I=2,N
          IF(Y(I).NE.HOLD)GOTO1139
 1135   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1111)
 1111   FORMAT('***** ERROR IN POISSON PLOT--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1133)HOLD
 1133   FORMAT('      HAS ALL ELEMENTS = ',G15.7)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
 1139   CONTINUE
C
        DO1145I=1,N
          IF(Y(I).LT.0.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,1111)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,1148)I,Y(I)
 1148       FORMAT('      ROW ',I8,' IS NON-POSITIVE (VALUE = ',
     1             G15.7,')')
            CALL DPWRST('XXX','WRIT')
            IERROR='YES'
            GOTO9000
          ENDIF
 1145   CONTINUE
C
        CALL SORT(Y,N,TEMP2)
        DO1160I=1,N
          Y(I)=TEMP2(I)
 1160   CONTINUE
C
        CALL MEAN(Y,N,IWRITE,XMEAN,IBUGG3,IERROR)
        IF(ICASPL.EQ.'POIS')THEN
          ALAMB=XMEAN
        ELSEIF(ICASPL.EQ.'GEOM')THEN
          PML=1.0/(XMEAN+1.0)
        ELSEIF(ICASPL.EQ.'BINO')THEN
          PML=XMEAN/REAL(NTRIAL)
        ELSEIF(ICASPL.EQ.'NBIN')THEN
          CALL SD(Y,N,IWRITE,XSD,IBUGG3,IERROR)
          KNB=INT(AKNB+0.5)
          AKNB=REAL(KNB)
          AKMOM=XMEAN*XMEAN/(XSD*XSD - XMEAN)
          PMOM=((XSD*XSD/XMEAN) - 1.0)
C
          PML=0.0
          IF(AKNB.GT.0.0)THEN
            PML=AKNB/(XMEAN+AKNB)
            IF(AKNB.GE.2.0)THEN
              PML=(AKNB-1.0)/(XMEAN+AKNB-1.0)
            ENDIF
          ELSE
            PML=AKMOM/(XMEAN+AKMOM)
            IF(AKMOM.GE.2.0)THEN
              PML=(AKMOM-1.0)/(XMEAN+AKMOM-1.0)
            ENDIF
            AKNB=AKMOM
          ENDIF
C
        ELSEIF(ICASPL.EQ.'LOGS')THEN
        ENDIF
C
        IRELAT='OFF'
        IRHSTG='OFF'
        XMIN=Y(1)
        XMAX=Y(N)
        XSTART=XMIN-0.5
        XSTOP=XMAX+0.5
        CLWID=1.0
        CALL DPBINI(Y,N,IRELAT,CLWID,XSTART,XSTOP,IRHSTG,
     1              TEMP2,TEMP1,N2,IBUGG3,IERROR)
        NTOT=N
        ICNT=0
        DO101I=1,N2
          IF(TEMP2(I).GT.0)THEN
            ICNT=ICNT+1
            Y(ICNT)=TEMP2(I)
            X(ICNT)=TEMP1(I)
          ENDIF
 101    CONTINUE
        N2=ICNT
        IF(IERROR.EQ.'YES')GOTO9000
C
      ELSEIF(NVAR.EQ.2)THEN
C
        CALL WEMEAN(X,Y,N,IWRITE,XMEAN,IBUGG3,IERROR)
C
        IF(ICASPL.EQ.'POIS')THEN
          ALAMB=XMEAN
        ELSEIF(ICASPL.EQ.'GEOM')THEN
          PML=1.0/(XMEAN+1.0)
        ELSEIF(ICASPL.EQ.'BINO')THEN
          PML=XMEAN/REAL(NTRIAL)
        ELSEIF(ICASPL.EQ.'NBIN')THEN
          CALL WESD(X,Y,N,IWRITE,XSD,IBUGG3,IERROR)
          KNB=INT(AKNB+0.5)
          AKNB=REAL(KNB)
          AKMOM=XMEAN*XMEAN/(XSD*XSD - XMEAN)
          PMOM=((XSD*XSD/XMEAN) - 1.0)
C
          PML=0.0
          IF(AKNB.GT.0.0)THEN
            PML=AKNB/(XMEAN+AKNB)
            IF(AKNB.GE.2.0)THEN
              PML=(AKNB-1.0)/(XMEAN+AKNB-1.0)
            ENDIF
          ELSE
            PML=AKMOM/(XMEAN+AKMOM)
            IF(AKMOM.GE.2.0)THEN
              PML=(AKMOM-1.0)/(XMEAN+AKMOM-1.0)
            ENDIF
            AKNB=AKMOM
          ENDIF
C
        ELSEIF(ICASPL.EQ.'LOGS')THEN
        ENDIF
C
        CALL SORTC(X,Y,N,TEMP1,TEMP2)
        NTOT=0
        DO1210I=1,N
          X(I)=TEMP1(I)
          Y(I)=TEMP2(I)
          NTOT=NTOT + INT(Y(I) + 0.1)
 1210   CONTINUE
        N2=N
C
        DO1220I=1,N
          IF(Y(I).LT.0.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,1111)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,1223)
 1223       FORMAT('      A NEGATIVE FREQUENCY WAS SPECIFIED.')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,1225)I,Y(I)
 1225       FORMAT('      ROW ',I8,' (AFTER SORTING) HAS FREQUENCY ',
     1             G15.7)
            CALL DPWRST('XXX','WRIT')
          ENDIF
 1220   CONTINUE
      ENDIF
C
      IF(ICASPL.EQ.'BINO')THEN
        DO1310I=1,N2
          IF(NTRIAL.LT.INT(Y2(I)+0.1))THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,1111)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,1311)
 1311       FORMAT('      FOR THE BINOMIAL PLOT, THE NUMBER OF TRIALS')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,1313)NTRIAL
 1313       FORMAT('      PARAMETER, ',I8,' IS LESS THAT THE')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,1315)INT(X2(I)+0.1)
 1315       FORMAT('      FREQUENCY FOR CLASS ',I8)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,1317)INT(X2(I)+0.1),INT(Y2(I)+0.1)
 1317       FORMAT('      THE FREQUENCY FOR CLASS ',I8,' = ',G15.7)
            CALL DPWRST('XXX','WRIT')
            IERROR='YES'
            GOTO9000
          ENDIF
 1310   CONTINUE
      ELSEIF(ICASPL.EQ.'NBIN')THEN
        KNB=INT(AKNB+0.5)
        IF(KNB.LE.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1111)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1321)
 1321     FORMAT('      FOR THE NEGATIVE BINOMIAL PLOT, THE SHAPE')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1323)
 1323     FORMAT('      PARAMETER, K, IS NON-POSITIVE.')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1325)KNB
 1325     FORMAT('      THE VALUE OF THE SHAPE PARAMETER = ',I8)
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
C               ****************************************************
C               **  STEP 2.0--                                    **
C               **  GENERATE                                      **
C               **  A) POISSON PLOT:                              **
C               **     PLOT LOG(K!*N(K)/N) VERSUS K               **
C               **  B) BINOMIAL PLOT:                             **
C               **  C) NEGATIVE BINOMIAL PLOT:                    **
C               **  D) LOGARITHMIC SERIES PLOT:                   **
C               ****************************************************
C
      ISTEPN='2'
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASPL.EQ.'POIS')THEN
        ICNT=0
        DTERM1=DLOG(DBLE(NTOT))
        DO2000I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          IF(ANK.GT.0.0)THEN
            ICNT=ICNT+1
            DTERM2=DLOG(DBLE(ANK))
            IF(IK.EQ.0 .OR. IK.EQ.1)THEN
              DTERM3=DLOG(1.0D0)
            ELSEIF(IK.EQ.2)THEN
              DTERM3=DLOG(2.0D0)
            ELSE
              DTERM3=DLNGAM(DBLE(AK+1.0))
            ENDIF
            Y2(ICNT)=REAL(DTERM2 + DTERM3 - DTERM1)
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=ALAMB - AK*LOG(ALAMB)
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=1.0
            WEIGHH(ICNT)=1.0
            WEIGHV(ICNT)=1.0
          ENDIF
C
          IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')THEN
            WRITE(ICOUT,2011)I,AK,ANK
 2011       FORMAT('I,AK,ANK = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2012)DTERM1,DTERM2,DTERM3
 2012       FORMAT('DTERM1,DTERM2,DTERM3 = ',3G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2013)ICNT,Y2(ICNT),X2(ICNT)
 2013       FORMAT('ICNT,Y2(ICNT),X2(ICNT) = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
 2000   CONTINUE
        NTEMP=ICNT
C
      ELSEIF(ICASPL.EQ.'GEOM')THEN
        ICNT=0
        DTERM1=DLOG(DBLE(NTOT))
        DO2100I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          IF(ANK.GT.0.0)THEN
            ICNT=ICNT+1
            DTERM2=DLOG(DBLE(ANK))
            Y2(ICNT)=REAL(DTERM2 - DTERM1)
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(LOG(PML) + AK*LOG(1.0 - PML))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=1.0
            WEIGHH(ICNT)=1.0
            WEIGHV(ICNT)=1.0
          ENDIF
C
          IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')THEN
            WRITE(ICOUT,2111)I,AK,ANK,PML
 2111       FORMAT('I,AK,ANK,PML = ',I8,3G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2112)DTERM1,DTERM2
 2112       FORMAT('DTERM1,DTERM2 = ',2G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2113)ICNT,Y2(ICNT),X2(ICNT)
 2113       FORMAT('ICNT,Y2(ICNT),X2(ICNT) = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
 2100   CONTINUE
        NTEMP=ICNT
C
      ELSEIF(ICASPL.EQ.'BINO')THEN
        ICNT=0
        DTERM1=DLOG(DBLE(NTOT))
        DO2200I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          INK=INT(ANK+0.1)
          IF(ANK.GT.0.0)THEN
            ICNT=ICNT+1
            DTERM2=DLOG(DBLE(ANK))
            ITEMP1=NTRIAL
            ITEMP2=IK
            DTERM3=DBINLN(ITEMP1,ITEMP2)
            Y2(ICNT)=REAL(DTERM2 - DTERM1 - DTERM3)
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(REAL(NTRIAL)*LOG(1.0-PML) +
     1                AK*LOG(PML/(1.0-PML)))
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=1.0
            WEIGHH(ICNT)=1.0
            WEIGHV(ICNT)=1.0
          ENDIF
C
          IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')THEN
            WRITE(ICOUT,2211)I,NTRIAL,AK,ANK,PML
 2211       FORMAT('I,NTRIAL,AK,ANK,PML = ',2I8,3G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2212)DTERM1,DTERM2,DTERM3,ATEMP2
 2212       FORMAT('DTERM1,DTERM2,DTERM3,ATEMP2 = ',4G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2213)ICNT,Y2(ICNT),X2(ICNT)
 2213       FORMAT('ICNT,Y2(ICNT),X2(ICNT) = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
 2200   CONTINUE
        NTEMP=ICNT
C
      ELSEIF(ICASPL.EQ.'NBIN')THEN
        ICNT=0
        DTERM1=DLOG(DBLE(NTOT))
        DO2300I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          INK=INT(ANK+0.1)
          IF(ANK.GT.0.0)THEN
            ICNT=ICNT+1
            DTERM2=DLOG(DBLE(ANK))
            ITEMP1=KNB+IK-1
            ITEMP2=IK
            DTERM3=DBINLN(ITEMP1,ITEMP2)
            Y2(ICNT)=REAL(DTERM2 - DTERM1 - DTERM3)
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(REAL(KNB)*LOG(PML) + AK*LOG(1.0-PML))
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=1.0
            WEIGHH(ICNT)=1.0
            WEIGHV(ICNT)=1.0
          ENDIF
C
          IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')THEN
            WRITE(ICOUT,2311)I,NTRIAL,AK,ANK,PML
 2311       FORMAT('I,NTRIAL,AK,ANK,PML = ',2I8,3G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2312)DTERM1,DTERM2,DTERM3,ATEMP2
 2312       FORMAT('DTERM1,DTERM2,DTERM3,ATEMP2 = ',4G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2313)ICNT,Y2(ICNT),X2(ICNT)
 2313       FORMAT('ICNT,Y2(ICNT),X2(ICNT) = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
 2300   CONTINUE
        NTEMP=ICNT
C
      ELSEIF(ICASPL.EQ.'LOGS')THEN
        ICNT=0
        DTERM1=DLOG(DBLE(NTOT))
        DO2400I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          IF(ANK.GT.0.0)THEN
            ICNT=ICNT+1
            DTERM2=DLOG(DBLE(ANK))
            DTERM3=DLOG(DBLE(AK))
            Y2(ICNT)=REAL(DTERM2 + DTERM3 - DTERM1)
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(-LOG(-LOG(1.0 - THETA)) + AK*LOG(THETA))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=1.0
            WEIGHH(ICNT)=1.0
            WEIGHV(ICNT)=1.0
          ENDIF
C
          IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')THEN
            WRITE(ICOUT,2411)I,AK,ANK,PML
 2411       FORMAT('I,AK,ANK,PML = ',I8,3G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2412)DTERM1,DTERM2
 2412       FORMAT('DTERM1,DTERM2 = ',2G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,2413)ICNT,Y2(ICNT),X2(ICNT)
 2413       FORMAT('ICNT,Y2(ICNT),X2(ICNT) = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
 2400   CONTINUE
        NTEMP=ICNT
C
      ENDIF
C
C               ****************************************************
C               **  STEP 3.0--                                    **
C               **  NOW FIT A LINE TO THE POINTS ON THE PLOT.     **
C               **  USE FRIENDLY'S SUGGESTION OF WEIGHTING THE    **
C               **  POINTS WITH SQRT(N(K) - 1)                    **
C               ****************************************************
C
      ISTEPN='3'
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IT=1
      I1=1
      I2=NTEMP
      I3=1
      I4=NTEMP
      XMAXHF=1.0
C
      CALL LINEAR(IT,I1,I2,X2,Y2,WEIGHH,WEIGHV,NTEMP,XMAXHF,I3,I4,
     1            PPA0,PPA1,TEMP1,TEMP2,
     1            ISUBRO,IBUGG3,IERROR)
C
      DO3010I=1,NTEMP
        ICNT=ICNT+1
        Y2(ICNT)=TEMP1(I)
        X2(ICNT)=X2(I)
        D2(ICNT)=2.0
 3010 CONTINUE
C
C     NOW COMPUTE THE APPROXIMATE CONFIDENCE INTERVALS
C
      ICNT2=0
C
      IF(ICASPL.EQ.'POIS')THEN
        DTERM1=DLOG(DBLE(NTOT))
        AN=REAL(NTOT)
        DO3100I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          INK=INT(ANK+0.1)
          IF(INK.GE.2)THEN
            ANKST=ANK - (0.8*ANK/AN) - 0.67
          ELSEIF(INK.EQ.1)THEN
            ANKST=1.0/EXP(1.0)
          ENDIF
          IF(ANK.GT.0.0)THEN
            ICNT=ICNT+1
            DTERM2=DLOG(DBLE(ANKST))
            IF(IK.EQ.0 .OR. IK.EQ.1)THEN
              DTERM3=DLOG(1.0D0)
            ELSEIF(IK.EQ.2)THEN
              DTERM3=DLOG(2.0D0)
            ELSE
              DTERM3=DLNGAM(DBLE(AK+1.0))
            ENDIF
            Y2(ICNT)=REAL(DTERM2 + DTERM3 - DTERM1)
            ATEMP=Y2(ICNT)
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=ALAMB - AK*LOG(ALAMB)
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=3.0
C
            ICNT2=ICNT2+1
            TEMP1(ICNT2)=Y2(ICNT)
            TEMP2(ICNT2)=X2(ICNT)
C
            PK=ANK/REAL(NTOT)
            ANUM=SQRT(1.0 - PK)
            ADEN=SQRT(ANK - (0.25*PK + 0.47)*SQRT(ANK))
            HK=1.96*ANUM/ADEN
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP + HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=ALAMB - AK*LOG(ALAMB)
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=5.0
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP - HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=ALAMB - AK*LOG(ALAMB)
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=6.0
          ENDIF
 3100   CONTINUE
C
        ITAG=6
        DTERM1=DLOG(DBLE(NTOT))
        AN=REAL(NTOT)
        DO3110I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          INK=INT(ANK+0.1)
          IF(INK.GE.2)THEN
            ANKST=ANK - (0.8*ANK/AN) - 0.67
          ELSEIF(INK.EQ.1)THEN
            ANKST=1.0/EXP(1.0)
          ENDIF
          IF(ANK.GT.0.0)THEN
            ITAG=ITAG+1
            DTERM2=DLOG(DBLE(ANKST))
            IF(IK.EQ.0 .OR. IK.EQ.1)THEN
              DTERM3=DLOG(1.0D0)
            ELSEIF(IK.EQ.2)THEN
              DTERM3=DLOG(2.0D0)
            ELSE
              DTERM3=DLNGAM(DBLE(AK+1.0))
            ENDIF
            ATEMP=REAL(DTERM2 + DTERM3 - DTERM1)
            PK=ANK/REAL(NTOT)
            ANUM=SQRT(1.0 - PK)
            ADEN=SQRT(ANK - (0.25*PK + 0.47)*SQRT(ANK))
            HK=1.96*ANUM/ADEN
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP + HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=ALAMB - AK*LOG(ALAMB)
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=REAL(ITAG)
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP - HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=ALAMB - AK*LOG(ALAMB)
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=REAL(ITAG)
          ENDIF
C
 3110   CONTINUE
        N2=ICNT
C
      ELSEIF(ICASPL.EQ.'GEOM')THEN
        DTERM1=DLOG(DBLE(NTOT))
        AN=REAL(NTOT)
        DO3200I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          INK=INT(ANK+0.1)
          IF(INK.GE.2)THEN
            ANKST=ANK - (0.8*ANK/AN) - 0.67
          ELSEIF(INK.EQ.1)THEN
            ANKST=1.0/EXP(1.0)
          ENDIF
          IF(ANK.GT.0.0)THEN
            ICNT=ICNT+1
            DTERM2=DLOG(DBLE(ANKST))
            Y2(ICNT)=REAL(DTERM2 - DTERM1)
            ATEMP=Y2(ICNT)
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(LOG(PML) + AK*LOG(1.0 - PML))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=3.0
C
            ICNT2=ICNT2+1
            TEMP1(ICNT2)=Y2(ICNT)
            TEMP2(ICNT2)=X2(ICNT)
C
            PK=ANK/REAL(NTOT)
            ANUM=SQRT(1.0 - PK)
            ADEN=SQRT(ANK - (0.25*PK + 0.47)*SQRT(ANK))
            HK=1.96*ANUM/ADEN
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP + HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(LOG(PML) + AK*LOG(1.0 - PML))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=5.0
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP - HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(LOG(PML) + AK*LOG(1.0 - PML))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=6.0
          ENDIF
 3200   CONTINUE
C
        ITAG=6
        DTERM1=DLOG(DBLE(NTOT))
        AN=REAL(NTOT)
        DO3210I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          INK=INT(ANK+0.1)
          IF(INK.GE.2)THEN
            ANKST=ANK - (0.8*ANK/AN) - 0.67
          ELSEIF(INK.EQ.1)THEN
            ANKST=1.0/EXP(1.0)
          ENDIF
          IF(ANK.GT.0.0)THEN
            ITAG=ITAG+1
            DTERM2=DLOG(DBLE(ANKST))
            DTERM3=DBINLN(NTRIAL,IK)
            ATEMP=REAL(DTERM2 - DTERM1 - DTERM3)
            PK=ANK/REAL(NTOT)
            ANUM=SQRT(1.0 - PK)
            ADEN=SQRT(ANK - (0.25*PK + 0.47)*SQRT(ANK))
            HK=1.96*ANUM/ADEN
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP + HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(LOG(PML) + AK*LOG(1.0 - PML))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=REAL(ITAG)
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP - HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(LOG(PML) + AK*LOG(1.0 - PML))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=REAL(ITAG)
          ENDIF
C
 3210   CONTINUE
        N2=ICNT
C
      ELSEIF(ICASPL.EQ.'BINO')THEN
        DTERM1=DLOG(DBLE(NTOT))
        AN=REAL(NTOT)
        DO3300I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          INK=INT(ANK+0.1)
          IF(INK.GE.2)THEN
            ANKST=ANK - (0.8*ANK/AN) - 0.67
          ELSEIF(INK.EQ.1)THEN
            ANKST=1.0/EXP(1.0)
          ENDIF
          IF(ANK.GT.0.0)THEN
            ICNT=ICNT+1
            DTERM2=DLOG(DBLE(ANKST))
            DTERM3=DBINLN(NTRIAL,IK)
            Y2(ICNT)=REAL(DTERM2 - DTERM1 - DTERM3)
            ATEMP=Y2(ICNT)
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(REAL(NTRIAL)*LOG(1.0-PML) +
     1                AK*LOG(PML/(1.0-PML)))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=3.0
C
            ICNT2=ICNT2+1
            TEMP1(ICNT2)=Y2(ICNT)
            TEMP2(ICNT2)=X2(ICNT)
C
            IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')THEN
              WRITE(ICOUT,3311)I,NTRIAL,AK,ANKST,PML
 3311         FORMAT('I,NTRIAL,AK,ANKST,PML = ',2I8,3G15.7)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3312)DTERM1,DTERM2,DTERM3,ATEMP2
 3312         FORMAT('DTERM1,DTERM2,DTERM3,ATEMP2 = ',4G15.7)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3313)ICNT,Y2(ICNT),X2(ICNT)
 3313         FORMAT('ICNT,Y2(ICNT),X2(ICNT) = ',I8,2G15.7)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            PK=ANK/REAL(NTOT)
            ANUM=SQRT(1.0 - PK)
            ADEN=SQRT(ANK - (0.25*PK + 0.47)*SQRT(ANK))
            HK=1.96*ANUM/ADEN
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP + HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(REAL(NTRIAL)*LOG(1.0-PML) +
     1                AK*LOG(PML/(1.0-PML)))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=5.0
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP - HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(REAL(NTRIAL)*LOG(1.0-PML) +
     1                AK*LOG(PML/(1.0-PML)))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=6.0
C
            IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')THEN
              WRITE(ICOUT,3321)PK,ANUM,ADEN,HK
 3321         FORMAT('PK,ANUM,ADEN,HK = ',4G15.7)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
          ENDIF
 3300   CONTINUE
C
        ITAG=6
        DTERM1=DLOG(DBLE(NTOT))
        AN=REAL(NTOT)
        DO3310I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          INK=INT(ANK+0.1)
          IF(INK.GE.2)THEN
            ANKST=ANK - (0.8*ANK/AN) - 0.67
          ELSEIF(INK.EQ.1)THEN
            ANKST=1.0/EXP(1.0)
          ENDIF
          IF(ANK.GT.0.0)THEN
            ITAG=ITAG+1
            DTERM2=DLOG(DBLE(ANKST))
            DTERM3=DBINLN(NTRIAL,IK)
            ATEMP=REAL(DTERM2 - DTERM1 - DTERM3)
            PK=ANK/REAL(NTOT)
            ANUM=SQRT(1.0 - PK)
            ADEN=SQRT(ANK - (0.25*PK + 0.47)*SQRT(ANK))
            HK=1.96*ANUM/ADEN
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP + HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(REAL(NTRIAL)*LOG(1.0-PML) +
     1                AK*LOG(PML/(1.0-PML)))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=REAL(ITAG)
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP - HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(REAL(NTRIAL)*LOG(1.0-PML) +
     1                AK*LOG(PML/(1.0-PML)))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=REAL(ITAG)
          ENDIF
C
 3310   CONTINUE
        N2=ICNT
C
      ELSEIF(ICASPL.EQ.'NBIN')THEN
        DTERM1=DLOG(DBLE(NTOT))
        AN=REAL(NTOT)
        DO3400I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          INK=INT(ANK+0.1)
          IF(INK.GE.2)THEN
            ANKST=ANK - (0.8*ANK/AN) - 0.67
          ELSEIF(INK.EQ.1)THEN
            ANKST=1.0/EXP(1.0)
          ENDIF
          IF(ANK.GT.0.0)THEN
            ICNT=ICNT+1
            DTERM2=DLOG(DBLE(ANKST))
            ITEMP1=KNB+IK-1
            ITEMP2=IK
            DTERM3=DBINLN(ITEMP1,ITEMP2)
            Y2(ICNT)=REAL(DTERM2 - DTERM1 - DTERM3)
            ATEMP=Y2(ICNT)
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(REAL(KNB)*LOG(PML) + AK*LOG(1.0-PML))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=3.0
C
            ICNT2=ICNT2+1
            TEMP1(ICNT2)=Y2(ICNT)
            TEMP2(ICNT2)=X2(ICNT)
C
            IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')THEN
              WRITE(ICOUT,3411)I,KNB,AK,ANKST,PML
 3411         FORMAT('I,KNB,AK,ANKST,PML = ',2I8,3G15.7)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3412)DTERM1,DTERM2,DTERM3,ATEMP2
 3412         FORMAT('DTERM1,DTERM2,DTERM3,ATEMP2 = ',4G15.7)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,3413)ICNT,Y2(ICNT),X2(ICNT)
 3413         FORMAT('ICNT,Y2(ICNT),X2(ICNT) = ',I8,2G15.7)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            PK=ANK/REAL(NTOT)
            ANUM=SQRT(1.0 - PK)
            ADEN=SQRT(ANK - (0.25*PK + 0.47)*SQRT(ANK))
            HK=1.96*ANUM/ADEN
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP + HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(REAL(KNB)*LOG(PML) + AK*LOG(1.0-PML))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=5.0
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP - HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(REAL(KNB)*LOG(PML) + AK*LOG(1.0-PML))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=6.0
C
            IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')THEN
              WRITE(ICOUT,3421)PK,ANUM,ADEN,HK
 3421         FORMAT('PK,ANUM,ADEN,HK = ',4G15.7)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
          ENDIF
 3400   CONTINUE
C
        ITAG=6
        DTERM1=DLOG(DBLE(NTOT))
        AN=REAL(NTOT)
        DO3410I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          INK=INT(ANK+0.1)
          IF(INK.GE.2)THEN
            ANKST=ANK - (0.8*ANK/AN) - 0.67
          ELSEIF(INK.EQ.1)THEN
            ANKST=1.0/EXP(1.0)
          ENDIF
          IF(ANK.GT.0.0)THEN
            ITAG=ITAG+1
            DTERM2=DLOG(DBLE(ANKST))
            ITEMP1=KNB+IK-1
            ITEMP2=IK
            DTERM3=DBINLN(ITEMP1,ITEMP2)
            ATEMP=REAL(DTERM2 - DTERM1 - DTERM3)
            PK=ANK/REAL(NTOT)
            ANUM=SQRT(1.0 - PK)
            ADEN=SQRT(ANK - (0.25*PK + 0.47)*SQRT(ANK))
            HK=1.96*ANUM/ADEN
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP + HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(REAL(KNB)*LOG(PML) + AK*LOG(1.0-PML))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=REAL(ITAG)
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP - HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(REAL(KNB)*LOG(PML) + AK*LOG(1.0-PML))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=REAL(ITAG)
          ENDIF
C
 3410   CONTINUE
        N2=ICNT
      ELSEIF(ICASPL.EQ.'LOGS')THEN
        DTERM1=DLOG(DBLE(NTOT))
        AN=REAL(NTOT)
        DO3500I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          INK=INT(ANK+0.1)
          IF(INK.GE.2)THEN
            ANKST=ANK - (0.8*ANK/AN) - 0.67
          ELSEIF(INK.EQ.1)THEN
            ANKST=1.0/EXP(1.0)
          ENDIF
          IF(ANK.GT.0.0)THEN
            ICNT=ICNT+1
            DTERM2=DLOG(DBLE(ANKST))
            DTERM3=DLOG(DBLE(AK))
            Y2(ICNT)=REAL(DTERM2 + DTERM3 - DTERM1)
            ATEMP=Y2(ICNT)
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(-LOG(-LOG(1.0 - THETA)) + AK*LOG(THETA))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=3.0
C
            ICNT2=ICNT2+1
            TEMP1(ICNT2)=Y2(ICNT)
            TEMP2(ICNT2)=X2(ICNT)
C
            PK=ANK/REAL(NTOT)
            ANUM=SQRT(1.0 - PK)
            ADEN=SQRT(ANK - (0.25*PK + 0.47)*SQRT(ANK))
            HK=1.96*ANUM/ADEN
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP + HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(-LOG(-LOG(1.0 - THETA)) + AK*LOG(THETA))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=5.0
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP - HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(-LOG(-LOG(1.0 - THETA)) + AK*LOG(THETA))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=6.0
          ENDIF
 3500   CONTINUE
C
        ITAG=6
        DTERM1=DLOG(DBLE(NTOT))
        AN=REAL(NTOT)
        DO3510I=1,N2
          AK=X(I)
          IK=INT(AK+0.1)
          ANK=Y(I)
          INK=INT(ANK+0.1)
          IF(INK.GE.2)THEN
            ANKST=ANK - (0.8*ANK/AN) - 0.67
          ELSEIF(INK.EQ.1)THEN
            ANKST=1.0/EXP(1.0)
          ENDIF
          IF(ANK.GT.0.0)THEN
            ITAG=ITAG+1
            DTERM2=DLOG(DBLE(ANKST))
            DTERM3=DLOG(DBLE(AK))
            ATEMP=REAL(DTERM2 + DTERM3 - DTERM1)
            PK=ANK/REAL(NTOT)
            ANUM=SQRT(1.0 - PK)
            ADEN=SQRT(ANK - (0.25*PK + 0.47)*SQRT(ANK))
            HK=1.96*ANUM/ADEN
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP + HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(-LOG(-LOG(1.0 - THETA)) + AK*LOG(THETA))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=REAL(ITAG)
            ICNT=ICNT+1
            Y2(ICNT)=ATEMP - HK
C
            IF(IPOILV.EQ.'ON')THEN
              ATEMP2=-(-LOG(-LOG(1.0 - THETA)) + AK*LOG(THETA))
              Y2(ICNT)=Y2(ICNT) + ATEMP2
            ENDIF
C
            X2(ICNT)=AK
            D2(ICNT)=REAL(ITAG)
          ENDIF
C
 3510   CONTINUE
C
      ENDIF
C
      IT=1
      I1=1
      I2=ICNT2
      I3=1
      I4=ICNT2
      XMAXHF=1.0
C
      CALL LINEAR(IT,I1,I2,TEMP2,TEMP1,WEIGHH,WEIGHV,ICNT2,XMAXHF,
     1I3,I4,
     1PPA0AD,PPA1AD,TEMP3,TEMP4,
     1ISUBRO,IBUGG3,IERROR)
C
      DO4010I=1,ICNT2
        ICNT=ICNT+1
        Y2(ICNT)=TEMP3(I)
        X2(ICNT)=X2(I)
        D2(ICNT)=4.0
 4010 CONTINUE
C
      N2=ICNT
C
      IF(ICASPL.EQ.'POIS')THEN
        ALMBPP=EXP(PPA1)
        ALMBP2=EXP(PPA1AD)
      ELSEIF(ICASPL.EQ.'GEOM')THEN
        PPP=1.0 - EXP(PPA1)
        PP2=1.0 - EXP(PPA1AD)
      ELSEIF(ICASPL.EQ.'LOGS')THEN
        THETPP=EXP(PPA1)
        THETP2=EXP(PPA1AD)
      ELSEIF(ICASPL.EQ.'BINO')THEN
        PPP=EXP(PPA1)/(1.0 + EXP(PPA1))
        PP2=EXP(PPA1AD)/(1.0 + EXP(PPA1AD))
      ELSEIF(ICASPL.EQ.'NBIN')THEN
        PPP=1.0 - EXP(PPA1)
        PP2=1.0 - EXP(PPA1AD)
      ENDIF
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'POIZ')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPOIZ--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IDATSW,N2,AN3,DENOM
 9013   FORMAT('IDATSW,N2,AN3,DENOM = ',A4,2X,I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,Y2(I),X2(I),D2(I)
 9016     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPOLY(PXSTAR,PYSTAR,PXEND,PYEND,
     1                  ILINPA,ILINCO,ILINC2,MAXLNZ,PLINTH,
     1                  AREGBA,IREBLI,IREBCO,IREBC2,MAXRGZ,PREBTH,
     1                  IREFSW,IREFCO,IREFC2,
     1                  IREPTY,IREPLI,IREPCO,IREPC2,PREPTH,PREPSP,
     1                  PTEXHE,PTEXWI,PTEXVG,PTEXHG,
     1                  IGRASW,IDIASW,
     1                  PGRAXF,PGRAYF,PDIAXC,PDIAYC,PDIAX2,PDIAY2,
     1                  PDIAHE,PDIAWI,PDIAVG,PDIAHG,
     1                  NUMDEV,IDMANU,IDMODE,IDMOD2,IDMOD3,
     1                  IDPOWE,IDCONT,IDCOLO,IDNVPP,IDNHPP,IDUNIT,
     1                  IDNVOF,IDNHOF,IDFONT,UNITSW,PDSCAL,
     1                  IBACCO,IBACC2,
     1                  IBUGD2,IFOUND,IERROR)
C
C     PURPOSE--DRAW A POLYGON, THE COORDINATES ARE IN STANDARDIZED UNITS
C              OF 0 TO 100.
C     NOTE--THE INPUT COORDINATES ARE AN ARRAY OF X AND Y VALUES
C     INPUT  ARGUMENTS--IHARG
C                     --IARGT
C                     --ARG
C                     --NUMARG
C                     --PXSTAR
C                     --PYSTAR
C     OUTPUT ARGUMENTS--PXEND
C                     --PYEND
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--97/7
C     ORIGINAL VERSION--JULY      1997.
C     UPDATED         --DECEMBER  2018. CHECK FOR DISCRETE, NULL, OR
C                                       NONE DEVICE
C     UPDATED         --DECEMBER  2018. SUPPORT FOR "DEVICE ... SCALE"
C                                       COMMAND
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLOR
C
C-----NON-COMMON VARIABLES-----------------------------------------
C
      CHARACTER*4 ILINPA
      CHARACTER*4 ILINCO
C
      CHARACTER*4 IREBLI
      CHARACTER*4 IREBCO
      CHARACTER*4 IREFSW
      CHARACTER*4 IREFCO
      CHARACTER*4 IREPTY
      CHARACTER*4 IREPLI
      CHARACTER*4 IREPCO
C
      CHARACTER*4 IGRASW
      CHARACTER*4 IDIASW
C
      CHARACTER*4 IDMANU
      CHARACTER*4 IDMODE
      CHARACTER*4 IDMOD2
      CHARACTER*4 IDMOD3
      CHARACTER*4 IDPOWE
      CHARACTER*4 IDCONT
      CHARACTER*4 IDCOLO
      CHARACTER*4 IDFONT
      CHARACTER*4 UNITSW
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IBUGD2
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IERROR
      CHARACTER*4 ISUBRO
C
      CHARACTER*4 IFIG
      CHARACTER*4 IBELSW
      CHARACTER*4 IERASW
      CHARACTER*4 IBACCO
      CHARACTER*4 ICOPSW
      CHARACTER*4 ITYPEO
C
      CHARACTER*4 IHFACT
      CHARACTER*4 IHFAC2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ICASEQ
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      DIMENSION XP(MAXOBV)
      DIMENSION YP(MAXOBV)
C
      DIMENSION ILINPA(*)
      DIMENSION ILINCO(*)
      DIMENSION ILINC2(MAXLNZ,3)
      DIMENSION PLINTH(*)
C
      DIMENSION AREGBA(*)
      DIMENSION IREBLI(*)
      DIMENSION IREBCO(*)
      DIMENSION IREBC2(MAXRGZ,3)
      DIMENSION PREBTH(*)
      DIMENSION IREFSW(*)
      DIMENSION IREFCO(*)
      DIMENSION IREFC2(MAXRGZ,3)
      DIMENSION IREPTY(*)
      DIMENSION IREPLI(*)
      DIMENSION IREPCO(*)
      DIMENSION IREPC2(MAXRGZ,3)
      DIMENSION PREPTH(*)
      DIMENSION PREPSP(*)
      DIMENSION PDSCAL(*)
C
      DIMENSION IDMANU(*)
      DIMENSION IDMODE(*)
      DIMENSION IDMOD2(*)
      DIMENSION IDMOD3(*)
      DIMENSION IDPOWE(*)
      DIMENSION IDCONT(*)
      DIMENSION IDCOLO(*)
CCCCC ADD FOLLOWING LINE MARCH 1997.
      DIMENSION IDFONT(*)
      DIMENSION IDNVPP(*)
      DIMENSION IDNHPP(*)
      DIMENSION IDUNIT(*)
C
      DIMENSION IDNVOF(*)
      DIMENSION IDNHOF(*)
      DIMENSION IBACC2(*)
C
      DIMENSION ICOLIV(2)
      DIMENSION NIV(2)
C
      EQUIVALENCE (GARBAG(IGARB1),XP(1))
      EQUIVALENCE (GARBAG(IGARB2),YP(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOM2.INC'
      INCLUDE 'DPCOGR.INC'
      INCLUDE 'DPCOBE.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='YES'
      IERROR='NO'
      IERRG4=IERROR
      IBUGQ=IBUGD2
      ISUBN1='DPPO'
      ISUBN2='LY  '
C
      ILOCFN=0
      NPTS=0
C
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'POLY')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPOLY--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)NUMARG,NUMDEV,IFIG
   53   FORMAT('NUMARG,NUMDEV,IFIG = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NUMARG
          WRITE(ICOUT,56)I,IHARG(I),IARGT(I),ARG(I)
   56     FORMAT('I,IHARG(I),IARGT(I),ARG(I) = ',I8,2(2X,A4),G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        WRITE(ICOUT,57)PXSTAR,PYSTAR,PXEND,PYEND
   57   FORMAT('PXSTAR,PYSTAR,PXEND,PYEND = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,61)ILINPA(1),ILINCO(1),PLINTH(1)
   61   FORMAT('ILINPA(1),ILINCO(1),PLINTH(1) = ',2(A4,2X),G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,63)IREBLI(1),IREBCO(1),PREBTH(1),AREGBA(1)
   63   FORMAT('IREBLI(1),IREBCO(1),PREBTH(1),AREGBA(1) = ',
     1         2(A4,2X),2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,64)IREFSW(1),IREFCO(1)
   64   FORMAT('IREFSW(1),IREFCO(1) = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,65)IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1)
   65   FORMAT('IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1) = ',
     1         3(A4,2X),2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,69)PTEXHE,PTEXWI,PTEXVG,PTEXHG
   69   FORMAT('PTEXHE,PTEXWI,PTEXVG,PTEXHG = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,76)IGRASW,IDIASW
   76   FORMAT('IGRASW,IDIASW = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,77)PGRAXF,PGRAYF,PDIAXC,PDIAYC
   77   FORMAT('PGRAXF,PGRAYF,PDIAXC,PDIAYC = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,78)PDIAHE,PDIAWI,PDIAVG,PDIAHG
   78   FORMAT('PDIAHE,PDIAWI,PDIAVG,PDIAHG = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        DO81I=1,NUMDEV
          WRITE(ICOUT,82)IDMANU(I),IDMODE(I),IDMOD2(I),IDMOD3(I)
   82     FORMAT('IDMANU(I),IDMODE(I),IDMOD2(I),IDMOD3(I) = ',
     1           3(A4,2X),A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,83)IDPOWE(I),IDCONT(I),IDCOLO(I)
   83     FORMAT('IDPOWE(I),IDCONT(I),IDCOLO(I) = ',2(A4,2X),A4)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,84)IDNVPP(I),IDNHPP(I),IDUNIT(I)
   84     FORMAT('IDNVPP(I),IDNHPP(I),IDUNIT(I) = ',3I8)
          CALL DPWRST('XXX','BUG ')
   81   CONTINUE
        WRITE(ICOUT,88)IBUGG4,ISUBG4,IERRG4,IBUGD2,IFOUND,IERROR
   88   FORMAT('IBUGG4,ISUBG4,IERRG4,IBUGD2,IFOUND,IERROR = ',
     1         5(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IFIG='POLY'
      NUMPT=3
      NUMPT2=2*NUMPT
C
C               ********************************
C               **  STEP 0--                  **
C               **  STEP THROUGH EACH DEVICE  **
C               ********************************
C
      IF(NUMDEV.LE.0)GOTO9000
      DO8000IDEVIC=1,NUMDEV
C
      IF(IDPOWE(IDEVIC).EQ.'OFF')GOTO8000
      IF(IDMANU(IDEVIC).EQ.'OFF')GOTO8000
      IF(IDMANU(IDEVIC).EQ.'NULL')GOTO8000
      IF(IDMANU(IDEVIC).EQ.'NONE')GOTO8000
      IF(IDMANU(IDEVIC).EQ.'DISC')GOTO8000
C
      IMANUF=IDMANU(IDEVIC)
      IMODEL=IDMODE(IDEVIC)
      IMODE2=IDMOD2(IDEVIC)
      IMODE3=IDMOD3(IDEVIC)
      IGCONT=IDCONT(IDEVIC)
      IGCOLO=IDCOLO(IDEVIC)
      IGFONT=IDFONT(IDEVIC)
      NUMVPP=IDNVPP(IDEVIC)
      NUMHPP=IDNHPP(IDEVIC)
      ANUMVP=NUMVPP
      ANUMHP=NUMHPP
      IOFFSV=IDNVOF(IDEVIC)
      IOFFSH=IDNHOF(IDEVIC)
      IGUNIT=IDUNIT(IDEVIC)
      PCHSCA=PDSCAL(IDEVIC)
C
C               ************************************
C               **  STEP 1--                      **
C               **  CARRY OUT OPENING OPERATIONS  **
C               **  ON THE GRAPHICS DEVICES       **
C               ************************************
C
      CALL DPOPDE
C
      IBELSW='OFF'
      NUMRIN=0
      IERASW='OFF'
      IBACCO='JUNK'
C
      CALL DPOPPL(IGRASW,IBELSW,NUMRIN,IERASW,IBACCO,IBACC2)
C
C               *****************************************
C               **  STEP 2--                           **
C               **  SEARCH FOR COMMAND SPECIFICATIONS  **
C               *****************************************
C
      IF(NUMARG.GE.3.AND.IHARG(1).EQ.'ABSO')GOTO1112
      IF(NUMARG.GE.3.AND.IHARG(1).EQ.'RELA')GOTO1113
      IF(NUMARG.GE.2) GOTO1111
      GOTO1130
C
 1111 CONTINUE
      ITYPEO='ABSO'
      ILOCFN=1
      GOTO1119
C
 1112 CONTINUE
      ITYPEO='ABSO'
      ILOCFN=2
      GOTO1119
C
 1113 CONTINUE
      ITYPEO='RELA'
      ILOCFN=2
      GOTO1119
 1119 CONTINUE
C
      IF(ILOCFN.GT.NUMARG)GOTO1129
      GOTO1149
 1129 CONTINUE
      GOTO1130
C
 1130 CONTINUE
      IERRG4='YES'
      WRITE(ICOUT,1131)
 1131 FORMAT('***** ERROR IN DPPOLY--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1132)
 1132 FORMAT('      ILLEGAL FORM FOR POLYGON ',
     1'COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1134)
 1134 FORMAT('      TEST EXAMPLE TO DEMONSTRATE THE ',
     1'PROPER FORM--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1135)
 1135 FORMAT('      SUPPOSE IT IS DESIRED TO DRAW AN POLYGON ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1136)
 1136 FORMAT('      WITH COORDINATES STORED IN THE ARRAYS X AND Y')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('      THEN THE ALLOWABLE FORMS ARE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      POLYGON X Y')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      POLYGON ABSOLUTE X Y')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1144)
 1144 FORMAT('      POLYGON RELATIVE X Y')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
 1149 CONTINUE
C
C               *****************************************
C               **  STEP 4--                           **
C               **  SEARCH FOR COMMAND ARGUMENTS       **
C               *****************************************
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.LT.1)GOTO2190
      DO2100J=1,NUMARG
      J1=J
      IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ') GOTO2110
      IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ') GOTO2110
      IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ') GOTO2120
 2100 CONTINUE
      GOTO2190
 2110 CONTINUE
      ICASEQ='SUBS'
      ILOCQ=J1
      GOTO2190
 2120 CONTINUE
      ICASEQ='FOR'
      ILOCQ=J1
      GOTO2190
 2190 CONTINUE
      IF(IBUGD2.EQ.'OFF')GOTO2195
      WRITE(ICOUT,2191)NUMARG,ILOCQ
 2191 FORMAT('NUMARG,ILOCQ = ',2I8)
      CALL DPWRST('XXX','BUG ')
 2195 CONTINUE
C
      DO530J=ILOCFN,ILOCFN+1
      IFAC=J-ILOCFN+1
      IHFACT=IHARG(IFAC)
      IHFAC2=IHARG2(IFAC)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHFACT,IHFAC2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      ICOLIV(IFAC)=IVALUE(ILOCV)
      NIV(IFAC)=IN(ILOCV)
      IF(IBUGD2.EQ.'ON')WRITE(ICOUT,532)IFAC,IHFACT,IHFAC2,ICOLIV(IFAC),
     1NIV(IFAC)
  532 FORMAT('I,IHFACT,IHFAC2,ICOLIV(IFAC),NIV(IFAC) = ',
     1I8,2X,A4,2X,A4,I8,I8)
      IF(IBUGD2.EQ.'ON')CALL DPWRST('XXX','BUG ')
  530 CONTINUE
C
      IF(NIV(1).NE.NIV(2))GOTO550
      GOTO590
C
  550 CONTINUE
      WRITE(ICOUT,551)
  551 FORMAT('***** ERROR IN DPPOLY--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,552)
  552 FORMAT('      FOR A POLYGON, THE NUMBER OF ELEMENTS IN THE',
     1' TWO ARRAYS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,555)
  555 FORMAT('      SHOULD HAVE THE SAME AS THE NUMBER OF ELEMENTS;')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,557)
  557 FORMAT('      SUCH WAS NOT THE CASE HERE.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,561)
  561 FORMAT('      THE TWO VARIABLES HAVE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,566)NIV(ILOCFN),NIV(ILOCFN)
  566 FORMAT('      ',I8,I8,' ELEMENTS RESPECTIVELY.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,567)
  567 FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)WRITE(ICOUT,568)(IANS(I),I=1,IWIDTH)
  568 FORMAT(80A1)
      IF(IWIDTH.GE.1)CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
  590 CONTINUE
C
C               *****************************************
C               **  STEP 7--                           **
C               **  BRANCH TO THE APPROPRIATE SUBCASE; **
C               **  THEN FORM THE RESPONSE VARIABLE    **
C               **  AND THE FACTORS                    **
C               *****************************************
C
      ISTEPN='7'
C
      IF(ICASEQ.EQ.'FULL')GOTO610
      IF(ICASEQ.EQ.'SUBS')GOTO620
      IF(ICASEQ.EQ.'FOR')GOTO630
C
  610 CONTINUE
      DO615I=1,NIV(1)
      ISUB(I)=1
  615 CONTINUE
      NQ=NIV(1)
      GOTO650
C
  620 CONTINUE
      NIOLD=NIV(1)
      CALL DPSUBS(NIOLD,ILOCS,NS,IBUGQ,IERROR)
      NQ=NIOLD
      GOTO650
C
  630 CONTINUE
      NIOLD=NIV(1)
      CALL DPFOR(NIOLD,NFOR,IROW1,IROWN,
     1NLOCAL,ILOCS,NS,IBUGQ,IERROR)
      NQ=NFOR
      GOTO650
C
  650 CONTINUE
      J=0
      IMAX=NIV(1)
      IF(NQ.LT.NIV(1))IMAX=NQ
      DO660I=1,IMAX
      IF(ISUB(I).EQ.0)GOTO660
      J=J+1
C
      IJ=MAXN*(ICOLIV(1)-1)+I
      IF(ICOLIV(1).LE.MAXCOL)XP(J)=V(IJ)
      IF(ICOLIV(1).EQ.MAXCP1)XP(J)=PRED(I)
      IF(ICOLIV(1).EQ.MAXCP2)XP(J)=RES(I)
      IF(ICOLIV(1).EQ.MAXCP3)XP(J)=YPLOT(I)
      IF(ICOLIV(1).EQ.MAXCP4)XP(J)=XPLOT(I)
      IF(ICOLIV(1).EQ.MAXCP5)XP(J)=X2PLOT(I)
      IF(ICOLIV(1).EQ.MAXCP6)XP(J)=TAGPLO(I)
C
      ICOLR=ICOLIV(2)
      IJ=MAXN*(ICOLR-1)+I
      IF(ICOLR.LE.MAXCOL)YP(J)=V(IJ)
      IF(ICOLR.EQ.MAXCP1)YP(J)=PRED(I)
      IF(ICOLR.EQ.MAXCP2)YP(J)=RES(I)
      IF(ICOLR.EQ.MAXCP3)YP(J)=YPLOT(I)
      IF(ICOLR.EQ.MAXCP4)YP(J)=XPLOT(I)
      IF(ICOLR.EQ.MAXCP5)YP(J)=X2PLOT(I)
      IF(ICOLR.EQ.MAXCP6)YP(J)=TAGPLO(I)
C
  660 CONTINUE
      NPTS=J
C
C               ****************************
C               **  STEP 3--              **
C               **  DRAW OUT THE LINE(S)  **
C               ****************************
C
      IF(UNITSW.EQ.'DATA')THEN
        CALL DPCODS('X',XP(1),XP(1),IBUGD2,ISUBRO,IERROR)
        CALL DPCODS('Y',YP(1),YP(1),IBUGD2,ISUBRO,IERROR)
      ENDIF
      DO1170I=2,NPTS
        IF(UNITSW.EQ.'DATA')THEN
          CALL DPCODS('X',XP(I),XP(I),IBUGD2,ISUBRO,IERROR)
          IF(ITYPEO.EQ.'RELA')XP(I)=XP(I-1)+XP(I)
          CALL DPCODS('Y',YP(I),YP(I),IBUGD2,ISUBRO,IERROR)
          IF(ITYPEO.EQ.'RELA')YP(I)=YP(I-1)+YP(I)
        ENDIF
C
 1170 CONTINUE
C
      CALL DPPOL2(XP,YP,NPTS,IFIG,
     1            ILINPA,ILINCO,ILINC2,MAXLNZ,PLINTH,
     1            AREGBA,IREBLI,IREBCO,IREBC2,MAXRGZ,PREBTH,
     1            IREFSW,IREFCO,IREFC2,
     1            IREPTY,IREPLI,IREPCO,IREPC2,PREPTH,PREPSP,
     1            PTEXHE,PTEXWI,PTEXVG,PTEXHG)
C
      PXEND=XP(NPTS)
      PYEND=YP(NPTS)
C
C               ************************************
C               **  STEP 4--                      **
C               **  CARRY OUT CLOSING OPERATIONS  **
C               **  ON THE GRAPHICS DEVICES       **
C               ************************************
C
      ICOPSW='OFF'
      NUMCOP=0
      CALL DPCLPL(ICOPSW,NUMCOP,
     1PGRAXF,PGRAYF,
     1IGRASW,PDIAXC,PDIAYC,PDIAX2,PDIAY2,
     1PDIAHE,PDIAWI,PDIAVG,PDIAHG)
C
      CALL DPCLDE
C
 8000 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'POLY')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPOLY--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ILOCFN,NPTS
 9012   FORMAT('ILOCFN,NPTS = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NPTS.GT.0)THEN
          DO9013I=1,NPTS
            WRITE(ICOUT,9014)I,XP(I),YP(I)
 9014       FORMAT('I,XP(I),YP(I) = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
 9013     CONTINUE
        ENDIF
        WRITE(ICOUT,9015)PXSTAR,PYSTAR,PXEND,PYEND
 9015   FORMAT('PXSTAR,PYSTAR,PXEND,PYEND = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9027)IFOUND,IERROR
 9027   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPOL2(X,Y,NPTS,IFIG,
     1                  ILINPA,ILINCO,ILINC2,MAXLN,PLINTH,
     1                  AREGBA,IREBLI,IREBCO,IREBC2,MAXRG,PREBTH,
     1                  IREFSW,IREFCO,IREFC2,
     1                  IREPTY,IREPLI,IREPCO,IREPC2,PREPTH,PREPSP,
     1                  PTEXHE,PTEXWI,PTEXVG,PTEXHG)
C
C     PURPOSE--DRAW A POLYGON.  COORDINATES OF THE POLYGON ARE STORED IN
C              THE ARRAYS X AND Y
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--97/7
C     ORIGINAL VERSION--JULY      1997.
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLOR
C
C-----NON-COMMON VARIABLES-------------------------------------
C
      CHARACTER*4 IPATT2
      CHARACTER*4 IFIG
C
      CHARACTER*4 ILINPA
      CHARACTER*4 ILINCO
C
      CHARACTER*4 IREBLI
      CHARACTER*4 IREBCO
      CHARACTER*4 IREFSW
      CHARACTER*4 IREFCO
      CHARACTER*4 IREPTY
      CHARACTER*4 IREPLI
      CHARACTER*4 IREPCO
C
      CHARACTER*4 IPATT
      CHARACTER*4 ICOLF
      CHARACTER*4 ICOLP
      CHARACTER*4 ICOL
      CHARACTER*4 IFLAG
C
      DIMENSION X(*)
      DIMENSION Y(*)
C
      DIMENSION ILINPA(*)
      DIMENSION ILINCO(*)
      DIMENSION ILINC2(MAXLN,3)
      DIMENSION PLINTH(*)
C
      DIMENSION AREGBA(*)
      DIMENSION IREBLI(*)
      DIMENSION IREBCO(*)
      DIMENSION IREBC2(MAXRG,3)
      DIMENSION PREBTH(*)
      DIMENSION IREFSW(*)
      DIMENSION IREFCO(*)
      DIMENSION IREFC2(MAXRG,3)
      DIMENSION IREPTY(*)
      DIMENSION IREPLI(*)
      DIMENSION IREPCO(*)
      DIMENSION IREPC2(MAXRG,3)
      DIMENSION PREPTH(*)
      DIMENSION PREPSP(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOGR.INC'
      INCLUDE 'DPCOBE.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(IBUGG4.EQ.'OFF'.AND.ISUBG4.NE.'POL2')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPPOL2--')
      CALL DPWRST('XXX','BUG ')
      DO52I=1,NPTS
      WRITE(ICOUT,53)I,X(I),Y(I)
   53 FORMAT('I,X,Y = ',I6,2E15.7)
   52 CONTINUE
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,59)IFIG
   59 FORMAT('IFIG = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,61)ILINPA(1),ILINCO(1),PLINTH(1)
   61 FORMAT('ILINPA(1),ILINCO(1),PLINTH(1) = ',A4,2X,A4,E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)AREGBA(1)
   62 FORMAT('AREGBA(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,63)IREBLI(1),IREBCO(1),PREBTH(1)
   63 FORMAT('IREBLI(1),IREBCO(1),PREBTH(1) = ',A4,2X,A4,E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,64)IREFSW(1),IREFCO(1)
   64 FORMAT('IREFSW(1),IREFCO(1) = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,65)IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1)
   65 FORMAT('IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1) = ',
     1A4,2X,A4,2X,A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,69)PTEXHE,PTEXWI
   69 FORMAT('PTEXHE,PTEXWI= ',2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,70)PTEXVG,PTEXHG
   70 FORMAT('PTEXVG,PTEXHG= ',2E15.6)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,79)IBUGG4,ISUBG4,IERRG4
   79 FORMAT('IBUGG4,ISUBG4,IERRG4 = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
   90 CONTINUE
C
C               *********************************
C               **  STEP 1--                   **
C               **  DETERMINE THE COORDINATES  **
C               **  FOR THE POLYGON            **
C               *********************************
C
C
      IF(X(1).EQ.X(NPTS).AND.Y(1).EQ.Y(NPTS))THEN
        NP=NPTS
      ELSE
        NP=NPTS+1
        X(NP)=X(1)
        Y(NP)=Y(1)
      ENDIF
C
C               ***********************
C               **  STEP 2--         **
C               **  FILL THE FIGURE  **
C               **  (IF CALLED FOR)  **
C               ***********************
C
      IF(IREFSW(1).EQ.'OFF')GOTO2190
      IPATT=IREPTY(1)
      IPATT2='SOLI'
      PTHICK=PREPTH(1)
      PXGAP=PREPSP(1)
      PYGAP=PREPSP(1)
      ICOLF=IREFCO(1)
      ICOLFR=IREFC2(1,1)
      ICOLFG=IREFC2(1,2)
      ICOLFB=IREFC2(1,3)
      ICOLP=IREPCO(1)
      ICOLPR=IREPC2(1,1)
      ICOLPG=IREPC2(1,2)
      ICOLPB=IREPC2(1,3)
      ICOLBR=IREBC2(1,1)
      ICOLBG=IREBC2(1,2)
      ICOLBB=IREBC2(1,3)
      CALL DPFIRE(X,Y,NP,
     1            IFIG,IPATT,PTHICK,PXGAP,PYGAP,
     1            ICOLF,ICOLFR,ICOLFG,ICOLFB,
     1            ICOLP,ICOLPR,ICOLPG,ICOLPB,
     1            IPATT2)
 2190 CONTINUE
C
C               ***************************
C               **  STEP 3--             **
C               **  DRAW OUT THE FIGURE  **
C               ***************************
C
      IPATT=ILINPA(1)
      PTHICK=PLINTH(1)
      ICOL=ILINCO(1)
      ICOLR=ILINC2(1,1)
      ICOLG=ILINC2(1,2)
      ICOLB=ILINC2(1,3)
      IFLAG='ON'
      CALL DPDRPL(X,Y,NP,
     1            IFIG,IPATT,PTHICK,
     1            ICOL,ICOLR,ICOLG,ICOLB,
     1            JPATT,JTHICK,PTHIC2,JCOL,IFLAG)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'POL2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPOL2--')
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NP
          WRITE(ICOUT,9016)I,X(I),Y(I)
 9016     FORMAT('I,X(I),Y(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
        WRITE(ICOUT,9039)IBUGG4,ISUBG4,IERRG4
 9039   FORMAT('IBUGG4,ISUBG4,IERRG4 = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPOPL(XVAL,YVAL,NPNTS,
     1                  XPOLY,YPOLY,XPOLY2,YPOLY2,NPOLY,
     1                  TAG,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--POINTS IN POLYGON (I.E., DETERMINE WHETHER POINTS
C              ARE INSIDE OR OUTSIDE OF A POLYGON, ON THE EDGE,
C              OR EQUAL TO A VERTEX).  FORTRAN IMPLEMENTATION
C              OF O'ROURKE InPoly1 C ROUTINE.
C     INPUT  ARGUMENTS--XVAL   = A REAL VECTOR CONTAINING THE X
C                                COORDINATES OF THE POINTS
C                     --YVAL   = A REAL VECTOR CONTAINING THE Y
C                                COORDINATES OF THE POINTS
C                     --NPOINT = NUMBER OF POINTS IN XVAL, YVAL
C                     --XPOLY  = A REAL VECTOR CONTAINING THE X
C                                COORDINATES OF THE POLYGON
C                     --YPOLY  = A REAL VECTOR CONTAINING THE Y
C                                COORDINATES OF THE POLYGON
C                     --NPOLY  = NUMBER OF POINTS IN XPOLY, YPOLY
C     OUTPUT ARGUMENTS--TAG    = THE OUTPUT ARRAY THAT CONTAINS:
C                                    1 = INTERIOR POINT
C                                    2 = EXTERIOR POINT
C                                    3 = EDGE     POINT
C                                    4 = VERTEX   POINT
C     REFERENCE--O'ROURKE (1998), "COMPUTATIONAL GEOMETRY IN C",
C                SECOND EDITION, CAMBRIDGE UNIVERSITY PRESS, PP.
C                239-245.
C     OTHER DATAPAC   SUBROUTINES NEEDED--NONE.
C     FORTRAN LIBRARY SUBROUTINES NEEDED--NONE.
C     MODE OF INTERNAL OPERATIONS--SINGLE PRECISION.
C     LANGUAGE--ANSI FORTRAN (1977)
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011.9
C     ORIGINAL VERSION--SEPTEMBER 2011.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
C
      REAL XVAL(*)
      REAL YVAL(*)
      REAL XPOLY(*)
      REAL YPOLY(*)
      REAL XPOLY2(*)
      REAL YPOLY2(*)
      REAL TAG(*)
      INTEGER NPNTS
      INTEGER NPOLY
      INTEGER RCROSS
      INTEGER LCROSS
      INTEGER LTEMP1
      INTEGER LTEMP2
      LOGICAL RSTRAD
      LOGICAL LSTRAD
C
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      INCLUDE 'DPCOP2.INC'
C
      DATA EPS /0.0000001/
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'POPL')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF GATHER--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,NPNTS,NPOLY
   52   FORMAT('IBUGA3,ISUBRO,NPNTS,NPOLY = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NPOLY.GT.0)THEN
          DO65I=1,NPOLY
            WRITE(ICOUT,66)I,XPOLY(I),YPOLY(I)
   66       FORMAT('I,XPOLY(I),YPOLY(I) = ',I8,2X,2G15.7)
            CALL DPWRST('XXX','BUG ')
   65     CONTINUE
        ENDIF
      ENDIF
C
C     CHECK IF FIRST POINT IN POLYGON IS EQUAL TO LAST POINT.
C
      IF(XPOLY(1).EQ.XPOLY(NPOLY) .AND. YPOLY(1).EQ.YPOLY(NPOLY))THEN
        NPOLY=NPOLY-1
      ENDIF
C
      DO100IROW=1,NPNTS
C
C       LOOP THROUGH EACH OF THE POINTS
C
        X1=XVAL(IROW)
        Y1=YVAL(IROW)
        TAG(IROW)=-99.0
        RCROSS=0
        LCROSS=0
C
C       SHIFT POLYGON COORDINATES SO THAT POINT IS ORIGIN
C
        DO110I=1,NPOLY
          XPOLY2(I)=XPOLY(I)-X1
          YPOLY2(I)=YPOLY(I)-Y1
  110   CONTINUE
C
C       FOR EACH EDGE, SEE IF IT CROSSES RAYS
C
        DO200II=0,NPOLY-1
          I1=MOD(II+NPOLY-1,NPOLY)
          I=II+1
          I1=I1+1
CCCCC     IF(XPOLY2(I).EQ.0.0 .AND. YPOLY2(I).EQ.0.0)THEN
          IF(ABS(XPOLY2(I)).LT.EPS .AND. ABS(YPOLY2(I)).LT.EPS)THEN
            TAG(IROW)=4.0
            GOTO100
          ENDIF
C
C         CHECK IF EDGE STRADLES X-AXIS WITH BIAS ABOVE/BELOW
C
          RSTRAD=.FALSE.
          LSTRAD=.FALSE.
          LTEMP1=0
          LTEMP2=0
          IF(YPOLY2(I).GT.0.0)LTEMP1=1
          IF(YPOLY2(I1).GT.0.0)LTEMP2=1
          IF(LTEMP1.NE.LTEMP2)RSTRAD=.TRUE.
          LTEMP1=0
          LTEMP2=0
          IF(YPOLY2(I).LT.0.0)LTEMP1=1
          IF(YPOLY2(I1).LT.0.0)LTEMP2=1
          IF(LTEMP1.NE.LTEMP2)LSTRAD=.TRUE.
C
          IF(RSTRAD .OR. LSTRAD)THEN
            TEMP1=XPOLY2(I)*YPOLY2(I1) - XPOLY2(I1)*YPOLY2(I)
            TEMP2=YPOLY2(I1) - YPOLY2(I)
            XTEMP=TEMP1/TEMP2
            IF(RSTRAD .AND. XTEMP.GT.0.0)RCROSS=RCROSS+1
            IF(LSTRAD .AND. XTEMP.LT.0.0)LCROSS=LCROSS+1
          ENDIF
C
  200   CONTINUE
C
        IF(MOD(RCROSS,2) .NE. MOD(LCROSS,2))THEN
          TAG(IROW)=3.0
        ELSEIF(MOD(RCROSS,2).EQ.1)THEN
          TAG(IROW)=1.0
        ELSE
          TAG(IROW)=2.0
        ENDIF
C
  100 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'POPL')THEN
        WRITE(ICOUT,9051)
 9051   FORMAT('***** AT THE END OF DPPOPL--')
        CALL DPWRST('XXX','BUG ')
        DO9055I=1,NPNTS
          WRITE(ICOUT,9056)I,XVAL(I),YVAL(I),TAG(I)
 9056     FORMAT('I,XVAL(I),YVAL(I),TAG(I) = ',I8,2X,3G15.7)
          CALL DPWRST('XXX','BUG ')
 9055   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPOTA(Y1,YSTAT,TEMPZ,MAXNXT,
     1                  ISEED,
     1                  ICAPSW,IFORSW,
     1                  IBUGA2,IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A POSITION-TABULATION FOR ONE OF DATAPLOT'S
C              SUPPORTED UNIVARIATE STATISTICS.
C
C              FOR EXAMPLE, GIVEN THE COMMAND
C
C                   MEAN POSITION TABULATION A B C D E
C
C              WHERE A, B, C, D, AND E ARE EITHER ALL MATRICES OR
C              VECTORS OF THE SAME DIMENSION.  FOR EXAMPLE, IF
C              THEY ARE ALL 5x5 MATRICES, THEN THE OUTPUT WILL
C              BE A SET OF 25 MEANS.  THE FIRST MEAN WILL BE THE
C              MEAN OF A(1,1), B(1,1), C(1,1), D(1,1), and E(1,1).
C              THAT IS, THE POSITION BY POSITION MEANS WILL BE
C              COMPUTED.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/9
C     ORIGINAL VERSION--SEPTEMBER 2011.
C     UPDATED         --AUGUST    2023. CALL LIST TO CMPSTA
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=50)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ISTADF
      CHARACTER*4 ISTARA
      CHARACTER*60 ISTANM
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION YSTAT(*)
      DIMENSION TEMPZ(*)
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZI.INC'
      INCLUDE 'DPCOZD.INC'
C
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
      DIMENSION XTEMP3(MAXOBV)
      DIMENSION XTEMP4(MAXOBV)
      DIMENSION XTEMP5(MAXOBV)
      DIMENSION XROW(MAXOBV)
      DIMENSION XCOL(MAXOBV)
      DIMENSION ITEMP1(MAXOBV)
      DIMENSION ITEMP2(MAXOBV)
      DIMENSION ITEMP3(MAXOBV)
      DIMENSION ITEMP4(MAXOBV)
      DIMENSION ITEMP5(MAXOBV)
      DIMENSION ITEMP6(MAXOBV)
      DOUBLE PRECISION DTEMP1(MAXOBV)
      DOUBLE PRECISION DTEMP2(MAXOBV)
      DOUBLE PRECISION DTEMP3(MAXOBV)
C
      EQUIVALENCE (GARBAG(IGARB1),XTEMP1(1))
      EQUIVALENCE (GARBAG(IGARB2),XTEMP2(1))
      EQUIVALENCE (GARBAG(IGARB3),XTEMP3(1))
      EQUIVALENCE (GARBAG(IGARB4),XROW(1))
      EQUIVALENCE (GARBAG(IGARB5),XCOL(1))
      EQUIVALENCE (GARBAG(IGARB6),XTEMP4(1))
      EQUIVALENCE (GARBAG(IGARB7),XTEMP5(1))
C
      EQUIVALENCE (IGARBG(IIGAR1),ITEMP1(1))
      EQUIVALENCE (IGARBG(IIGAR2),ITEMP2(1))
      EQUIVALENCE (IGARBG(IIGAR3),ITEMP3(1))
      EQUIVALENCE (IGARBG(IIGAR4),ITEMP4(1))
      EQUIVALENCE (IGARBG(IIGAR5),ITEMP5(1))
      EQUIVALENCE (IGARBG(IIGAR6),ITEMP6(1))
C
      EQUIVALENCE (DGARBG(IDGAR1),DTEMP1(1))
      EQUIVALENCE (DGARBG(IDGAR2),DTEMP2(1))
      EQUIVALENCE (DGARBG(IDGAR3),DTEMP3(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPPO'
      ISUBN2='TA  '
C
C               *********************************************
C               **  TREAT THE POSITIONAL-TABULATION  CASE  **
C               *********************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'POTA')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPOTA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   53   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'POTA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *******************************************************
C               **  STEP 1.5--                                       **
C               **  SEARCH FOR COMMAND                               **
C               *******************************************************
C
      IF(ICOM.EQ.'POSI' .AND. IHARG(1).EQ.'TABU')THEN
        JMIN=2
      ELSE
        IFOUND='NO'
        GOTO9000
      ENDIF
      JMAX=MIN(NUMARG,JMIN+6)
C
      CALL EXTSTA(ICOM,ICOM2,IHARG,IHARG2,IARGT,ARG,NUMARG,JMIN,JMAX,
     1            ICASPL,ISTANM,ISTANR,ISTADF,ISTARA,
     1            IFOUND,ILOCV,ISUBRO,IBUGA3,IERROR)
C
      IF(ISTANR.GT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN POSITIONAL TABULATION--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,103)
  103   FORMAT('      THIS COMMAND IS ONLY SUPPORTED FOR UNIVARIATE ',
     1         'STATISTICS.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,105)ISTANM
  105   FORMAT('      THE STATISTIC: ',A60)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,107)ISTANR
  107   FORMAT('      EXPECTS ',I1,' RESPONSE VARIABLES.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      ILASTC=ILOCV-1
      IF(ILASTC.GE.1)THEN
        CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      ENDIF
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'POTA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='POSITIONAL TABULATION'
      MINNA=1
      MAXNA=100
      MINN2=1
      IFLAGE=1
      IFLAGM=2
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=MAXSPN
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'POTA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               *****************************************************
C               **  STEP 8--                                       **
C               **  COMPUTE THE APPROPRIATE POSITIONAL-TABULATION  **
C               **  STATISTIC--                                    **
C               *****************************************************
C
      ISTEPN='8'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'POTA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPPOT9(Y1,YSTAT,NUMVAR,ICASPL,ISTANM,ISTARA,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,INAME,
     1            MAXCOL,V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            TEMPZ,XROW,XCOL,XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1            ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1            DTEMP1,DTEMP2,DTEMP3,
     1            ICAPSW,ICAPTY,IFORSW,MAXNXT,MAXN,ISEED,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'POTA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPOTA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPOT9(Y,YSTAT,NUMVAR,ICASPL,ISTANM,ISTARA,
     1                  IVARN1,IVARN2,IVARTY,PVAR,
     1                  ILIS,NRIGHT,ICOLR,ISUB,NQ,INAME,
     1                  MAXCOL,V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                  TEMPZ,XROW,XCOL,XTEMP1,XTEMP2,XTEMP3,
     1                  XTEMP4,XTEMP5,
     1                  ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                  DTEMP1,DTEMP2,DTEMP3,
     1                  ICAPSW,ICAPTY,IFORSW,MAXNXT,MAXN,ISEED,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--GENERATE A POSITION-TABULATION FOR ONE OF DATAPLOT'S
C              SUPPORTED UNIVARIATE STATISTICS.
C
C              FOR EXAMPLE, GIVEN THE COMMAND
C
C                   MEAN POSITION TABULATION A B C D E
C
C              WHERE A, B, C, D, AND E ARE EITHER ALL MATRICES OR
C              VECTORS OF THE SAME DIMENSION.  FOR EXAMPLE, IF
C              THEY ARE ALL 5x5 MATRICES, THEN THE OUTPUT WILL
C              BE A SET OF 25 MEANS.  THE FIRST MEAN WILL BE THE
C              MEAN OF A(1,1), B(1,1), C(1,1), D(1,1), and E(1,1).
C              THAT IS, THE POSITION BY POSITION MEANS WILL BE
C              COMPUTED.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     REFERENCE--ASTM MANUAL STP-15D, PAGES 78-84, 100-105
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/9
C     ORIGINAL VERSION--SEPTEMBER 2011.
C     UPDATED         --AUGUST    2023. CALL LIST TO CMPSTA
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IVARN1(*)
      CHARACTER*4 IVARN2(*)
      CHARACTER*4 IVARTY(*)
      CHARACTER*40 INAME
      CHARACTER*40 ISTANM
      CHARACTER*4 ICASPL
      CHARACTER*4 ISTARA
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ICASE
      CHARACTER*4 IOP
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION YSTAT(*)
      DIMENSION TEMPZ(*)
      DIMENSION XROW(*)
      DIMENSION XCOL(*)
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION XTEMP4(*)
      DIMENSION XTEMP5(*)
      DIMENSION PVAR(*)
C
      REAL    V(*)
      REAL    PRED(*)
      REAL    RES(*)
      REAL    YPLOT(*)
      REAL    XPLOT(*)
      REAL    X2PLOT(*)
      REAL    TAGPLO(*)
C
      INTEGER ILIS(*)
      INTEGER NRIGHT(*)
      INTEGER ICOLR(*)
      INTEGER ISUB(*)
      INTEGER ITEMP1(*)
      INTEGER ITEMP2(*)
      INTEGER ITEMP3(*)
      INTEGER ITEMP4(*)
      INTEGER ITEMP5(*)
      INTEGER ITEMP6(*)
C
      DOUBLE PRECISION DTEMP1(*)
      DOUBLE PRECISION DTEMP2(*)
      DOUBLE PRECISION DTEMP3(*)
C
      PARAMETER(NUMCLI=3)
      PARAMETER(MAXLIN=1)
      PARAMETER (MAXROW=40)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUZ(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAGS
      LOGICAL IFLAGE
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPO'
      ISUBN2='T9  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'POT9')THEN
        WRITE(ICOUT,70)
   70   FORMAT('AT THE BEGINNING OF DPPOT9--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)ICASPL,INAME
   71   FORMAT('ICASPL,INAME = ',A4,2X,A40)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)NUMVAR,NQ,PVAR(1),PVAR(2)
   72   FORMAT('NUMVAR,NQ,PVAR(1),PVAR(2) = ',2I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO75I=1,NQ
          WRITE(ICOUT,77)I,ISUB(I)
   77     FORMAT('I,ISUB(I) = ',2I8)
          CALL DPWRST('XXX','BUG ')
   75   CONTINUE
      ENDIF
C
      ICOL=1
      NROW=NRIGHT(1)
      IF(IVARTY(1).EQ.'VARI')THEN
        NCOL=1
      ELSE
        ILISR=ILIS(ICOL)
        ICOL1=IVALUE(ILISR)
        ICOL2=IVALU2(ILISR)
        NCOL=(ICOL2 - ICOL1) + 1
      ENDIF
C
C     NOW LOOP OVER THE ROWS/COLUMNS OF THE ARGUMENTS
C
      ICNT=0
      DO100JCOL=1,NCOL
        DO200IROW=1,NROW
          ICNT2=0
          DO300ICOL=1,NUMVAR
            CALL DPPAR9(ICOL,IVALUE,IVALU2,IN,MAXN,MAXNXT,IROW,JCOL,
     1                  INAME,IVARN1,IVARN2,IVARTY,
     1                  ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1                  MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                  MAXCP4,MAXCP5,MAXCP6,
     1                  V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                  AVAL,NCOLZ,ICASE,
     1                  IBUGA3,ISUBRO,IERROR)
            IF(IERROR.EQ.'YES')GOTO9000
            IF(NCOLZ.NE.NCOL .AND. ICASE.EQ.'MATR')THEN
              WRITE(ICOUT,999)
  999         FORMAT(1X)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,301)
  301         FORMAT('***** ERROR IN POSITIONAL TABULATION--')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,303)ICOL
  303         FORMAT('      MATRIX ',I2,' DOES NOT HAVE THE EXPECTED ',
     1               'NUMBER OF COLUMNS.')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,305)NCOLZ
  305         FORMAT('      NUMBER OF COLUMNS           = ',I8)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,307)NCOL
  307         FORMAT('      NUMBER OF COLUMNS EXPECTED  = ',I8)
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO9000
            ENDIF
            ICNT2=ICNT2+1
            Y(ICNT2)=AVAL
  300     CONTINUE
C
C         NOW COMPUTE THE DESIRED STATISTIC
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'POT9')THEN
            WRITE(ICOUT,351)IROW,ICOL,ICNT2
  351       FORMAT('IROW,ICOL,ICNT2 = ',3I8)
            CALL DPWRST('XXX','BUG ')
            IF(ICNT2.GE.1)THEN
              DO355II=1,ICNT2
                WRITE(ICOUT,358)II,Y(II)
  358           FORMAT('II,Y(II) = ',I8,G15.7)
                CALL DPWRST('XXX','BUG ')
  355         CONTINUE
            ENDIF
          ENDIF
C
          IF(ICNT2.GE.1)THEN
            NUMV2=1
            CALL CMPSTA(Y,TEMPZ,TEMPZ,XTEMP1,XTEMP2,XTEMP3,
     1                  XTEMP4,XTEMP5,
     1                  MAXNXT,ICNT2,ICNT2,ICNT2,NUMV2,ICASPL,ISTARA,
     1                  ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1                  DTEMP1,DTEMP2,DTEMP3,
     1                  RIGHT,
     1                  ISUBRO,IBUGA3,IERROR)
            ICNT=ICNT+1
            XROW(ICNT)=REAL(IROW)
            XCOL(ICNT)=REAL(JCOL)
            IF(IERROR.EQ.'YES' .OR. RIGHT.EQ.CPUMIN)THEN
              YSTAT(ICNT)=PSTAMV
            ELSE
              YSTAT(ICNT)=RIGHT
            ENDIF
          ELSE
            ICNT=ICNT+1
            XROW(ICNT)=REAL(IROW)
            XCOL(ICNT)=REAL(JCOL)
            YSTAT(ICNT)=PSTAMV
          ENDIF
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'POT9')THEN
            WRITE(ICOUT,371)ICNT,XROW(ICNT),XCOL(ICNT),YSTAT(ICNT)
  371       FORMAT('ICNT,XROW(ICNT),XCOL(ICNT),YSTAT(ICNT) = ',
     1             I8,2F8.0,G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
C
  200   CONTINUE
  100 CONTINUE
C
C     WRITE RESULTS TO "dpst1f.dat"
C
      IOP='OPEN'
      IFLG11=1
      IFLG21=0
      IFLG31=0
      IFLAG4=0
      IFLAG5=0
      CALL DPAUFI(IOP,IFLG11,IFLG21,IFLG31,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      DO510I=1,ICNT
        WRITE(IOUNI1,'(3E15.7)')XROW(I),XCOL(I),YSTAT(I)
  510 CONTINUE
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLG11,IFLG21,IFLG31,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
C               ****************************
C               **  STEP 5--              **
C               **  WRITE EVERYTHING OUT  **
C               ****************************
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'POT9')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=-7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=10
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Positional Tabulation ('
      ITITLE(24:59)=ISTANM(1:35)
      NCTITL=59
      DO4010I=59,1,-1
        IF(ITITLE(I:I).NE.' ')THEN
          NCTITL=I+1
          ITITLE(NCTITL:NCTITL)=')'
          GOTO4019
        ENDIF
 4010 CONTINUE
 4019 CONTINUE
C
      ITITLZ=' '
      NCTITZ=0
C
      ITITL2(1,1)='Row'
      NCTIT2(1,1)=3
      ITITL2(1,2)='Column'
      NCTIT2(1,2)=6
      ITITL2(1,3)='Statistic'
      NCTIT2(1,3)=9
C
      NUMLIN=1
      NUMCOL=3
      N2=ICNT
C
      NMAX=0
      DO4210I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        IDIGIT(I)=0
        NTOT(I)=8
        IF(I.EQ.3)THEN
          NTOT(I)=15
          IDIGIT(I)=NUMDIG
        ENDIF
        NMAX=NMAX+NTOT(I)
        ITYPCO(I)='NUME'
 4210 CONTINUE
C
      IWHTML(1)=100
      IWHTML(2)=100
      IWHTML(3)=150
      IJUNK=1200
      IWRTF(1)=IJUNK
      IWRTF(2)=IWRTF(1)+IJUNK
      IWRTF(3)=IWRTF(2)+2000
      IFRST=.TRUE.
      IFLAGS=.TRUE.
      ILAST=.TRUE.
      IFLAGE=.FALSE.
C
      ICALL=0
      ICNT=0
      DO4310I=1,N2
        IF(ICNT.GE.40)THEN
          IF(I.EQ.N2)IFLAGE=.TRUE.
          CALL DPDTA5(ITITLE,NCTITL,
     1                ITITLZ,NCTITZ,ITITL2,NCTIT2,
     1                MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1                IVALUZ,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1                IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1                ICAPSW,ICAPTY,IFRST,ILAST,
     1                IFLAGS,IFLAGE,
     1                ISUBRO,IBUGA3,IERROR)
          IFRST=.FALSE.
          IFLAGS=.FALSE.
          ICALL=1
          ICNT=0
        ENDIF
        ICNT=ICNT+1
        NCTEXT(ICNT)=0
        AMAT(ICNT,1)=XROW(I)
        AMAT(ICNT,2)=XCOL(I)
        AMAT(ICNT,3)=YSTAT(I)
        DO4320J=1,NUMCOL
          NCVALU(ICNT,J)=0
          IVALUZ(ICNT,J)=' '
 4320   CONTINUE
 4310 CONTINUE
C
      IF(ICNT.GE.1)THEN
        IFLAGE=.TRUE.
        ILAST=.TRUE.
        CALL DPDTA5(ITITLE,NCTITL,
     1              ITITLZ,NCTITZ,ITITL2,NCTIT2,
     1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1              IVALUZ,NCVALU,AMAT,ITYPCO,MAXROW,ICNT,
     1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1              ICAPSW,ICAPTY,IFRST,ILAST,
     1              IFLAGS,IFLAGE,
     1              ISUBRO,IBUGA3,IERROR)
      ENDIF
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'POT9')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPOT9--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPOTP(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  IBOOSS,ISEED,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE A PEAKS OVER THRESHOLD PLOT--
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2005/4
C     ORIGINAL VERSION--APRIL     2005.
C     UPDATED         --JULY      2010. USE DPDTA1, DPDTA2 TO
C                                       GENERATE TABLES
C     UPDATED         --MAY       2010. USE DPPARS AND DPPAR3 TO PERFORM
C                                       THE COMMAND PARSING
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IHP
      CHARACTER*4 IHP2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
      DIMENSION XTEMP3(MAXOBV)
      DIMENSION XTEMP4(MAXOBV)
      DIMENSION XTEMP5(MAXOBV)
      DIMENSION XTEMP6(MAXOBV)
      DIMENSION XTEMP7(MAXOBV)
      DIMENSION XTEMP8(MAXOBV)
      DIMENSION XTEMP9(MAXOBV)
      DIMENSION XTMP10(MAXOBV)
      DIMENSION ITEMP1(MAXOBV)
      DIMENSION R(MAXOBV)
      DOUBLE PRECISION DTEMP1(MAXOBV)
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZI.INC'
      INCLUDE 'DPCOZD.INC'
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),XTEMP1(1))
      EQUIVALENCE (GARBAG(IGARB3),XTEMP2(1))
      EQUIVALENCE (GARBAG(IGARB4),XTEMP3(1))
      EQUIVALENCE (GARBAG(IGARB5),XTEMP4(1))
      EQUIVALENCE (GARBAG(IGARB6),XTEMP5(1))
      EQUIVALENCE (GARBAG(IGARB7),XTEMP6(1))
      EQUIVALENCE (GARBAG(IGARB8),XTEMP7(1))
      EQUIVALENCE (GARBAG(IGARB9),XTEMP8(1))
      EQUIVALENCE (GARBAG(IGAR10),XTEMP9(1))
      EQUIVALENCE (GARBAG(JGAR11),XTMP10(1))
      EQUIVALENCE (GARBAG(JGAR12),R(1))
      EQUIVALENCE (IGARBG(1),ITEMP1(1))
      EQUIVALENCE (DGARBG(1),DTEMP1(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      DATA MINSIZ/5/
      DATA MINSI2/30/
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPPO'
      ISUBN2='TP  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      MAXV2=2
      MINN2=MINSIZ
C
C               **************************************************
C               **  TREAT THE PEAKS OVER THRESHOLD    PLOT CASE **
C               **************************************************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'POTP')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPOTP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2
   52   FORMAT('ICASPL,IAND1,IAND2 = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ,ISUBRO
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',A4,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'POTP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASPL='POTP'
C
      IF(ICOM.EQ.'POT ')THEN
         IF(NUMARG.GE.1)THEN
            IF(IHARG(1).EQ.'PLOT')THEN
               ILASTC=1
               GOTO119
            ENDIF
         ENDIF
      ENDIF
C
      IF(ICOM.EQ.'PEAK')THEN
         IF(NUMARG.GE.3)THEN
            IF(IHARG(1).EQ.'OVER'.AND.IHARG(2).EQ.'THRE'.AND.
     1        IHARG(3).EQ.'PLOT')THEN
               ILASTC=3
               GOTO119
            ENDIF
         ENDIF
      ENDIF
C
      GOTO9000
C
  119 CONTINUE
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      IFOUND='YES'
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'POTP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='PEAKS OVER THRESHOLD PLOT'
      MINNA=1
      MAXNA=100
      IFLAGE=0
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      MINNVA=1
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'POTP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),IVARTY(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),IVARTY(I) = ',I8,2X,A4,A4,2X,3I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ****************************************
C               **  STEP 3--                          **
C               **  PUT THE DATA INTO Y1 AND R        **
C               ****************************************
C
      ISTEPN='3'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'POTP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOL=1
      CALL DPPAR4(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Y1,R,NLOCAL,NRET,IFLAGM,IFLAGE,
     1            IBUGG3,ISUBRO,IFOUND,IERROR)
C
      IF(NLOCAL.LT.MINSIZ)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,351)
  351   FORMAT('***** ERROR IN PEAKS OVER THRESHOLD PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,352)MINSIZ
  352   FORMAT('      THE NUMBER OF OBSERVATIONS IN THE RESPONSE ',
     1         'VARIABLE MUST BE AT LEAST ',I5)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,354)NLOCAL
  354   FORMAT('      THE NUMBER OF OBSERVATIONS = ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               *****************************************************
C               **  STEP 4--                                       **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C               **  RESET THE VECTOR D(.) TO ALL ONES.             **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).  **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).  **
C               *****************************************************
C
      ISTEPN='4'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'POTP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPOTME.EQ.'PPCC')THEN
        IHP='GAMM'
        IHP2='A1  '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          GAMMA1=-3.0
        ELSE
          GAMMA1=VALUE(ILOCP)
        ENDIF
C
        IHP='GAMM'
        IHP2='A2  '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')THEN
          GAMMA2=3.0
        ELSE
          GAMMA2=VALUE(ILOCP)
        ENDIF
C
        IF(GAMMA1.GT.GAMMA2)THEN
          GAMMSV=GAMMA1
          GAMMA1=GAMMA2
          GAMMA2=GAMMSV
        ENDIF
      ENDIF
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'POTP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,811)
  811   FORMAT('***** FROM THE MIDDLE  OF DPPOTP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,812)ICASPL,IPOTME,NUMV2
  812   FORMAT('ICASPL,IPOTME,NUMV2 = ',A4,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      CALL DPPOT2(Y1,NLOCAL,ICASPL,MINSIZ,MINSI2,MAXOBV,
     1            XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,XTEMP6,XTEMP7,
     1            XTEMP8,XTEMP9,XTMP10,ITEMP1,DTEMP1,
     1            R,NRET,
     1            ICAPSW,ICAPTY,IFORSW,GAMMA1,GAMMA2,
     1            IBOOSS,ISEED,MINMAX,
     1            Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'POTP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END OF DPPOTP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         I8,I8,I8,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.GE.1)THEN
          DO9020I=1,NPLOTP
            WRITE(ICOUT,9021)I,Y(I),X(I),D(I)
 9021       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9020     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPOT2(Y,N,ICASPL,MINSIZ,MINSI2,MAXNXT,
     1                  XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                  XTEMP6,XTEMP7,
     1                  XTEMP8,XTEMP9,XTMP10,ITEMP1,DTEMP1,
     1                  R,NRET,
     1                  ICAPSW,ICAPTY,IFORSW,GAMMA1,GAMMA2,
     1                  IBOOSS,ISEED,MINMAX,
     1                  Y2,X2,D2,N2,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE A PEAKS OVER THRESHOLD PLOT
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2005/04
C     ORIGINAL VERSION--APRIL      2005.
C     UPDATED         --JULY       2010. USE DPDTA1 TO PRINT OUTPUT
C     UPDATED         --JULY       2010. MODIFY HOW PPCC VALUE IS
C                                        GENERATED
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 IPRISV
      CHARACTER*4 IFEESV
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IMETHD
      CHARACTER*4 ICASJB
      CHARACTER*4 ICENSO
      CHARACTER*4 ICASP2
      CHARACTER*4 IOP
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=20)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*40 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
      DOUBLE PRECISION DP
      DOUBLE PRECISION DG
      DOUBLE PRECISION DPPF
      DOUBLE PRECISION DXR
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION XTEMP4(*)
      DIMENSION XTEMP5(*)
      DIMENSION XTEMP6(*)
      DIMENSION XTEMP7(*)
      DIMENSION XTEMP8(*)
      DIMENSION XTEMP9(*)
      DIMENSION XTMP10(*)
      DIMENSION R(*)
      DIMENSION ITEMP1(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
      DOUBLE PRECISION DTEMP1(*)
      DOUBLE PRECISION XMOM(3)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPO'
      ISUBN2='T2  '
      IERROR='NO'
      IWRITE='OFF'
C
      IPRISV=IPRINT
      IFEESV=IFEEDB
      SHAPE1=CPUMIN
      SHAPE2=CPUMIN
      XR50=CPUMIN
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'POT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N.LT.MINSI2)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN PEAKS OVER THRESHOLD PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)MINSI2
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST ',
     1         I8,';')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'POT2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPPOT2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)ICASPL,IPOTME,IPOTDI,IPOTIT,IPOTNP,N
   72   FORMAT('ICASPL,IPOTME,IPOTDI,IPOTIT,IPOTNP,N, = ',3(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,74)PPOTTH,PPOTIN,MINSIZ,MINSI2,NRET
   74   FORMAT('PPOTTH,PPOTIN,MINSIZ,MINSI2,NRET = ',2G15.7,3I8)
        CALL DPWRST('XXX','BUG ')
        DO85I=1,N
          WRITE(ICOUT,86)I,Y(I)
   86     FORMAT('I,Y(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   85   CONTINUE
      ENDIF
C
C  THE BASIC ALGORITHM FOR GENERATING A PEAKS OVER THRESHOLDS
C  PLOT IS:
C
C  1. START WITH AN INITIAL THRESHOLD VALUE
C     USER CAN SPECIFY INITIAL THRESHOLD OR THE NUMBER OF POINTS
C     TO BE EXTRACTED FOR THE INITIAL THRESHOLD
C  2. EXTRACT THE POINTS IN THE DATA SET ABOVE THIS THRESHOLD
C  3. FOR THIS EXTRACTED DATA SET, ESTIMATE THE PARAMETERS OF
C     THE DISTRIBUTION.  NOTE THAT DATAPLOT ALLOWS YOU TO SELECT
C     BOTH THE TYPE OF DISTRIBUTION BEING ESTIMATED (GENERALIZED
C     PATRETO, WEIBULL, GUMBEL, OR FRECHET) AND THE METHOD USED
C     TO ESTIMATE THE PARAMETERS (AVAILABLE METHODS DEPEND ON
C     THE DISTRIBUTION).
C  4. CALCULATE A STANDARD DEVIATION FOR THE PARAMETER ESTIMATES.
C  5. INCREMENT THE THRESHOLD AND REPEAT STEPS 1-4.
C  6. PLOT THE RESULTING PARAMETER ESTIMATES ALONG WITH THE
C     "CONFIDENCE LIMITS" (USUALLY +/- 2*SD).
C
C               ********************************************
C               **  STEP 2--                              **
C               **  SORT THE DATA                         **
C               ********************************************
C
      ISTEPN='2'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'POT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NRET.GT.0)THEN
        IR50=0
        DO101I=1,NRET
          IF(ABS(R(I) - 50.0).LT.1.0)THEN
            IR50=1
            GOTO109
          ENDIF
  101   CONTINUE
  109   CONTINUE
        IF(IR50.EQ.0)THEN
          NRET=NRET+1
          R(NRET)=50.0
        ENDIF
        CALL SORT(R,NRET,R)
        IR50=0
        DO111I=1,NRET
          IF(ABS(R(I) - 50.0).LT.1.0)THEN
            IR50=I
            GOTO119
          ENDIF
  111   CONTINUE
  119   CONTINUE
      ENDIF
C
      CALL SORT(Y,N,XTEMP1)
      DO210I=1,N
        Y(I)=XTEMP1(I)
  210 CONTINUE
C
      IF(PPOTTH.GT.0.0)THEN
        ATHRSH=PPOTTH
      ELSEIF(IPOTNP.GT.0)THEN
        INDX=N-IPOTNP+1
        IF(INDX.LT.1)INDX=1
        IF(INDX.GT.N)INDX=N
        ATHRSH=Y(INDX)
      ELSE
        NKEEP=INT(REAL(N)*0.025 + 0.5)
        IF(NKEEP.LT.MINSIZ)NKEEP=MINSIZ
        ATHRSH=Y(N-NKEEP+1)
      ENDIF
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'POT2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,211)ATHRSH,PPOTIN,NKEEP,IPOTIT
  211   FORMAT('ATHRSH,PPOTIN,NKEEP,IPOTIT = ',2G15.7,2X,2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IOP='OPEN'
      IFLG1=1
      IFLG2=0
      IF(NRET.GT.0)IFLG2=1
      IFLG3=0
      IFLG4=0
      IFLG5=0
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGG3,ISUBRO,IERROR)
C
C               ********************************************
C               **  STEP 3--                              **
C               **  LOOP THROUGH THE THRESHOLDS           **
C               ********************************************
C
      ISTEPN='3'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'POT2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICNT=0
      NLOCSV=0
      DO300I=1,IPOTIT
C
        U=ATHRSH + REAL(I-1)*PPOTIN
        NLOCAL=0
        DO310J=1,N
          IF(Y(J).GE.U)THEN
            NLOCAL=NLOCAL+1
            XTEMP1(NLOCAL)=Y(J)
          ENDIF
  310   CONTINUE
C
        IF(NLOCAL.EQ.NLOCSV)GOTO300
        NLOCSV=NLOCAL
C
        IF(NLOCAL.LT.MINSIZ)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,311)U
  311     FORMAT('***** WARNING--FOR A THRESHOLD OF ',G12.5)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,313)NLOCAL
  313     FORMAT('      ONLY ',I8,' ABOVE THE THRESHOLD.  THIS IS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,315)MINSIZ
  315     FORMAT('      BELOW THE REQUIRED ',I8,'.  THIS ITERATION ',
     1           'SKIPPED.')
          CALL DPWRST('XXX','BUG ')
          GOTO300
        ENDIF
C
        IF(IPOTDI.EQ.'GPAR')THEN
C
C  DEHAAN METHOD
C
          IF(IPOTME.EQ.'DEHA')THEN
C
            IFEEDB='OFF'
            IPRINT='OFF'
C
            IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'POT2')THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,321)ATHRSH,NKEEP
  321         FORMAT('BEFORE DPDEGP: ATHRSH,NKEEP = ',G15.7,2X,I8)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            THRESH=CPUMIN
            IERROR='NO'
            CALL DPDEGP(XTEMP1,NLOCAL,MAXNXT,
     1                  GAMMA,A,GAMMSD,THRESH,
     1                  GAMMA2,ALOC,SCALE,
     1                  ALIKE,AIC,AICC,BIC,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  ISUBRO,IBUGG3,IERROR)
C
            IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'POT2')THEN
              WRITE(ICOUT,323)U,GAMMA,A,GAMMSD,IERROR
  323         FORMAT('AFTER DPDEGP: U,GAMMA,A,GAMMSD,IERROR = ',
     1               4G15.7,2X,A4)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
            IF(IERROR.EQ.'YES')GOTO9000
            IF(IGEPDF.NE.'SIMI')THEN
              GAMMA=-GAMMA
            ENDIF
C
            ICNT=ICNT+1
            Y2(ICNT)=GAMMA
            IF(IPOTAX.EQ.'POIN')THEN
              X2(ICNT)=REAL(NLOCAL)
            ELSE
              X2(ICNT)=U
            ENDIF
            D2(ICNT)=1.0
            IF(GAMMSD.GT.0.0)THEN
              ICNT=ICNT+1
              Y2(ICNT)=GAMMA + 2.0*GAMMSD
              IF(IPOTAX.EQ.'POIN')THEN
                X2(ICNT)=REAL(NLOCAL)
              ELSE
                X2(ICNT)=U
              ENDIF
              D2(ICNT)=2.0
              ICNT=ICNT+1
              Y2(ICNT)=GAMMA - 2.0*GAMMSD
              IF(IPOTAX.EQ.'POIN')THEN
                X2(ICNT)=REAL(NLOCAL)
              ELSE
                X2(ICNT)=U
              ENDIF
              D2(ICNT)=3.0
            ENDIF
C
            ASCALE=A
            ALOC=U
C
            IFEEDB=IFEESV
            IPRINT=IPRISV
C
C         CME METHOD
C
          ELSEIF(IPOTME.EQ.'CME')THEN
C
            IFEEDB='OFF'
            IPRINT='OFF'
C
            THRESH=0.0
            CALL DPCMGP(XTEMP1,NLOCAL,
     1                  GAMMA,A,GAMMSD,THRESH,
     1                  XTEMP2,XTEMP3,XTEMP4,ITEMP1,
     1                  ALIKE,AIC,AICC,BIC,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  ISUBRO,IBUGG3,IERROR)
            IF(IERROR.EQ.'YES')GOTO9000
            IF(IGEPDF.NE.'SIMI')THEN
              GAMMA=-GAMMA
            ENDIF
C
            ICNT=ICNT+1
            Y2(ICNT)=GAMMA
            IF(IPOTAX.EQ.'POIN')THEN
              X2(ICNT)=REAL(NLOCAL)
            ELSE
              X2(ICNT)=U
            ENDIF
            D2(ICNT)=1.0
            IF(GAMMSD.GT.0.0)THEN
              ICNT=ICNT+1
              Y2(ICNT)=GAMMA + 2.0*GAMMSD
              IF(IPOTAX.EQ.'POIN')THEN
                X2(ICNT)=REAL(NLOCAL)
              ELSE
                X2(ICNT)=U
              ENDIF
              D2(ICNT)=2.0
              ICNT=ICNT+1
              Y2(ICNT)=GAMMA - 2.0*GAMMSD
              IF(IPOTAX.EQ.'POIN')THEN
                X2(ICNT)=REAL(NLOCAL)
              ELSE
                X2(ICNT)=U
              ENDIF
              D2(ICNT)=3.0
            ENDIF
C
            ASCALE=A
            ALOC=U
C
            IFEEDB=IFEESV
            IPRINT=IPRISV
C
C         PPCC METHOD
C
          ELSEIF(IPOTME.EQ.'PPCC')THEN
C
            IFEEDB='OFF'
            IPRINT='OFF'
C
CCCCC       NUMDIS=100
            NUMDIS=50
            ANUMDI=REAL(NUMDIS)
            GAMLL=GAMMA1
            GAMUL=GAMMA2
            CORRMX=-99.0
            MINMAX=1
            CALL UNIMED(NLOCAL,XTEMP2)
            DO360IDIS=1,NUMDIS
              AIDIS=IDIS
              SHAPE=GAMLL+((AIDIS-1.0)/(ANUMDI-1.0))*(GAMUL-GAMLL)
              ICNT2=0
              DO370II=1,NLOCAL
                ICNT2=ICNT2+1
                CALL GEPPPF(XTEMP2(II),SHAPE,MINMAX,IGEPDF,
     1                      XTEMP3(ICNT2))
  370         CONTINUE
C
              IWRITE='OFF'
              CALL CORR(XTEMP3,XTEMP1,NLOCAL,IWRITE,CC,IBUGG3,IERROR)
              IF(CC.GT.CORRMX)THEN
                CORRMX=CC
                SHAPE1=SHAPE
                CALL LINFI2(XTEMP3,XTEMP1,NLOCAL,
     1                      ALOC,SCALE,
     1                      ISUBRO,IBUGG3,IERROR)
              ENDIF
  360       CONTINUE
C
C  USE BOOTSTRAP TO OBTAIN 95% CONFIDENCE INTERVAL FOR
C  SHAPE PARAMETER
C
            ICASP2='GPAR'
            ICASJB='BOOT'
            ICENSO='OFF'
            IADEDF='OFF'
            ILGADF='OFF'
            ISKNDF='OFF'
            IMETHD='KAPL'
            NHOR1=0
            NPERC=0
            IPPCDP=0
C
            DO380IRESAM=1,IBOOSS
              IF(IBOOPA.EQ.'PARA')THEN
                IF(SHAPE1.EQ.0.0)THEN
                  CALL EXPRAN(NLOCAL,ISEED,XTEMP5)
                ELSE
                  CALL UNIRAN(NLOCAL,ISEED,XTEMP5)
                  DG=DBLE(SHAPE1)
                  IF(IGEPDF.EQ.'JOHN')THEN
                    DO381II=1,NLOCAL
                      DP=DBLE(XTEMP5(II))
                      DPPF=(-1.0D0/DG)*(((1.0D0-DP)**DG)-1.0D0)
                      XTEMP5(II)=REAL(DPPF)
  381               CONTINUE
                  ELSE
                    DO382II=1,NLOCAL
                      DP=DBLE(XTEMP5(II))
                      DPPF=(1.0D0/DG)*(((1.0D0-DP)**(-DG))-1.0D0)
                      XTEMP5(II)=REAL(DPPF)
  382               CONTINUE
                  ENDIF
                ENDIF
                NS3=NLOCAL
C
              ELSE
                CALL DPJBS3(XTEMP1,NLOCAL,ICASJB,IRESAM,ISEED,
     1                      XTEMP5,NS3,
     1                      ITEMP1,
     1                      XTEMP6,
     1                      IBUGG3,IERROR)
              ENDIF
              CALL SORT(XTEMP5,NLOCAL,XTEMP5)
C
C             NOW FIT BOOTSTRAP SAMPLE VIA PPCC METHOD
C
              CORRMX=-99.0
              MINMAX=1
              CALL UNIMED(NLOCAL,XTEMP2)
              DO460IDIS=1,NUMDIS
                AIDIS=IDIS
                SHAPE=GAMLL+((AIDIS-1.0)/(ANUMDI-1.0))*(GAMUL-GAMLL)
                ICNT2=0
                DO470II=1,NLOCAL
                  ICNT2=ICNT2+1
                  CALL GEPPPF(XTEMP2(II),SHAPE,MINMAX,IGEPDF,
     1                        XTEMP3(ICNT2))
  470           CONTINUE
C
                IWRITE='OFF'
                CALL CORR(XTEMP3,XTEMP5,NLOCAL,IWRITE,CC,IBUGG3,IERROR)
                IF(CC.GT.CORRMX)THEN
                  CORRMX=CC
                  SHAPE2=SHAPE
                ENDIF
  460         CONTINUE
              XTMP10(IRESAM)=SHAPE2
C
  380       CONTINUE
C
            IQUAME='ORDE'
            QNT=0.025
            NTEMP=IBOOSS
            CALL QUANT(QNT,XTMP10,NTEMP,IWRITE,XTEMP6,MAXNXT,
     1                 IQUAME,
     1                 XQU025,IBUGG3,IERROR)
            QNT=0.975
            CALL QUANT(QNT,XTMP10,NTEMP,IWRITE,XTEMP6,MAXNXT,
     1                 IQUAME,
     1                 XQU975,IBUGG3,IERROR)
C
            ICNT=ICNT+1
            Y2(ICNT)=SHAPE1
            IF(IPOTAX.EQ.'POIN')THEN
              X2(ICNT)=REAL(NLOCAL)
            ELSE
              X2(ICNT)=U
            ENDIF
            D2(ICNT)=1.0
            ICNT=ICNT+1
            Y2(ICNT)=XQU025
            IF(IPOTAX.EQ.'POIN')THEN
              X2(ICNT)=REAL(NLOCAL)
            ELSE
              X2(ICNT)=U
            ENDIF
            D2(ICNT)=2.0
            ICNT=ICNT+1
            Y2(ICNT)=XQU975
            IF(IPOTAX.EQ.'POIN')THEN
              X2(ICNT)=REAL(NLOCAL)
            ELSE
              X2(ICNT)=U
            ENDIF
            D2(ICNT)=3.0
C
            ASCALE=SCALE
            GAMMA=SHAPE1
C
            IFEEDB=IFEESV
            IPRINT=IPRISV
C
C           METHOD OF MOMENTS, L-MOMENTS, ELEMENTAL PERCENTILES,
C           MAXIMUM LIKELIHOOD
C
          ELSEIF(IPOTME.EQ.'MOME' .OR. IPOTME.EQ.'LMOM' .OR.
     1           IPOTME.EQ.'EPER' .OR. IPOTME.EQ.'MLE')THEN
C
            IFEEDB='OFF'
            IPRINT='OFF'
C
            GAMMSV=CPUMIN
            SCALSV=CPUMIN
            MLFLAG=1
            IF(IPOTME.EQ.'MLE')MLFLAG=0
            CALL GEPML1(XTEMP1,NLOCAL,MAXNXT,MINMAX,
     1                  ICASPL,IGEPDF,IGEPSV,IDFTTY,
     1                  GAMMSV,SCALSV,ISEED,THRESH,
     1                  XTEMP2,XTEMP3,XTEMP4,XTEMP5,XTEMP6,XTEMP7,
     1                  DTEMP1,XMOM,NMOM,
     1                  XMEAN,XSD,XVAR,XMIN,XMAX,
     1                  ALOCMO,SCALMO,SHAPMO,
     1                  ALOCLM,SCALLM,SHAPLM,
     1                  ALOCEP,SCALEP,SHAPEP,
     1                  ALOCML,SCALML,SHAPML,MLFLAG,
     1                  NUSE,ZMEAN,ZVAR,ZSD,ALOC,
     1                  VARMM1,VARMM2,COVMOM,
     1                  VARML1,VARML2,COVML,
     1                  ISUBRO,IBUGG3,IERROR)
C
            IF(IPOTME.EQ.'MOME')THEN
              GAMMA=SHAPMO
            ELSEIF(IPOTME.EQ.'LMOM')THEN
              GAMMA=SHAPLM
            ELSEIF(IPOTME.EQ.'EPER')THEN
              GAMMA=SHAPEP
            ELSEIF(IPOTME.EQ.'MLE')THEN
              GAMMA=SHAPML
            ENDIF
            IF(GAMMA.EQ.CPUMIN)THEN
              WRITE(ICOUT,999)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,31)
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,1011)I
 1011         FORMAT('      AT ITERATION ',I5,': UNABLE TO ESTIMATE ',
     1               'GAMMA PARAMETER')
              CALL DPWRST('XXX','BUG ')
              WRITE(ICOUT,1013)
 1013         FORMAT('      PEAKS OVER THRESHOLD PLOT NOT GENERATED.')
              CALL DPWRST('XXX','BUG ')
              IERROR='YES'
              GOTO9000
            ENDIF
C
            ICNT=ICNT+1
            Y2(ICNT)=GAMMA
            X2(ICNT)=REAL(NLOCAL)
            D2(ICNT)=1.0
C
            IFEEDB=IFEESV
            IPRINT=IPRISV
          ENDIF
C
C         NOW DO THE FOLLOWING:
C
C         1) WRITE INFO TO DPST1F.DAT (POINTS ABOVE THRESHOLD,
C            THRESHOLD, ESTIMATES OF GAMMA, LOC, SCALE
C
C         2) IF REQUESTED, COMPUTE MEAN RECURRENCE INTERVALS.
C
C         3) WRITE MEAN RECURRENCE INTERVAL INFO TO FILE.
C
          WRITE(IOUNI1,'(I8,2X,4E15.7)')NLOCAL,U,GAMMA,ALOC,ASCALE
C
          IF(NRET.GT.0)THEN
            ALAMB=1.0
            IF(PPOTPE.GT.0.0)THEN
              ALAMB=REAL(NLOCAL)/(REAL(N)/PPOTPE)
            ENDIF
C
            IF(IPRINT.EQ.'OFF')GOTO2399
C
            IF(I.EQ.1)THEN
              ITITLE='Peaks Over Threshold Analysis'
              NCTITL=29
            ELSE
              ITITLE=' '
              NCTITL=0
            ENDIF
            ITITLZ=' '
            NCTITZ=0
            ICNT2=1
            ITEXT(ICNT2)='Iteration:'
            WRITE(ITEXT(ICNT2)(12:16),'(I5)')I
            NCTEXT(ICNT2)=11
            AVALUE(ICNT2)=REAL(I)
            IDIGIT(ICNT2)=0
            ICNT2=ICNT2+1
            ITEXT(ICNT2)='Sample Size:'
            NCTEXT(ICNT2)=12
            AVALUE(ICNT2)=REAL(N)
            IDIGIT(ICNT2)=0
            ICNT2=ICNT2+1
            ITEXT(ICNT2)='Threshold:'
            NCTEXT(ICNT2)=10
            AVALUE(ICNT2)=U
            IDIGIT(ICNT2)=NUMDIG
            ICNT2=ICNT2+1
            ITEXT(ICNT2)='Number of Observations Above Threshold:'
            NCTEXT(ICNT2)=39
            AVALUE(ICNT2)=REAL(NLOCAL)
            IDIGIT(ICNT2)=0
            ICNT2=ICNT2+1
            ITEXT(ICNT2)='Value of Lambda:'
            NCTEXT(ICNT2)=16
            AVALUE(ICNT2)=ALAMB
            IDIGIT(ICNT2)=NUMDIG
            ICNT2=ICNT2+1
            ITEXT(ICNT2)=' '
            NCTEXT(ICNT2)=0
            AVALUE(ICNT2)=0.0
            IDIGIT(ICNT2)=-1
            ICNT2=ICNT2+1
            ITEXT(ICNT2)='Parameter Estimation (PPCC Method):'
            NCTEXT(ICNT2)=35
            IF(IPOTME.EQ.'DEHA')THEN
              ITEXT(ICNT2)='Parameter Estimation (de Haan Method):'
              NCTEXT(ICNT2)=38
            ELSEIF(IPOTME.EQ.'DEHA')THEN
              ITEXT(ICNT2)='Parameter Estimation (CME Method):'
              NCTEXT(ICNT2)=34
            ELSEIF(IPOTME.EQ.'EPER')THEN
              ITEXT(ICNT2)=
     1          'Par Estimation (Elemental Percentiles):'
              NCTEXT(ICNT2)=45
            ELSEIF(IPOTME.EQ.'LMOM')THEN
              ITEXT(ICNT2)='Parameter Estimation (L-Moments Method):'
              NCTEXT(ICNT2)=40
            ELSEIF(IPOTME.EQ.'MOME')THEN
              ITEXT(ICNT2)='Parameter Estimation (Moments Method):'
              NCTEXT(ICNT2)=38
            ENDIF
            AVALUE(ICNT2)=0.0
            IDIGIT(ICNT2)=-1
            ICNT2=ICNT2+1
            ITEXT(ICNT2)='Estimate of Shape Parameter (Gamma):'
            NCTEXT(ICNT2)=36
            AVALUE(ICNT2)=GAMMA
            IDIGIT(ICNT2)=NUMDIG
            IF(IPOTME.EQ.'DEHA' .OR. IPOTME.EQ.'CME')THEN
              ICNT2=ICNT2+1
              ITEXT(ICNT2)='Standard Deviation of Gamma:'
              NCTEXT(ICNT2)=28
              AVALUE(ICNT2)=GAMMSD
              IDIGIT(ICNT2)=NUMDIG
            ELSEIF(IPOTME.EQ.'PPCC')THEN
              ICNT2=ICNT2+1
              ITEXT(ICNT2)='Lower 95% Confidence Limit:'
              NCTEXT(ICNT2)=27
              AVALUE(ICNT2)=XQU025
              IDIGIT(ICNT2)=NUMDIG
              ICNT2=ICNT2+1
              ITEXT(ICNT2)='Upper 95% Confidence Limit:'
              NCTEXT(ICNT2)=27
              AVALUE(ICNT2)=XQU975
              IDIGIT(ICNT2)=NUMDIG
            ENDIF
            ICNT2=ICNT2+1
            ITEXT(ICNT2)='Estimate of Location Parameter:'
            NCTEXT(ICNT2)=31
            AVALUE(ICNT2)=ALOC
            IDIGIT(ICNT2)=NUMDIG
            ICNT2=ICNT2+1
            ITEXT(ICNT2)='Estimate of Scale Parameter:'
            NCTEXT(ICNT2)=28
            AVALUE(ICNT2)=ASCALE
            IDIGIT(ICNT2)=NUMDIG
C
            NUMROW=ICNT2
            DO2320II=1,NUMROW
              NTOT(II)=15
 2320       CONTINUE
C
            IFRST=.TRUE.
            ILAST=.FALSE.
            CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,
     1                  NCTEXT,AVALUE,IDIGIT,
     1                  NTOT,NUMROW,
     1                  ICAPSW,ICAPTY,ILAST,IFRST,
     1                  ISUBRO,IBUGG3,IERROR)
C
 2399       CONTINUE
C
            DG=DBLE(GAMMA)
            IF(IPOTLF.EQ.'ON' .AND. GAMMA.LT.0.0)THEN
              XMAX=U - (ASCALE/GAMMA)
              DXR=DBLE(ALOC) - DBLE(ASCALE)*
     1            (1.0D0 - (DBLE(ALAMB*50.0))**DG)/DG
              XR50=REAL(DXR)
              IF(IR50.GT.0)THEN
                XLF50=(XMAX/XR50)**2
              ELSE
                XLF50=-99.0
              ENDIF
            ENDIF
C
            DO410II=1,NRET
CCCCC         DTEMP=1.0D0 - 1.0D0/(DBLE(ALAMB)*DBLE(R(II)))
CCCCC         CALL GEDPPF(DTEMP,DBLE(GAMMA),MINMAX,IGEPDF,DXR)
              DXR=DBLE(ALOC) - DBLE(ASCALE)*
     1            (1.0D0 - (DBLE(ALAMB*R(II)))**DG)/DG
              XR=REAL(DXR)
              IF(IPOTLF.EQ.'ON')THEN
                IF(GAMMA.LT.0.0 .AND. R(II).GE.51.0)THEN
                  XLF=(XR/XR50)**2
                ELSE
                  XLF=-99.0
                ENDIF
                WRITE(IOUNI2,'(2(I8,2X),4E15.7)')I,NLOCAL,U,R(II),
     1                XR,XLF
              ELSE
                WRITE(IOUNI2,'(2(I8,2X),3E15.7)')I,NLOCAL,U,R(II),XR
              ENDIF
  410       CONTINUE
C
            IF(IPRINT.EQ.'OFF')GOTO300
C
            CALL DPDTAP(R,NRET,
     1                  ALOC,ASCALE,ALAMB,DG,XR,
     1                  ICAPSW,ICAPTY,NUMDIG,
     1                  ISUBRO,IBUGG3,IERROR)
C
            IF(IPOTLF.EQ.'ON' .AND. GAMMA.LT.0.0)THEN
              ITITLE=' '
              NCTITL=0
              ICNT2=1
              ITEXT(ICNT2)=' '
              NCTEXT(ICNT2)=0
              AVALUE(ICNT2)=0.0
              IDIGIT(ICNT2)=-1
              ICNT2=ICNT2+1
              ITEXT(ICNT2)='Maximum Wind Speed:'
              NCTEXT(ICNT2)=19
              AVALUE(ICNT2)=XMAX
              IDIGIT(ICNT2)=NUMDIG
              ICNT2=ICNT2+1
              ITEXT(ICNT2)='Load Factor (Max/XR(50)**2:'
              NCTEXT(ICNT2)=27
              AVALUE(ICNT2)=XLF
              IDIGIT(ICNT2)=NUMDIG
              IFRST=.TRUE.
              ILAST=.FALSE.
C
              NUMROW=ICNT2
              DO2330II=1,NUMROW
                NTOT(II)=15
 2330         CONTINUE
C
              CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,
     1                    NCTEXT,AVALUE,IDIGIT,
     1                    NTOT,NUMROW,
     1                    ICAPSW,ICAPTY,ILAST,IFRST,
     1                    ISUBRO,IBUGG3,IERROR)
            ENDIF
          ENDIF
C
        ELSEIF(IPOTDI.EQ.'WEIB')THEN
        ELSEIF(IPOTDI.EQ.'GUMB')THEN
        ELSEIF(IPOTDI.EQ.'FREC')THEN
        ENDIF
C
  300 CONTINUE
C
      N2=ICNT
      NPLOTV=2
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IPRINT=IPRISV
      IFEEDB=IFEESV
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGG3,ISUBRO,IERROR)
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'POT2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPOT2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,IERROR,N
 9012   FORMAT('ICASPL,IERROR = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)N2,NPLOTV
 9014   FORMAT('N2,NPLOTV = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,N2
          WRITE(ICOUT,9016)I,Y2(I),X2(I),D2(I),XTEMP8(I),XTEMP9(I)
 9016     FORMAT('I,Y2(I),X2(I),D2(I),XTEMP8(I),XTEMP9(I) = ',
     1           I8,2G15.7,F9.2,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPP(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A PROBABILITY PLOT
C              (SEE EXTDIS FOR A LIST OF SUPPORTED DISTRIBUTIONS)
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--APRIL     1978.
C     UPDATED         --MAY       1978.
C     UPDATED         --JULY      1978.
C     UPDATED         --JANUARY   1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --MAY       1990.  IG, WALD, RIG, FL (SAUNDERS)
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE COMMON
C     UPDATED         --MAY       1993. MINMAX FOR EV1/EV2/WEIB DIST.
C     UPDATED         --MAY       1993. ADD GUMBEL NAME FOR EV1
C     UPDATED         --MAY       1993. ADD FRECHET NAME FOR EV2
C     UPDATED         --MAY       1993. COMPUTE & STORE PPCC
C     UPDATED         --DECEMBER  1993. SIMPLIFY STORAGE OF PPCC
C     UPDATED         --DECEMBER  1993. CALC & STORE OTHER PP STAT
C     UPDATED         --DECEMBER  1993. GENERALIZED PARETO
C     UPDATED         --DECEMBER  1993. LINFIT ARGS
C     UPDATED         --SEPTEMBER 1994. NEW DISTRIBUTIONS
C     UPDATED         --APRIL     1995. NEW DISTRIBUTIONS
C     UPDATED         --SEPTEMBER 1995. ARCSIN AND ANGLIT DISTRIBUTIONS
C     UPDATED         --SEPTEMBER 1995. FOLDED NORMAL DISTRIBUTIONS
C     UPDATED         --SEPTEMBER 1995. TRUNCATED NORMAL DISTRIBUTIONS
C     UPDATED         --OCTOBER   1995. LOG GAMMA DISTRIBUTIONS
C     UPDATED         --OCTOBER   1995. HYPERBOLIC SECANT DISTRIBUTIONS
C     UPDATED         --OCTOBER   1995. GOMPERTZ DISTRIBUTION
C     UPDATED         --OCTOBER   1995. HALF-LOGISTIC
C     UPDATED         --OCTOBER   1995. GENERALIZED EXTREME VALUE
C     UPDATED         --OCTOBER   1995. HALF CAUCHY
C     UPDATED         --OCTOBER   1995. PARETO SECOND KIND
C     UPDATED         --OCTOBER   1995. DOUBLE WEIBULL
C     UPDATED         --OCTOBER   1995. EXPONENTIAL WEIBULL
C     UPDATED         --OCTOBER   1995. TRUNCATED EXPONENTIAL
C     UPDATED         --OCTOBER   1995. WRAPPED CAUCHY
C     UPDATED         --DECEMBER  1995. GENERALIZED LOGISTIC
C     UPDATED         --JANUARY   1996. DOUBLE GAMMA
C     UPDATED         --JANUARY   1996. MIELKE BETA KAPPA
C     UPDATED         --JANUARY   1996. FOLDED CAUCHY
C     UPDATED         --FEBRUARY  1996. BETA BINOMIAL
C     UPDATED         --FEBRUARY  1996. BETA PASCAL
C     UPDATED         --FEBRUARY  1996. GENERALIZED EXPONENTIAL
C     UPDATED         --MAY       1996. RECIPROCAL
C     UPDATED         --MAY       1998. NORMAL MIXTURE
C     UPDATED         --MAY       1998. INVERTED GAMMA
C     UPDATED         --AUGUST    2001. GENERALIZED LAMBDA
C     UPDATED         --SEPTEMBER 2001. JOHNSON SB
C     UPDATED         --SEPTEMBER 2001. JOHNSON SU
C     UPDATED         --SEPTEMBER 2001. INVERTED WEIBULL
C     UPDATED         --SEPTEMBER 2001. LOG DOUBLE EXPONENTIAL
C     UPDATED         --SEPTEMBER 2001. BUG FIX FOR TRIANGULAR
C     UPDATED         --NOVEMBER  2001. GEOMETRIC EXTREME EXPO
C     UPDATED         --MAY       2002. TWO-SIDED POWER
C     UPDATED         --MAY       2002. BIWEIBULL
C     UPDATED         --JANUARY   2003. G-AND-H
C     UPDATED         --APRIL     2003. LANDAU
C     UPDATED         --MAY       2003. ERROR
C     UPDATED         --JUNE      2003. TRAPEZOID
C     UPDATED         --JUNE      2003. GENERALIZED TRAPEZOID
C     UPDATED         --NOVEMBER  2003. FOLDED T
C     UPDATED         --DECEMBER  2003. SUPPORT FOR MU PARAMETER FOR
C                                       INVERSE GAUSSIAN, RECIPROCAL
C                                       INVERSE GAUSSIAN
C     UPDATED         --DECEMBER  2003. SLASH, SKEWED NORMAL,
C     UPDATED         --                INVERTED BETA, SKEWED T,
C     UPDATED         --                GOMPERTZ-MAKEHAM
C     UPDATED         --MARCH     2004. LOG-SKEW-NORMAL
C     UPDATED         --MARCH     2004. LOG-SKEW-T
C     UPDATED         --MARCH     2004. MAKE COMMAND SEARCH TABLE
C                                       DRIVEN
C     UPDATED         --MARCH     2004. POLYA
C     UPDATED         --APRIL     2004. HERMITE
C     UPDATED         --APRIL     2004. YULE
C     UPDATED         --MAY       2004. PERFORM A BIWEIGHT FIT TO
C                                       OBTAIN ALTERNATE ESTIMATES
C                                       FOR LOCATION AND SCALE (FOR
C                                       LONG TAILED DISTRIBUTIONS SUCH
C                                       AS CAUCHY)
C     UPDATED         --JUNE      2004. SKEW DOUBLE EXPONENTIAL
C     UPDATED         --JUNE      2004. ASYMMETRIC DOUBLE EXPONENTIAL
C     UPDATED         --JUNE      2004. MAXWELL, RAYLEIGH
C     UPDATED         --JULY      2004. ALTERNATE DEFINITION FOR
C                                       GOMPERTZ-MAKEHAM
C     UPDATED         --AUGUST    2004. GENERALIZED ASYMMETRIC DOUBLE
C                                       EXPONENTIAL
C     UPDATED         --AUGUST    2004. GENERALIZED INVERSE GAUSSIAN
C     UPDATED         --SEPTEMBER 2004. MCLEISH
C     UPDATED         --SEPTEMBER 2004. BESSEL I FUNCTION
C     UPDATED         --SEPTEMBER 2004. BESSEL K FUNCTION
C     UPDATED         --SEPTEMBER 2004. GENERALIZED MCLEISH
C     UPDATED         --SEPTEMBER 2004. HYPERBOLIC
C     UPDATED         --SEPTEMBER 2004. SUPPORT FOR:
C                                       SET PROBABILITY PLOT DATA
C                                           POINTS
C     UPDATED         --OCTOBER   2004. SUPPORT FOR CENSORED DATA
C     UPDATED         --DECEMBER  2004. CLARIFY SHAPE PARAMETERS FOR
C                                       PARETO PARETO SECOND KIND
C     UPDATED         --APRIL     2005. FOR BINNED DATA, SUPPORT CASE
C                                       WHERE LOWER AND UPPER BIN
C                                       BOUNDARIES SPECIFIED RATHER
C                                       THAN THE MID-POINTS.  THIS
C                                       ALLOWS USER FLEXIBILITY IN
C                                       COMBINING BINS
C     UPDATED         --AUGUST    2005. LOG LAPLACE AS SYNONYM FOR
C                                       LOG DOUBLE EXPONENTIAL
C     UPDATED         --FEBRUARY  2006. GENERALIZED LOGISTIC TYPE 5
C     UPDATED         --FEBRUARY  2006. WAKEBY
C     UPDATED         --FEBRUARY  2006. FMKL PARAMETERIZATION OF
C                                       GENERALIZED TUKEY LAMBDA
C     UPDATED         --MARCH     2006. BETA-NORMAL
C     UPDATED         --MARCH     2006. GENERALIZED LOGISTIC TYPE 2
C     UPDATED         --MARCH     2006. GENERALIZED LOGISTIC TYPE 3
C     UPDATED         --MARCH     2006. GENERALIZED LOGISTIC TYPE 4
C     UPDATED         --MARCH     2006. ASYMMETRIC LOG DOUBLE EXPO
C     UPDATED         --MAY       2006. BETA GEOMETRIC
C     UPDATED         --MAY       2006. ZETA
C     UPDATED         --MAY       2006. ZIPF
C     UPDATED         --MAY       2006. BOREL-TANNER
C     UPDATED         --MAY       2006. BETA NEGATIVE BINOMIAL
C     UPDATED         --JUNE      2006. LAGRANGE POISSON
C     UPDATED         --JUNE      2006. LOG BETA
C     UPDATED         --JUNE      2006. LEADS IN COIN TOSSING
C     UPDATED         --JUNE      2006. MATCHING
C     UPDATED         --JUNE      2006. CLASSICAL OCCUPANCY (NOT ACTIVE)
C     UPDATED         --JUNE      2006. LOG BETA
C     UPDATED         --JUNE      2006. POLYA AEPPLI
C     UPDATED         --JUNE      2006. LOST GAMES
C     UPDATED         --JUNE      2006. GENERALIZED LOGARITHMIC SERIES
C     UPDATED         --JULY      2006. GENERALIZED NEGATIVE BINOMIAL
C     UPDATED         --JULY      2006. GEETA
C     UPDATED         --JULY      2006. QUASI BINOMIAL TYPE I
C     UPDATED         --AUGUST    2006. CONSUL
C     UPDATED         --AUGUST    2006. LAGRANGE KATZ
C     UPDATED         --SEPTEMBER 2006. KATZ
C     UPDATED         --OCTOBER   2006. FRACTIONAL DEGREES OF FREEDOM
C                                       FOR T DISTRIBUTION
C     UPDATED         --OCTOBER   2006. SHAPE PARAMETER FOR SEMI-CIRCULAR
C                                       DISTRIBUTION
C     UPDATED         --NOVEMBER  2006. DISCRETE WEIBULL
C     UPDATED         --NOVEMBER  2006. GENERALIZED LOST GAMES
C     UPDATED         --JANUARY   2007. TRUNCATED GENERALIZED
C                                       NEGATIVE BINOMIAL
C     UPDATED         --JANUARY   2007. KATZ
C     UPDATED         --FEBRUARY  2007. TOPP AND LEONE
C     UPDATED         --FEBRUARY  2007. GENERALIZED TOPP AND LEONE
C     UPDATED         --FEBRUARY  2007. REFLECTED GENERALIZED TOPP
C                                       AND LEONE
C     UPDATED         --MARCH     2007. SPECIFY LOWER/UPPER LIMITS
C                                       FOR TRIANGULAR DISTRIBUTION
C     UPDATED         --JUNE      2007. SPECIFY LOWER/UPPER LIMITS
C                                       FOR TWO-SIDED POWER DISTRIBUTION
C     UPDATED         --AUGUST    2007. SUPPORT CENSORING FOR GROUPED
C                                       DATA
C     UPDATED         --SEPTEMBER 2007. SLOPE
C     UPDATED         --SEPTEMBER 2007. TWO-SIDED SLOPE
C     UPDATED         --SEPTEMBER 2007. OGIVE
C     UPDATED         --SEPTEMBER 2007. TWO-SIDED OGIVE
C     UPDATED         --OCTOBER   2007. BURR TYPE 1 (= UNIFORM)
C     UPDATED         --OCTOBER   2007. BURR TYPE 2
C     UPDATED         --OCTOBER   2007. BURR TYPE 3
C     UPDATED         --OCTOBER   2007. BURR TYPE 4
C     UPDATED         --OCTOBER   2007. BURR TYPE 5
C     UPDATED         --OCTOBER   2007. BURR TYPE 6
C     UPDATED         --OCTOBER   2007. BURR TYPE 7
C     UPDATED         --OCTOBER   2007. BURR TYPE 8
C     UPDATED         --OCTOBER   2007. BURR TYPE 9
C     UPDATED         --OCTOBER   2007. BURR TYPE 10
C     UPDATED         --OCTOBER   2007. BURR TYPE 11
C     UPDATED         --OCTOBER   2007. BURR TYPE 12
C     UPDATED         --OCTOBER   2007. KUMARASWAMY
C     UPDATED         --NOVEMBER  2007. EXPONENTIAL POWER - ALPHA
C                                       REALLY A SCALE PARAMETER
C     UPDATED         --NOVEMBER  2007. ALPHA - BETA REALLY A
C                                       SCALE PARAMETER
C     UPDATED         --DECEMBER  2007. REFLECTED POWER
C     UPDATED         --JANUARY   2008. MUTH
C     UPDATED         --FEBRUARY  2008. LOGISTIC-EXPONENTIAL
C     UPDATED         --FEBRUARY  2008. SIGMA PARAMETER IS REALLY
C                                       A SCALE PARAMETER FOR MAXWELL
C     UPDATED         --MARCH     2008. TRUNCATED PARETO
C     UPDATED         --MARCH     2008. BRITTLE FRACTURE
C     UPDATED         --MARCH     2008. 3-PARAMETER LOGISTIC-EXPONENTIAL
C     UPDATED         --MAY       2008. KAPPA
C     UPDATED         --MAY       2008. PEARSON TYPE 3
C     UPDATED         --JULY      2008. MODIFY PARAMERERIZATION OF GIG
C     UPDATED         --JULY      2008. 2-SHAPE PARAMETER CASE FOR GIG
C     UPDATED         --AUGUST    2009. RE-WRITE:
C                                       1) USE DPPARS TO PERFORM
C                                          SOME OF THE PARSING
C                                       2) USE EXTDIS TO EXTRACT DIST
C                                          NAME
C                                       3) USE EXTPA1 TO EXTRACT
C                                          PARAMETERS
C                                       4) SUPPORT "REPLICATION" AND
C                                          "MULTIPLE" KEYWORDS
C     UPDATED         --JANUARY   2010. ADD "HIGHLIGHT" OPTION
C     UPDATED         --SEPTEMBER 2010. SUPPORT A "LEVEL" VARIABLE
C                                       FOR BRITTLE FIBER WEIBULL
C                                       (MAY ADD TO A FEW OTHERS AT
C                                       A LATER TIME).  NOTE THAT THIS
C                                       IS CURRENTLY ONLY SUPPORTED
C                                       FOR THE SINGLE RESPONSE
C                                       VARIABLE RAW DATA CASE
C     UPDATED         --JULY      2019. TWEAK SCRATCH SPACE
C     UPDATED         --JULY      2019. REMOVE TWO ARRAYS FROM CALL
C                                       LIST TO DPPP2, DPPP3
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ICASE
      CHARACTER*4 IDATSW
      CHARACTER*4 IHP
      CHARACTER*4 IHP2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ICENSO
      CHARACTER*4 IMETHD
      CHARACTER*4 IREPL
      CHARACTER*4 IMULT
      CHARACTER*4 IHIGH
      CHARACTER*4 ILEVEL
C
      CHARACTER*4 IFLAGU
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*60 IDIST
      CHARACTER*40 INAME
C
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION X1(MAXOBV)
      DIMENSION XLEVEL(MAXOBV)
      DIMENSION XHIGH(MAXOBV)
      DIMENSION WEIGHH(MAXOBV)
      DIMENSION WEIGHV(MAXOBV)
CCCCC DIMENSION PREDBW(MAXOBV)
CCCCC DIMENSION RESBW(MAXOBV)
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
      DIMENSION XTEMP3(MAXOBV)
      DIMENSION XTEMP4(MAXOBV)
      DIMENSION XCENS(MAXOBV)
C
      DIMENSION XDESGN(MAXOBV,6)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
      DIMENSION XIDTE3(MAXOBV)
      DIMENSION XIDTE4(MAXOBV)
      DIMENSION XIDTE5(MAXOBV)
      DIMENSION XIDTE6(MAXOBV)
C
      DIMENSION ZY(MAXOBV)
      DIMENSION ZXLOW(MAXOBV)
      DIMENSION ZXHIGH(MAXOBV)
      DIMENSION ZCENS(MAXOBV)
C
CCCCC FOLLOWING LINES ADDED JUNE, 1990
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),X1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y1(1))
      EQUIVALENCE (GARBAG(IGARB3),WEIGHH(1))
      EQUIVALENCE (GARBAG(IGARB4),WEIGHV(1))
      EQUIVALENCE (GARBAG(IGARB5),XHIGH(1))
      EQUIVALENCE (GARBAG(IGARB6),XTEMP1(1))
      EQUIVALENCE (GARBAG(IGARB7),XCENS(1))
      EQUIVALENCE (GARBAG(IGARB8),XTEMP2(1))
      EQUIVALENCE (GARBAG(IGARB9),XTEMP3(1))
      EQUIVALENCE (GARBAG(IGAR10),XTEMP4(1))
      EQUIVALENCE (GARBAG(JGAR11),XIDTEM(1))
      EQUIVALENCE (GARBAG(JGAR12),XIDTE2(1))
      EQUIVALENCE (GARBAG(JGAR13),XIDTE3(1))
      EQUIVALENCE (GARBAG(JGAR14),XIDTE4(1))
      EQUIVALENCE (GARBAG(JGAR15),XIDTE5(1))
      EQUIVALENCE (GARBAG(JGAR16),XIDTE6(1))
      EQUIVALENCE (GARBAG(JGAR17),ZY(1))
      EQUIVALENCE (GARBAG(JGAR18),ZCENS(1))
      EQUIVALENCE (GARBAG(JGAR19),ZXLOW(1))
      EQUIVALENCE (GARBAG(JGAR20),ZXHIGH(1))
      EQUIVALENCE (GARBAG(IGAR11),XLEVEL(1))
      EQUIVALENCE (GARBAG(IGAR12),XDESGN(1,1))
CCCCC END CHANGE
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
CCCCC THE FOLLOWING LINE WAS ADDED (FOR MINMAX)    MAY 1993
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOS2.INC'
CCCCC THE FOLLOWING LINE WAS ADDED (FOR IHOST1/2)   MAY 1993
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOMC.INC'
      INCLUDE 'DPCOST.INC'
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      ICASPL='    '
      ICENSO='OFF'
      IREPL='OFF'
      IMULT='OFF'
      IHIGH='OFF'
      IMETHD='UNIM'
      ILEVEL='OFF'
      IF(IPPLCN.EQ.'KAPL')IMETHD=IPPLCN
C
      ISUBN1='DPPP'
      ISUBN2='    '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
CCCCC MAXV2=2
      MINN2=3
C
C               ***************************************
C               **  TREAT THE PROBABILITY PLOT CASE  **
C               ***************************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'DPPP')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2
   52   FORMAT('ICASPL,IAND1,IAND2 = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************************************
C               **  STEP 1--                                           **
C               **  EXTRACT THE COMMAND                                **
C               **  LOOK FOR ONE OF THE FOLLOWING COMMANDS:            **
C               **    1) <DIST> PROBABILITY PLOT Y                     **
C               **    2) <DIST> PROBABILITY PLOT Y X                   **
C               **    3) <DIST> PROBABILITY PLOT Y XLOW XHIGH          **
C               **                                                     **
C               **    4) <DIST> CENSORED PROBABILITY PLOT Y X          **
C               **    5) <DIST> CENSORED PROBABILITY PLOT Y X XMID     **
C               **    6) <DIST> CENSORED PROBABILITY PLOT Y X XLOW     **
C               **                                        XLOW XHIGH   **
C               **                                                     **
C               **    7) <DIST> MULTIPLE PROBABILITY PLOT Y1 ... YK    **
C               **    8) <DIST> REPLICATED PROBABILITY PLOT Y X1 ...XK **
C               **    9) <DIST> REPLICATED CENSORED PROBABILITY PLOT   **
C               **              Y X X1 ...XK                           **
C               **   10) <DIST> HIGHLIGHTED PROBABILITY PLOT Y X1 X2   **
C               *********************************************************
C
C     LOOK FOR THE WORD "PROBABILITY PLOT" (ERROR IF NOT FOUND).
C     ALSO LOOK FOR OPTIONAL KEYWORDS "CENSOR", "REPLICATION",
C     AND "MULTIPLE".
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICOM.EQ.'FLUC' .OR. ICOM.EQ.'TABU')THEN
        IFOUND='NO'
        GOTO9000
      ENDIF
C
      ILASTC=9999
      ILASTZ=9999
      IFOUND='NO'
      DO100I=1,NUMARG-1
        IF(IHARG(I).EQ.'PROB' .AND. IHARG(I+1).EQ.'PLOT')THEN
          IFOUND='YES'
          ILASTC=MIN(ILASTC,I-1)
          ILASTZ=I+1
        ELSEIF(IHARG(I).EQ.'CENS')THEN
          ICENSO='ON'
          ILASTC=MIN(ILASTC,I-1)
        ELSEIF(IHARG(I).EQ.'REPL')THEN
          IREPL='ON'
          ILASTC=MIN(ILASTC,I-1)
        ELSEIF(IHARG(I).EQ.'MULT')THEN
          IMULT='ON'
          ILASTC=MIN(ILASTC,I-1)
        ELSEIF(IHARG(I).EQ.'HIGH')THEN
          IHIGH='ON'
          ILASTC=MIN(ILASTC,I-1)
        ENDIF
  100 CONTINUE
C
      IF(IFOUND.EQ.'NO')GOTO9000
      IF(IMULT.EQ.'ON')THEN
        IF(IREPL.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
  101     FORMAT('***** ERROR IN PROBABILITY PLOT--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,102)
  102     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ',
     1           '"REPLICATION" FOR THE PROBABILITY PLOT.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSEIF(ICENSO.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,112)
  112     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ',
     1           '"CENSORING" FOR THE PROBABILITY PLOT.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSEIF(IHIGH.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,122)
  122     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ',
     1           '"HIGHTLIGHTED" FOR THE PROBABILITY PLOT.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
C               ***************************************************
C               **  STEP 2--EXTRACT THE DISTRIBUTION NAME        **
C               ***************************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,211)IMULT,IREPL,ICENSO,IHIGH,ILASTC,ILASTZ
  211   FORMAT('IMULT,IREPL,ICENSO,IHIGH,ILASTC,ILASTZ = ',4(A4,2X),2I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      JMIN=0
      JMAX=ILASTC
C
      CALL EXTDIS(ICOM,ICOM2,IHARG,IHARG2,NUMARG,JMIN,JMAX,
     1            ICASPL,IDIST,NUMSHA,IFOUND,ILOCV,
     1            ISUBRO,IBUGG3,IERROR)
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,251)
  251   FORMAT('***** AFTER CALL EXTDIS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,252)ICASPL,NUMSHA,IDIST
  252   FORMAT('ICASPL,NUMSHA,IDIST = ',A4,2X,I8,2X,A60)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IFOUND.EQ.'NO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,262)
  262   FORMAT('      NO MATCH FOUND FOR DISTRIBUTION NAME.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSE
        CALL ADJUST(ILASTZ,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      ENDIF
C
C               ***************************************************
C               **  STEP 3--EXTRACT THE SHAPE PARAMETERS FOR     **
C               **          THE SPECIFIED DISTRIBUTION.          **
C               ***************************************************
C
      ISTEPN='3'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHP='PPLO'
      IHP2='C   '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')THEN
        PPLOC=0.0
      ELSE
        PPLOC=VALUE(ILOCV)
      ENDIF
      IHP='PPSC'
      IHP2='ALE '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')THEN
        PPSCAL=1.0
      ELSE
        PPSCAL=VALUE(ILOCV)
        IF(PPSCAL.LE.0.0)PPSCAL=1.0
      ENDIF
C
      IF(ICASPL.EQ.'GMCL' .OR. ICASPL.EQ.'TRAP' .OR.
     1       ICASPL.EQ.'GTRA' .OR. ICASPL.EQ.'UTSP' .OR.
     1       ICASPL.EQ.'GLGP' .OR.
     1       ICASPL.EQ.'PARE' .OR. ICASPL.EQ.'PAR2'
     1  )THEN
        CONTINUE
      ELSE
        IHP='A   '
        IHP2='    '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
        IF(IERROR.EQ.'YES')THEN
          A=0.0
        ELSE
          A=VALUE(ILOCV)
        ENDIF
C
        IHP='B   '
        IHP2='    '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
        IF(IERROR.EQ.'YES')THEN
          B=1.0
        ELSE
          B=VALUE(ILOCV)
        ENDIF
C
      ENDIF
C
      IF(NUMSHA.GE.1)THEN
        CALL EXTPA1(ICASPL,IDIST,A,B,
     1              SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1              SHAPE5,SHAPE6,SHAPE7,
     1              IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1              ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1              IGETDF,ICONDF,IGOMDF,IKATDF,
     1              IGIGDF,IGEODF,
     1              IBFWLI,IEEWLI,
     1              ISUBRO,IBUGG2,IERROR)
      ENDIF
C
C               *********************************
C               **  STEP 4--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='4'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='PROBABILITY PLOT'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IFLAGM=0
      IF(IMULT.EQ.'ON')THEN
        IFLAGE=0
        IFLAGM=1
      ELSE
         IF(IREPL.EQ.'OFF' .AND. ICENSO.EQ.'OFF' .AND.
     1      IHIGH.EQ.'OFF')IFLAGM=1
      ENDIF
      IF(ICASPL.EQ.'BFWE' .AND.
     1  (IBFWTY.EQ.'ON' .OR. IBFWLI.EQ.'VARI'))THEN
        IFLAGM=0
      ENDIF
      IF(ICASPL.EQ.'EEWE' .AND. IEEWLI.EQ.'VARI')THEN
        IFLAGM=0
      ENDIF
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=-99
      MAXNVA=-99
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ***********************************************
C               **  STEP 5--                                 **
C               **  DETERMINE:                               **
C               **  1) NUMBER OF REPLICATION VARIABLES (0-6) **
C               **  2) NUMBER OF CENSORING   VARIABLES (0-1) **
C               **  3) NUMBER OF GROUPING    VARIABLES (0-2) **
C               **  4) NUMBER OF RESPONSE    VARIABLES (>= 1)**
C               **  5) NUMBER OF HIGHLIGHT   VARIABLES (0-2) **
C               ***********************************************
C
      ISTEPN='5'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NRESP=0
      NREPL=0
      NCENS=0
      NGROUP=0
      NHIGH=0
      NLEVEL=0
      IDATSW='RAW'
      IF(IMULT.EQ.'ON')THEN
        NRESP=NUMVAR
      ELSEIF(IHIGH.EQ.'ON')THEN
        NRESP=1
        IF(ICASPL.EQ.'BFWE')THEN
          IF(IBFWTY.EQ.'ON' .AND. NUMVAR.GT.1)THEN
            NLEVEL=1
            ILEVEL='ON'
          ENDIF
          IF(IBFWLI.EQ.'VARI' .AND. NUMVAR.GT.1)THEN
            NLEVEL=1
            ILEVEL='ON'
          ENDIF
          NHIGH=NUMVAR-NRESP-NLEVEL
        ELSEIF(ICASPL.EQ.'EEWE')THEN
          IF(IEEWLI.EQ.'VARI' .AND. NUMVAR.GT.1)THEN
            NLEVEL=1
            ILEVEL='ON'
          ENDIF
          NHIGH=NUMVAR-NRESP-NLEVEL
        ELSE
          NHIGH=NUMVAR-1
        ENDIF
        IF(NHIGH.EQ.0)THEN
          NHIGH=0
        ELSEIF(NHIGH.LT.1 .OR. NHIGH.GT.2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,501)
  501     FORMAT('      FOR THE HIGHLIGHTED CASE, THE NUMBER OF ',
     1           'HIGHLIGHT VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,502)
  502     FORMAT('      MUST BE BETWEEN 1 AND 2;  SUCH WAS NOT THE ',
     1           'CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,503)NHIGH
  503     FORMAT('      THE NUMBER OF HIGHLIGHT VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ELSEIF(IREPL.EQ.'ON')THEN
        NRESP=1
        IF(ICENSO.EQ.'ON')THEN
          NCENS=1
        ENDIF
        NREPL=NUMVAR-NRESP-NCENS
        IF(NREPL.LT.1 .OR. NREPL.GT.6)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,511)
  511     FORMAT('      FOR THE REPLICATION CASE, THE NUMBER OF ',
     1           'REPLICATION VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,512)
  512     FORMAT('      MUST BE BETWEEN 1 AND 4;  SUCH WAS NOT THE ',
     1           'CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,513)NREPL
  513     FORMAT('      THE NUMBER OF REPLICATION VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
C       NOTE 09/2010: FOR BRITTLE FIBER WEIBULL, THE CASE WHERE THERE
C                     ARE MULTIPLE VARIABLES IS AMBIGUOUS IN TERMS
C                     OF WHETHER THIS IMPLIES A "GAUGE LENGTH"
C                     VARIABLE OR A CLASS MID-POINT VARIABLE.
C                     THE COMMAND 
C
C                         SET BRITTLE FIBER WEIBULL LENGTH <ON/OFF>
C
C                     SPECIFIES WHETHER 
C
      ELSE
        NRESP=1
        NLEVEL=0
        IF(ICENSO.EQ.'ON' .AND. NUMVAR.GT.1)THEN
          NCENS=1
        ENDIF
        IF(ICASPL.EQ.'BFWE')THEN
          IF(IBFWTY.EQ.'ON' .AND. NUMVAR.GT.1)THEN
            NLEVEL=1
            ILEVEL='ON'
          ENDIF
          IF(IBFWLI.EQ.'VARI' .AND. NUMVAR.GT.1)THEN
            NLEVEL=1
            ILEVEL='ON'
          ENDIF
          NGROUP=NUMVAR-NRESP-NCENS-NLEVEL
        ELSEIF(ICASPL.EQ.'EEWE')THEN
          IF(IEEWLI.EQ.'VARI' .AND. NUMVAR.GT.1)THEN
            NLEVEL=1
            ILEVEL='ON'
          ENDIF
          NGROUP=NUMVAR-NRESP-NCENS-NLEVEL
        ELSE
          NGROUP=NUMVAR-NRESP-NCENS
        ENDIF
        IF(NGROUP.EQ.1)IDATSW='FREQ'
        IF(NGROUP.EQ.2)IDATSW='FRE2'
C
        IF(NGROUP.LT.0 .OR. NGROUP.GT.2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,521)
  521     FORMAT('      THE NUMBER OF CLASS VARIABLES IS LESS THAN ',
     1           'ZERO OR GREATER THAN TWO.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,523)NGROUP
  523     FORMAT('      THE NUMBER OF CLASS VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
C               *****************************************
C               **  STEP 6--                           **
C               **  GENERATE THE PROBABILITY PLOTS FOR **
C               **  THE VARIOUS CASES.                 **
C               *****************************************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')THEN
        ISTEPN='6'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,601)NRESP,NREPL,NHIGH,NGROUP
  601   FORMAT('NRESP,NREPL,NHIGH,NGROUP = ',4I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *****************************************
C               **  STEP 7A--                          **
C               **  CASE 1: SINGLE RESPONSE VARIABLE   **
C               **          WITH NO REPLICATION        **
C               *****************************************
C
      IF(NRESP.EQ.1 .AND. NREPL.EQ.0 .AND. NHIGH.EQ.0)THEN
        ISTEPN='7A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        IF(IFLAGM.EQ.1 .AND. NUMVAR.EQ.1)THEN
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y1,XTEMP1,XTEMP2,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1                IBUGG3,ISUBRO,IFOUND,IERROR)
        ELSE
          J=0
          IMAX=NRIGHT(1)
          IF(NQ.LT.NRIGHT(1))IMAX=NQ
          DO710I=1,IMAX
            IF(ISUB(I).EQ.0)GOTO710
            J=J+1
C
C           RESPONSE VARIABLE IN Y1
C
            IJ=MAXN*(ICOLR(1)-1)+I
            IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
            IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
            IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
            IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
            IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
            IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
            IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
            ICOLC=1
C
C           LEVEL VARIABLE IN XLEVEL
C
            IF(NLEVEL.EQ.1)THEN
              ICOLC=ICOLC+1
              ICOLT=ICOLR(ICOLC)
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)XLEVEL(J)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)XLEVEL(J)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)XLEVEL(J)=RES(I)
              IF(ICOLT.EQ.MAXCP3)XLEVEL(J)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)XLEVEL(J)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)XLEVEL(J)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)XLEVEL(J)=TAGPLO(I)
            ELSE
              XLEVEL(J)=CPUMIN
            ENDIF
C
C           CENSORING VARIABLE IN XCENS
C
            IF(ICENSO.EQ.'ON')THEN
              ICOLC=ICOLC+1
              ICOLT=ICOLR(ICOLC)
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)XCENS(J)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)XCENS(J)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)XCENS(J)=RES(I)
              IF(ICOLT.EQ.MAXCP3)XCENS(J)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)XCENS(J)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)XCENS(J)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)XCENS(J)=TAGPLO(I)
            ENDIF
C
C           CLASS VARIABLE IN X1 FOR FREQUENCY DATA
C
            IF(NGROUP.GE.1)THEN
              ICOLC=ICOLC+1
              ICOLT=ICOLR(ICOLC)
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)X1(J)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)X1(J)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)X1(J)=RES(I)
              IF(ICOLT.EQ.MAXCP3)X1(J)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)X1(J)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)X1(J)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)X1(J)=TAGPLO(I)
            ENDIF
C
C           IF FREQUENCY DATA GIVEN WITH LOWER AND UPPER CLASS LIMITS,
C           THEN UPPER CLASS LIMIT VARIABLE IN XHIGH
C
            IF(NGROUP.EQ.2)THEN
              ICOLC=ICOLC+1
              ICOLT=ICOLR(ICOLC)
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)XHIGH(J)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)XHIGH(J)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)XHIGH(J)=RES(I)
              IF(ICOLT.EQ.MAXCP3)XHIGH(J)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)XHIGH(J)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)XHIGH(J)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)XHIGH(J)=TAGPLO(I)
            ENDIF
C
  710     CONTINUE
          NLOCAL=J
        ENDIF
C
C       *****************************************************
C       **  STEP 7B--                                      **
C       **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C       **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C       **  RESET THE VECTOR D(.) TO ALL ONES.             **
C       **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).  **
C       **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).  **
C       *****************************************************
C
        ISTEPN='7B'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'DPPP')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,711)
  711     FORMAT('***** FROM THE MIDDLE  OF DPPP--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,712)ICASPL,NUMVAR,IDATSW,NLOCAL
  712     FORMAT('ICASPL,NUMVAR,IDATSW,NQ = ',
     1           A4,I8,2X,A4,I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO715I=1,NLOCAL
              WRITE(ICOUT,716)I,Y1(I),X1(I),XHIGH(I),XCENS(I)
  716         FORMAT('I,Y1(I),X1(I),XHIGH(I),XCENS(I) = ',I8,4F12.5)
              CALL DPWRST('XXX','BUG ')
  715       CONTINUE
          ENDIF
        ENDIF
C
        NPLOTP=0
        NCURVE=1
        IF(NGROUP.EQ.0)THEN
          CALL DPPP2(Y1,XCENS,XLEVEL,NLOCAL,ICASPL,NHIGH,
     1               XTEMP1,XTEMP2,XTEMP3,
     1               YLOWLM,YUPPLM,A,B,MINMAX,
     1               SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1               SHAPE6,SHAPE7,
     1               IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1               ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1               IGOMDF,IKATDF,IGIGDF,IGEODF,
     1               IPPLDP,MAXOBV,ICENSO,IMETHD,ILEVEL,
     1               PPLOC,PPSCAL,
     1               PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1               CCALBE,PPA0BW,PPA1BW,
     1               WEIGHH,WEIGHV,
     1               Y,X,D,NPLOTP,NPLOTV,NCURVE,IBUGG3,ISUBRO,IERROR)
        ELSE
          CALL DPPP3(Y1,X1,XHIGH,NLOCAL,ICASPL,IDATSW,
     1               XCENS,XTEMP1,XTEMP2,XTEMP3,XTEMP4,
     1               YLOWLM,YUPPLM,A,B,MINMAX,
     1               SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1               SHAPE6,SHAPE7,
     1               IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1               ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1               IGOMDF,IKATDF,IGIGDF,IGEODF,
     1               IPPLDP,MAXOBV,ICENSO,IMETHD,
     1               PPLOC,PPSCAL,
     1               PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1               CCALBE,PPA0BW,PPA1BW,
     1               WEIGHH,WEIGHV,
     1               Y,X,D,NPLOTP,NPLOTV,NCURVE,IBUGG3,ISUBRO,IERROR)
        ENDIF
C
C               ***************************************
C               **  STEP 7C--                        **
C               **  COMPUTE PROB PLOT STAT           **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
        ISTEPN='7C'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IFLAGU='ON'
        IFRST=.FALSE.
        ILAST=.FALSE.
        CALL DPPP4(PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1             CCALBE,PPA0BW,PPA1BW,
     1             IFLAGU,IFRST,ILAST,
     1             IBUGG2,IBUGG3,ISUBRO,IERROR)
C
C               ******************************************
C               **  STEP 8A--                           **
C               **  CASE 2: MULTIPLE RESPONSE VARIABLES **
C               **          NOTE THAT CENSORING AND     **
C               **          GROUPING ARE NOT SUPPORTED  **
C               **          FOR THIS CASE.              **
C               ******************************************
C
      ELSEIF(NRESP.GT.1)THEN
        ISTEPN='8A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C       LOOP THROUGH EACH OF THE RESPONSE VARIABLES
C
        NPLOTP=0
        NCURVE=0
        DO810IRESP=1,NRESP
          NCURVE=NCURVE+1
C
          IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,811)IRESP,NCURVE
  811       FORMAT('IRESP,NCURVE = ',2I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          ICOL=IRESP
          NUMVA2=1
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y1,XTEMP1,XTEMP2,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1                IBUGG3,ISUBRO,IFOUND,IERROR)
C
C         *****************************************************
C         **  STEP 8B--                                      **
C         **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C         **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C         **  RESET THE VECTOR D(.) TO ALL ONES.             **
C         **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).  **
C         **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).  **
C         *****************************************************
C
          ISTEPN='8B'
          IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'DPPP')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,822)
  822       FORMAT('***** FROM THE MIDDLE  OF DPPP--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,823)ICASPL,NUMVAR,IDATSW,NLOCAL
  823       FORMAT('ICASPL,NUMVAR,IDATSW,NQ = ',
     1             A4,I8,2X,A4,I8)
            CALL DPWRST('XXX','BUG ')
            IF(NLOCAL.GE.1)THEN
              DO825I=1,NLOCAL
                WRITE(ICOUT,826)I,Y1(I),X1(I),XHIGH(I),XCENS(I)
  826           FORMAT('I,Y1(I),X1(I),XHIGH(I),XCENS(I) = ',I8,4F12.5)
                CALL DPWRST('XXX','BUG ')
  825         CONTINUE
            ENDIF
          ENDIF
C
          NPLOT1=NPLOTP
          CALL DPPP2(Y1,XCENS,XLEVEL,NLOCAL,ICASPL,NHIGH,
     1               XTEMP1,XTEMP2,XTEMP3,
     1               YLOWLM,YUPPLM,A,B,MINMAX,
     1               SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1               SHAPE6,SHAPE7,
     1               IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1               ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1               IGOMDF,IKATDF,IGIGDF,IGEODF,
     1               IPPLDP,MAXOBV,ICENSO,IMETHD,ILEVEL,
     1               PPLOC,PPSCAL,
     1               PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1               CCALBE,PPA0BW,PPA1BW,
     1               WEIGHH,WEIGHV,
     1               Y,X,D,NPLOTP,NPLOTV,NCURVE,IBUGG3,ISUBRO,IERROR)
          NPLOT2=NPLOTP
C
C               ***************************************
C               **  STEP 8C--                        **
C               **  COMPUTE PROB PLOT STAT           **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
          ISTEPN='8C'
          IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IFLAGU='FILE'
          IFRST=.FALSE.
          ILAST=.FALSE.
          IF(IRESP.EQ.1)IFRST=.TRUE.
          IF(IRESP.EQ.NRESP)ILAST=.TRUE.
          NPTEMP=NPLOT2-NPLOT1
          CALL DPPP4(PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1               CCALBE,PPA0BW,PPA1BW,
     1               IFLAGU,IFRST,ILAST,
     1               IBUGG2,IBUGG3,ISUBRO,IERROR)
C
  810   CONTINUE
C
C               ***************************************************
C               **  STEP 9A--                                    **
C               **  CASE 3: ONE OR MORE REPLICATION VARIABLES.   **
C               **          FOR THIS CASE, THE NUMBER OF         **
C               **          VARIABLES MUST BE EXACTLY 1.  BOTH   **
C               **          CENSORING AND GROUPING ARE SUPPORTED.**
C               **          FOR THIS CASE, ALL VARIABLES MUST    **
C               **          HAVE THE SAME LENGTH.                **
C               ***************************************************
C
      ELSEIF(NRESP.EQ.1 .AND. NREPL.GE.1)THEN
        ISTEPN='9A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        J=0
        IMAX=NRIGHT(1)
        IF(NQ.LT.NRIGHT(1))IMAX=NQ
        DO910I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO910
          J=J+1
C
C         RESPONSE VARIABLE IN Y1
C
          IJ=MAXN*(ICOLR(1)-1)+I
          IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
C
C         CENSORING VARIABLE IN XCENS
C
          ICOLC=1
          IF(ICENSO.EQ.'ON')THEN
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XCENS(J)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XCENS(J)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XCENS(J)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XCENS(J)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XCENS(J)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XCENS(J)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XCENS(J)=TAGPLO(I)
          ENDIF
C
C         CLASS VARIABLE IN X1 FOR FREQUENCY DATA
C
          IF(NGROUP.GE.1)THEN
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)X1(J)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)X1(J)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)X1(J)=RES(I)
            IF(ICOLT.EQ.MAXCP3)X1(J)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)X1(J)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)X1(J)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)X1(J)=TAGPLO(I)
          ENDIF
C
C         IF FREQUENCY DATA GIVEN WITH LOWER AND UPPER CLASS LIMITS,
C         THEN UPPER CLASS LIMIT VARIABLE IN XHIGH
C
          IF(NGROUP.EQ.2)THEN
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XHIGH(J)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XHIGH(J)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XHIGH(J)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XHIGH(J)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XHIGH(J)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XHIGH(J)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XHIGH(J)=TAGPLO(I)
          ENDIF
C
          DO920IR=1,MIN(NREPL,6)
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XDESGN(J,IR)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XDESGN(J,IR)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XDESGN(J,IR)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XDESGN(J,IR)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XDESGN(J,IR)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XDESGN(J,IR)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XDESGN(J,IR)=TAGPLO(I)
  920     CONTINUE
C
  910   CONTINUE
        NLOCAL=J
C
C       *****************************************************
C       **  STEP 9B--                                      **
C       **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C       **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C       **                                                 **
C       **  FOR THIS CASE, WE NEED TO LOOP THROUGH THE     **
C       **  VARIOUS REPLICATIONS.                          **
C       *****************************************************
C
        ISTEPN='9B'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'DPPP')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,931)
  931     FORMAT('***** FROM THE MIDDLE  OF DPPP--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,932)ICASPL,NUMVAR,IDATSW,NLOCAL
  932     FORMAT('ICASPL,NUMVAR,IDATSW,NQ = ',
     1           A4,I8,2X,A4,I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO935I=1,NLOCAL
              WRITE(ICOUT,936)I,Y1(I),X1(I),XHIGH(I),XCENS(I),
     1                        XDESGN(I,1),XDESGN(I,2)
  936         FORMAT('I,Y1(I),X1(I),XHIGH(I),XCENS(I),XDESGN(I,1)',
     1               'XDESGN(I,2) = ',I8,6F12.5)
              CALL DPWRST('XXX','BUG ')
  935       CONTINUE
          ENDIF
        ENDIF
C
C       *****************************************************
C       **  STEP 9C--                                      **
C       **  FIND THE DISTINCT VALUES IN EACH OF THE        **
C       **  REPLICATION VARIABLES.                         **
C       *****************************************************
C
        CALL DPPP5(XDESGN(1,1),XDESGN(1,2),XDESGN(1,3),
     1             XDESGN(1,4),XDESGN(1,5),XDESGN(1,6),
     1             NREPL,NLOCAL,MAXOBV,
     1             XIDTEM,XIDTE2,XIDTE3,XIDTE4,XIDTE5,XIDTE6,
     1             XTEMP1,XTEMP2,
     1             NUMSE1,NUMSE2,NUMSE3,NUMSE4,NUMSE5,NUMSE6,
     1             IBUGG3,ISUBRO,IERROR)
C
C       *****************************************************
C       **  STEP 9D--                                      **
C       **  NOW LOOP THROUGH THE VARIOUS REPLICATIONS      **
C       *****************************************************
C
        NPLOTP=0
        NCURVE=0
        IF(NREPL.EQ.1)THEN
          J=0
          DO1110ISET1=1,NUMSE1
            K=0
            DO1130I=1,NLOCAL
              IF(XIDTEM(ISET1).EQ.XDESGN(I,1))THEN
                K=K+1
                ZY(K)=Y1(I)
                ZXLOW(K)=X1(I)
                ZXHIGH(K)=XHIGH(I)
                ZCENS(K)=XCENS(I)
              ENDIF
 1130       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NGROUP.EQ.0)THEN
              IF(NTEMP.GT.0)THEN
                CALL DPPP2(ZY,ZCENS,XLEVEL,NTEMP,ICASPL,NHIGH,
     1                     XTEMP1,XTEMP2,XTEMP3,
     1                     YLOWLM,YUPPLM,A,B,MINMAX,
     1                     SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                     SHAPE6,SHAPE7,
     1                     IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                     ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                     IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                     IPPLDP,MAXOBV,ICENSO,IMETHD,ILEVEL,
     1                     PPLOC,PPSCAL,
     1                     PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                     CCALBE,PPA0BW,PPA1BW,
     1                     WEIGHH,WEIGHV,
     1                     Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1                     IBUGG3,ISUBRO,IERROR)
              ENDIF
            ELSE
              IF(NTEMP.GT.0)THEN
                CALL DPPP3(ZY,ZXLOW,ZXHIGH,NTEMP,ICASPL,IDATSW,
     1                     ZCENS,XTEMP1,XTEMP2,XTEMP3,XTEMP4,
     1                     YLOWLM,YUPPLM,A,B,MINMAX,
     1                     SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                     SHAPE6,SHAPE7,
     1                     IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                     ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                     IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                     IPPLDP,MAXOBV,ICENSO,IMETHD,
     1                     PPLOC,PPSCAL,
     1                     PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                     CCALBE,PPA0BW,PPA1BW,
     1                     WEIGHH,WEIGHV,
     1                     Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1                     IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NUMSE1)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPPP4(PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                 CCALBE,PPA0BW,PPA1BW,
     1                 IFLAGU,IFRST,ILAST,
     1                 IBUGG2,IBUGG3,ISUBRO,IERROR)
 1110     CONTINUE
        ELSEIF(NREPL.EQ.2)THEN
          J=0
          NTOT=NUMSE1*NUMSE2
          DO1210ISET1=1,NUMSE1
          DO1220ISET2=1,NUMSE2
            K=0
            DO1290I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
                ZXLOW(K)=X1(I)
                ZXHIGH(K)=XHIGH(I)
                ZCENS(K)=XCENS(I)
              ENDIF
 1290       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NGROUP.EQ.0)THEN
              IF(NTEMP.GT.0)THEN
                CALL DPPP2(ZY,ZCENS,XLEVEL,NTEMP,ICASPL,NHIGH,
     1                     XTEMP1,XTEMP2,XTEMP3,
     1                     YLOWLM,YUPPLM,A,B,MINMAX,
     1                     SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                     SHAPE6,SHAPE7,
     1                     IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                     ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                     IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                     IPPLDP,MAXOBV,ICENSO,IMETHD,ILEVEL,
     1                     PPLOC,PPSCAL,
     1                     PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                     CCALBE,PPA0BW,PPA1BW,
     1                     WEIGHH,WEIGHV,
     1                     Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1                     IBUGG3,ISUBRO,IERROR)
              ENDIF
            ELSE
              IF(NTEMP.GT.0)THEN
                CALL DPPP3(ZY,ZXLOW,ZXHIGH,NTEMP,ICASPL,IDATSW,
     1                     ZCENS,XTEMP1,XTEMP2,XTEMP3,XTEMP4,
     1                     YLOWLM,YUPPLM,A,B,MINMAX,
     1                     SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                     SHAPE6,SHAPE7,
     1                     IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                     ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                     IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                     IPPLDP,MAXOBV,ICENSO,IMETHD,
     1                     PPLOC,PPSCAL,
     1                     PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                     CCALBE,PPA0BW,PPA1BW,
     1                     WEIGHH,WEIGHV,
     1                     Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1                     IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPPP4(PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                 CCALBE,PPA0BW,PPA1BW,
     1                 IFLAGU,IFRST,ILAST,
     1                 IBUGG2,IBUGG3,ISUBRO,IERROR)
 1220     CONTINUE
 1210     CONTINUE
        ELSEIF(NREPL.EQ.3)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3
          DO1310ISET1=1,NUMSE1
          DO1320ISET2=1,NUMSE2
          DO1330ISET3=1,NUMSE3
            K=0
            DO1390I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
                ZXLOW(K)=X1(I)
                ZXHIGH(K)=XHIGH(I)
                ZCENS(K)=XCENS(I)
              ENDIF
 1390       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NGROUP.EQ.0)THEN
              IF(NTEMP.GT.0)THEN
                CALL DPPP2(ZY,ZCENS,XLEVEL,NTEMP,ICASPL,NHIGH,
     1                     XTEMP1,XTEMP2,XTEMP3,
     1                     YLOWLM,YUPPLM,A,B,MINMAX,
     1                     SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                     SHAPE6,SHAPE7,
     1                     IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                     ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                     IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                     IPPLDP,MAXOBV,ICENSO,IMETHD,ILEVEL,
     1                     PPLOC,PPSCAL,
     1                     PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                     CCALBE,PPA0BW,PPA1BW,
     1                     WEIGHH,WEIGHV,
     1                     Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1                     IBUGG3,ISUBRO,IERROR)
              ENDIF
            ELSE
              IF(NTEMP.GT.0)THEN
                CALL DPPP3(ZY,ZXLOW,ZXHIGH,NTEMP,ICASPL,IDATSW,
     1                     ZCENS,XTEMP1,XTEMP2,XTEMP3,XTEMP4,
     1                     YLOWLM,YUPPLM,A,B,MINMAX,
     1                     SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                     SHAPE6,SHAPE7,
     1                     IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                     ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                     IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                     IPPLDP,MAXOBV,ICENSO,IMETHD,
     1                     PPLOC,PPSCAL,
     1                     PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                     CCALBE,PPA0BW,PPA1BW,
     1                     WEIGHH,WEIGHV,
     1                     Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1                     IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPPP4(PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                 CCALBE,PPA0BW,PPA1BW,
     1                 IFLAGU,IFRST,ILAST,
     1                 IBUGG2,IBUGG3,ISUBRO,IERROR)
 1330     CONTINUE
 1320     CONTINUE
 1310     CONTINUE
        ELSEIF(NREPL.EQ.4)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4
          DO1410ISET1=1,NUMSE1
          DO1420ISET2=1,NUMSE2
          DO1430ISET3=1,NUMSE3
          DO1440ISET4=1,NUMSE4
            K=0
            DO1490I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
                ZXLOW(K)=X1(I)
                ZXHIGH(K)=XHIGH(I)
                ZCENS(K)=XCENS(I)
              ENDIF
 1490       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NGROUP.EQ.0)THEN
              IF(NTEMP.GT.0)THEN
                CALL DPPP2(ZY,ZCENS,XLEVEL,NTEMP,ICASPL,NHIGH,
     1                     XTEMP1,XTEMP2,XTEMP3,
     1                     YLOWLM,YUPPLM,A,B,MINMAX,
     1                     SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                     SHAPE6,SHAPE7,
     1                     IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                     ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                     IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                     IPPLDP,MAXOBV,ICENSO,IMETHD,ILEVEL,
     1                     PPLOC,PPSCAL,
     1                     PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                     CCALBE,PPA0BW,PPA1BW,
     1                     WEIGHH,WEIGHV,
     1                     Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1                     IBUGG3,ISUBRO,IERROR)
              ENDIF
            ELSE
              IF(NTEMP.GT.0)THEN
                CALL DPPP3(ZY,ZXLOW,ZXHIGH,NTEMP,ICASPL,IDATSW,
     1                     ZCENS,XTEMP1,XTEMP2,XTEMP3,XTEMP4,
     1                     YLOWLM,YUPPLM,A,B,MINMAX,
     1                     SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                     SHAPE6,SHAPE7,
     1                     IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                     ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                     IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                     IPPLDP,MAXOBV,ICENSO,IMETHD,
     1                     PPLOC,PPSCAL,
     1                     PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                     CCALBE,PPA0BW,PPA1BW,
     1                     WEIGHH,WEIGHV,
     1                     Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1                     IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPPP4(PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                 CCALBE,PPA0BW,PPA1BW,
     1                 IFLAGU,IFRST,ILAST,
     1                 IBUGG2,IBUGG3,ISUBRO,IERROR)
 1440     CONTINUE
 1430     CONTINUE
 1420     CONTINUE
 1410     CONTINUE
        ELSEIF(NREPL.EQ.5)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5
          DO1510ISET1=1,NUMSE1
          DO1520ISET2=1,NUMSE2
          DO1530ISET3=1,NUMSE3
          DO1540ISET4=1,NUMSE4
          DO1550ISET5=1,NUMSE5
            K=0
            DO1590I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
                ZXLOW(K)=X1(I)
                ZXHIGH(K)=XHIGH(I)
                ZCENS(K)=XCENS(I)
              ENDIF
 1590       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NGROUP.EQ.0)THEN
              IF(NTEMP.GT.0)THEN
                CALL DPPP2(ZY,ZCENS,XLEVEL,NTEMP,ICASPL,NHIGH,
     1                     XTEMP1,XTEMP2,XTEMP3,
     1                     YLOWLM,YUPPLM,A,B,MINMAX,
     1                     SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                     SHAPE6,SHAPE7,
     1                     IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                     ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                     IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                     IPPLDP,MAXOBV,ICENSO,IMETHD,ILEVEL,
     1                     PPLOC,PPSCAL,
     1                     PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                     CCALBE,PPA0BW,PPA1BW,
     1                     WEIGHH,WEIGHV,
     1                     Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1                     IBUGG3,ISUBRO,IERROR)
              ENDIF
            ELSE
              IF(NTEMP.GT.0)THEN
                CALL DPPP3(ZY,ZXLOW,ZXHIGH,NTEMP,ICASPL,IDATSW,
     1                     ZCENS,XTEMP1,XTEMP2,XTEMP3,XTEMP4,
     1                     YLOWLM,YUPPLM,A,B,MINMAX,
     1                     SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                     SHAPE6,SHAPE7,
     1                     IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                     ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                     IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                     IPPLDP,MAXOBV,ICENSO,IMETHD,
     1                     PPLOC,PPSCAL,
     1                     PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                     CCALBE,PPA0BW,PPA1BW,
     1                     WEIGHH,WEIGHV,
     1                     Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1                     IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPPP4(PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                 CCALBE,PPA0BW,PPA1BW,
     1                 IFLAGU,IFRST,ILAST,
     1                 IBUGG2,IBUGG3,ISUBRO,IERROR)
 1550     CONTINUE
 1540     CONTINUE
 1530     CONTINUE
 1520     CONTINUE
 1510     CONTINUE
        ELSEIF(NREPL.EQ.6)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5*NUMSE6
          DO1610ISET1=1,NUMSE1
          DO1620ISET2=1,NUMSE2
          DO1630ISET3=1,NUMSE3
          DO1640ISET4=1,NUMSE4
          DO1650ISET5=1,NUMSE5
          DO1660ISET6=1,NUMSE6
            K=0
            DO1690I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5) .AND.
     1           XIDTE6(ISET6).EQ.XDESGN(I,6)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
                ZXLOW(K)=X1(I)
                ZXHIGH(K)=XHIGH(I)
                ZCENS(K)=XCENS(I)
              ENDIF
 1690       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NGROUP.EQ.0)THEN
              IF(NTEMP.GT.0)THEN
                CALL DPPP2(ZY,ZCENS,XLEVEL,NTEMP,ICASPL,NHIGH,
     1                     XTEMP1,XTEMP2,XTEMP3,
     1                     YLOWLM,YUPPLM,A,B,MINMAX,
     1                     SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                     SHAPE6,SHAPE7,
     1                     IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                     ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                     IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                     IPPLDP,MAXOBV,ICENSO,IMETHD,ILEVEL,
     1                     PPLOC,PPSCAL,
     1                     PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                     CCALBE,PPA0BW,PPA1BW,
     1                     WEIGHH,WEIGHV,
     1                     Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1                     IBUGG3,ISUBRO,IERROR)
              ENDIF
            ELSE
              IF(NTEMP.GT.0)THEN
                CALL DPPP3(ZY,ZXLOW,ZXHIGH,NTEMP,ICASPL,IDATSW,
     1                     ZCENS,XTEMP1,XTEMP2,XTEMP3,XTEMP4,
     1                     YLOWLM,YUPPLM,A,B,MINMAX,
     1                     SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                     SHAPE6,SHAPE7,
     1                     IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                     ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                     IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                     IPPLDP,MAXOBV,ICENSO,IMETHD,
     1                     PPLOC,PPSCAL,
     1                     PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                     CCALBE,PPA0BW,PPA1BW,
     1                     WEIGHH,WEIGHV,
     1                     Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1                     IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPPP4(PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                 CCALBE,PPA0BW,PPA1BW,
     1                 IFLAGU,IFRST,ILAST,
     1                 IBUGG2,IBUGG3,ISUBRO,IERROR)
 1660     CONTINUE
 1650     CONTINUE
 1640     CONTINUE
 1630     CONTINUE
 1620     CONTINUE
 1610     CONTINUE
        ENDIF
C
C               ***************************************************
C               **  STEP 10A--                                   **
C               **  CASE 4: ONE OR TWO HIGHLIGHT VARIABLES.      **
C               **          THIS CASE SUPPORTS CENSORING, BUT    **
C               **          NOT GROUPING.  FOR THIS CASE, ALL    **
C               **          VARIABLES MUST HAVE THE SAME LENGTH. ** 
C               ***************************************************
C
      ELSEIF(NRESP.EQ.1 .AND. NHIGH.GE.1)THEN
        ISTEPN='10A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        J=0
        IMAX=NRIGHT(1)
        IF(NQ.LT.NRIGHT(1))IMAX=NQ
        DO1710I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO1710
          J=J+1
C
C         RESPONSE VARIABLE IN Y1
C
          IJ=MAXN*(ICOLR(1)-1)+I
          IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
C
C         CENSORING VARIABLE IN XCENS
C
          ICOLC=1
          IF(ICENSO.EQ.'ON')THEN
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XCENS(J)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XCENS(J)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XCENS(J)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XCENS(J)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XCENS(J)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XCENS(J)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XCENS(J)=TAGPLO(I)
          ENDIF
C
C         HIGHLIGHT VARIABLE ONE IN X1
C
          IF(NHIGH.GE.1)THEN
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)X1(J)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)X1(J)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)X1(J)=RES(I)
            IF(ICOLT.EQ.MAXCP3)X1(J)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)X1(J)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)X1(J)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)X1(J)=TAGPLO(I)
          ENDIF
C
C         HIGHLIGHT VARIABLE TWO IN XHIGH
C
          IF(NHIGH.GE.2)THEN
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XHIGH(J)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XHIGH(J)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XHIGH(J)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XHIGH(J)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XHIGH(J)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XHIGH(J)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XHIGH(J)=TAGPLO(I)
          ENDIF
C
 1710   CONTINUE
        NLOCAL=J
C
        IF(NHIGH.EQ.1)THEN
          CALL CODE(X1,NLOCAL,IWRITE,WEIGHH,XTEMP1,MAXOBV,
     1              IBUGG3,IERROR)
        ELSE
          ICCTOF=0
          ICCTG1=0
          CALL CODCT2(X1,XHIGH,NLOCAL,ICCTOF,ICCTG1,IWRITE,
     1                WEIGHH,XTEMP1,XTEMP2,
     1                IBUGG3,ISUBRO,IERROR)
        ENDIF
C
C       *****************************************************
C       **  STEP 10B--                                     **
C       **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C       **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C       **                                                 **
C       **  FOR THIS CASE, WE NEED TO LOOP THROUGH THE     **
C       **  VARIOUS REPLICATIONS.                          **
C       *****************************************************
C
        IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'DPPP')THEN
          ISTEPN='10B'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1731)
 1731     FORMAT('***** FROM THE MIDDLE  OF DPPP--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1732)ICASPL,NUMVAR,IDATSW,NLOCAL
 1732     FORMAT('ICASPL,NUMVAR,IDATSW,NQ = ',
     1           A4,I8,2X,A4,I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO1735I=1,NLOCAL
              WRITE(ICOUT,1736)I,Y1(I),XCENS(I),WEIGHH(I)
 1736         FORMAT('I,Y1(I),XCENS(I),WEIGHH(I,1) = ',I8,3F12.5)
              CALL DPWRST('XXX','BUG ')
 1735       CONTINUE
          ENDIF
        ENDIF
C
C       *****************************************************
C       **  STEP 10C--                                     **
C       **  GENERATE THE PROBABILITY PLOT (RAW DATA CASE   **
C       **  ONLY).                                         **
C       *****************************************************
C
        NPLOTP=0
        NCURVE=1
        CALL DPPP2(Y1,XCENS,XLEVEL,NLOCAL,ICASPL,NHIGH,
     1             XTEMP1,XTEMP2,XTEMP3,
     1             YLOWLM,YUPPLM,A,B,MINMAX,
     1             SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1             SHAPE6,SHAPE7,
     1             IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1             ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1             IGOMDF,IKATDF,IGIGDF,IGEODF,
     1             IPPLDP,MAXOBV,ICENSO,IMETHD,ILEVEL,
     1             PPLOC,PPSCAL,
     1             PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1             CCALBE,PPA0BW,PPA1BW,
     1             WEIGHH,WEIGHV,
     1             Y,X,D,NPLOTP,NPLOTV,NCURVE,
     1             IBUGG3,ISUBRO,IERROR)
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(IERROR.EQ.'YES')THEN
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,9001)(IANS(I),I=1,MIN(100,IWIDTH))
 9001     FORMAT(100A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'DPPP')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPP--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(IFOUND.EQ.'NO')GOTO9099
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         I8,I8,I8,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)MINMAX
 9016   FORMAT('MINMAX = ',I8)
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.GE.1)THEN
          DO9020I=1,NPLOTP
            WRITE(ICOUT,9021)I,Y(I),X(I),D(I)
 9021       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9020     CONTINUE
        ENDIF
      ENDIF
C
 9099 CONTINUE
      RETURN
      END
      SUBROUTINE DPPP2(Y,X,XLEVEL,N,ICASPL,NHIGH,
     1                 XTEMP1,Y2TEMP,X2TEMP,
     1                 YLOWLM,YUPPLM,A,B,MINMAX,
     1                 SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1                 SHAPE5,SHAPE6,SHAPE7,
     1                 IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                 ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                 IGETDF,ICONDF,IGOMDF,IKATDF,
     1                 IGIGDF,IGEODF,
     1                 IPPLDP,MAXOBV,ICENSO,IMETHD,ILEVEL,
     1                 PPLOC,PPSCAL,
     1                 PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                 CCALBE,PPA0BW,PPA1BW,
     1                 WEIGHH,WEIGHV,
     1                 Y2,X2,D2,N2,NPLOTV,NCURVE,
     1                 IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS THAT WILL DEFINE
C              A PROBABILITY PLOT FOR A SPECIFIED  DISTRIBUTION FOR
C              THE RAW DATA CASE.  CENSORED CASE ALSO SUPPORTED.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--APRIL     1978.
C     UPDATED         --MAY       1978.
C     UPDATED         --JUNE      1978.
C     UPDATED         --OCTOBER   1978.
C     UPDATED         --MARCH     1979.
C     UPDATED         --APRIL     1979.
C     UPDATED         --JANUARY   1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --MAY       1990.  IG, WALD, RIG, FL (SAUNDERS)
C     UPDATED         --MAY       1992.  MOVE KPAR SINCE UNDEFINED
C     UPDATED         --MAY       1993.  MINMAX FOR EV1/EV2/WEIB DIST.
C     UPDATED         --DECEMBER  1993.  GENERALIZED PARETO
C     UPDATED         --DECEMBER  1993.  FIX TRACE INFO
C     UPDATED         --SEPTEMBER 1994.  ADD 9 DISTRIBUTIONS, FIX TRIANG
C     UPDATED         --APRIL     1995.  ADD NEW DISTRIBUTIONS
C     UPDATED         --SEPTEMBER 1995.  ADD NEW DISTRIBUTIONS
C     UPDATED         --OCTOBER   1995.  ADD NEW DISTRIBUTIONS
C     UPDATED         --DECEMBER  1995.  ADD NEW DISTRIBUTIONS
C     UPDATED         --JANUARY   1996.  ADD DOUBLE GAMMA, MIELKE'S 
C                                        BETA-KAPPA, FOLDED CAUCHY
C     UPDATED         --JANUARY   1996.  DO NOT HANDLE LOG-NORMAL SEPARATELY
C     UPDATED         --FEBRUARY  1996.  BETA-BINOMIAL, BETA-PASCAL,
C                                        GENERALIZED EXPONENTIAL
C     UPDATED         --MAY       1996.  RECIPROCAL
C     UPDATED         --FEBRUARY  1998.  FOR BINNED DATA, CHECK FOR
C                                        ZERO COUNT BINS
C     UPDATED         --MAY       1998.  NORMAL MIXTURE
C     UPDATED         --MAY       1998.  INVERTED GAMMA
C     UPDATED         --AUGUST    2001.  GENERALIZED LAMBDA
C     UPDATED         --SEPTEMBER 2001.  JOHNSON SB, JOHNSON SU,
C                                        INVERTED WEIBULL,
C                                        LOG DOUBLE EXPONENTIAL
C     UPDATED         --MAY       2002.  TWO-SIDED POWER
C     UPDATED         --MAY       2002.  BIWEIBULL
C     UPDATED         --JANUARY   2003.  G-AND-H
C     UPDATED         --APRIL     2003.  LANDAU
C     UPDATED         --MAY       2003.  ERROR
C     UPDATED         --JUNE      2003.  TRAPEZOID
C     UPDATED         --JUNE      2003.  GENERALIZED TRAPEZOID
C     UPDATED         --NOVEMBER  2003.  FOLDED T
C     UPDATED         --DECEMBER  2003.  SLASH, INVERTED BETA,
C                                        SKEWED NORMAL, SKEWED T,
C                                        GOMPERTZ-MAKEHAM
C     UPDATED         --MARCH     2004.  LOG-SKEW-NORMAL
C     UPDATED         --MARCH     2004.  LOG-SKEW-T
C     UPDATED         --MARCH     2004.  POLYA
C     UPDATED         --APRIL     2004.  HERMITE
C     UPDATED         --JUNE      2004.  SKEW DOUBLE EXPONENTIAL
C     UPDATED         --JUNE      2004.  ASYMMETRIC DOUBLE EXPONENTIAL
C     UPDATED         --JUNE      2004.  MAXWELL, RAYLEIGH
C     UPDATED         --JULY      2004.  ALTERNATE DEFINITION FOR
C                                        GOMPERTZ-MAKEHAM
C     UPDATED         --AUGUST    2004.  GENERALIZED INVERSE GAUSSIAN
C     UPDATED         --AUGUST    2004.  MCLEISH
C     UPDATED         --AUGUST    2004.  BESSEL I-FUNCTION
C     UPDATED         --SEPTEMBER 2004.  SUPPORT FOR:
C                                          SET PROBABILITY PLOT DATA
C                                              POINTS
C     UPDATED         --OCTOBER   2004.  SUPPORT FOR CENSORED DATA
C     UPDATED         --OCTOBER   2004.  FOR BINNED DATA, REMOVE
C                                        ZERO FREQUENCY BINS
C     UPDATED         --MAY       2005.  FOR BINNED DATA, SUPPORT
C                                        CASE WHERE LOWER AND UPPER
C                                        LIMITS OF BIN GIVEN (AS
C                                        OPPOSSED TO JUST MID-POINTS)
C     UPDATED         --MAY       2005.  ADD ISUBRO BUG SWITCH
C     UPDATED         --JULY      2005.  CALL LIST TO LGAPPF AND SNPPF
C     UPDATED         --FEBRUARY  2006.  GENERALIZED LOGISTIC TYPE 5
C     UPDATED         --FEBRUARY  2006.  WAKEBY
C     UPDATED         --FEBRUARY  2006.  FMLK PARAMERIZATION OF
C                                        GENERALIZED TUKEY-LAMBDA
C     UPDATED         --MARCH     2006.  BETA-NORMAL
C     UPDATED         --MARCH     2006.  GENERALIZED LOGISTIC TYPE 2
C     UPDATED         --MARCH     2006.  GENERALIZED LOGISTIC TYPE 3
C     UPDATED         --MARCH     2006.  GENERALIZED LOGISTIC TYPE 4
C     UPDATED         --MARCH     2006.  ASYMMETRIC LOG LAPLACE
C     UPDATED         --MAY       2006.  BETA GEOMETRIC
C     UPDATED         --MAY       2006.  ZETA
C     UPDATED         --MAY       2006.  ZIPF
C     UPDATED         --MAY       2006.  BOREL-TANNER
C     UPDATED         --MAY       2006.  BETA NEGATIVE BINOMIAL
C     UPDATED         --JUNE      2006.  LAGRANGE POISSON
C     UPDATED         --JUNE      2006.  LEADS IN COIN TOSSING
C     UPDATED         --JUNE      2006.  CLASSICAL MATCHING
C     UPDATED         --JUNE      2006.  CLASSICAL OCCUPANCY
C     UPDATED         --JUNE      2006.  LOG BETA
C     UPDATED         --JUNE      2006.  POLYA AEPPLI
C     UPDATED         --JUNE      2006.  LOST GAMES
C     UPDATED         --JUNE      2006.  GENERALIZED LOGARITHMIC
C                                        SERIES
C     UPDATED         --JULY      2006.  GENERALIZED NEGATIVE
C                                        BINOMIAL
C     UPDATED         --JULY      2006.  GEETA
C     UPDATED         --JULY      2006.  QUASI BINOMIAL TYPE I
C     UPDATED         --AUGUST    2006.  CONSUL (GENERALIZED GEOMTRIC)
C     UPDATED         --AUGUST    2006.  LAGRANGE KATZ
C     UPDATED         --OCTOBER   2006.  SHAPE PARAMETER FOR SEMI-CIRCULAR
C                                        DISTRIBUTION
C     UPDATED         --NOVEMBER  2006.  DISCRETE WEIBULL
C     UPDATED         --NOVEMBER  2006.  GENERALIZED LOST GAMES
C     UPDATED         --JANUARY   2007.  TRUNCATED GENERALIZED
C                                        NEGATIVE BINOMIAL
C     UPDATED         --JANUARY   2007.  KATZ
C     UPDATED         --FEBRUARY  2007.  TOPP AND LEONE
C     UPDATED         --FEBRUARY  2007.  GENERALIZED TOPP AND LEONE
C     UPDATED         --FEBRUARY  2007.  REFLECTED GENERALIZED
C                                        TOPP AND LEONE
C     UPDATED         --MARCH     2007.  FOR TRIANGULAR, LET USER
C                                        SPECIFY LOWER/UPPER LIMIT
C                                        PARAMETERS
C     UPDATED         --JUNE      2007.  FOR TWO-SIDED POWER, LET USER
C                                        SPECIFY LOWER/UPPER LIMIT
C                                        PARAMETERS
C     UPDATED         --AUGUST    2007.  SUPPORT CENSORING FOR
C                                        FREQUENCY DATA
C     UPDATED         --SEPTEMBER 2007.  SLOPE
C     UPDATED         --SEPTEMBER 2007.  TWO-SIDED SLOPE
C     UPDATED         --SEPTEMBER 2007.  OGIVE
C     UPDATED         --SEPTEMBER 2007.  TWO-SIDED OGIVE
C     UPDATED         --OCTOBER   2007.  BURR TYPE 1 (= UNIFORM)
C     UPDATED         --OCTOBER   2007.  BURR TYPE 2
C     UPDATED         --OCTOBER   2007.  BURR TYPE 3
C     UPDATED         --OCTOBER   2007.  BURR TYPE 4
C     UPDATED         --OCTOBER   2007.  BURR TYPE 5
C     UPDATED         --OCTOBER   2007.  BURR TYPE 6
C     UPDATED         --OCTOBER   2007.  BURR TYPE 7
C     UPDATED         --OCTOBER   2007.  BURR TYPE 8
C     UPDATED         --OCTOBER   2007.  BURR TYPE 9
C     UPDATED         --OCTOBER   2007.  BURR TYPE 10
C     UPDATED         --OCTOBER   2007.  BURR TYPE 11
C     UPDATED         --OCTOBER   2007.  BURR TYPE 12
C     UPDATED         --OCTOBER   2007.  DOUBLY-PARETO UNIFORM
C     UPDATED         --OCTOBER   2007.  UNEVEN TWO-SIDED POWER
C     UPDATED         --OCTOBER   2007.  KUMARASWAMY
C     UPDATED         --DECEMBER  2007.  REFLECTED POWER
C     UPDATED         --JANUARY   2008.  MUTH
C     UPDATED         --FEBRUARY  2008.  LOGISTIC-EXPONENTIAL
C     UPDATED         --FEBRUARY  2008.  SIGMA PARAMETER FOR MAXWELL
C                                        IS REALLY A SCALE PARAMETER
C     UPDATED         --MARCH     2008.  TRUNCATED PARETO
C     UPDATED         --MARCH     2008.  BRITTLE FRACTURE
C     UPDATED         --MARCH     2008.  3-PARAMETER LOGISTIC-EXPONENTIAL
C     UPDATED         --MAY       2008.  RENAME MIELKE'S BETA-KAPPA
C     UPDATED         --MAY       2008.  KAPPA
C     UPDATED         --MAY       2008.  PEARSON TYPE 3
C     UPDATED         --JULY      2008.  MODIFY GIG PARAMETERIZATION
C     UPDATED         --JULY      2008.  2-SHAPE PARAMETERIZATION
C                                        FOR GIG
C     UPDATED         --AUGUST    2009.  GROUPED DATA MOVED TO A
C                                        SEPARATE SUBROUTINE
C     UPDATED         --SEPTEMBER 2009.  USE "GENERIC" PARAMETERS
C                                        (SIMPLIFY USE BY OTHER
C                                        ROUTINES)
C     UPDATED         --OCTOBER   2009.  MOVE COMPUTATION OF PPA0,
C                                        PPA1, ETC., TO THIS ROUTINE
C                                        (NOTE THAT DPPP ROUTINE IS
C                                        STILL RESPONSIBLE FOR UPDATING
C                                        PARAMETER TABLE, BUT COMPUTING
C                                        HERE SIMPLIFIES USE BY OTHER
C                                        ROUTINES, E.G. DPGOF9)
C     UPDATED         --JANUARY   2010.  SUPPORT FOR "HIGHLIGHTING"
C     UPDATED         --JULY      2010.  END EFFECTS WEIBULL
C     UPDATED         --AUGUST    2010.  BRITTLE FIBER WEIBULL
C     UPDATED         --SEPTEMBER 2010.  SUPPORT A "LEVEL" VARIABLE
C                                        FOR BRITTLE FIBER WEIBULL
C                                        (MAY ADD TO A FEW OTHERS AT
C                                        A LATER TIME).  NOTE THAT THIS
C                                        IS CURRENTLY ONLY SUPPORTED
C                                        FOR THE SINGLE RESPONSE
C                                        VARIABLE RAW DATA CASE
C     UPDATED         --JULY      2019.  REDUCE SCRATCH SPACE USAGE
C                                        (BY TWO ARRAYS).
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IADEDF
      CHARACTER*4 IGEPDF
      CHARACTER*4 IMAKDF
      CHARACTER*4 IBEIDF
      CHARACTER*4 ILGADF
      CHARACTER*4 ISKNDF
      CHARACTER*4 IGLDDF
      CHARACTER*4 IBGEDF
      CHARACTER*4 IGETDF
      CHARACTER*4 ICONDF
      CHARACTER*4 IGOMDF
      CHARACTER*4 IKATDF
      CHARACTER*4 IGIGDF
      CHARACTER*4 IGEODF
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICENSO
      CHARACTER*4 IMETHD
      CHARACTER*4 ILEVEL
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IWRITE
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION XLEVEL(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
      DIMENSION XTEMP1(*)
      DIMENSION Y2TEMP(*)
      DIMENSION X2TEMP(*)
C
      DIMENSION WEIGHH(*)
      DIMENSION WEIGHV(*)
CCCCC DIMENSION PREDBW(*)
CCCCC DIMENSION RESBW(*)
C
      PARAMETER (MAXLEV=10)
      DOUBLE PRECISION API(MAXLEV)
      DOUBLE PRECISION LI(MAXLEV)
      DOUBLE PRECISION PPFOUT(1)
      DOUBLE PRECISION DXTEMP(1)
C
      DOUBLE PRECISION LANPPF
      DOUBLE PRECISION DX2OUT
      DOUBLE PRECISION DLOC
      DOUBLE PRECISION DSCALE
C
      DOUBLE PRECISION QUAGLO
      DOUBLE PRECISION QUAWAK
      DOUBLE PRECISION XPAR(5)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C
      ISUBN1='DPPP'
      ISUBN2='2   '
      IERROR='NO'
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,171)
  171   FORMAT('***** AT THE BEGINNING OF DPPP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,172)ICASPL,N,NPLOTV,MINMAX,IPPLDP
  172   FORMAT('ICASPL,N,NPLOTV,MINMAX,IPPLDP = ',A4,2X,4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,174)N2,NCURVE,ILEVEL
  174   FORMAT('N2,NCURVE,ILEVEL = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(N.GE.1)THEN
          IF(NHIGH.GT.0)THEN
            DO181I=1,N
              WRITE(ICOUT,182)I,Y(I),X(I),WEIGHH(I)
  182         FORMAT('I,Y(I),X(I),WEIGHH(I) = ',I8,3G12.5)
              CALL DPWRST('XXX','BUG ')
  181       CONTINUE
          ELSE
            DO185I=1,N
              WRITE(ICOUT,186)I,Y(I),X(I),XLEVEL(I)
  186         FORMAT('I,Y(I),X(I),XLEVEL(I) = ',I8,3G12.5)
              CALL DPWRST('XXX','BUG ')
  185       CONTINUE
          ENDIF
        ENDIF
      ENDIF
C
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LE.1)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,46)
   46   FORMAT('***** ERROR IN PROBABILITY PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,47)
   47   FORMAT('      THE NUMBER OF OBSERVATIONS WAS LESS THAN OR ',
     1         'EQUAL TO 1.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,49)N
   49   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO60I=1,N
        IF(Y(I).NE.HOLD)GOTO69
   60 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,46)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)HOLD
   62 FORMAT('      ALL INPUT VERTICAL AXIS ELEMENTS ARE ',
     1       'IDENTICALLY EQUAL TO ',G15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   69 CONTINUE
C
C
C               ********************************************
C               **  STEP 1B--                             **
C               **  FOR THE CASE WHERE THERE ARE MULIPLE  **
C               **  LEVELS (E.G., BRITTLE FIBER WEIBULL), **
C               **  COMPUTE THE "MIXING PROPORTION" FOR   **
C               **  THE VARIOUS LEVELS.                   **
C               ********************************************
C
      IF(ILEVEL.EQ.'ON')THEN
        CALL DISTIN(XLEVEL,N,IWRITE,XTEMP1,NILEVE,IBUGG3,IERROR)
        IF(NILEVE.GT.MAXLEV)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,46)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,71)
   71     FORMAT('      FOR THE MULTIPLE LEVELS CASE, THE MAXIMUM ',
     1           'NUMBER OF DISTINCT LEVELS EXCEEDED.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,73)NILEVE
   73     FORMAT('      NUMBER OF LEVELS DETECTED        = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,75)MAXLEV
   75     FORMAT('      MAXIMUM NUMBER OF LEVELS ALOWED  = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
        CALL SORT(XTEMP1,NILEVE,XTEMP1)
        DO80I=1,NILEVE
          AHOLD=XTEMP1(I)
          ICNT=0
          DO81J=1,N
            IF(XLEVEL(J).EQ.AHOLD)THEN
              ICNT=ICNT+1
            ENDIF
   81     CONTINUE
          LI(I)=DBLE(AHOLD)
          API(I)=DBLE(ICNT)/DBLE(N)
C
          IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP2')THEN
            WRITE(ICOUT,86)I,LI(I),API(I)
   86       FORMAT('I,LI(I),API(I) = ',I5,2G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
   80   CONTINUE
      ENDIF
C
C               **************************************************
C               **  STEP 2--                                    **
C               **  IF SET PROBABILITY PLOT DATA POINTS COMMAND **
C               **  WAS ENTERED, THIN DATA SET BY COMPUTING     **
C               **  PERCENTILES OF THE DATA.  CURRENTLY         **
C               **  ONLY SUPPORTED FOR UNBINNED DATA.           **
C               **************************************************
C
      IF(IPPLDP.GT.0 .AND. ICENSO.EQ.'OFF' .AND. ILEVEL.EQ.'OFF')THEN
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP2')THEN
          WRITE(ICOUT,201)IPPLDP,NPERC
  201     FORMAT('***** THIN DATA, IPPLDP,NPERC=',2I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        NPERC=MAX(20,IPPLDP)
        NPERC=MIN(NPERC,N)
        CALL SORT(Y,N,XTEMP1)
        ASTRT=0.0
        ASTOP=100.0
        AINC=(ASTOP - ASTRT)/REAL(NPERC+1)
        IWRITE='OFF'
        DO210I=1,NPERC
          P100=ASTRT + REAL(I)*AINC
          CALL PERCEN(P100,XTEMP1,N,IWRITE,X2,MAXOBV,
     1                XPERC,IBUGG3,IERROR)
          Y(I)=XPERC
  210   CONTINUE
        N=NPERC
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP2')THEN
          WRITE(ICOUT,213)IPPLDP,NPERC,N
  213     FORMAT('      IPPLDP, NPERC, N = ',3I8)
          CALL DPWRST('XXX','BUG ')
          DO217I=1,N
            WRITE(ICOUT,218)I,Y(I)
  218       FORMAT('      I, Y(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
  217     CONTINUE
        ENDIF
C
      ENDIF
C
C               *****************************************************
C               **  STEP 3--                                       **
C               **  DETERMINE PLOT COORDINATES FOR THE 1-VARIABLE  **
C               **  CASE (THAT IS, FOR THE RAW DATA CASE)          **
C               *****************************************************
C
C
CCCCC OCTOBER 2004.  FOR CENSORED CASE, CHECK THAT SECOND VARIABLE
CCCCC                CONTAINS TWO DISTINCT VALUES, SET TO 1 AND 0.
C
      IF(ICENSO.EQ.'ON')THEN
        CALL DISTIN(X,N,IWRITE,XTEMP1,NDIST,IBUGG3,IERROR)
        IF(NDIST.EQ.1)THEN
          DO302I=1,N
            X(I)=1.0
  302     CONTINUE
        ELSEIF(NDIST.EQ.2)THEN
          IF(XTEMP1(1).EQ.1.0 .OR. XTEMP1(2).EQ.1.0)THEN
            DO303I=1,N
              IF(X(I).NE.1.0)X(I)=0.0
  303       CONTINUE
          ELSE
            ATEMP1=MIN(XTEMP1(1),XTEMP1(2))
            ATEMP2=MAX(XTEMP1(1),XTEMP1(2))
            DO308I=1,N
              IF(X(I).EQ.ATEMP1)X(I)=1.0
              IF(X(I).EQ.ATEMP2)X(I)=0.0
  308       CONTINUE
          ENDIF
        ELSE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,46)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT, 305)
  305     FORMAT('      FOR CENSORED DATA, THE CENSORING VARIABLE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT, 306)
  306     FORMAT('      SHOULD CONTAIN AT MOST TWO DISTINCT VALUES.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT, 307)NDIST
  307     FORMAT('      ',I8,' DISTINCT VALUES FOUND.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
        CALL SORTC(Y,X,N,Y2TEMP,XTEMP1)
        DO310I=1,N
          X(I)=XTEMP1(I)
  310   CONTINUE
        IF(NHIGH.GE.1)THEN
          CALL SORTC(Y,WEIGHH,N,XTEMP1,WEIGHV)
          DO311I=1,N
            WEIGHH(I)=WEIGHV(I)
  311     CONTINUE
        ELSEIF(ILEVEL.EQ.'ON')THEN
          CALL SORTC(Y,XLEVEL,N,XTEMP1,WEIGHV)
          DO312I=1,N
            XLEVEL(I)=WEIGHV(I)
  312     CONTINUE
        ENDIF
        XMIN=Y2TEMP(1)
        XMAX=Y2TEMP(N)
        CALL UNIME3(N,X2TEMP,X,IMETHD)
      ELSE
        IF(NHIGH.GE.1)THEN
          CALL SORTC(Y,WEIGHH,N,Y2TEMP,WEIGHV)
          DO313I=1,N
            WEIGHH(I)=WEIGHV(I)
  313     CONTINUE
        ELSEIF(ILEVEL.EQ.'ON')THEN
          CALL SORTC(Y,XLEVEL,N,Y2TEMP,WEIGHV)
          DO314I=1,N
            XLEVEL(I)=WEIGHV(I)
  314     CONTINUE
        ELSE
          CALL SORT(Y,N,Y2TEMP)
        ENDIF
        XMIN=Y2TEMP(1)
        XMAX=Y2TEMP(N)
        CALL UNIMED(N,X2TEMP)
      ENDIF
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,371)N
  371   FORMAT('***** AFTER CREATE X2TEMP,Y2TEMP, N = ',I8)
        CALL DPWRST('XXX','BUG ')
        DO373I=1,MIN(100,N)
          WRITE(ICOUT,375)I,X2TEMP(I),Y2TEMP(I)
  375     FORMAT('I,X2TEMP(I),Y2TEMP(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
  373   CONTINUE
      ENDIF
C
      EPS=0.00001
      IF(XMIN.LT.YLOWLM)YLOWLM=XMIN-EPS
      IF(XMAX.GT.YUPPLM)YUPPLM=XMAX+EPS
C
      ICNT=0
C
      IF(ICASPL.EQ.'UNIF')THEN
        DO1001I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1001
          ICNT=ICNT+1
          CALL UNIPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1001   CONTINUE
      ELSEIF(ICASPL.EQ.'NORM')THEN
        DO1011I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1011
          ICNT=ICNT+1
          CALL NODPPF(DBLE(X2TEMP(I)),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 1011   CONTINUE
      ELSEIF(ICASPL.EQ.'LOGI')THEN
        DO1021I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1021
          ICNT=ICNT+1
          CALL LOGPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1021   CONTINUE
      ELSEIF(ICASPL.EQ.'DEXP')THEN
        DO1031I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1031
          ICNT=ICNT+1
          CALL DEXPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1031   CONTINUE
      ELSEIF(ICASPL.EQ.'CAUC')THEN
        DO1041I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1041
          ICNT=ICNT+1
          CALL CAUPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1041   CONTINUE
      ELSEIF(ICASPL.EQ.'TULA')THEN
        DO1051I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1051
          ICNT=ICNT+1
          CALL LAMPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1051   CONTINUE
      ELSEIF(ICASPL.EQ.'LOGN' .OR. ICASPL.EQ.'3LGN')THEN
        DO1061I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1061
          ICNT=ICNT+1
          CALL LGNPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1061   CONTINUE
      ELSEIF(ICASPL.EQ.'HNOR')THEN
        DO1071I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1071
          ICNT=ICNT+1
          CALL HFNPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1071   CONTINUE
      ELSEIF(ICASPL.EQ.'TPP')THEN
        DO1081I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1081
          ICNT=ICNT+1
          CALL TPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1081   CONTINUE
      ELSEIF(ICASPL.EQ.'CHIS')THEN
        DO1091I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1091
          ICNT=ICNT+1
          CALL CHSPPF(X2TEMP(I),INT(SHAPE1+0.1),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1091   CONTINUE
      ELSEIF(ICASPL.EQ.'FPP')THEN
        DO1101I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1101
          ICNT=ICNT+1
          CALL FPPF(X2TEMP(I),INT(SHAPE1+0.1),INT(SHAPE1+0.1),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1101   CONTINUE
      ELSEIF(ICASPL.EQ.'EXPO')THEN
        DO1111I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1111
          ICNT=ICNT+1
          CALL EXPPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1111   CONTINUE
      ELSEIF(ICASPL.EQ.'GAMM' .OR. ICASPL.EQ.'3GAM')THEN
        DO1121I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1121
          ICNT=ICNT+1
          CALL GAMPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1121   CONTINUE
      ELSEIF(ICASPL.EQ.'BETA')THEN
        DO1126I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1126
          ICNT=ICNT+1
          CALL BETPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1126   CONTINUE
      ELSEIF(ICASPL.EQ.'WEIB' .OR. ICASPL.EQ.'3WEI')THEN
        DO1131I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1131
          ICNT=ICNT+1
          CALL WEIPPF(X2TEMP(I),SHAPE1,MINMAX,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1131   CONTINUE
      ELSEIF(ICASPL.EQ.'EV1 ')THEN
        DO1141I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1141
          ICNT=ICNT+1
          CALL EV1PPF(X2TEMP(I),MINMAX,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1141   CONTINUE
      ELSEIF(ICASPL.EQ.'EV2 ' .OR. ICASPL.EQ.'3EV2')THEN
        DO1151I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1151
          ICNT=ICNT+1
          CALL EV2PPF(X2TEMP(I),SHAPE1,MINMAX,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1151   CONTINUE
      ELSEIF(ICASPL.EQ.'PARE')THEN
        ZLOC=SHAPE2
        IF(ZLOC.GT.XMIN)ZLOC=XMIN
        DO1161I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1161
          ICNT=ICNT+1
          CALL PARPPF(X2TEMP(I),SHAPE1,ZLOC,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1161   CONTINUE
      ELSEIF(ICASPL.EQ.'BINO')THEN
        DO1171I=1,N
          ICNT=ICNT+1
          CALL BINPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),INT(SHAPE2+0.1),
     1                DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 1171   CONTINUE
      ELSEIF(ICASPL.EQ.'GEOM')THEN
        IF(IGEODF.EQ.'DLMF')THEN
          DO1181I=1,N
            ICNT=ICNT+1
            CALL GE2PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
            X2TEMP(ICNT)=REAL(DX2OUT)
 1181     CONTINUE
        ELSE
          DO1186I=1,N
            ICNT=ICNT+1
            CALL GEOPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
            X2TEMP(ICNT)=REAL(DX2OUT)
 1186     CONTINUE
        ENDIF
C
      ELSEIF(ICASPL.EQ.'POIS')THEN
        DO1191I=1,N
          ICNT=ICNT+1
          CALL POIPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1191   CONTINUE
      ELSEIF(ICASPL.EQ.'NEBI')THEN
        DO1201I=1,N
          ICNT=ICNT+1
          CALL NBPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 1201   CONTINUE
      ELSEIF(ICASPL.EQ.'SEMC')THEN
        ASCALE=1.0
        DO1211I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1211
          ICNT=ICNT+1
          CALL SEMPPF(X2TEMP(I),ASCALE,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1211   CONTINUE
      ELSEIF(ICASPL.EQ.'TRIA')THEN
        DO1221I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1221
          ICNT=ICNT+1
          CALL TRIPPF(X2TEMP(I),SHAPE1,A,B,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1221   CONTINUE
      ELSEIF(ICASPL.EQ.'INGA')THEN
        DO1231I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1231
          ICNT=ICNT+1
          CALL IGPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 1231   CONTINUE
      ELSEIF(ICASPL.EQ.'WALD')THEN
        ATEMP=1.0
        DO1241I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1241
          ICNT=ICNT+1
          CALL IGPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(ATEMP),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 1241   CONTINUE
      ELSEIF(ICASPL.EQ.'RIGA')THEN
        DO1251I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1251
          ICNT=ICNT+1
          CALL RIGPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 1251   CONTINUE
      ELSEIF(ICASPL.EQ.'FATL')THEN
        DO1261I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1261
          ICNT=ICNT+1
          CALL FLPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1261   CONTINUE
      ELSEIF(ICASPL.EQ.'GPAR')THEN
        DO1271I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1271
          ICNT=ICNT+1
          CALL GEPPPF(X2TEMP(I),SHAPE1,MINMAX,IGEPDF,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1271   CONTINUE
      ELSEIF(ICASPL.EQ.'DUNI')THEN
        DO1281I=1,N
         ICNT=ICNT+1
         CALL DISPPF(X2TEMP(I),INT(SHAPE1+0.1),X2OUT)
         X2TEMP(ICNT)=X2OUT
 1281   CONTINUE
      ELSEIF(ICASPL.EQ.'NCT ')THEN
        DO1291I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1291
          ICNT=ICNT+1
          CALL NCTPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1291   CONTINUE
      ELSEIF(ICASPL.EQ.'NCF ')THEN
        DO1301I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1301
          ICNT=ICNT+1
          CALL NCFPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1301   CONTINUE
      ELSEIF(ICASPL.EQ.'NCCS')THEN
        DO1311I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1311
          ICNT=ICNT+1
          CALL NCCPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1311   CONTINUE
      ELSEIF(ICASPL.EQ.'NCBE')THEN
        DO1321I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1321
          ICNT=ICNT+1
          CALL NCBPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1321   CONTINUE
      ELSEIF(ICASPL.EQ.'DNCT')THEN
        DO1331I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1331
          ICNT=ICNT+1
          CALL DNTPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1331   CONTINUE
      ELSEIF(ICASPL.EQ.'DNCF')THEN
        DO1341I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1341
          ICNT=ICNT+1
          CALL DNFPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,SHAPE4,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1341   CONTINUE
      ELSEIF(ICASPL.EQ.'HYPG')THEN
        DO1351I=1,N
          ICNT=ICNT+1
          CALL HYPPPF(X2TEMP(I),INT(SHAPE1+0.1),INT(SHAPE2+0.1),
     1                INT(SHAPE3+0.1),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1351   CONTINUE
      ELSEIF(ICASPL.EQ.'VONM')THEN
        DO1361I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1361
          ICNT=ICNT+1
          CALL VONPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1361   CONTINUE
      ELSEIF(ICASPL.EQ.'POWN')THEN
CCCCC   SDTEMP=1.0
        DO1371I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1371
          ICNT=ICNT+1
CCCCC     CALL PNRPPF(X2TEMP(I),SHAPE1,SDTEMP,X2OUT)
          CALL PNRPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1371   CONTINUE
      ELSEIF(ICASPL.EQ.'PLGN')THEN
        DO1381I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1381
          ICNT=ICNT+1
          CALL PLNPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1381   CONTINUE
      ELSEIF(ICASPL.EQ.'ALPH')THEN
        DO1383I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1383
          ICNT=ICNT+1
          CALL ALPPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 1383   CONTINUE
      ELSEIF(ICASPL.EQ.'COSI')THEN
        DO1385I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1385
          ICNT=ICNT+1
          CALL COSPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1385   CONTINUE
      ELSEIF(ICASPL.EQ.'SINE')THEN
        DO1388I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1388
          ICNT=ICNT+1
          CALL SINPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1388   CONTINUE
      ELSEIF(ICASPL.EQ.'POWF')THEN
        DO1387I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1387
          ICNT=ICNT+1
          CALL POWPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1387   CONTINUE
      ELSEIF(ICASPL.EQ.'CHI ')THEN
        DO1389I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1389
          ICNT=ICNT+1
          CALL CHPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1389   CONTINUE
      ELSEIF(ICASPL.EQ.'LOGS')THEN
        DO1391I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1391
          ICNT=ICNT+1
          CALL DLGPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1391   CONTINUE
      ELSEIF(ICASPL.EQ.'LOGL')THEN
        DO1401I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1401
          ICNT=ICNT+1
          CALL LLGPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1401   CONTINUE
      ELSEIF(ICASPL.EQ.'GGAM')THEN
        DO1411I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1411
          ICNT=ICNT+1
          CALL GGDPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1411   CONTINUE
      ELSEIF(ICASPL.EQ.'WARI')THEN
        DO1421I=1,N
          ICNT=ICNT+1
CCCCC     CALL WARPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT,'NOTR')
          CALL WARPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1421   CONTINUE
      ELSEIF(ICASPL.EQ.'YULE')THEN
        DO1431I=1,N
          ICNT=ICNT+1
          CALL YULPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1431   CONTINUE
      ELSEIF(ICASPL.EQ.'ANGL')THEN
        DO1441I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1441
          ICNT=ICNT+1
          CALL ANGPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1441   CONTINUE
      ELSEIF(ICASPL.EQ.'ARSI')THEN
        DO1451I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1451
          ICNT=ICNT+1
          CALL ARSPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1451   CONTINUE
      ELSEIF(ICASPL.EQ.'FNOR')THEN
        DO1461I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1461
          ICNT=ICNT+1
          CALL FNRPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1461   CONTINUE
      ELSEIF(ICASPL.EQ.'TNOR')THEN
        DO1471I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1471
          ICNT=ICNT+1
          CALL TNRPPF(DBLE(X2TEMP(I)),DBLE(A),DBLE(B),DBLE(SHAPE1),
     1                DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 1471   CONTINUE
      ELSEIF(ICASPL.EQ.'LGAM')THEN
        DO1481I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1481
          ICNT=ICNT+1
          CALL LGAPPF(X2TEMP(I),SHAPE1,ILGADF,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1481   CONTINUE
      ELSEIF(ICASPL.EQ.'HSEC')THEN
        DO1491I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1491
          ICNT=ICNT+1
          CALL HSEPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1491   CONTINUE
      ELSEIF(ICASPL.EQ.'GOMP')THEN
        DO1501I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1501
          ICNT=ICNT+1
          IF(IGOMDF.EQ.'JOHN' .OR. IGOMDF.EQ.'DEFA')THEN
            CALL GOMPPF(X2TEMP(I),SHAPE1,SHAPE2,IGOMDF,X2OUT)
          ELSE
            CALL GOMPPF(X2TEMP(I),SHAPE1,SHAPE2,IGOMDF,X2OUT)
          ENDIF
          X2TEMP(ICNT)=X2OUT
 1501   CONTINUE
      ELSEIF(ICASPL.EQ.'HCAU')THEN
        DO1511I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1511
          ICNT=ICNT+1
          CALL HFCPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1511   CONTINUE
      ELSEIF(ICASPL.EQ.'HALO')THEN
        SHAPE1=-1.0
        DO1521I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1521
          ICNT=ICNT+1
          CALL HFLPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1521   CONTINUE
      ELSEIF(ICASPL.EQ.'GHLO')THEN
        DO1531I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1531
          ICNT=ICNT+1
          CALL HFLPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1531   CONTINUE
      ELSEIF(ICASPL.EQ.'GEV ')THEN
        DO1541I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1541
          ICNT=ICNT+1
          CALL GEVPPF(X2TEMP(I),SHAPE1,MINMAX,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1541   CONTINUE
      ELSEIF(ICASPL.EQ.'PAR2')THEN
        ZLOC=A
        IF(ZLOC.LE.0.0)ZLOC=1.0
         DO1551I=1,N
           IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1551
           ICNT=ICNT+1
           CALL PA2PPF(X2TEMP(I),SHAPE1,ZLOC,X2OUT)
           X2TEMP(ICNT)=X2OUT
 1551   CONTINUE
      ELSEIF(ICASPL.EQ.'DWEI')THEN
        DO1561I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1561
          ICNT=ICNT+1
          CALL DWEPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1561   CONTINUE
      ELSEIF(ICASPL.EQ.'WCAU')THEN
        DO1571I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1571
          ICNT=ICNT+1
          CALL WCAPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1571   CONTINUE
      ELSEIF(ICASPL.EQ.'EWEI')THEN
        IARG1=1
        DO1581I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1581
          ICNT=ICNT+1
          CALL EWEPPF(X2TEMP(I),SHAPE1,SHAPE2,IARG1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1581   CONTINUE
      ELSEIF(ICASPL.EQ.'TEXP')THEN
        DO1591I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1591
          ICNT=ICNT+1
          CALL TNEPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1591   CONTINUE
      ELSEIF(ICASPL.EQ.'GLOG')THEN
        DO1601I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1601
          ICNT=ICNT+1
          CALL GLOPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1601   CONTINUE
      ELSEIF(ICASPL.EQ.'PEXP')THEN
        DO1611I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1611
          ICNT=ICNT+1
          CALL PEXPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 1611   CONTINUE
      ELSEIF(ICASPL.EQ.'DGAM')THEN
        DO1621I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1621
          ICNT=ICNT+1
          CALL DGAPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1621   CONTINUE
      ELSEIF(ICASPL.EQ.'MBKA')THEN
        DO1631I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1631
          ICNT=ICNT+1
          CALL MIEPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 1631   CONTINUE
      ELSEIF(ICASPL.EQ.'FCAU')THEN
        DO1641I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1641
          ICNT=ICNT+1
          CALL FCAPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1641   CONTINUE
      ELSEIF(ICASPL.EQ.'BBIN')THEN
        DO1651I=1,N
          ICNT=ICNT+1
          CALL BBNPPF(X2TEMP(I),SHAPE1,SHAPE2,INT(SHAPE3+0.1),X2OUT)
          X2TEMP(ICNT)=X2OUT
 1651   CONTINUE
      ELSEIF(ICASPL.EQ.'BRAD')THEN
        DO1656I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1656
          ICNT=ICNT+1
          CALL BRAPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1656   CONTINUE
      ELSEIF(ICASPL.EQ.'GEXP')THEN
        DO1661I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1661
          ICNT=ICNT+1
          CALL GEXPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1661   CONTINUE
      ELSEIF(ICASPL.EQ.'RECI')THEN
        DO1671I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1671
          ICNT=ICNT+1
          CALL RECPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1671   CONTINUE
      ELSEIF(ICASPL.EQ.'NORX')THEN
        DO1681I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1681
          ICNT=ICNT+1
          CALL NMXPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                X2OUT)
          X2TEMP(ICNT)=X2OUT
 1681   CONTINUE
      ELSEIF(ICASPL.EQ.'IGAM')THEN
        DO1691I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1691
          ICNT=ICNT+1
          CALL IGAPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1691   CONTINUE
      ELSEIF(ICASPL.EQ.'GTLA')THEN
        DO1701I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1701
          ICNT=ICNT+1
          IWRITE='OFF'
          CALL GLDPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT,
     1                IGLDDF,IWRITE)
          IF(IGLDDF.EQ.'RAMB')THEN
CCCCC       X2OUT=ZSCALE*REAL(DX2OUT)
            X2OUT=REAL(DX2OUT)
          ELSE
            X2OUT=REAL(DX2OUT)
          ENDIF
          X2TEMP(ICNT)=X2OUT
 1701   CONTINUE
      ELSEIF(ICASPL.EQ.'JOSB')THEN
        DO1711I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1711
          ICNT=ICNT+1
          CALL JSBPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1711   CONTINUE
      ELSEIF(ICASPL.EQ.'JOSU')THEN
        DO1721I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1721
          ICNT=ICNT+1
          CALL JSUPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1721   CONTINUE
      ELSEIF(ICASPL.EQ.'IWEI')THEN
        DO1731I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1731
          ICNT=ICNT+1
          CALL IWEPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1731   CONTINUE
      ELSEIF(ICASPL.EQ.'LDEX')THEN
        DO1741I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1741
          ICNT=ICNT+1
          CALL LDEPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 1741   CONTINUE
      ELSEIF(ICASPL.EQ.'GEEX')THEN
        DO1751I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1751
          ICNT=ICNT+1
          CALL GEEPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
1751    CONTINUE
      ELSEIF(ICASPL.EQ.'TSPO')THEN
        DO1761I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1761
          ICNT=ICNT+1
          CALL TSPPPF(X2TEMP(I),SHAPE1,SHAPE2,A,B,X2OUT)
          X2TEMP(ICNT)=X2OUT
1761    CONTINUE
      ELSEIF(ICASPL.EQ.'BWEI')THEN
        DO1771I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1771
          ICNT=ICNT+1
          CALL BWEPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                X2OUT,DX2OUT)
          X2TEMP(ICNT)=X2OUT
1771    CONTINUE
      ELSEIF(ICASPL.EQ.'GHPP')THEN
        AVAL1=-1.0
        DO1781I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1781
          ICNT=ICNT+1
          CALL GHPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT,DBLE(AVAL1),DX2OUT)
          X2TEMP(ICNT)=X2OUT
1781    CONTINUE
      ELSEIF(ICASPL.EQ.'GPP')THEN
        AVAL1=-1.0
        HTEMP=0.0
        DO1783I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1783
          ICNT=ICNT+1
          CALL GHPPF(X2TEMP(I),SHAPE1,HTEMP,X2OUT,DBLE(AVAL1),DX2OUT)
          X2TEMP(ICNT)=X2OUT
1783    CONTINUE
      ELSEIF(ICASPL.EQ.'HPP')THEN
        AVAL1=-1.0
        GTEMP=0.0
        DO1785I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1785
          ICNT=ICNT+1
          CALL GHPPF(X2TEMP(I),GTEMP,SHAPE1,X2OUT,DBLE(AVAL1),DX2OUT)
          X2TEMP(ICNT)=X2OUT
1785    CONTINUE
      ELSEIF(ICASPL.EQ.'LAND')THEN
        DO1791I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1791
          ICNT=ICNT+1
          DX2OUT=LANPPF(DBLE(X2TEMP(I)))
          X2TEMP(ICNT)=REAL(DX2OUT)
1791    CONTINUE
      ELSEIF(ICASPL.EQ.'ERRO')THEN
        DO1801I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1801
          ICNT=ICNT+1
          X2IN=X2TEMP(I)
          CALL ERRPPF(X2IN,SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
1801    CONTINUE
      ELSEIF(ICASPL.EQ.'TRAP')THEN
        DO1811I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1811
          ICNT=ICNT+1
          CALL TRAPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,SHAPE4,X2OUT)
          X2TEMP(ICNT)=X2OUT
1811    CONTINUE
      ELSEIF(ICASPL.EQ.'GTRA')THEN
        DO1821I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1821
          ICNT=ICNT+1
          CALL GTRPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                SHAPE6,SHAPE7,X2OUT)
          X2TEMP(ICNT)=X2OUT
1821    CONTINUE
      ELSEIF(ICASPL.EQ.'FT  ')THEN
        DO1831I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1831
          ICNT=ICNT+1
          CALL FTPPF(X2TEMP(I),INT(SHAPE1+0.1),X2OUT)
          X2TEMP(ICNT)=X2OUT
1831    CONTINUE
      ELSEIF(ICASPL.EQ.'SLAS')THEN
        DO1841I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1841
          ICNT=ICNT+1
          CALL SLAPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
1841    CONTINUE
      ELSEIF(ICASPL.EQ.'SNOR')THEN
        DO1851I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1851
          ICNT=ICNT+1
          CALL SNPPF(X2TEMP(I),SHAPE1,ISKNDF,X2OUT)
          X2TEMP(ICNT)=X2OUT
1851    CONTINUE
      ELSEIF(ICASPL.EQ.'TSKE')THEN
        DO1861I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1861
          ICNT=ICNT+1
          CALL STPPF(X2TEMP(I),INT(SHAPE1+0.1),SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
1861    CONTINUE
      ELSEIF(ICASPL.EQ.'IBET')THEN
        DO1871I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1871
          ICNT=ICNT+1
          CALL IBPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
1871    CONTINUE
      ELSEIF(ICASPL.EQ.'GOMM')THEN
        DO1881I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1881
          ICNT=ICNT+1
          IF(IMAKDF.EQ.'DLMF')THEN
            CALL MAKPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,X2OUT)
          ELSEIF(IMAKDF.EQ.'MEEK')THEN
            XI=SHAPE1/SHAPE3
            THETA=SHAPE2/SHAPE1
            ALAMB=SHAPE3
            CALL MAKPPF(X2TEMP(I),XI,ALAMBA,THETA,X2OUT)
          ELSEIF(IMAKDF.EQ.'REPA')THEN
            CALL MA2PPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          ENDIF
          X2TEMP(ICNT)=X2OUT
1881    CONTINUE
      ELSEIF(ICASPL.EQ.'LSNO')THEN
        DO1891I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1891
          ICNT=ICNT+1
          CALL LSNPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
1891    CONTINUE
      ELSEIF(ICASPL.EQ.'LSKT')THEN
        DO1901I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1901
          ICNT=ICNT+1
          CALL LSTPPF(X2TEMP(I),INT(SHAPE1+0.1),SHAPE2,SHAPE3,X2OUT)
          X2TEMP(ICNT)=X2OUT
1901    CONTINUE
      ELSEIF(ICASPL.EQ.'POLY')THEN
        DO1921I=1,N
          ICNT=ICNT+1
          CALL POLPPF(X2TEMP(I),SHAPE1,SHAPE2,INT(SHAPE3+0.1),X2OUT)
          X2TEMP(ICNT)=X2OUT
1921    CONTINUE
      ELSEIF(ICASPL.EQ.'HERM')THEN
        DO1931I=1,N
          ICNT=ICNT+1
          CALL HERPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
1931    CONTINUE
      ELSEIF(ICASPL.EQ.'SDEX')THEN
        DO1941I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1941
          ICNT=ICNT+1
          CALL SDEPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
1941    CONTINUE
      ELSEIF(ICASPL.EQ.'ADEX')THEN
        DO1951I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1951
          ICNT=ICNT+1
          IF(IADEDF.EQ.'K')THEN
            CALL ADEPPF(X2TEMP(I),SHAPE1,IADEDF,X2OUT)
          ELSE
            CALL ADEPPF(X2TEMP(I),SHAPE1,IADEDF,X2OUT)
          ENDIF
          X2TEMP(ICNT)=X2OUT
1951    CONTINUE
      ELSEIF(ICASPL.EQ.'MAXW')THEN
        DO1961I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1961
          ICNT=ICNT+1
          CALL MAXPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
1961    CONTINUE
      ELSEIF(ICASPL.EQ.'RAYL')THEN
        DO1971I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1971
          ICNT=ICNT+1
          CALL RAYPPF(X2TEMP(I),X2OUT)
          X2TEMP(ICNT)=X2OUT
1971    CONTINUE
      ELSEIF(ICASPL.EQ.'GIGA')THEN
        IF(IGIGDF.EQ.'2PAR')THEN
          DO1981I=1,N
            IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1981
            ICNT=ICNT+1
            CALL GI2PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                  DX2OUT)
            X2TEMP(ICNT)=REAL(DX2OUT)
1981      CONTINUE
        ELSE
          DO1986I=1,N
            IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1986
            ICNT=ICNT+1
            CALL GIGPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                  DBLE(SHAPE3),DX2OUT)
            X2TEMP(ICNT)=REAL(DX2OUT)
1986      CONTINUE
        ENDIF
      ELSEIF(ICASPL.EQ.'GALP')THEN
        DO1991I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1991
          ICNT=ICNT+1
          CALL GALPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                IADEDF,DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 1991   CONTINUE
      ELSEIF(ICASPL.EQ.'MCLE')THEN
        DO2001I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2001
          ICNT=ICNT+1
          CALL MCLPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2001   CONTINUE
      ELSEIF(ICASPL.EQ.'BEIP')THEN
        IF(IBEIDF.EQ.'1')THEN
          DO2011I=1,N
            IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2011
            ICNT=ICNT+1
            CALL BEIPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                  DBLE(SHAPE3),IBEIDF,DX2OUT)
            X2TEMP(ICNT)=REAL(DX2OUT)
 2011     CONTINUE
        ELSE
          DO2016I=1,N
            IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2016
            ICNT=ICNT+1
            CALL BEIPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                  DBLE(SHAPE3),IBEIDF,DX2OUT)
            X2TEMP(ICNT)=REAL(DX2OUT)
 2016     CONTINUE
        ENDIF
      ELSEIF(ICASPL.EQ.'BEIK')THEN
        DO2021I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2021
          ICNT=ICNT+1
CCCCC     CALL BEKPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
CCCCC1                DBLE(SHAPE3),DX2OUT)
CCCCC     X2TEMP(ICNT)=REAL(DX2OUT)
          X2TEMP(ICNT)=0.0
 2021   CONTINUE
      ELSEIF(ICASPL.EQ.'GMCL')THEN
        DO2031I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2031
          ICNT=ICNT+1
          CALL GMCPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2031   CONTINUE
      ELSEIF(ICASPL.EQ.'G5LO')THEN
        XPAR(1)=0.0D0
        XPAR(2)=1.0D0
        XPAR(3)=DBLE(SHAPE1)
        DO2041I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2041
          ICNT=ICNT+1
          DX2OUT=QUAGLO(DBLE(X2(I)),XPAR)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2041   CONTINUE
      ELSEIF(ICASPL.EQ.'WAKE')THEN
        XPAR(1)=DBLE(SHAPE4)
        XPAR(2)=DBLE(SHAPE5)
        XPAR(3)=DBLE(SHAPE1)
        XPAR(4)=DBLE(SHAPE2)
        XPAR(5)=DBLE(SHAPE3)
        DO2051I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2051
          ICNT=ICNT+1
          DX2OUT=QUAWAK(DBLE(X2(I)),XPAR)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2051   CONTINUE
      ELSEIF(ICASPL.EQ.'BNOR')THEN
        DO2061I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2061
          ICNT=ICNT+1
          CALL BNOPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2061   CONTINUE
      ELSEIF(ICASPL.EQ.'G2LO')THEN
        DO2071I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2071
          ICNT=ICNT+1
          CALL GL2PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2071   CONTINUE
      ELSEIF(ICASPL.EQ.'G3LO')THEN
        DO2081I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2081
          ICNT=ICNT+1
          CALL GL3PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2081   CONTINUE
      ELSEIF(ICASPL.EQ.'G4LO')THEN
        DO2091I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2091
          ICNT=ICNT+1
          CALL GL4PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2091   CONTINUE
      ELSEIF(ICASPL.EQ.'ALDE')THEN
        DO2101I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2101
          ICNT=ICNT+1
          CALL ALDPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2101   CONTINUE
      ELSEIF(ICASPL.EQ.'BGEO')THEN
        IF(IBGEDF.EQ.'UNSH')THEN
          DO2111I=1,N
            ICNT=ICNT+1
            CALL BGEPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
            X2TEMP(ICNT)=X2OUT
 2111     CONTINUE
        ELSE
          DO2116I=1,N
            ICNT=ICNT+1
            CALL BG2PPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
            X2TEMP(ICNT)=X2OUT
 2116     CONTINUE
        ENDIF
      ELSEIF(ICASPL.EQ.'ZETA')THEN
        DO2121I=1,N
          ICNT=ICNT+1
          CALL ZETPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 2121   CONTINUE
      ELSEIF(ICASPL.EQ.'ZIPF')THEN
        DO2131I=1,N
          ICNT=ICNT+1
          CALL ZIPPPF(X2TEMP(I),SHAPE1,INT(SHAPE2+0.1),X2OUT)
          X2TEMP(ICNT)=X2OUT
 2131   CONTINUE
      ELSEIF(ICASPL.EQ.'BTAN')THEN
        DO2141I=1,N
          ICNT=ICNT+1
          CALL BTAPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 2141   CONTINUE
      ELSEIF(ICASPL.EQ.'BNBI')THEN
        DO2151I=1,N
          ICNT=ICNT+1
          CALL GWAPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2151   CONTINUE
      ELSEIF(ICASPL.EQ.'LPOI')THEN
        DO2161I=1,N
          ICNT=ICNT+1
          CALL LPOPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 2161   CONTINUE
      ELSEIF(ICASPL.EQ.'LICT')THEN
        DO2171I=1,N
          ICNT=ICNT+1
          CALL LCTPPF(X2TEMP(I),INT(SHAPE1+0.1),X2OUT)
          X2TEMP(ICNT)=X2OUT
 2171   CONTINUE
      ELSEIF(ICASPL.EQ.'MATC')THEN
        DO2181I=1,N
          ICNT=ICNT+1
          CALL MATPPF(X2TEMP(I),INT(SHAPE1+0.1),X2OUT)
          X2TEMP(ICNT)=X2OUT
 2181   CONTINUE
      ELSEIF(ICASPL.EQ.'LBET')THEN
        YLOWLM=SHAPE3
        YUPPLM=SHAPE4
        EPS=(XMAX-XMIN)*0.01
        IF(YLOWLM.GT.XMIN)YLOWLM=XMIN-EPS
        IF(YUPPLM.LT.XMAX)YUPPLM=XMAX+EPS
C
        DO2191I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2191
          ICNT=ICNT+1
          CALL LBEPPF(X2TEMP(I),SHAPE1,SHAPE2,YLOWLM,YUPPLM,X2OUT)
          X2TEMP(ICNT)=X2OUT
 2191   CONTINUE
      ELSEIF(ICASPL.EQ.'AEPP')THEN
        DO2201I=1,N
          ICNT=ICNT+1
          CALL PAPPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2201   CONTINUE
      ELSEIF(ICASPL.EQ.'LOST')THEN
        DO2211I=1,N
          ICNT=ICNT+1
          CALL LOSPPF(X2TEMP(I),SHAPE1,INT(SHAPE2+0.1),X2OUT)
          X2TEMP(ICNT)=X2OUT
 2211   CONTINUE
      ELSEIF(ICASPL.EQ.'GLOS')THEN
        DO2221I=1,N
          ICNT=ICNT+1
          CALL GLSPPF(X2TEMP(I),SHAPE1,SHAPE2,X2OUT)
          X2TEMP(ICNT)=X2OUT
 2221   CONTINUE
      ELSEIF(ICASPL.EQ.'GNBI')THEN
        DO2231I=1,N
          ICNT=ICNT+1
          CALL GNBPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,X2OUT)
          X2TEMP(ICNT)=X2OUT
 2231   CONTINUE
      ELSEIF(ICASPL.EQ.'GEET')THEN
        DO2241I=1,N
          ICNT=ICNT+1
          CALL GETPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                IGETDF,DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2241   CONTINUE
      ELSEIF(ICASPL.EQ.'QBIN')THEN
        DO2251I=1,N
          ICNT=ICNT+1
          CALL QBIPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,X2OUT)
          X2TEMP(ICNT)=X2OUT
 2251   CONTINUE
      ELSEIF(ICASPL.EQ.'CONS')THEN
        DO2261I=1,N
          ICNT=ICNT+1
          CALL CONPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                ICONDF,DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2261   CONTINUE
      ELSEIF(ICASPL.EQ.'LKAT')THEN
        DO2271I=1,N
          ICNT=ICNT+1
          CALL LKPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1               DBLE(SHAPE3),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2271   CONTINUE
      ELSEIF(ICASPL.EQ.'KATZ')THEN
        DO2281I=1,N
          ICNT=ICNT+1
          CALL KATPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                IKATDF,DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2281   CONTINUE
      ELSEIF(ICASPL.EQ.'DISW')THEN
        DO2291I=1,N
          ICNT=ICNT+1
          CALL DIWPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2291   CONTINUE
      ELSEIF(ICASPL.EQ.'GLGP')THEN
        DO2301I=1,N
          ICNT=ICNT+1
          CALL GLGPPF(X2TEMP(I),SHAPE1,INT(SHAPE2+0.1),SHAPE3,X2OUT)
          X2TEMP(ICNT)=X2OUT
 2301   CONTINUE
      ELSEIF(ICASPL.EQ.'TGNB')THEN
        DO2311I=1,N
          ICNT=ICNT+1
          CALL GNTPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,INT(SHAPE4+0.1),
     1                X2OUT)
          X2TEMP(ICNT)=X2OUT
 2311   CONTINUE
      ELSEIF(ICASPL.EQ.'TOPL')THEN
        DO2321I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2321
          ICNT=ICNT+1
          CALL TOPPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2321   CONTINUE
      ELSEIF(ICASPL.EQ.'GTOL')THEN
        DO2331I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2331
          ICNT=ICNT+1
          CALL GTLPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2331   CONTINUE
      ELSEIF(ICASPL.EQ.'RGTL')THEN
        DO2341I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2341
          ICNT=ICNT+1
          CALL RGTPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2341   CONTINUE
      ELSEIF(ICASPL.EQ.'SLOP')THEN
        DO2351I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2351
          ICNT=ICNT+1
          CALL SLOPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 2351   CONTINUE
      ELSEIF(ICASPL.EQ.'OGIV')THEN
        DO2361I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2361
          ICNT=ICNT+1
          CALL OGIPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2361   CONTINUE
      ELSEIF(ICASPL.EQ.'TSSL')THEN
        DO2371I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2371
          ICNT=ICNT+1
          CALL TSSPPF(X2TEMP(I),SHAPE2,SHAPE1,A,B,X2OUT)
          X2TEMP(ICNT)=X2OUT
 2371   CONTINUE
      ELSEIF(ICASPL.EQ.'TSOG')THEN
        DO2381I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2381
          ICNT=ICNT+1
          CALL TSOPPF(DBLE(X2TEMP(I)),DBLE(SHAPE2),DBLE(SHAPE1),
     1                DBLE(A),DBLE(B),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2381   CONTINUE
      ELSEIF(ICASPL.EQ.'BUR2')THEN
        DO2391I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2391
          ICNT=ICNT+1
          CALL BU2PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2391   CONTINUE
      ELSEIF(ICASPL.EQ.'BUR3')THEN
        DO2401I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2401
          ICNT=ICNT+1
          CALL BU3PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2401   CONTINUE
      ELSEIF(ICASPL.EQ.'BUR4')THEN
        DO2411I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2411
          ICNT=ICNT+1
          CALL BU4PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2411   CONTINUE
      ELSEIF(ICASPL.EQ.'BUR5')THEN
        DO2421I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2421
          ICNT=ICNT+1
          CALL BU5PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2421   CONTINUE
      ELSEIF(ICASPL.EQ.'BUR6')THEN
        DO2431I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2431
          ICNT=ICNT+1
          CALL BU6PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2431   CONTINUE
      ELSEIF(ICASPL.EQ.'BUR7')THEN
        DO2441I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2441
          ICNT=ICNT+1
          CALL BU7PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2441   CONTINUE
      ELSEIF(ICASPL.EQ.'BUR8')THEN
        DO2451I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2451
          ICNT=ICNT+1
          CALL BU8PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2451   CONTINUE
      ELSEIF(ICASPL.EQ.'BUR9')THEN
        DO2461I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2461
          ICNT=ICNT+1
          CALL BU9PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2461   CONTINUE
      ELSEIF(ICASPL.EQ.'BU10')THEN
        DO2471I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2471
          ICNT=ICNT+1
          CALL B10PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2471   CONTINUE
      ELSEIF(ICASPL.EQ.'BU11')THEN
        DO2481I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2481
          ICNT=ICNT+1
          CALL B11PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2481   CONTINUE
      ELSEIF(ICASPL.EQ.'BU12')THEN
        DO2491I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2491
          ICNT=ICNT+1
          CALL B12PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2491   CONTINUE
      ELSEIF(ICASPL.EQ.'DPUN')THEN
        ALOCT=0.0
        SCALET=1.0
        DO2501I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2501
          ICNT=ICNT+1
          CALL DPUPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(ALOCT),DBLE(SCALET),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2501   CONTINUE
C
      ELSEIF(ICASPL.EQ.'KUMA')THEN
        DO2511I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2511
          ICNT=ICNT+1
          CALL KUMPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2511   CONTINUE
      ELSEIF(ICASPL.EQ.'RPOW')THEN
        DO2521I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2521
          ICNT=ICNT+1
          CALL RPOPPF(X2TEMP(I),SHAPE1,X2OUT)
          X2TEMP(ICNT)=X2OUT
 2521   CONTINUE
      ELSEIF(ICASPL.EQ.'UTSP')THEN
        DO2531I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2531
          ICNT=ICNT+1
          CALL UTSPPF(X2TEMP(I),SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                SHAPE6,X2OUT)
          X2TEMP(ICNT)=X2OUT
 2531   CONTINUE
      ELSEIF(ICASPL.EQ.'MUTH')THEN
        DO2541I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2541
          ICNT=ICNT+1
          CALL MUTPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2541   CONTINUE
      ELSEIF(ICASPL.EQ.'LEXP')THEN
        DO2551I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2551
          ICNT=ICNT+1
          CALL LEXPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2551   CONTINUE
      ELSEIF(ICASPL.EQ.'TPAR')THEN
        DO2561I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2561
          ICNT=ICNT+1
          CALL TNPPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2561   CONTINUE
      ELSEIF(ICASPL.EQ.'BFRA')THEN
        DO2571I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2571
          ICNT=ICNT+1
          CALL BFRPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2571   CONTINUE
      ELSEIF(ICASPL.EQ.'L3EX')THEN
        DO2581I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2581
          ICNT=ICNT+1
          CALL LE3PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2581   CONTINUE
      ELSEIF(ICASPL.EQ.'KAPP')THEN
        DLOC=0.0D0
        DSCALE=1.0D0
        DO2591I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2591
          ICNT=ICNT+1
          CALL KAPPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DLOC,DSCALE,DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2591   CONTINUE
      ELSEIF(ICASPL.EQ.'PEA3')THEN
        DLOC=0.0D0
        DSCALE=1.0D0
        DO2601I=1,N
          IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2601
          ICNT=ICNT+1
          CALL PE3PPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DLOC,DSCALE,DX2OUT)
          X2TEMP(ICNT)=REAL(DX2OUT)
 2601   CONTINUE
      ELSEIF(ICASPL.EQ.'EEWE')THEN
C
C       DO DIFFERENTLY DEPENDING ON WHETHER L IS CONSTANT OR VARIABLE
C
        IF(ILEVEL.EQ.'ON')THEN
          DO2613I=1,N
            IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2613
            ICNT=ICNT+1
            CALL EEWPPF(DBLE(X2TEMP(I)),DBLE(XLEVEL(I)),DBLE(SHAPE1),
     1                  DBLE(SHAPE2),DBLE(SHAPE3),DBLE(SHAPE4),
     1                  DX2OUT)
            X2TEMP(ICNT)=REAL(DX2OUT)
2613      CONTINUE
        ELSE
          DO2611I=1,N
            IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2611
            ICNT=ICNT+1
            CALL EEWPPF(DBLE(X2TEMP(I)),DBLE(SHAPE5),DBLE(SHAPE1),
     1                  DBLE(SHAPE2),DBLE(SHAPE3),DBLE(SHAPE4),
     1                  DX2OUT)
            X2TEMP(ICNT)=REAL(DX2OUT)
2611      CONTINUE
        ENDIF
      ELSEIF(ICASPL.EQ.'BFWE')THEN
        IF(ILEVEL.EQ.'ON')THEN
          NTEMP=1
          ALOC=0.0
          SCALE=1.0
          DO2626I=1,N
            IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2626
            ICNT=ICNT+1
            DXTEMP(1)=DBLE(X2TEMP(I))
            CALL BFWPP2(DXTEMP,NTEMP,LI,API,NILEVE,
     1                  DBLE(SHAPE1),DBLE(ALOC),DBLE(SCALE),
     1                  PPFOUT,
     1                  ISUBRO,IBUGG3,IERROR)
            X2TEMP(ICNT)=REAL(PPFOUT(1))
2626      CONTINUE
        ELSE
          DO2621I=1,N
            IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO2621
            ICNT=ICNT+1
            CALL BFWPPF(DBLE(X2TEMP(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                  DX2OUT)
            X2TEMP(ICNT)=REAL(DX2OUT)
2621      CONTINUE
        ENDIF
      ENDIF
C
      NTEMP=ICNT
      IF(NHIGH.EQ.0)THEN
        DO1910I=1,NTEMP
          X2(N2+I)=PPLOC + PPSCAL*X2TEMP(I)
          D2(N2+I)=REAL(NCURVE)
 1910   CONTINUE
      ELSE
        DO1911I=1,NTEMP
          X2(N2+I)=PPLOC + PPSCAL*X2TEMP(I)
          D2(N2+I)=WEIGHH(I)
 1911   CONTINUE
      ENDIF
C
      ICNT2=0
      DO1912I=1,N
        IF(ICENSO.EQ.'ON' .AND. X(I).EQ.0.0)GOTO1912
        ICNT2=ICNT2+1
        Y2(N2+ICNT2)=Y2TEMP(I)
 1912 CONTINUE
      N2OLD=N2
      NPTS=ICNT
      N2=N2+ICNT2
      NPLOTV=2
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1917)N2OLD,N2,NPTS
 1917   FORMAT('N2OLD,N2,NPTS = ',3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     OCTOBER 2009: MOVE COMPUTATION OF PPA0, PPA1, PPCC, PPAOBW,
C                   AND PPA1BW HERE (INSTEAD OF DPPP).  THIS MAKES
C                   THE DPPP2 ROUTINE MORE USEFUL FOR OTHER ROUTINES
C                   THAT WANT TO COMPUTE A PPCC VALUE INDEPENDENT OF
C                   THE PROBABILITY PLOT COMMAND (E.G., DPGOF9, DPPPC2).
C
      PPA0=CPUMIN
      PPA1=CPUMIN
      XRESSD=CPUMIN
      XRESDF=CPUMIN
      PPCC=CPUMIN
      SDPPA0=CPUMIN
      SDPPA1=CPUMIN
      CCALBE=CPUMIN
      PPA0BW=CPUMIN
      PPA1BW=CPUMIN
C
      IF(NPTS.GE.2)THEN
        CALL LINFIT(Y2(N2OLD+1),X2(N2OLD+1),NPTS,
     1              PPA0,PPA1,XRESSD,XRESDF,PPCC,SDPPA0,SDPPA1,CCALBE,
     1              ISUBRO,IBUGG3,IERROR)
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP2')THEN
          WRITE(ICOUT,8001)PPA0,PPA1,NPTS
 8001     FORMAT('AFTER LINFIT: PPA0,PPA1,NPTS = ',2G15.7,I10)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C       2019/07: IN ORDER TO REDUCE SCRATCH SPACE USAGE, USE
C                XTEMP1 FOR PREDBW AND X2TEMP FOR RESBW.
C
        DO8010I=1,NPTS
          X2TEMP(I)=Y2(N2OLD+I) - (PPA0 + PPA1*X2(N2OLD+I))
          WEIGHH(I)=1.0
          WEIGHV(I)=1.0
 8010   CONTINUE
        IWRITE='OFF'
        CALL BIWEIG(X2TEMP,NPTS,IWRITE,WEIGHV,IBUGG3,IERROR)
C
        IT=1
        I1=1
        I2=NPTS
        I3=1
        I4=NPTS
        XMAXHF=1.0
C
        CALL LINEAR(IT,I1,I2,X2(N2OLD+1),Y2(N2OLD+1),
     1              WEIGHH,WEIGHV,NPTS,XMAXHF,I3,I4,
     1              PPA0BW,PPA1BW,XTEMP1,X2TEMP,
     1              ISUBRO,IBUGG3,IERROR)
C
        DO8020I=1,NPTS
          X2TEMP(I)=Y2(N2OLD+I) - (PPA0BW + PPA1BW*X2(N2OLD+I))
 8020   CONTINUE
        CALL BIWEIG(X2TEMP,NPTS,IWRITE,WEIGHV,IBUGG3,IERROR)
        CALL LINEAR(IT,I1,I2,X2(N2OLD+1),Y2(N2OLD+1),
     1              WEIGHH,WEIGHV,NPTS,XMAXHF,I3,I4,
     1              PPA0BW,PPA1BW,XTEMP1,X2TEMP,
     1              ISUBRO,IBUGG3,IERROR)
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP2')THEN
          WRITE(ICOUT,8021)PPA0BW,PPA1BW
 8021     FORMAT('AFTER BIWEIGHT: PPA0BW,PPA1BW = ',2G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
      ENDIF
C
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,N2,NPTS,IERROR
 9012   FORMAT('ICASPL,N2,NPTS,IERROR = ',A4,2X,2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)MINMAX
 9015   FORMAT('MINMAX = ',I8)
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,N2
          WRITE(ICOUT,9021)I,Y2(I),X2(I),D2(I)
 9021     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPP3(Y,X,XHIGH,N,ICASPL,IDATSW,
     1                 XCENS,XTEMP1,
     1                 XTEMP2,XTEMP3,XTEMP4,
     1                 YLOWLM,YUPPLM,A,B,MINMAX,
     1                 SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1                 SHAPE5,SHAPE6,SHAPE7,
     1                 IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                 ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                 IGETDF,ICONDF,IGOMDF,IKATDF,
     1                 IGIGDF,IGEODF,
     1                 IPPLDP,MAXOBV,ICENSO,IMETH,
     1                 PPLOC,PPSCAL,
     1                 PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                 CCALBE,PPA0BW,PPA1BW,
     1                 WEIGHH,WEIGHV,
     1                 Y2,X2,D2,N2,NPLOTV,NCURVE,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS THAT WILL DEFINE
C              A PROBABILITY PLOT FOR A SPECIFIED DISTRIBUTION FOR
C              THE GROUPED DATA CASE.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/8
C     ORIGINAL VERSION--AUGUST    2009. SPLIT OFF AS SEPARATE SUBROUTINE
C                                       FROM DPPP2
C     UPDATED         --JULY      2010. END EFFECTS WEIBULL
C     UPDATED         --AUGUST    2010. BRITTLE FIBER WEIBULL
C     UPDATED         --JULY      2019. REDUCE USE OF SCRATCH SPACE BY
C                                       TWO ARRAYS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IDATSW
      CHARACTER*4 IADEDF
      CHARACTER*4 IGEPDF
      CHARACTER*4 IMAKDF
      CHARACTER*4 IBEIDF
      CHARACTER*4 ILGADF
      CHARACTER*4 ISKNDF
      CHARACTER*4 IGLDDF
      CHARACTER*4 IBGEDF
      CHARACTER*4 IGETDF
      CHARACTER*4 ICONDF
      CHARACTER*4 IGOMDF
      CHARACTER*4 IKATDF
      CHARACTER*4 IGIGDF
      CHARACTER*4 IGEODF
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICENSO
      CHARACTER*4 IMETH
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
      CHARACTER*4 IWRITE
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION XHIGH(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
      DIMENSION XCENS(*)
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION XTEMP4(*)
C
      DIMENSION WEIGHH(*)
      DIMENSION WEIGHV(*)
CCCCC DIMENSION PREDBW(*)
CCCCC DIMENSION RESBW(*)
C
      DOUBLE PRECISION LANPPF
      DOUBLE PRECISION DX2OUT
      DOUBLE PRECISION DPPF
      DOUBLE PRECISION DLOC
      DOUBLE PRECISION DSCALE
      DOUBLE PRECISION SUM
C
      DOUBLE PRECISION QUAGLO
      DOUBLE PRECISION QUAWAK
      DOUBLE PRECISION XPAR(5)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C
      ISUBN1='DPPP'
      ISUBN2='3   '
      IERROR='NO'
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,171)
  171   FORMAT('***** AT THE BEGINNING OF DPPP3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,172)ICASPL,IDATSW,N,NPLOTV,MINMAX,IPPLDP
  172   FORMAT('ICASPL,IDATSW,N,NPLOTV,MINMAX,IPPLDP = ',
     1         A4,2X,A4,2X,4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,174)N2,NCURVE,MAXOBV
  174   FORMAT('N2,NCURVE,MAXOBV = ',3I8)
        CALL DPWRST('XXX','BUG ')
        IF(N.GE.1)THEN
          DO185I=1,N
            WRITE(ICOUT,186)I,Y(I),X(I),XHIGH(I)
  186       FORMAT('I,Y(I),X(I),XHIGH(I) = ',I8,3G12.5)
            CALL DPWRST('XXX','BUG ')
  185     CONTINUE
        ENDIF
      ENDIF
C
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LE.1)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,46)
   46   FORMAT('***** ERROR IN PROBABILITY PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,47)
   47   FORMAT('      THE NUMBER OF OBSERVATIONS WAS LESS THAN OR')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,48)
   48   FORMAT('      EQUAL TO 1.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,49)N
   49   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      NMIN=2
      NJUNK=0
      MAXGRP=50000
      IF(IDATSW.EQ.'FREQ')THEN
        CALL CKDIS2(Y,X,XTEMP1,N,MAXGRP,NMIN,XTEMP2,NJUNK,NTOT2,
     1              ISUBRO,IBUGG3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ELSEIF(IDATSW.EQ.'FRE2')THEN
        CALL CKDIS3(Y,X,XHIGH,XTEMP1,N,MAXGRP,NMIN,XTEMP2,NJUNK,NTOT2,
     1              ISUBRO,IBUGG3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
C               ********************************************
C               **  STEP 2--                              **
C               **  DETERMINE PLOT COORDINATES            **
C               **  FOR THE 2-VARIABLE CASE               **
C               **  (THAT IS, FOR THE GROUPED DATA CASE)  **
C               ********************************************
C
CCCCC OCTOBER 2004: REMOVE BINS WITH ZERO FREQUENCY
C
      ICNT=0
      DO201I=1,N
        IF(Y(I).GT.0.0)THEN
          ICNT=ICNT+1
          XTEMP2(ICNT)=Y(I)
          XTEMP3(ICNT)=X(I)
          XTEMP4(ICNT)=XHIGH(I)
          XTEMP1(ICNT)=XCENS(I)
        ENDIF
  201 CONTINUE
      N=ICNT
      DO203I=1,N
        Y(I)=XTEMP2(I)
        X(I)=XTEMP3(I)
        XHIGH(I)=XTEMP4(I)
        XCENS(I)=XTEMP1(I)
  203 CONTINUE
C
CCCCC MAY 2005: FOR CASE WHERE BINS SPECIFIED AS LOWER AND UPPER
CCCCC           LIMITS, COMPUTE THE MID-POINTS OF EACH OF THE BINS.
CCCCC
CCCCC           SAVE ORIGINAL LOWER LIMIT (WILL BE RESTORED AT
CCCCC           END OF ROUTINE).
C
      IF(IDATSW.EQ.'FRE2')THEN
        DO211I=1,N
          XTEMP4(I)=X(I)
          X(I)=(X(I) + XHIGH(I))/2.0
  211   CONTINUE
      ENDIF
C
      IF(ICENSO.EQ.'ON')THEN
        CALL SORTC(X,XCENS,N,XTEMP2,XTEMP1)
        DO213I=1,N
          XCENS(I)=XTEMP1(I)
  213   CONTINUE
      ENDIF
C
      CALL SORTC(X,Y,N,XTEMP2,D2)
      DO215II=1,N
        Y2(II)=XTEMP2(II)
  215 CONTINUE
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP3')THEN
        DO221II=1,MIN(100,N)
          WRITE(ICOUT,223)II,D2(II),Y2(II)
  223     FORMAT('II,D2(II),Y2(II)=',I10,2G15.7)
          CALL DPWRST('XXX','BUG ')
  221   CONTINUE
      ENDIF
C
      XMIN=XTEMP2(1)
      XMAX=XTEMP2(N)
C
      EPS=0.00001
      IF(XMIN.LT.YLOWLM)YLOWLM=XMIN-EPS
      IF(XMAX.GT.YUPPLM)YUPPLM=XMAX+EPS
C
      SUM=0.0D0
      DO230I=1,N
        SUM=SUM+DBLE(Y(I))
        IF(ICENSO.EQ.'ON')SUM=SUM+DBLE(XCENS(I))
  230 CONTINUE
      NTOT=INT(SUM+0.5D0)
C
      ICNT=N2
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP3')THEN
        WRITE(ICOUT,240)NTOT
  240   FORMAT('NTOT = ',I10)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     AUGUST 2009: NOTE THAT OUTER LOOP DOES NOT DEPEND ON
C                  SPECIFIC DISTRIBUTION.  MODIFY CODE SO
C                  THAT ONLY INNER LOOP DEPENDS ON SPECIFIC
C                  DISTRIBUTION.
C
      I2=0
      DO 1000 I=1,N
        NI=INT(D2(I)+0.5)
        IF(NI.LE.0)GOTO1000
C
        IF(ICENSO.EQ.'ON')THEN
          NI2=INT(XCENS(I)+0.5)
        ELSE
          NI2=0
        ENDIF
C
        ANI=NI
        I1=I2+1
        I2=I1+NI-1
        SUM=0.0D0
C
C       NOW LOOP THROUGH THE SPECIFIC DISTRIBUTIONS
C
        IF(ICASPL.EQ.'UNIF')THEN
          DO1001K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL UNIPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 1001     CONTINUE
        ELSEIF(ICASPL.EQ.'NORM')THEN
          DO1011K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL NODPPF(DBLE(UNIOSM),DX2OUT)
            SUM=SUM+DX2OUT
 1011     CONTINUE
        ELSEIF(ICASPL.EQ.'LOGI')THEN
          DO1021K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LOGPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 1021     CONTINUE
        ELSEIF(ICASPL.EQ.'DEXP')THEN
          DO1031K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL DEXPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 1031     CONTINUE
        ELSEIF(ICASPL.EQ.'CAUC')THEN
          DO1041K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL CAUPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 1041     CONTINUE
        ELSEIF(ICASPL.EQ.'TULA')THEN
          DO1051K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LAMPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1051     CONTINUE
        ELSEIF(ICASPL.EQ.'LOGN' .OR. ICASPL.EQ.'3LGN')THEN
          DO1061K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LGNPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1061     CONTINUE
        ELSEIF(ICASPL.EQ.'HNOR')THEN
          DO1071K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL HFNPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 1071     CONTINUE
        ELSEIF(ICASPL.EQ.'TPP')THEN
          DO1081K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL TPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1081     CONTINUE
        ELSEIF(ICASPL.EQ.'CHIS')THEN
          DO1091K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL CHSPPF(UNIOSM,INT(SHAPE1+0.1),DISOSM)
            SUM=SUM+DISOSM
 1091     CONTINUE
        ELSEIF(ICASPL.EQ.'FPP')THEN
          DO1101K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL FPPF(UNIOSM,INT(SHAPE1+0.1),INT(SHAPE1+0.1),DISOSM)
            SUM=SUM+DISOSM
 1101     CONTINUE
        ELSEIF(ICASPL.EQ.'EXPO')THEN
          DO1111K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL EXPPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 1111     CONTINUE
        ELSEIF(ICASPL.EQ.'GAMM' .OR. ICASPL.EQ.'3GAM')THEN
          DO1121K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GAMPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1121     CONTINUE
        ELSEIF(ICASPL.EQ.'BETA')THEN
          DO1126K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BETPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DISOSM
 1126     CONTINUE
        ELSEIF(ICASPL.EQ.'WEIB' .OR. ICASPL.EQ.'3WEI')THEN
          DO1131K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL WEIPPF(UNIOSM,SHAPE1,MINMAX,DISOSM)
            SUM=SUM+DISOSM
 1131     CONTINUE
        ELSEIF(ICASPL.EQ.'EV1 ')THEN
          DO1141K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL EV1PPF(UNIOSM,MINMAX,DISOSM)
            SUM=SUM+DISOSM
 1141     CONTINUE
        ELSEIF(ICASPL.EQ.'EV2 ' .OR. ICASPL.EQ.'3EV2')THEN
          DO1151K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL EV2PPF(UNIOSM,SHAPE1,MINMAX,DISOSM)
            SUM=SUM+DISOSM
 1151     CONTINUE
        ELSEIF(ICASPL.EQ.'PARE')THEN
          ZLOC=SHAPE2
          IF(ZLOC.GT.XMIN)ZLOC=XMIN
          DO1161K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL PARPPF(UNIOSM,SHAPE1,ZLOC,DISOSM)
            SUM=SUM+DISOSM
 1161     CONTINUE
        ELSEIF(ICASPL.EQ.'BINO')THEN
          DO1171K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BINPPF(DBLE(UNIOSM),DBLE(SHAPE1),INT(SHAPE2+0.1),
     1                  DX2OUT)
            SUM=SUM+DX2OUT
 1171     CONTINUE
        ELSEIF(ICASPL.EQ.'GEOM')THEN
          IF(IGEODF.EQ.'DLMF')THEN
            DO1181K=I1,I2
              IF(ICENSO.EQ.'ON')THEN
                CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
              ELSE
                CALL UNIME2(NTOT,K,UNIOSM)
              ENDIF
              CALL GE2PPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
              SUM=SUM+DX2OUT
 1181       CONTINUE
          ELSE
            DO1186K=I1,I2
              IF(ICENSO.EQ.'ON')THEN
                CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
              ELSE
                CALL UNIME2(NTOT,K,UNIOSM)
              ENDIF
              CALL GEOPPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
              SUM=SUM+DX2OUT
 1186       CONTINUE
          ENDIF
C
        ELSEIF(ICASPL.EQ.'POIS')THEN
          DO1191K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL POIPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1191     CONTINUE
        ELSEIF(ICASPL.EQ.'NEBI')THEN
          DO1201K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL NBPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 1201     CONTINUE
        ELSEIF(ICASPL.EQ.'SEMC')THEN
          ASCALE=1.0
          DO1211K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL SEMPPF(UNIOSM,ASCALE,DISOSM)
            SUM=SUM+DISOSM
 1211     CONTINUE
        ELSEIF(ICASPL.EQ.'TRIA')THEN
          DO1221K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL TRIPPF(UNIOSM,SHAPE1,A,B,DISOSM)
            SUM=SUM+DISOSM
 1221     CONTINUE
        ELSEIF(ICASPL.EQ.'INGA')THEN
          DO1231K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL IGPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DPPF)
            SUM=SUM+REAL(DPPF)
 1231     CONTINUE
        ELSEIF(ICASPL.EQ.'WALD')THEN
          DO1241K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            AVAL=1.0
            CALL IGPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(AVAL),DPPF)
            SUM=SUM+REAL(DPPF)
 1241     CONTINUE
        ELSEIF(ICASPL.EQ.'RIGA')THEN
          DO1251K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL RIGPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DPPF)
            SUM=SUM+REAL(DPPF)
 1251     CONTINUE
        ELSEIF(ICASPL.EQ.'FATL')THEN
          DO1261K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL FLPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1261     CONTINUE
        ELSEIF(ICASPL.EQ.'GPAR')THEN
          DO1271K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GEPPPF(UNIOSM,SHAPE1,MINMAX,IGEPDF,DISOSM)
            SUM=SUM+DISOSM
 1271     CONTINUE
        ELSEIF(ICASPL.EQ.'DUNI')THEN
          DO1281K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
           CALL DISPPF(UNIOSM,INT(SHAPE1),DISOSM)
            SUM=SUM+DISOSM
 1281     CONTINUE
        ELSEIF(ICASPL.EQ.'NCT ')THEN
          DO1291K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL NCTPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DISOSM
 1291     CONTINUE
        ELSEIF(ICASPL.EQ.'NCF ')THEN
          DO1301K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL NCFPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,DISOSM)
            SUM=SUM+DISOSM
 1301     CONTINUE
        ELSEIF(ICASPL.EQ.'NCCS')THEN
          DO1311K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL NCCPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DISOSM
 1311     CONTINUE
        ELSEIF(ICASPL.EQ.'NCBE')THEN
          DO1321K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL NCBPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,DISOSM)
            SUM=SUM+DISOSM
 1321     CONTINUE
        ELSEIF(ICASPL.EQ.'DNCT')THEN
          DO1331K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL DNTPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,DISOSM)
            SUM=SUM+DISOSM
 1331     CONTINUE
        ELSEIF(ICASPL.EQ.'DNCF')THEN
          DO1341K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL DNFPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,SHAPE4,DISOSM)
            SUM=SUM+DISOSM
 1341     CONTINUE
        ELSEIF(ICASPL.EQ.'HYPG')THEN
          DO1351K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL HYPPPF(UNIOSM,INT(SHAPE1+0.1),INT(SHAPE2+0.1),
     1                INT(SHAPE3+0.1),DISOSM)
            SUM=SUM+DISOSM
 1351     CONTINUE
        ELSEIF(ICASPL.EQ.'VONM')THEN
          DO1361K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL VONPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1361     CONTINUE
        ELSEIF(ICASPL.EQ.'POWN')THEN
CCCCC     SDTEMP=1.0
          DO1371K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
CCCCC       CALL PNRPPF(UNIOSM,SHAPE1,SDTEMP,DISOSM)
            CALL PNRPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1371     CONTINUE
        ELSEIF(ICASPL.EQ.'PLGN')THEN
          DO1381K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL PLNPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DISOSM
 1381     CONTINUE
        ELSEIF(ICASPL.EQ.'ALPH')THEN
          DO1383K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL ALPPPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 1383     CONTINUE
        ELSEIF(ICASPL.EQ.'COSI')THEN
          DO1385K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL COSPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 1385     CONTINUE
        ELSEIF(ICASPL.EQ.'SINE')THEN
          DO1386K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL SINPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 1386     CONTINUE
        ELSEIF(ICASPL.EQ.'POWF')THEN
          DO1387K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL POWPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1387     CONTINUE
        ELSEIF(ICASPL.EQ.'CHI ')THEN
          DO1389K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL CHPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1389     CONTINUE
        ELSEIF(ICASPL.EQ.'LOGS')THEN
          DO1391K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL DLGPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1391     CONTINUE
        ELSEIF(ICASPL.EQ.'LOGL')THEN
          DO1401K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LLGPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1401     CONTINUE
        ELSEIF(ICASPL.EQ.'GGAM')THEN
          DO1411K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GGDPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DISOSM
 1411     CONTINUE
        ELSEIF(ICASPL.EQ.'WARI')THEN
          DO1421K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
CCCCC       CALL WARPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM,'NOTR')
            CALL WARPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DISOSM
 1421     CONTINUE
        ELSEIF(ICASPL.EQ.'YULE')THEN
          DO1431K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL YULPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1431     CONTINUE
        ELSEIF(ICASPL.EQ.'ANGL')THEN
          DO1441K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL ANGPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 1441     CONTINUE
        ELSEIF(ICASPL.EQ.'ARSI')THEN
          DO1451K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL ARSPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 1451     CONTINUE
        ELSEIF(ICASPL.EQ.'FNOR')THEN
          DO1461K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL FNRPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DISOSM
 1461     CONTINUE
        ELSEIF(ICASPL.EQ.'TNOR')THEN
          DO1471K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL TNRPPF(DBLE(UNIOSM),DBLE(A),DBLE(B),DBLE(SHAPE1),
     1                DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DISOSM
 1471     CONTINUE
        ELSEIF(ICASPL.EQ.'LGAM')THEN
          DO1481K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LGAPPF(UNIOSM,SHAPE1,ILGADF,DISOSM)
            SUM=SUM+DISOSM
 1481     CONTINUE
        ELSEIF(ICASPL.EQ.'HSEC')THEN
          DO1491K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL HSEPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 1491     CONTINUE
        ELSEIF(ICASPL.EQ.'GOMP')THEN
          DO1501K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            IF(IGOMDF.EQ.'JOHN' .OR. IGOMDF.EQ.'DEFA')THEN
              CALL GOMPPF(UNIOSM,SHAPE1,SHAPE2,IGOMDF,DISOSM)
            ELSE
              CALL GOMPPF(UNIOSM,SHAPE1,SHAPE2,IGOMDF,DISOSM)
            ENDIF
            SUM=SUM+DISOSM
 1501     CONTINUE
        ELSEIF(ICASPL.EQ.'HCAU')THEN
          DO1511K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL HFCPPF(UNIOSM,DISOSM)
            SUM=SUM+DISOSM
 1511     CONTINUE
        ELSEIF(ICASPL.EQ.'HALO')THEN
          SHAPE1=-1.0
          DO1521K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL HFLPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1521     CONTINUE
        ELSEIF(ICASPL.EQ.'GHLO')THEN
          DO1531K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL HFLPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1531     CONTINUE
        ELSEIF(ICASPL.EQ.'GEV ')THEN
          DO1541K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GEVPPF(UNIOSM,SHAPE1,MINMAX,DISOSM)
            SUM=SUM+DISOSM
 1541     CONTINUE
        ELSEIF(ICASPL.EQ.'PAR2')THEN
          ZLOC=A
          IF(ZLOC.LE.0.0)ZLOC=1.0
          DO1551K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL PA2PPF(UNIOSM,SHAPE1,ZLOC,DISOSM)
            SUM=SUM+DISOSM
 1551     CONTINUE
        ELSEIF(ICASPL.EQ.'DWEI')THEN
          DO1561K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL DWEPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1561     CONTINUE
        ELSEIF(ICASPL.EQ.'WCAU')THEN
          DO1571K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL WCAPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1571     CONTINUE
        ELSEIF(ICASPL.EQ.'EWEI')THEN
          IARG1=1
          DO1581K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL EWEPPF(UNIOSM,SHAPE1,SHAPE2,IARG1,DISOSM)
            SUM=SUM+DISOSM
 1581     CONTINUE
        ELSEIF(ICASPL.EQ.'TEXP')THEN
          DO1591K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL TNEPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,DISOSM)
            SUM=SUM+DISOSM
 1591     CONTINUE
        ELSEIF(ICASPL.EQ.'GLOG')THEN
          DO1601K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GLOPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1601     CONTINUE
        ELSEIF(ICASPL.EQ.'PEXP')THEN
          DO1611K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL PEXPPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DISOSM
 1611     CONTINUE
        ELSEIF(ICASPL.EQ.'DGAM')THEN
          DO1621K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL DGAPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1621     CONTINUE
        ELSEIF(ICASPL.EQ.'MBKA')THEN
          DO1631K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL MIEPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 1631     CONTINUE
        ELSEIF(ICASPL.EQ.'FCAU')THEN
          DO1641K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL FCAPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DISOSM
 1641     CONTINUE
        ELSEIF(ICASPL.EQ.'BBIN')THEN
          DO1651K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BBNPPF(UNIOSM,SHAPE1,SHAPE2,INT(SHAPE3+0.1),DISOSM)
            SUM=SUM+DISOSM
 1651     CONTINUE
        ELSEIF(ICASPL.EQ.'BRAD')THEN
          DO1656K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BRAPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1656     CONTINUE
        ELSEIF(ICASPL.EQ.'GEXP')THEN
          DO1661K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GEXPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,DISOSM)
            SUM=SUM+DISOSM
 1661     CONTINUE
        ELSEIF(ICASPL.EQ.'RECI')THEN
          DO1671K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL RECPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1671     CONTINUE
        ELSEIF(ICASPL.EQ.'NORX')THEN
          DO1681K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL NMXPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                  DISOSM)
            SUM=SUM+DISOSM
 1681     CONTINUE
        ELSEIF(ICASPL.EQ.'IGAM')THEN
          DO1691K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL IGAPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1691     CONTINUE
        ELSEIF(ICASPL.EQ.'GTLA')THEN
          DO1701K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            IWRITE='OFF'
            CALL GLDPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT,
     1                IGLDDF,IWRITE)
            IF(IGLDDF.EQ.'RAMB')THEN
CCCCC         NEED TO CHECK WHAT ZSCALE SHOULD BE
CCCCC         X2OUT=ZSCALE*REAL(DX2OUT)
              X2OUT=REAL(DX2OUT)
            ELSE
              X2OUT=REAL(DX2OUT)
            ENDIF
            SUM=SUM+DBLE(DISOSM)
 1701     CONTINUE
        ELSEIF(ICASPL.EQ.'JOSB')THEN
          DO1711K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL JSBPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DISOSM
 1711     CONTINUE
        ELSEIF(ICASPL.EQ.'JOSU')THEN
          DO1721K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL JSUPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DISOSM
 1721     CONTINUE
        ELSEIF(ICASPL.EQ.'IWEI')THEN
          DO1731K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL IWEPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1731     CONTINUE
        ELSEIF(ICASPL.EQ.'LDEX')THEN
          DO1741K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LDEPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
 1741     CONTINUE
        ELSEIF(ICASPL.EQ.'GEEX')THEN
          DO1751K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GEEPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DISOSM
1751      CONTINUE
        ELSEIF(ICASPL.EQ.'TSPO')THEN
          DO1761K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL TSPPPF(UNIOSM,SHAPE1,SHAPE2,A,B,DISOSM)
            SUM=SUM+DISOSM
1761      CONTINUE
        ELSEIF(ICASPL.EQ.'BWEI')THEN
          DO1771K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BWEPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                X2OUT,DX2OUT)
            SUM=SUM+DX2OUT
1771      CONTINUE
        ELSEIF(ICASPL.EQ.'GHPP')THEN
          DO1781K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GHPPF(UNIOSM,SHAPE1,SHAPE2,X2OUT,DBLE(UNIOSM),DX2OUT)
            SUM=SUM+DX2OUT
1781      CONTINUE
        ELSEIF(ICASPL.EQ.'GPP')THEN
          HTEMP=0.0
          DO1783K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GHPPF(UNIOSM,SHAPE1,HTEMP,X2OUT,DBLE(UNIOSM),DX2OUT)
            SUM=SUM+DX2OUT
1783      CONTINUE
        ELSEIF(ICASPL.EQ.'HPP')THEN
          GTEMP=0.0
          DO1785K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GHPPF(UNIOSM,GTEMP,SHAPE1,X2OUT,DBLE(UNIOSM),DX2OUT)
            SUM=SUM+DX2OUT
1785      CONTINUE
        ELSEIF(ICASPL.EQ.'LAND')THEN
          DO1791K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            DX2OUT=LANPPF(DBLE(UNIOSM))
            SUM=SUM+DX2OUT
1791      CONTINUE
        ELSEIF(ICASPL.EQ.'ERRO')THEN
          DO1801K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            X2IN=UNIOSM
            CALL ERRPPF(X2IN,SHAPE1,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1801      CONTINUE
        ELSEIF(ICASPL.EQ.'TRAP')THEN
          DO1811K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL TRAPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,SHAPE4,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1811      CONTINUE
        ELSEIF(ICASPL.EQ.'GTRA')THEN
          DO1821K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GTRPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                SHAPE6,SHAPE7,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1821      CONTINUE
        ELSEIF(ICASPL.EQ.'FT  ')THEN
          DO1831K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL FTPPF(UNIOSM,INT(SHAPE1+0.1),DISOSM)
            SUM=SUM+DBLE(DISOSM)
1831      CONTINUE
        ELSEIF(ICASPL.EQ.'SLAS')THEN
          DO1841K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL SLAPPF(UNIOSM,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1841      CONTINUE
        ELSEIF(ICASPL.EQ.'SNOR')THEN
          DO1851K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL SNPPF(UNIOSM,SHAPE1,ISKNDF,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1851      CONTINUE
        ELSEIF(ICASPL.EQ.'TSKE')THEN
          DO1861K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL STPPF(UNIOSM,INT(SHAPE1+0.1),SHAPE2,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1861      CONTINUE
        ELSEIF(ICASPL.EQ.'IBET')THEN
          DO1871K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL IBPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1871      CONTINUE
        ELSEIF(ICASPL.EQ.'GOMM')THEN
          DO1881K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            IF(IMAKDF.EQ.'DLMF')THEN
              CALL MAKPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,DISOSM)
            ELSEIF(IMAKDF.EQ.'MEEK')THEN
              XI=SHAPE1/SHAPE3
              THETA=SHAPE2/SHAPE1
              ALAMB=SHAPE3
              CALL MAKPPF(UNIOSM,XI,ALAMBA,THETA,DISOSM)
            ELSEIF(IMAKDF.EQ.'REPA')THEN
              CALL MA2PPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            ENDIF
            SUM=SUM+DBLE(DISOSM)
1881      CONTINUE
        ELSEIF(ICASPL.EQ.'LSNO')THEN
          DO1891K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LSNPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1891      CONTINUE
        ELSEIF(ICASPL.EQ.'LSKT')THEN
          DO1901K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LSTPPF(UNIOSM,INT(SHAPE1+0.1),SHAPE2,SHAPE3,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1901      CONTINUE
        ELSEIF(ICASPL.EQ.'ARSI')THEN
          DO1911K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL ARSPPF(UNIOSM,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1911      CONTINUE
        ELSEIF(ICASPL.EQ.'POLY')THEN
          DO1921K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL POLPPF(UNIOSM,SHAPE1,SHAPE2,INT(SHAPE3+0.1),DISOSM)
            SUM=SUM+DBLE(DISOSM)
1921      CONTINUE
        ELSEIF(ICASPL.EQ.'HERM')THEN
          DO1931K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL HERPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1931      CONTINUE
        ELSEIF(ICASPL.EQ.'SDEX')THEN
          DO1941K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL SDEPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1941      CONTINUE
        ELSEIF(ICASPL.EQ.'ADEX')THEN
          DO1951K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            IF(IADEDF.EQ.'K')THEN
              CALL ADEPPF(UNIOSM,SHAPE1,IADEDF,DISOSM)
            ELSE
              CALL ADEPPF(UNIOSM,SHAPE1,IADEDF,DISOSM)
            ENDIF
            SUM=SUM+DBLE(DISOSM)
1951      CONTINUE
        ELSEIF(ICASPL.EQ.'MAXW')THEN
          DO1961K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL MAXPPF(UNIOSM,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1961      CONTINUE
        ELSEIF(ICASPL.EQ.'RAYL')THEN
          DO1971K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL RAYPPF(UNIOSM,DISOSM)
            SUM=SUM+DBLE(DISOSM)
1971      CONTINUE
        ELSEIF(ICASPL.EQ.'GIGA')THEN
          IF(IGIGDF.EQ.'2PAR')THEN
            DO1981K=I1,I2
              IF(ICENSO.EQ.'ON')THEN
                CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
              ELSE
                CALL UNIME2(NTOT,K,UNIOSM)
              ENDIF
              CALL GI2PPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
              SUM=SUM+DX2OUT
1981        CONTINUE
          ELSE
            DO1986K=I1,I2
              IF(ICENSO.EQ.'ON')THEN
                CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
              ELSE
                CALL UNIME2(NTOT,K,UNIOSM)
              ENDIF
              CALL GIGPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                  DBLE(SHAPE3),DX2OUT)
              SUM=SUM+DX2OUT
1986        CONTINUE
          ENDIF
        ELSEIF(ICASPL.EQ.'GALP')THEN
          DO1991K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GALPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                IADEDF,DX2OUT)
            SUM=SUM+DX2OUT
 1991     CONTINUE
        ELSEIF(ICASPL.EQ.'MCLE')THEN
          DO2001K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL MCLPPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 2001     CONTINUE
        ELSEIF(ICASPL.EQ.'BEIP')THEN
          IF(IBEIDF.EQ.'1')THEN
            DO2011K=I1,I2
              IF(ICENSO.EQ.'ON')THEN
                CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
              ELSE
                CALL UNIME2(NTOT,K,UNIOSM)
              ENDIF
              CALL BEIPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                  DBLE(SHAPE3),IBEIDF,DX2OUT)
              SUM=SUM+DX2OUT
 2011       CONTINUE
          ELSE
            DO2016K=I1,I2
              IF(ICENSO.EQ.'ON')THEN
                CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
              ELSE
                CALL UNIME2(NTOT,K,UNIOSM)
              ENDIF
              CALL BEIPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                  DBLE(SHAPE3),IBEIDF,DX2OUT)
              SUM=SUM+DX2OUT
 2016       CONTINUE
          ENDIF
        ELSEIF(ICASPL.EQ.'BEIK')THEN
          DO2021K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
CCCCC     CALL BEKPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
CCCCC1                DBLE(SHAPE3),DX2OUT)
            SUM=SUM+DX2OUT
 2021     CONTINUE
        ELSEIF(ICASPL.EQ.'GMCL')THEN
          DO2031K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GMCPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2031     CONTINUE
        ELSEIF(ICASPL.EQ.'G5LO')THEN
          XPAR(1)=0.0D0
          XPAR(2)=1.0D0
          XPAR(3)=DBLE(SHAPE1)
          DO2041K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            DX2OUT=QUAGLO(DBLE(UNIOSM),XPAR)
            SUM=SUM+DX2OUT
 2041     CONTINUE
        ELSEIF(ICASPL.EQ.'WAKE')THEN
          XPAR(1)=DBLE(SHAPE4)
          XPAR(2)=DBLE(SHAPE5)
          XPAR(3)=DBLE(SHAPE1)
          XPAR(4)=DBLE(SHAPE2)
          XPAR(5)=DBLE(SHAPE3)
          DO2051K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            DX2OUT=QUAWAK(DBLE(UNIOSM),XPAR)
            SUM=SUM+DX2OUT
 2051     CONTINUE
        ELSEIF(ICASPL.EQ.'BNOR')THEN
          DO2061K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BNOPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2061     CONTINUE
        ELSEIF(ICASPL.EQ.'G2LO')THEN
          DO2071K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GL2PPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 2071     CONTINUE
        ELSEIF(ICASPL.EQ.'G3LO')THEN
          DO2081K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GL3PPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 2081     CONTINUE
        ELSEIF(ICASPL.EQ.'G4LO')THEN
          DO2091K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GL4PPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2091     CONTINUE
        ELSEIF(ICASPL.EQ.'ALDE')THEN
          DO2101K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL ALDPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2101     CONTINUE
        ELSEIF(ICASPL.EQ.'BGEO')THEN
          IF(IBGEDF.EQ.'UNSH')THEN
            DO2111K=I1,I2
              IF(ICENSO.EQ.'ON')THEN
                CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
              ELSE
                CALL UNIME2(NTOT,K,UNIOSM)
              ENDIF
              CALL BGEPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
              SUM=SUM+DBLE(DISOSM)
 2111       CONTINUE
          ELSE
            DO2116K=I1,I2
              IF(ICENSO.EQ.'ON')THEN
                CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
              ELSE
                CALL UNIME2(NTOT,K,UNIOSM)
              ENDIF
              CALL BG2PPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
              SUM=SUM+DBLE(DISOSM)
 2116       CONTINUE
          ENDIF
        ELSEIF(ICASPL.EQ.'ZETA')THEN
          DO2121K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL ZETPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2121     CONTINUE
        ELSEIF(ICASPL.EQ.'ZIPF')THEN
          DO2131K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL ZIPPPF(UNIOSM,SHAPE1,INT(SHAPE2+0.1),DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2131     CONTINUE
        ELSEIF(ICASPL.EQ.'BTAN')THEN
          DO2141K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BTAPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2141     CONTINUE
        ELSEIF(ICASPL.EQ.'BNBI')THEN
          DO2151K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GWAPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DX2OUT)
            SUM=SUM+DX2OUT
 2151     CONTINUE
        ELSEIF(ICASPL.EQ.'LPOI')THEN
          DO2161K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LPOPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2161     CONTINUE
        ELSEIF(ICASPL.EQ.'LICT')THEN
          DO2171K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LCTPPF(UNIOSM,INT(SHAPE1+0.1),DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2171     CONTINUE
        ELSEIF(ICASPL.EQ.'MATC')THEN
          DO2181K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL MATPPF(UNIOSM,INT(SHAPE1+0.1),DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2181     CONTINUE
        ELSEIF(ICASPL.EQ.'LBET')THEN
CCCCC     YLOWLM=C
CCCCC     YUPPLM=D
CCCCC     EPS=(XMAX-XMIN)*0.01
CCCCC     IF(YLOWLM.GT.XMIN)YLOWLM=XMIN-EPS
CCCCC     IF(YUPPLM.LT.XMAX)YUPPLM=XMAX+EPS
C
          DO2191K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LBEPPF(UNIOSM,SHAPE1,SHAPE2,YLOWLM,YUPPLM,DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2191     CONTINUE
        ELSEIF(ICASPL.EQ.'AEPP')THEN
          DO2201K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL PAPPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2201     CONTINUE
        ELSEIF(ICASPL.EQ.'LOST')THEN
          DO2211K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LOSPPF(UNIOSM,SHAPE1,INT(SHAPE2+0.1),DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2211     CONTINUE
        ELSEIF(ICASPL.EQ.'GLOS')THEN
          DO2221K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GLSPPF(UNIOSM,SHAPE1,SHAPE2,DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2221     CONTINUE
        ELSEIF(ICASPL.EQ.'GNBI')THEN
          DO2231K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GNBPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2231     CONTINUE
        ELSEIF(ICASPL.EQ.'GEET')THEN
          DO2241K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GETPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                IGETDF,DX2OUT)
            SUM=SUM+DBLE(DX2OUT)
 2241     CONTINUE
        ELSEIF(ICASPL.EQ.'QBIN')THEN
          DO2251K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL QBIPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2251     CONTINUE
        ELSEIF(ICASPL.EQ.'CONS')THEN
          DO2261K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL CONPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                ICONDF,DX2OUT)
            SUM=SUM+DX2OUT
 2261     CONTINUE
        ELSEIF(ICASPL.EQ.'LKAT')THEN
          DO2271K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LKPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1               DBLE(SHAPE3),DX2OUT)
            SUM=SUM+DX2OUT
 2271     CONTINUE
        ELSEIF(ICASPL.EQ.'KATZ')THEN
          DO2281K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL KATPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                IKATDF,DX2OUT)
            SUM=SUM+DX2OUT
 2281     CONTINUE
        ELSEIF(ICASPL.EQ.'DISW')THEN
          DO2291K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL DIWPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2291     CONTINUE
        ELSEIF(ICASPL.EQ.'GLGP')THEN
          DO2301K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GLGPPF(UNIOSM,SHAPE1,INT(SHAPE2+0.1),SHAPE3,DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2301     CONTINUE
        ELSEIF(ICASPL.EQ.'TGNB')THEN
          DO2311K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GNTPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,INT(SHAPE4+0.1),
     1                  DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2311     CONTINUE
        ELSEIF(ICASPL.EQ.'TOPL')THEN
          DO2321K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL TOPPPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 2321     CONTINUE
        ELSEIF(ICASPL.EQ.'GTOL')THEN
          DO2331K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL GTLPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2331     CONTINUE
        ELSEIF(ICASPL.EQ.'RGTL')THEN
          DO2341K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL RGTPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2341     CONTINUE
        ELSEIF(ICASPL.EQ.'SLOP')THEN
          DO2351K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL SLOPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2351     CONTINUE
        ELSEIF(ICASPL.EQ.'OGIV')THEN
          DO2361K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL OGIPPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 2361     CONTINUE
        ELSEIF(ICASPL.EQ.'TSSL')THEN
          DO2371K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL TSSPPF(UNIOSM,SHAPE2,SHAPE1,A,B,DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2371     CONTINUE
        ELSEIF(ICASPL.EQ.'TSOG')THEN
          DO2381K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL TSOPPF(DBLE(UNIOSM),DBLE(SHAPE2),DBLE(SHAPE1),
     1                DBLE(A),DBLE(B),DX2OUT)
            SUM=SUM+DX2OUT
 2381     CONTINUE
        ELSEIF(ICASPL.EQ.'BUR2')THEN
          DO2391K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BU2PPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 2391     CONTINUE
        ELSEIF(ICASPL.EQ.'BUR3')THEN
          DO2401K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BU3PPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2401     CONTINUE
        ELSEIF(ICASPL.EQ.'BUR4')THEN
          DO2411K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BU4PPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2411     CONTINUE
        ELSEIF(ICASPL.EQ.'BUR5')THEN
          DO2421K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BU5PPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2421     CONTINUE
        ELSEIF(ICASPL.EQ.'BUR6')THEN
          DO2431K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BU6PPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2431     CONTINUE
        ELSEIF(ICASPL.EQ.'BUR7')THEN
          DO2441K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BU7PPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 2441     CONTINUE
        ELSEIF(ICASPL.EQ.'BUR8')THEN
          DO2451K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BU8PPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 2451     CONTINUE
        ELSEIF(ICASPL.EQ.'BUR9')THEN
          DO2461K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BU9PPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2461     CONTINUE
        ELSEIF(ICASPL.EQ.'BU10')THEN
          DO2471K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL B10PPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 2471     CONTINUE
        ELSEIF(ICASPL.EQ.'BU11')THEN
          DO2481K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL B11PPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 2481     CONTINUE
        ELSEIF(ICASPL.EQ.'BU12')THEN
          DO2491K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL B12PPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2491     CONTINUE
        ELSEIF(ICASPL.EQ.'DPUN')THEN
          ALOCT=0.0
          SCALET=1.0
          DO2501K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL DPUPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DBLE(SHAPE4),DX2OUT)
            SUM=SUM+DX2OUT
 2501     CONTINUE
C
        ELSEIF(ICASPL.EQ.'KUMA')THEN
          DO2511K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL KUMPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
 2511     CONTINUE
        ELSEIF(ICASPL.EQ.'RPOW')THEN
          DO2521K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL RPOPPF(UNIOSM,SHAPE1,DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2521     CONTINUE
        ELSEIF(ICASPL.EQ.'UTSP')THEN
          DO2531K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL UTSPPF(UNIOSM,SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                SHAPE6,DISOSM)
            SUM=SUM+DBLE(DISOSM)
 2531     CONTINUE
        ELSEIF(ICASPL.EQ.'MUTH')THEN
          DO2541K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL MUTPPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 2541     CONTINUE
        ELSEIF(ICASPL.EQ.'LEXP')THEN
          DO2551K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LEXPPF(DBLE(UNIOSM),DBLE(SHAPE1),DX2OUT)
            SUM=SUM+DX2OUT
 2551     CONTINUE
        ELSEIF(ICASPL.EQ.'TPAR')THEN
          DO2561K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL TNPPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DX2OUT)
            SUM=SUM+DX2OUT
 2561     CONTINUE
        ELSEIF(ICASPL.EQ.'BFRA')THEN
          DO2571K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BFRPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DX2OUT)
            SUM=SUM+DX2OUT
 2571     CONTINUE
        ELSEIF(ICASPL.EQ.'L3EX')THEN
          DO2581K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL LE3PPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DX2OUT)
            SUM=SUM+DX2OUT
 2581     CONTINUE
        ELSEIF(ICASPL.EQ.'KAPP')THEN
          DLOC=0.0D0
          DSCALE=1.0D0
          DO2591K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL KAPPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DLOC,DSCALE,DX2OUT)
            SUM=SUM+DX2OUT
 2591     CONTINUE
        ELSEIF(ICASPL.EQ.'PEA3')THEN
          DLOC=0.0D0
          DSCALE=1.0D0
          DO2601K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL PE3PPF(DBLE(UNIOSM),DBLE(SHAPE1),DLOC,DSCALE,DX2OUT)
            SUM=SUM+DX2OUT
 2601     CONTINUE
        ELSEIF(ICASPL.EQ.'EEWE')THEN
          DO2611K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL EEWPPF(DBLE(UNIOSM),DBLE(SHAPE5),DBLE(SHAPE1),
     1                  DBLE(SHAPE2),DBLE(SHAPE3),DBLE(SHAPE4),DX2OUT)
            SUM=SUM+DX2OUT
2611      CONTINUE
        ELSEIF(ICASPL.EQ.'BFWE')THEN
          DO2711K=I1,I2
            IF(ICENSO.EQ.'ON')THEN
              CALL UNIME4(NTOT,K,UNIOSM,IMETH,D2,XCENS,N)
            ELSE
              CALL UNIME2(NTOT,K,UNIOSM)
            ENDIF
            CALL BFWPPF(DBLE(UNIOSM),DBLE(SHAPE1),DBLE(SHAPE2),DX2OUT)
            SUM=SUM+DX2OUT
2711      CONTINUE
        ENDIF
C
        X2(N2+I)=PPLOC + PPSCAL*REAL(SUM/DBLE(ANI))
        I2=I2+NI2
 1000 CONTINUE
C
      DO4100I=1,N
        D2(N2+I)=REAL(NCURVE)
 4100 CONTINUE
      N2OLD=N2
      NPTS=N
      N2=N2+N
      NPLOTV=2
C
C     OCTOBER 2009: MOVE COMPUTATION OF PPA0, PPA1, PPCC, PPAOBW,
C                   AND PPA1BW HERE (INSTEAD OF DPPP).  THIS MAKES
C                   THE DPPP3 ROUTINE MORE USEFUL FOR OTHER ROUTINES
C                   THAT WANT TO COMPUTE A PPCC VALUE INDEPENDENT OF
C                   THE PROBABILITY PLOT COMMAND (E.G., DPGOF9, DPPPC3).
C
C     JULY 2019:    USE XTEMP1 FOR PREDBW AND XTEMP2 FOR RESBW TO REDUCE
C                   REQUIRED SCRATCH SPACE
C
      PPA0=CPUMIN
      PPA1=CPUMIN
      XRESSD=CPUMIN
      XRESDF=CPUMIN
      PPCC=CPUMIN
      SDPPA0=CPUMIN
      SDPPA1=CPUMIN
      CCALBE=CPUMIN
      PPA0BW=CPUMIN
      PPA1BW=CPUMIN
C
      IF(NPTS.GE.2)THEN
        CALL LINFIT(Y2(N2OLD+1),X2(N2OLD+1),NPTS,
     1              PPA0,PPA1,XRESSD,XRESDF,PPCC,SDPPA0,SDPPA1,CCALBE,
     1              ISUBRO,IBUGG3,IERROR)
        DO8010I=1,NPTS
          XTEMP2(I)=Y2(N2OLD+I) - (PPA0 + PPA1*X2(N2OLD+I))
          WEIGHH(I)=1.0
          WEIGHV(I)=1.0
 8010   CONTINUE
        IWRITE='OFF'
        CALL BIWEIG(XTEMP2,NPTS,IWRITE,WEIGHV,IBUGG3,IERROR)
C
        IT=1
        I1=1
        I2=NPTS
        I3=1
        I4=NPTS
        XMAXHF=1.0
C
        CALL LINEAR(IT,I1,I2,X2(N2OLD+1),Y2(N2OLD+1),
     1              WEIGHH,WEIGHV,NPTS,XMAXHF,I3,I4,
     1              PPA0BW,PPA1BW,XTEMP1,XTEMP2,
     1              ISUBRO,IBUGG3,IERROR)
C
        DO8020I=1,NPTS
          XTEMP2(I)=Y2(N2OLD+I) - (PPA0BW + PPA1BW*X2(N2OLD+I))
 8020   CONTINUE
        CALL BIWEIG(XTEMP2,NPTS,IWRITE,WEIGHV,IBUGG3,IERROR)
        CALL LINEAR(IT,I1,I2,X2(N2OLD+1),Y2(N2OLD+1),
     1              WEIGHH,WEIGHV,NPTS,XMAXHF,I3,I4,
     1              PPA0BW,PPA1BW,XTEMP1,XTEMP2,
     1              ISUBRO,IBUGG3,IERROR)
      ENDIF
C
C     FOR UNEQUI-SPACED BINS, RESTORE THE LOWER LIMIT (NEEDED
C     BY PPCC PLOT).
C
      IF(IDATSW.EQ.'FRE2')THEN
        DO8110I=1,N
          X(I)=XTEMP4(I)
 8110   CONTINUE
      ENDIF
C
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'OFF')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPPP3--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)ICASPL,IDATSW,N2,IERROR
 9012 FORMAT('ICASPL,IDATSW,N2,IERROR = ',A4,2X,A4,I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9014)NTOT
 9014 FORMAT('NTOT = ',I8)
      CALL DPWRST('XXX','BUG ')
CCCCC THE FOLLOWING 2 LINES WERE ADDED   MAY 1993
      WRITE(ICOUT,9015)MINMAX
 9015 FORMAT('MINMAX = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO9020I=1,N2
      WRITE(ICOUT,9021)I,Y2(I),X2(I),D2(I)
 9021 FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2E15.7,F9.2)
      CALL DPWRST('XXX','BUG ')
 9020 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPPP4(PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                 CCALBE,PPA0BW,PPA1BW,
     1                 IFLAGU,IFRST,ILAST,
     1                 IBUGG2,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--UTILITY ROUTINE USED BY DPPP.  UPDATE THE DATAPLOT
C              PARAMETER TABLE OR WRITE VALUES TO EXTERNAL FILE.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/9
C     ORIGINAL VERSION--SEPTEMBER 2009. EXTRACTED AS SEPARATE ROUTINE
C                                       FROM DPPP
C     UPDATED         --OCTOBER   2009. MOVED COMPUTATION OF
C                                       PARAMETERS TO DPPP2 AND DPPP3
C                                       TO FACILITATE USE BY OTHER
C                                       ROUTINES.  THIS ROUTINE JUST
C                                       UPDATES THE PARAMETER TABLE OR
C                                       WRITES THE PARAMETERS TO A FILE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IFLAGU
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IOP
C
      SAVE IOUNI1
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOF2.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C               ***************************************
C               **  STEP 1--                         **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PPP4')THEN
        ISTEPN='1'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPP4--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IFLAGU,IFRST,ILAST
   53   FORMAT('IFLAGU,IFRST,ILAST = ',A4,2X,A8,2X,A8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,63)PPA0,PPA1,XRESSD,XRESDF
   63   FORMAT('PPA0,PPA1,XRESSD,XRESDF = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,65)PPCC,SDPPA0,SDPPA1,CCALBE
   65   FORMAT('PPCC,SDPPA0,SDPPA1,CCALBE = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,67)PPA0BW,PPA1BW
   67   FORMAT('PPA0BW,PPA1BW = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ISUBN0='PPP4'
C
      IF(IFLAGU.EQ.'FILE')THEN
C
        IF(IFRST)THEN
          IOP='OPEN'
          IFLAG1=1
          IFLAG2=0
          IFLAG3=0
          IFLAG4=0
          IFLAG5=0
          CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1                IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1                IBUGG2,ISUBRO,IERROR)
C
          IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PPP4')THEN
            ISTEPN='2A'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,201)IOUNI1
  201       FORMAT('AFTER CALL DPOPFI, IOUNI1 = ',I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(IERROR.EQ.'YES')GOTO9000
C
          WRITE(IOUNI1,299)
  299     FORMAT(11X,'PPA0',11X,'PPA1',11X,'PPCC',
     1           9X,'PPA0BW',9X,'PPA1BW',
     1           9X,'PPA0SD',9X,'PPA1SD',8X,'PPRESSD',8X,'PPRESDF',
     1           9X,'CCALBE')
        ENDIF
      ELSEIF(IFLAGU.EQ.'ON')THEN
        IH='PPCC'
        IH2='    '
        VALUE0=PPCC
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='PPA0'
        IH2='    '
        VALUE0=PPA0
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='PPA1'
        IH2='    '
        VALUE0=PPA1
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='SDPP'
        IH2='A0  '
        VALUE0=SDPPA0
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='SDPP'
        IH2='A1  '
        VALUE0=SDPPA1
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='PPRE'
        IH2='SSD '
        VALUE0=XRESSD
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='PPRE'
        IH2='SDF '
        VALUE0=XRESDF
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='CCAL'
        IH2='PBET'
        VALUE0=CCALBE
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='PPA0'
        IH2='BW  '
        VALUE0=PPA0BW
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='PPA1'
        IH2='BW  '
        VALUE0=PPA1BW
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
      ENDIF
C
      IF(IFLAGU.EQ.'FILE')THEN
        WRITE(IOUNI1,1031)PPA0,PPA1,PPCC,PPA0BW,PPA1BW,
     1                    SDPPA0,SDPPA1,XRESSD,XRESDF,CCALBE
 1031   FORMAT(10E15.7)
      ENDIF
C
      IF(IFLAGU.EQ.'FILE')THEN
        IF(ILAST)THEN
          IOP='CLOS'
          IFLAG1=1
          IFLAG2=0
          IFLAG3=0
          IFLAG4=0
          IFLAG5=0
          CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1                IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1                IBUGG2,ISUBRO,IERROR)
C
          IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PPP4')THEN
            ISTEPN='3A'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,301)IERROR,IOUNI1
  301       FORMAT('AFTER CALL DPCLFI: IERROR,IOUNI1 = ',A4,2X,I5)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,303)IOUNI1,IFILE1
  303       FORMAT('IOUNI1,IFILE1 = ',I5,A80)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(IERROR.EQ.'YES')GOTO9000
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PPP4')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END OF DPPP4--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPP5(TAG1,TAG2,TAG3,TAG4,TAG5,TAG6,NREPL,N,MAXOBV,
     1                 XIDTEM,XIDTE2,XIDTE3,XIDTE4,
     1                 XIDTE5,XIDTE6,
     1                 TEMP1,TEMP2,
     1                 NUMSE1,NUMSE2,NUMSE3,NUMSE4,NUMSE5,NUMSE6,
     1                 IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--UTILITY ROUTINE USED BY DPPP (AND POSSIBLY OTHER
C              ROUTINES). FOR 1 TO 6 REPLICATION VARIABLES, IT
C              EXTRACTS THE DISTINCT ELEMENTS FROM EACH OF THEM
C              (AND CODES THEM 1 TO K WHERE K IS THE NUMBER OF
C              DISTINCT ELEMENTS).
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/9
C     ORIGINAL VERSION--SEPTEMBER 2009.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION TAG1(*)
      DIMENSION TAG2(*)
      DIMENSION TAG3(*)
      DIMENSION TAG4(*)
      DIMENSION TAG5(*)
      DIMENSION TAG6(*)
      DIMENSION XIDTEM(*)
      DIMENSION XIDTE2(*)
      DIMENSION XIDTE3(*)
      DIMENSION XIDTE4(*)
      DIMENSION XIDTE5(*)
      DIMENSION XIDTE6(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
C
C-----COMMON----------------------------------------------------------
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C               ***************************************
C               **  STEP 1--                         **
C               **  COMPUTE LINEAR FIT AND           **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP5')THEN
        ISTEPN='1'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPP5--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)N,NREPL
   53   FORMAT('N,NREPL = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,57)I,TAG1(I),TAG2(I),TAG3(I),TAG4(I),TAG5(I),
     1                   TAG6(I)
   57     FORMAT('I,TAG1(I) ... TAG6(I) = ',I8,6E15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
C               ******************************************************
C               **  STEP 1--                                        **
C               **  DETERMINE THE NUMBER OF DISTINCT VALUES         **
C               **  FOR THE GROUP VARIABLES (TAG1, TAG2)            **
C               **  IF ALL VALUES ARE DISTINCT, THEN THIS           **
C               **  IMPLIES WE HAVE THE NO REPLICATION CASE         **
C               **  WHICH IS AN ERROR CONDITION.                    **
C               ******************************************************
C
      ISTEPN='1'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPP5')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IWRITE='OFF'
      NUMSE1=0
      NUMSE2=0
      NUMSE3=0
      NUMSE4=0
      NUMSE5=0
      NUMSE6=0
C
      IF(NREPL.GE.1)THEN
        CALL CODE(TAG1,N,IWRITE,TEMP1,TEMP2,MAXOBV,IBUGG3,IERROR)
        DO110I=1,N
          TAG1(I)=TEMP1(I)
  110   CONTINUE
        CALL DISTIN(TAG1,N,IWRITE,XIDTEM,NUMSE1,IBUGG3,IERROR)
        CALL SORT(XIDTEM,NUMSE1,XIDTEM)
      ENDIF
C
      IF(NREPL.GE.2)THEN
        CALL CODE(TAG2,N,IWRITE,TEMP1,TEMP2,MAXOBV,IBUGG3,IERROR)
        DO120I=1,N
          TAG2(I)=TEMP1(I)
  120   CONTINUE
        CALL DISTIN(TAG2,N,IWRITE,XIDTE2,NUMSE2,IBUGG3,IERROR)
        CALL SORT(XIDTE2,NUMSE2,XIDTE2)
      ENDIF
C
      IF(NREPL.GE.3)THEN
        CALL CODE(TAG3,N,IWRITE,TEMP1,TEMP2,MAXOBV,IBUGG3,IERROR)
        DO130I=1,N
          TAG3(I)=TEMP1(I)
  130   CONTINUE
        CALL DISTIN(TAG3,N,IWRITE,XIDTE3,NUMSE3,IBUGG3,IERROR)
        CALL SORT(XIDTE3,NUMSE3,XIDTE3)
      ENDIF
C
      IF(NREPL.GE.4)THEN
        CALL CODE(TAG4,N,IWRITE,TEMP1,TEMP2,MAXOBV,IBUGG3,IERROR)
        DO140I=1,N
          TAG4(I)=TEMP1(I)
  140   CONTINUE
        CALL DISTIN(TAG4,N,IWRITE,XIDTE4,NUMSE4,IBUGG3,IERROR)
        CALL SORT(XIDTE4,NUMSE4,XIDTE4)
      ENDIF
C
      IF(NREPL.GE.5)THEN
        CALL CODE(TAG5,N,IWRITE,TEMP1,TEMP2,MAXOBV,IBUGG3,IERROR)
        DO150I=1,N
          TAG5(I)=TEMP1(I)
  150   CONTINUE
        CALL DISTIN(TAG5,N,IWRITE,XIDTE5,NUMSE5,IBUGG3,IERROR)
        CALL SORT(XIDTE5,NUMSE5,XIDTE5)
      ENDIF
C
      IF(NREPL.GE.6)THEN
        CALL CODE(TAG6,N,IWRITE,TEMP1,TEMP2,MAXOBV,IBUGG3,IERROR)
        DO160I=1,N
          TAG6(I)=TEMP1(I)
  160   CONTINUE
        CALL DISTIN(TAG6,N,IWRITE,XIDTE6,NUMSE6,IBUGG3,IERROR)
        CALL SORT(XIDTE6,NUMSE6,XIDTE6)
      ENDIF
C
      IF(NUMSE1.LT.1 .OR. NUMSE1.GT.N)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,201)
  201   FORMAT('***** ERROR IN DPPP5 ROUTINE--')
        CALL DPWRST('XXX','BUG ')
        ITEMP=1
        WRITE(ICOUT,202)ITEMP,NUMSE1
  202   FORMAT('      THE NUMBER OF SETS FOR THE GROUP ',I1,
     1         ' VARIABLE, ',I8,',')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,203)
  203   FORMAT('      IS EITHER LESS THAN ONE OR GREATER THAN THE ',
     1         'NUMBER')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,205)N
  205   FORMAT('      OF OBSERVATIONS, ',I8,'.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(NREPL.GE.2 .AND. (NUMSE2.LT.1 .OR. NUMSE2.GT.N))THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,201)
        CALL DPWRST('XXX','BUG ')
        ITEMP=2
        WRITE(ICOUT,202)ITEMP,NUMSE2
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,203)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,205)N
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(NREPL.GE.3 .AND. (NUMSE3.LT.1 .OR. NUMSE3.GT.N))THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,201)
        CALL DPWRST('XXX','BUG ')
        ITEMP=3
        WRITE(ICOUT,202)ITEMP,NUMSE3
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,203)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,205)N
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(NREPL.GE.4 .AND. (NUMSE4.LT.1 .OR. NUMSE4.GT.N))THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,201)
        CALL DPWRST('XXX','BUG ')
        ITEMP=4
        WRITE(ICOUT,202)ITEMP,NUMSE4
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,203)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,205)N
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(NREPL.GE.5 .AND. (NUMSE5.LT.1 .OR. NUMSE5.GT.N))THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,201)
        CALL DPWRST('XXX','BUG ')
        ITEMP=5
        WRITE(ICOUT,202)ITEMP,NUMSE5
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,203)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,205)N
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(NREPL.GE.6 .AND. (NUMSE6.LT.1 .OR. NUMSE6.GT.N))THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,201)
        CALL DPWRST('XXX','BUG ')
        ITEMP=6
        WRITE(ICOUT,202)ITEMP,NUMSE6
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,203)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,205)N
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPP5')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9001)
 9001   FORMAT('***** AT THE END OF DPPP5--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9003)NUMSE1,NUMSE2,NUMSE3,NUMSE4,NUMSE5,NUMSE6
 9003   FORMAT('NUMSE1,NUMSE2,NUMSE3,NUMSE4,NUMSE5,NUMSE6 = ',6I6)
        CALL DPWRST('XXX','BUG ')
        IF(NREPL.GE.1)THEN
          DO9011I=1,NUMSE1
            WRITE(ICOUT,9013)I,XIDTEM(I)
 9013       FORMAT('I,XIDTEM(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
 9011     CONTINUE
        ENDIF
        IF(NREPL.GE.2)THEN
          DO9021I=1,NUMSE2
            WRITE(ICOUT,9023)I,XIDTE2(I)
 9023       FORMAT('I,XIDTE2(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
 9021     CONTINUE
        ENDIF
        IF(NREPL.GE.3)THEN
          DO9031I=1,NUMSE3
            WRITE(ICOUT,9033)I,XIDTE3(I)
 9033       FORMAT('I,XIDTE3(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
 9031     CONTINUE
        ENDIF
        IF(NREPL.GE.4)THEN
          DO9041I=1,NUMSE4
            WRITE(ICOUT,9043)I,XIDTE4(I)
 9043       FORMAT('I,XIDTE4(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
 9041     CONTINUE
        ENDIF
        IF(NREPL.GE.5)THEN
          DO9051I=1,NUMSE5
            WRITE(ICOUT,9053)I,XIDTE5(I)
 9053       FORMAT('I,XIDTE5(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
 9051     CONTINUE
        ENDIF
        IF(NREPL.GE.6)THEN
          DO9061I=1,NUMSE6
            WRITE(ICOUT,9063)I,XIDTE6(I)
 9063       FORMAT('I,XIDTE6(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
 9061     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPPCC(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,ICASP2,
     1                  IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A PROBABILITY PLOT CORRELATION COEFFICIENT PLOT
C              FOR ONE OF THE FOLLOWING DISTRIBUTIONAL FAMILIES--
C              UNIVARIATE CONTINUOUS (ONE SHAPE PARAMETER)
C               1) TUKEY LAMBDA
C               2) T
C               3) CHI-SQUARED
C               4) GAMMA
C               5) WEIBULL --MIN & MAX
C               6) EXTREME VALUE TYPE 2 (FRECHET) --MIN & MAX
C               7) PARETO
C               8) WALD
C               9) FATIGUE LIFE
C              10) EXTREME VALUE (GENERAL)
C                        EXTREME VALUE PPCC PLOT Y
C                        EXTREME PPCC PLOT Y
C                        EV PPCCC PLOT Y
C              11) GENERALIZED PARETO
C                        GENERALIZED PARETO PPCC PLOT Y
C                        GEP PPCC PLOT Y
C                        GP PPCC PLOT Y
C              12) LOGNORMAL
C              13) POWER NORMAL
C              14) POWER FUNCTION
C              15) CHI
C              16) VON MISES
C              17) LOG LOGISTIC
C              18) LOG GAMMA
C              19) DOUBLE WEIBULL
C              20) GENERALIZED EXTREME VALUE
C              21) PARETO SECOND KIND
C              22) GENERALIZED HALF LOGISTIC
C              23) WRAPPED CAUCHY
C              24) GENERALIZED LOGISTIC
C              25) DOUBLE GAMMA
C              26) BRADFORD
C              27) RECIPROCAL
C              28) INVERTED GAMMA
C              29) INVERTED WEIBULL
C              30) LOG DOUBLE EXPONENTIAL
C              31) GEOMETRIC EXTREME  EXPONENTIAL
C              32) ERROR (SUBBOTIN/EXPONENTIAL POWER)
C              33) FOLDED T
C              34) SKEW NORMAL
C              35) SKEW DOUBLE EXPONENTIAL
C              36) ASYMMETRIC DOUBLE EXPONENTIAL
C              37) MCLEISH
C              38) GENERALIZED LOGISTIC TYPE 5
C              39) GENERALIZED LOGISTIC TYPE 2
C              40) GENERALIZED LOGISTIC TYPE 3
C              41) TOPP AND LEONE
C              42) SLOPE
C              43) OGIVE
C              44) BURR TYPE 2
C              45) BURR TYPE 7
C              46) BURR TYPE 8
C              47) BURR TYPE 10
C              48) BURR TYPE 11
C              49) EXPONENTIAL POWER
C              50) ALPHA
C              51) REFLECTED POWER
C              52) MUTH
C              53) LOGISTIC-EXPONENTIAL
C              54) PEARSON TYPE 3
C              55) G
C              56) H
C
C              NOTE: EVEN THOUGH PARETO, PARETO SECOND KIND
C                    ACTUALLY HAVE A SECOND SHAPE PARAMETER, TREAT
C                    THIS AS KNOWN AND FIXED (SET TO MINIMUM OF
C                    THE DATA FOR THE PARETO, LET USER SET FOR
C                    PARETO SECOND KIND (DEFAULT TO 1)).
C
C              UNIVARIATE DISCRETE (USE A LITTLE IFFY HERE, BUT
C              INCLUDE FOR EXPERIMENTAL PURPOSES, CHI-SQUARE PLOT WORKS
C              BETTER THAN THE PPCC PLOT HERE)
C               1) GEOMETRIC
C               2) POISSON
C               3) LOGARITHMIC SERIES
C               4) NEGATIVE BIONOMIAL
C               5) BETA-BINOMIAL (ASSUME N PARAMETER KNOWN)
C               6) POLYA (ASSUME N PARAMETER KNOWN)
C               7) HYPERGEOMETRIC (NOT SUPPORTED)
C               8) YULE (SUPPORT CHI-SQUARE PLOT, BUT NOT PPCC)
C               9) WARING (SUPPORT CHI-SQUARE PLOT, BUT NOT PPCC)
C              10) HERMITE
C              11) BINOMIAL
C              12) BETA GEOMETRIC (RE-PARAMETERIZED WARING)
C              13) ZETA (SUPPORT CHI-SQUARE PLOT, BUT NOT PPCC)
C              14) ZIPF (SUPPORT CHI-SQUARE PLOT, BUT NOT PPCC)
C              15) BOREL-TANNER
C              16) LAGRANGE-POISSON
C              17) POLYA-AEPPLI
C              18) LOST GAMES
C              19) GENERALIZED LOGARITHMIC SERIES
C              20) GEETA
C              21) CONSUL (GENERALIZED GEOMTRIC)
C              22) KATZ
C              23) DISCRETE WEIBULL
C              24) GENERALIZED LOST GAMES
C
C              WE DO NOT INCLUDE DISCRETE UNIFORM, MATCHING, LOST GAMES,
C              OR LEADS IN COIN TOSSING (DISCRETE ARCSINE) SINCE THE
C              PARAMETER ESTIMATES ARE SIMPLY THE MINIMUM AND/OR
C              MAXIMUM POINTS IN THE DATA.  ALSO, WE DO NOT
C              INCLUDE THE BETA-NEGATIVE BINOMIAL (= GENERALIZED
C              WARING) SINCE THIS HAS 3 SHAPE PARAMETERS.
C
C              SUPPORT FOR FOLLOWING DISTRIBUTIONS WITH 2 SHAPE
C              PARAMETERS (AUGUST 2001).  FOR THESE, WE WILL
C              GENERATE A 3-D PLOT.  FOR SOME OF THESE, PPCC PLOT
C              CAN BE SLOW DUE TO FACT THAT PPCC MAY BE EXPENSIVE
C              TO COMPUTE.
C               1) GENERALIZED TUKEY LAMBDA
C               2) BETA
C               3) GENERALIZED GAMMA
C               4) GOMPERTZ
C               5) POWER LOGNORMAL
C               6) EXPONENTIATED WEIBULL
C               7) JOHNSON SB
C               8) JOHNSON SU
C               9) TWO-SIDED POWER
C              10) F
C              11) INVERSE GAUSSIAN
C              12) RECIPROCAL INVERSE GAUSSIAN
C              13) SKEW T
C              14) INVERTED BETA
C              15) G-AND-H
C              16) LOG-SKEW-NORMAL
C              17) NON-CENTRAL T
C              18) NON-CENTRAL CHI-SQUARE
C              19) FOLDED NORMAL
C              20) FOLDED CAUCHY
C              21) TRUNCATED EXPONENTIAL
C                  (ASSUME TRUNCATION POINT X0 IS KNOWN)
C              22) GOMPERTZ-MAKEHAM (FOR MEEKER REPARAMETERIZATION TO
C                  CASE WITH TWO SHAPE PARAMETERS AND SCALE PARAMETER)
C              23) GENERALIZED ASYMMETRIC LAPLACE
C              24) GENERALIZED MCLEISH
C              25) BETA NORMAL
C              26) HYPERBOLIC (NOT WORKING)
C              27) GENERALIZED LOGISTIC TYPE 4
C              28) ASYMMETRIC LOG DOUBLE EXPONENTIAL
C              29) LOG BETA (ESTIMATE ALPHA, BETA, ASSUME FIXED
C                  VALUES FOR C AND D
C              30) TRAPEZOID (ESTIMATE B AND C, ASSUME FIXED
C                  VALUES FOR A AND D
C              31) GENERALIZED TOPP AND LEONE
C              32) REFLECTED GENERALIZED TOPP LEONE
C              33) TWO-SIDED SLOPE
C              34) TWO-SIDED OGIVE
C              35) BURR TYPE 3
C              36) BURR TYPE 4
C              37) BURR TYPE 5
C              38) BURR TYPE 6
C              39) BURR TYPE 9
C              40) BURR TYPE 12
C              41) DOUBLY PARETO UNIFORM
C              42) KUMARASWAMY
C              43) TRUNCATED PARETO (ASSUME LOWER BOUND PARAMETER
C                  FIXED, ESTIMATE TAIL LENGTH PARAMETER GAMMA
C                  AND UPPER BOUND PARAMETER NU).
C              44) KAPPA
C              45) MIELKE'S BETA-KAPPA
C              46) GENERALZIED INVERSE GAUSSIAN
C                  (TWO-SHAPE PARAMETER CASE)
C
C              NOTE 1: FOR THE TRUNCATED EXPONENTIAL, IF YOU SET
C                      MU1=MU2, A PPCC PLOT FOR SD ONLY IS GENERATED.
C
C              NOTE 2: THE NON-CENTRAL T, NON-CENTRAL CHI-SQUARE,
C                      SKEW T, INVERTED BETA, LOG-SKEW-NORMAL,
C                      GENERALIZED ASYMMETRIC LAPLACE,
C                      GENERALIZED MCLEISH, HYPERBOLIC
C                      HAVE EXPENSIVE PERCENT POINT FUNCTIONS, SO
C                      THE PPCC PLOT CAN TAKE A LONG TIME (SO MAY
C                      NOT BE PRACTICAL EXCEPT FOR RATHER SMALL DATA
C                      SETS).  WE ADDRESS THIS WITH THE COMMAND
C
C                         SET PPCC PLOT DATA POINTS <VALUE>
C
C                      IF THIS VALUE IS SET, THEN THE PPCC/KS
C                      PLOT WILL COMPUTE THAT NUMBER OF EQUALLY
C                      SPACED PERCENTILES OF THE DATA RATHER
C                      THAN THE RAW DATA.
C
C              FOLLOWING DATAPLOT SUPPORTED DISTRIBUTIONS ONLY
C              HAVE LOCATION AND SCALE PARAMETERS, SO PPCC PLOT
C              IS NOT APPLICABLE (I.E., JUST GENERATE PROB PLOT)
C               1) NORMAL
C               2) UNIFORM
C               3) LOGISTIC
C               4) DOUBLE EXPONENTIAL
C               5) CAUCHY
C               6) SEMI-CIRCULAR
C               7) COSINE
C               8) ANGLIT
C               9) HYPERBOLIC SECANT
C              10) HALF-NORMAL
C              11) ARCSIN
C              12) EXPONENTIAL
C              13) EXTREME VALUE TYPE I (GUMBEL)
C              14) HALF-CAUCHY
C              15) LANDAU
C              16) SLASH
C              17) RAYLEIGH
C              18) MAXWELL
C
C              FOLLOWING HAVE MORE THAN 2 SHAPE PARAMETERS, SO
C              NOTHING IMPLEMENTED AT THIS TIME
C               1) TRUNCATED NORMAL
C
C                  IMPLEMENT FOR CASE WHERE TRUNCATION POINTS ARE
C                  ASSUMED KNOW.  ALSO, FOR THIS CASE, REQUIRE USER
C                  TO ENTER LOWER AND UPPER LIMITS FOR MEAN AND SD
C                  PARAMETERS.
C
C               2) NON-CENTRAL F
C               3) DOUBLY NON-CENTRAL F
C               4) DOUBLY NON-CENTRAL T
C               5) LOG-SKEW-T
C               6) NON-CENTRAL BETA
C               7) GENERALIZED EXPONENTIAL
C               8) GOMPERTZ-MAKEHAM
C                  NOTE: AVAILABLE IF MEEKER REPARAMERIZATION TO
C                  TWO SHAPE PARAMETERS AND A SCALE PARAMETER IS USED
C               9) NORMAL MIXTURE (MAXIMUM LIKELIHOOD ESTIMATE AVAILABLE)
C              10) BI-WEIBULL
C              11) GENERALIZED INVERSE GAUSSIAN
C                  (SUPPORT FOR 2-SHAPE PARAMETER CASE, BUT NOT
C                  THE 3-SHAPE PARAMETER CASE)
C              12) BESSEL I-FUNCTION
C              13) BESSEL K-FUNCTION
C              14) WAKEBY (L-MOMENT ESTIMATES AVAILABLE)
C              15) GENERALIZED NEGATIVE BINOMIAL
C              16) LAGRANGE KATZ
C              17) UNEVEN TWO-SIDED POWER
C              18) BRITTLE FRACTURE
C              19) 3-PARAMETER LOGISTIC-EXPONENTIAL
C              20) TRUNCATED PARETO
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--FEBRUARY  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --MAY       1990.  IG, WALD, RIG, FL (SAUNDERS)
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE COMMON
C     UPDATED         --MAY       1993. MINMAX FOR EV1/EV2/WEIB DIST.
C     UPDATED         --MAY       1993. ADD FRECHET NAME FOR EV2
C     UPDATED         --DECEMBER  1993. ADD EXTREME VALUE (GENERAL)
C     UPDATED         --DECEMBER  1993. ADD GENERALIZED PARETO
C     UPDATED         --APRIL     1995. ADD LOGNORMAL
C     UPDATED         --APRIL     1995. ADD POWER NORMAL
C     UPDATED         --APRIL     1995. ADD POWER LOGNORMAL
C     UPDATED         --APRIL     1995. ADD POWER FUNCTION
C     UPDATED         --APRIL     1995. ADD CHI
C     UPDATED         --APRIL     1995. ADD VON MISES
C     UPDATED         --APRIL     1995. ADD LOG LOGISTIC
C     UPDATED         --OCTOBER   1995. ADD LOG GAMMA, 5 OTHERS
C     UPDATED         --JANUARY   1996. ADD DOUBLE GAMMA
C     UPDATED         --FEBRUARY  1996. ADD BRADFORD
C     UPDATED         --MAY       1996. ADD RECIPROCAL
C     UPDATED         --JANUARY   1998. ADD LOG SERIES, BINOMIAL,
C                                       NEGATIVE BINOMIAL
C     UPDATED         --MAY       1998. ADD INVERTED GAMMA
C     UPDATED         --AUGUST    2001. SUPPORT FOR A NUMBER OF
C                                       2-SHAPE PARAMETER
C                                       DISTRIBUTIONS
C     UPDATED         --SEPTEMBER 2001. 4 ADDITIONAL DISTRIBUTIONS
C     UPDATED         --NOVEMBER  2001. GEOM EXTREME EXPONENTIAL
C     UPDATED         --MAY       2002. TWO-SIDED POWER
C     UPDATED         --MAY       2003. ERROR (=SUBBOTIN/EXPO POWE)
C     UPDATED         --NOVEMBER  2003. FOLDED T
C     UPDATED         --NOVEMBER  2003. F
C     UPDATED         --DECEMBER  2003. SKEW NORMAL
C     UPDATED         --DECEMBER  2003. SKEW T
C     UPDATED         --DECEMBER  2003. INVERTED BETA
C     UPDATED         --DECEMBER  2003. G-AND-H
C     UPDATED         --MARCH     2004. MAKE COMMAND SEARCH TABLE
C                                       DRIVEN
C     UPDATED         --MARCH     2004. SIGNIFICANT CLEAN-UP/BUG FIXES
C                                       FOR 2 SHAPE PARAMETER CASES
C                                       AND DISCRETE CASES
C     UPDATED         --MARCH     2004. NON-CENTRAL CHI-SQUARE
C     UPDATED         --MARCH     2004. NON-CENTRAL T
C     UPDATED         --MARCH     2004. LOG-SKEW-NORMAL
C     UPDATED         --APRIL     2004. HERMITE
C     UPDATED         --MAY       2004. SUPPORT FOR ROBUST CORRELATION
C                                       MEASURES
C     UPDATED         --MAY       2004. SUPPORT FOR A KOLMOGOROV-SMIRNOV
C                                       PLOT VARIANT
C     UPDATED         --MAY       2004. SUPPORT FOR GENERATING 2-SHAPE
C                                       PARAMETER CASE AS A MULTI-TRACE
C                                       PLOT
C     UPDATED         --JUNE      2004. SKEW DOUBLE EXPONENTIAL
C     UPDATED         --JUNE      2004. ASYMMETRIC DOUBLE EXPONENTIAL
C     UPDATED         --JUNE      2004. ARGUMENT LIST TO GEPPPF
C     UPDATED         --JUNE      2004. MAXWELL
C     UPDATED         --JULY      2004. GOMPERTZ-MAKEHAM IF MEEKER
C                                       REPARAMETERIZATION CASE USED
C     UPDATED         --AUGUST    2004. GENERALIZED ASYMMETRIC LAPLACE
C     UPDATED         --AUGUST    2004. BINOMIAL
C     UPDATED         --AUGUST    2004. MCLEISH
C     UPDATED         --SEPTEMBER 2004. GENERALIZED MCLEISH
C     UPDATED         --SEPTEMBER 2004. HYPERBOLIC
C     UPDATED         --SEPTEMBER 2004. SUPPORT FOR FOLLOWING OPTIONS:
C                                       1) SET PPCC PLOT DATA POINTS
C                                       2) SET PPCC PLOT AXIS POINTS
C                                       3) SET PPCC PLOT AXIS ORDER
C     UPDATED         --OCTOBER   2004. SUPPORT FOR CENSORED DATA
C                                       (UNBINNED CASE ONLY)
C     UPDATED         --APRIL     2005. SUPPORT FOR REPLICATION (I.E.,
C                                       GROUPS AS OPPOSSED TO BINS)
C     UPDATED         --APRIL     2005. FOR BINNED DATA, SUPPORT CASE
C                                       WHERE LOWER AND UPPER BIN
C                                       BOUNDARIES SPECIFIED RATHER
C                                       THAN THE MID-POINTS.  THIS
C                                       ALLOWS USER FLEXIBILITY IN
C                                       COMBINING BINS
C     UPDATED         --AUGUST    2005. LOG LAPLACE AS SYNONYM FOR
C                                       LOG DOUBLE EXPONENTIAL
C     UPDATED         --FEBRUARY  2006. GENERALIZED LOGISTIC TYPE 5
C     UPDATED         --FEBRUARY  2006. FMKL PARAMETERIZATION OF
C                                       GENERALIZED TUKEY LAMBDA
C     UPDATED         --MARCH     2006. SUPPORT FOR DIFFERENT DEFAULT
C                                       BINNING ALGORITHMS
C     UPDATED         --MARCH     2006. BETA NORMAL
C     UPDATED         --MARCH     2006. GENERALIZED LOGISTIC TYPE 2
C     UPDATED         --MARCH     2006. GENERALIZED LOGISTIC TYPE 3
C     UPDATED         --MARCH     2006. GENERALIZED LOGISTIC TYPE 4
C     UPDATED         --MARCH     2006. ASYMMETRIC LOG LAPLACE
C     UPDATED         --MAY       2006. BETA GEOMETRIC
C     UPDATED         --MAY       2006. ZETA
C     UPDATED         --MAY       2006. BOREL-TANNER
C     UPDATED         --JUNE      2006. LAGRANGE-POISSON
C     UPDATED         --JUNE      2006. LOG-BETA
C     UPDATED         --JUNE      2006. POLYA-AEPPLI
C     UPDATED         --JUNE      2006. LOST GAMES
C     UPDATED         --JUNE      2006. GENERALIZED LOGARITHMIC SERIES
C     UPDATED         --JULY      2006. GEETA
C     UPDATED         --AUGUST    2006. QUASI BINOMIAL TYPE I
C     UPDATED         --AUGUST    2006. CONSUL (GENERALIZED GEOMETRIC)
C     UPDATED         --OCTOBER   2006. FRACTIONAL DEGREES OF FREEDOM
C                                       FOR T DISTRIBUTION
C     UPDATED         --NOVEMBER  2006. DISCRETE WEIBULL
C     UPDATED         --NOVEMBER  2006. GENERALIZED LOST GAMES
C     UPDATED         --JANUARY   2007. KATZ
C     UPDATED         --FEBRUARY  2007. TOPP AND LEONE
C     UPDATED         --FEBRUARY  2007. TRAPEZOID
C     UPDATED         --FEBRUARY  2007. GENERALIZED TOPP AND LEONE
C     UPDATED         --FEBRUARY  2007. REFLECTED GENERALIZED
C                                       TOPP AND LEONE
C     UPDATED         --MARCH     2007. SPECIFY LOWER/UPPER LIMITS
C                                       FOR TRIANGULAR DISTRIBUTION
C     UPDATED         --JUNE      2007. SPECIFY LOWER/UPPER LIMITS
C                                       FOR TWO-SIDED POWER DISTRIBUTION
C     UPDATED         --AUGUST    2007. SUPPORT CENSORING FOR GROUPED
C                                       DATA
C     UPDATED         --SEPTEMBER 2007. SLOPE
C     UPDATED         --SEPTEMBER 2007. TWO-SIDED SLOPE
C     UPDATED         --SEPTEMBER 2007. OGIVE
C     UPDATED         --SEPTEMBER 2007. TWO-SIDED OGIVE
C     UPDATED         --OCTOBER   2007. BURR TYPE 2
C     UPDATED         --OCTOBER   2007. BURR TYPE 3
C     UPDATED         --OCTOBER   2007. BURR TYPE 4
C     UPDATED         --OCTOBER   2007. BURR TYPE 5
C     UPDATED         --OCTOBER   2007. BURR TYPE 6
C     UPDATED         --OCTOBER   2007. BURR TYPE 7
C     UPDATED         --OCTOBER   2007. BURR TYPE 8
C     UPDATED         --OCTOBER   2007. BURR TYPE 9
C     UPDATED         --OCTOBER   2007. BURR TYPE 10
C     UPDATED         --OCTOBER   2007. BURR TYPE 11
C     UPDATED         --OCTOBER   2007. BURR TYPE 12
C     UPDATED         --OCTOBER   2007. DOUBLY PARETO UNIFORM
C     UPDATED         --OCTOBER   2007. KUMARASWAMY
C     UPDATED         --NOVEMBER  2007. EXPONENTIAL POWER - ALPHA
C                                       REALLY A SCALE PARAMETER
C     UPDATED         --NOVEMBER  2007. ALPHA - BETA REALLY A
C                                       SCALE PARAMETER
C     UPDATED         --DECEMBER  2007. REFLECTED POWER
C     UPDATED         --JANUARY   2008. MUTH
C     UPDATED         --FEBRUARY  2008. LOGISTIC-EXPONENTIAL
C     UPDATED         --FEBRUARY  2008. SIGMA PARAMETER FOR
C                                       MAXWELL REALLY A SCALE
C                                       PARAMETER, SO REMOVE
C     UPDATED         --MARCH     2008. TRUNCATED PARETO
C     UPDATED         --MAY       2008. KAPPA
C     UPDATED         --MAY       2008. MIELKE'S BETA-KAPPA
C     UPDATED         --MAY       2008. PEARSON TYPE 3
C     UPDATED         --JULY      2008. GENERALIZED INVERSE GAUSSIAN
C     UPDATED         --DECEMBER  2008. TRUNCATED NORMAL (ASSUME
C                                       TRUNCATION POINTS ARE KNOWN)
C     UPDATED         --OCTOBER   2009. RE-WRITE:
C                                       1) USE DPPARS TO PERFORM
C                                          SOME OF THE PARSING
C                                       2) USE EXTDIS TO EXTRACT DIST
C                                          NAME
C                                       3) USE EXTPA2 TO EXTRACT
C                                          PARAMETERS
C                                       4) SUPPORT "MULTIPLE" KEYWORDS
C                                          AND EXTEND "REPLICATION"
C                                          TO MORE THAN ONE GROUP-ID
C                                          VARIABLE.  NOTE THAT
C                                          REPLICATION AND MULTIPLE
C                                          ARE RESTRICTED TO CASE
C                                          WHERE WE ARE PLOTTING FOR
C                                          A SINGLE SHAPE PARAMETER.
C                                       5) GENERALIZE GOODNESS OF
C                                          FIT STATISTIC THAT WILL
C                                          BE USED
C     UPDATED         --SEPTEMBER 2010. SUPPORT A "LEVEL" VARIABLE
C                                       FOR BRITTLE FIBER WEIBULL
C                                       (MAY ADD TO A FEW OTHERS AT
C                                       A LATER TIME).  NOTE THAT THIS
C                                       IS CURRENTLY ONLY SUPPORTED
C                                       FOR THE SINGLE RESPONSE
C                                       VARIABLE RAW DATA CASE
C     UPDATED         --FEBRUARY  2011. CHECK FOR CONFLICT WITH
C                                       "NORMAL PPCC STAT PLOT" AND
C                                       "UNIFORM PPCC STAT PLOT" COMMANDS
C     UPDATED         --APRIL     2014. G
C     UPDATED         --APRIL     2014. H
C     UPDATED         --FEBRUARY  2015. CHECK FOR CONFLICT WITH
C                                       "NORMAL AD STAT PLOT" AND
C                                       "UNIFORM AD STAT PLOT" COMMANDS
C                                       (AND OTHER DISTRIBUTIONS)
C     UPDATED         --JULY      2019. TWEAK USE OF SCRATCH SPACE
C     UPDATED         --JULY      2019. CALL LIST TO DPPPC2, DPPPC3
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
 
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASP2
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ICASE
      CHARACTER*4 IDATSW
      CHARACTER*4 IHP
      CHARACTER*4 IHP2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ICENSO
      CHARACTER*4 IMETHD
      CHARACTER*4 IREPL
      CHARACTER*4 IMULT
      CHARACTER*4 IGROUP
      CHARACTER*4 ILEVEL
C
      CHARACTER*4 IFLAGU
      CHARACTER*4 IFLAGF
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*60 IDIST
      CHARACTER*40 INAME
C
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
      REAL KSLOC
      REAL KSSCAL
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION XLEVEL(MAXOBV)
      DIMENSION XLOW(MAXOBV)
      DIMENSION XHIGH(MAXOBV)
      DIMENSION XCENS(MAXOBV)
      DIMENSION XTEMP1(MAXOBV)
      DIMENSION XTEMP2(MAXOBV)
      DIMENSION XTEMP3(MAXOBV)
      DIMENSION X2TEMP(MAXOBV)
      DIMENSION Y2TEMP(MAXOBV)
      DIMENSION D2TEMP(MAXOBV)
      DIMENSION WEIGHH(MAXOBV)
      DIMENSION WEIGHV(MAXOBV)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
      DIMENSION XIDTE3(MAXOBV)
      DIMENSION XIDTE4(MAXOBV)
      DIMENSION XIDTE5(MAXOBV)
      DIMENSION XIDTE6(MAXOBV)
      DIMENSION ZY(MAXOBV)
      DIMENSION ZXLOW(MAXOBV)
      DIMENSION ZXHIGH(MAXOBV)
      DIMENSION ZCENS(MAXOBV)
      DIMENSION XDESGN(MAXOBV,6)
      DIMENSION DISPAR(MAXOBV/5)
      DIMENSION DISPA2(MAXOBV/5)
      DIMENSION DISPA3(MAXOBV/5)
      DIMENSION CORR(MAXOBV/5)
      DIMENSION XTEMP4(MAXOBV)
      DIMENSION XTEMP5(MAXOBV/5)
C
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),XCENS(1))
      EQUIVALENCE (GARBAG(IGARB3),XTEMP1(1))
      EQUIVALENCE (GARBAG(IGARB4),XTEMP2(1))
      EQUIVALENCE (GARBAG(IGARB5),XTEMP3(1))
      EQUIVALENCE (GARBAG(IGARB6),XLOW(1))
      EQUIVALENCE (GARBAG(IGARB7),XHIGH(1))
      EQUIVALENCE (GARBAG(IGARB8),Y2TEMP(1))
      EQUIVALENCE (GARBAG(IGARB9),D2TEMP(1))
      EQUIVALENCE (GARBAG(IGAR10),X2TEMP(1))
      EQUIVALENCE (GARBAG(JGAR11),WEIGHH(1))
      EQUIVALENCE (GARBAG(JGAR12),WEIGHV(1))
      EQUIVALENCE (GARBAG(JGAR13),ZY(1))
      EQUIVALENCE (GARBAG(JGAR14),ZXLOW(1))
      EQUIVALENCE (GARBAG(JGAR15),ZXHIGH(1))
      EQUIVALENCE (GARBAG(JGAR16),ZCENS(1))
      EQUIVALENCE (GARBAG(JGAR17),XIDTEM(1))
      EQUIVALENCE (GARBAG(JGAR18),XIDTE2(1))
      EQUIVALENCE (GARBAG(JGAR19),XIDTE3(1))
      EQUIVALENCE (GARBAG(JGAR20),XIDTE4(1))
      EQUIVALENCE (GARBAG(IGAR11),XIDTE5(1))
      EQUIVALENCE (GARBAG(IGAR12),XIDTE6(1))
      EQUIVALENCE (GARBAG(IGAR13),XLEVEL(1))
      EQUIVALENCE (GARBAG(IGAR14),XTEMP4(1))
      EQUIVALENCE (GARBAG(IGAR15),DISPAR(1))
      EQUIVALENCE (GARBAG(IGAR15+(MAXOBV/5)+1),DISPA2(1))
      EQUIVALENCE (GARBAG(IGAR15+2*(MAXOBV/5)+1),DISPA3(1))
      EQUIVALENCE (GARBAG(IGAR15+3*(MAXOBV/5)+1),CORR(1))
      EQUIVALENCE (GARBAG(IGAR15+4*(MAXOBV/5)+1),XTEMP5(1))
      EQUIVALENCE (GARBAG(IGAR16),XDESGN(1,1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
CCCCC THE FOLLOWING LINE WAS ADDED (FOR MINMAX)   MAY 1993
      INCLUDE 'DPCOSU.INC'
CCCCC THE FOLLOWING LINE WAS ADDED (FOR MINMAX)   MAY 1993
      INCLUDE 'DPCOS2.INC'
CCCCC THE FOLLOWING LINE WAS ADDED (FOR IHOST1/2)   MAY 1993
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOMC.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      IF(ICOM.EQ.'BOOT' .OR. ICOM.EQ.'JACK')GOTO9000
C
      ICENSO='OFF'
      IREPL='OFF'
      IMULT='OFF'
      IGROUP='OFF'
      IMETHD='UNIM'
      IF(IPPCCN.EQ.'KAPL')IMETHD='KAPL'
      ICASPL='    '
      ICASP2='    '
      ILEVEL='OFF'
C
      ISUBN1='DPPP'
      ISUBN2='CC  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      MINN2=3
      NUMSHA=1
C
C               *********************************************
C               **  TREAT THE PROBABILITY PLOT CORRELATION **
C               **  COEFFICIENT (PPCC) PLOT CASE           **
C               *********************************************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPPCC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2
   52   FORMAT('ICASPL,IAND1,IAND2 = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ,ISUBRO
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',A4,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     DATAPLOT SUPPORTS THE FOLLOWING SYNTAX:
C
C     NO CENSORING, NO REPLICATION
C     ============================
C     <DIST> PPCC PLOT Y                            - RAW DATA
C     <DIST> PPCC PLOT Y X                          - BINNED DATA
C     <DIST> PPCC PLOT Y XLOW XUPP                  - UNEQUAL BINNED DATA
C
C     CENSORING, NO REPLICATION
C     ============================
C     <DIST> CENSORED PPCC PLOT Y CENS              - RAW DATA
C     <DIST> CENSORED PPCC PLOT Y CENS XMID         - BINNED DATA
C     <DIST> CENSORED PPCC PLOT Y CENS XLOW XUPP    - UNEQUAL BINS
C
C     NO CENSORING, REPLICATION
C     ============================
C     <DIST> MULTIPLE PPCC PLOT Y1 ... YK               - RAW DATA
C     <DIST> REPLICATED PPCC PLOT Y X1 ... XK           - RAW DATA
C     <DIST> REPLICATED GROUPED PPCC PLOT Y XMID X1 ... XK
C                                                       - BINNED DATA
C     <DIST> REPLICATED UNEQUAL GROUPED PPCC PLOT Y XLOW XUPP X1 ... XK
C                                                       - UNEQUAL BINS
C
C     CENSORING, REPLICATION
C     ============================
C     <DIST> CENSORED REPLICATED PCC PLOT Y CENS X1 ... XK - RAW DATA
C     <DIST> CENSORED REPLICATED GROUPED PCC PLOT Y CENS XMID X1 .. XK
C                                                          - BINNED DATA
C     <DIST> CENSORED REPLICATED UNEQUAL GROUPED PPCC PLOT Y CENS
C                                XLOW XUPP X1 ... XK       - UNEQUAL BINS
C
C     LOOK FOR THE WORD "PPCC PLOT" (ERROR IF NOT FOUND).
C     ALSO LOOK FOR OPTIONAL KEYWORDS "CENSOR", "REPLICATION",
C     AND "MULTIPLE".
C
C     ALSO LOOK FOR THE FOLLOWING "GOODNESS OF FIT" KEYWORDS:
C
C         KOLMOGOROV SMIRNOV  (KS)
C         ANDERSON DARLING    (AD)
C         CHI-SQUARE          (CHISQUARE)
C         AIC
C         BIC
C         BICC
C
C     THE AIC/BIC/BICC ARE STILL BEING DEVELOPED AND ARE NOT ACTIVE YET.
C     THE CHI-SQUARE IS RESTRICTED TO GROUPED DATA AND THE K-S AND
C     A-D ARE RESTRICTED TO THE RAW DATA CASE.  
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     CHECK FOR CONFLICT WITH NORMAL PPCC PLOT AND UNIFORM PPCC PLOT
C     COMMANDS.
C
C     CHECK FOR CONFLICT WITH BOX COX NORMALITY PPCC/LAMBDA PLOT
C
      IF(ICOM.EQ.'NORM' .OR. ICOM.EQ.'UNIF' .OR. ICOM.EQ.'CAUC' .OR.
     1    ICOM.EQ.'LOGI' .OR. ICOM.EQ.'COSI' .OR. ICOM.EQ.'ANGL' .OR.
     1    ICOM.EQ.'ARCS' .OR. ICOM.EQ.'EXPO' .OR. ICOM.EQ.'SLAS' .OR.
     1    ICOM.EQ.'LAPL' .OR. ICOM.EQ.'GUMB' .OR. 
     1    ICOM.EQ.'MAXW' .OR. ICOM.EQ.'RAYL' .OR. ICOM.EQ.'SLAS')THEN
         IF(IHARG(1).EQ.'PPCC' .AND. IHARG(2).EQ.'PLOT')GOTO9000
         IF(IHARG(1).EQ.'AD  ' .AND. IHARG(2).EQ.'PLOT')GOTO9000
         IF(IHARG(1).EQ.'ANDE' .AND. IHARG(2).EQ.'DARL' .AND.
     1     IHARG(3).EQ.'PLOT')GOTO9000
      ENDIF
C
      IF(ICOM.EQ.'DOUB' .AND. IHARG(1).EQ.'EXPO')THEN
        IF(IHARG(2).EQ.'PPCC' .AND. IHARG(3).EQ.'PLOT')GOTO9000
        IF(IHARG(2).EQ.'AD  ' .AND. IHARG(3).EQ.'PLOT')GOTO9000
        IF(IHARG(2).EQ.'ANDE' .AND. IHARG(3).EQ.'DARL' .AND.
     1     IHARG(4).EQ.'PLOT')GOTO9000
      ENDIF
      IF(ICOM.EQ.'HYPE' .AND. IHARG(1).EQ.'SECA')THEN
        IF(IHARG(2).EQ.'PPCC' .AND. IHARG(3).EQ.'PLOT')GOTO9000
        IF(IHARG(2).EQ.'AD  ' .AND. IHARG(3).EQ.'PLOT')GOTO9000
        IF(IHARG(2).EQ.'ANDE' .AND. IHARG(3).EQ.'DARL' .AND.
     1     IHARG(4).EQ.'PLOT')GOTO9000
      ENDIF
      IF(ICOM.EQ.'HALF' .AND. IHARG(1).EQ.'NORM')THEN
        IF(IHARG(2).EQ.'PPCC' .AND. IHARG(3).EQ.'PLOT')GOTO9000
        IF(IHARG(2).EQ.'AD  ' .AND. IHARG(3).EQ.'PLOT')GOTO9000
        IF(IHARG(2).EQ.'ANDE' .AND. IHARG(3).EQ.'DARL' .AND.
     1     IHARG(4).EQ.'PLOT')GOTO9000
      ENDIF
C
C     CHECK FOR CONFLICT WITH
C
C        <DIST> PPCC STATISTIC PLOT
C        <DIST> AD STATISTIC PLOT
C        <DIST> ANDERSON DARLING STATISTIC PLOT
C
      IF(IHARG(1).EQ.'PPCC' .AND. IHARG(2).EQ.'STAT' .AND.
     1   IHARG(3).EQ.'PLOT')GOTO9000
      IF(IHARG(1).EQ.'AD  ' .AND. IHARG(2).EQ.'STAT' .AND.
     1   IHARG(3).EQ.'PLOT')GOTO9000
C
      IF(IHARG(2).EQ.'PPCC' .AND. IHARG(3).EQ.'STAT' .AND.
     1   IHARG(4).EQ.'PLOT')GOTO9000
      IF(IHARG(2).EQ.'AD  ' .AND. IHARG(3).EQ.'STAT' .AND.
     1   IHARG(4).EQ.'PLOT')GOTO9000
C
      IF(IHARG(3).EQ.'PPCC' .AND. IHARG(4).EQ.'STAT' .AND.
     1   IHARG(5).EQ.'PLOT')GOTO9000
      IF(IHARG(3).EQ.'AD  ' .AND. IHARG(4).EQ.'STAT' .AND.
     1   IHARG(5).EQ.'PLOT')GOTO9000
C
      IF(IHARG(1).EQ.'ANDE' .AND. IHARG(2).EQ.'DARL' .AND.
     1   IHARG(3).EQ.'STAT' .AND. IHARG(4).EQ.'PLOT')GOTO9000
      IF(IHARG(2).EQ.'ANDE' .AND. IHARG(3).EQ.'DARL' .AND.
     1   IHARG(4).EQ.'STAT' .AND. IHARG(5).EQ.'PLOT')GOTO9000
      IF(IHARG(3).EQ.'ANDE' .AND. IHARG(4).EQ.'DARL' .AND.
     1   IHARG(5).EQ.'STAT' .AND. IHARG(6).EQ.'PLOT')GOTO9000
C
      IF(ICOM.EQ.'BOX ' .AND. IHARG(1).EQ.'COX ' .AND.
     1   IHARG(2).EQ.'NORM')GOTO9000
C
      ILASTC=9999
      ILASTZ=9999
      IFOUND='NO'
      DO100I=1,NUMARG-1
        IF(IHARG(I).EQ.'PPCC' .AND. IHARG(I+1).EQ.'PLOT')THEN
          IFOUND='YES'
          ICASPL='PPCC'
          ILASTC=MIN(ILASTC,I-1)
          ILASTZ=I+1
        ELSEIF(IHARG(I).EQ.'KS  ' .AND. IHARG(I+1).EQ.'PLOT')THEN
          IFOUND='YES'
          ICASPL='KS'
          ILASTC=MIN(ILASTC,I-1)
          ILASTZ=I+1
        ELSEIF(I.LE.NUMARG-2 .AND. IHARG(I).EQ.'KOLM' .AND.
     1         IHARG(I+1).EQ.'SMIR'.AND. IHARG(I+2).EQ.'PLOT')THEN
          IFOUND='YES'
          ICASPL='KS'
          ILASTC=MIN(ILASTC,I-1)
          ILASTZ=I+2
        ELSEIF(I.LE.NUMARG-2 .AND. IHARG(I).EQ.'K   ' .AND.
     1         IHARG(I+1).EQ.'S   '.AND. IHARG(I+2).EQ.'PLOT')THEN
          IFOUND='YES'
          ICASPL='KS'
          ILASTC=MIN(ILASTC,I-1)
          ILASTZ=I+2
        ELSEIF(IHARG(I).EQ.'AD  ' .AND. IHARG(I+1).EQ.'PLOT')THEN
          IFOUND='YES'
          ICASPL='AD'
          ILASTC=MIN(ILASTC,I-1)
          ILASTZ=I+1
        ELSEIF(I.LE.NUMARG-2 .AND. IHARG(I).EQ.'ANDE' .AND.
     1         IHARG(I+1).EQ.'DARL'.AND. IHARG(I+2).EQ.'PLOT')THEN
          IFOUND='YES'
          ICASPL='AD'
          ILASTC=MIN(ILASTC,I-1)
          ILASTZ=I+2
        ELSEIF(I.LE.NUMARG-2 .AND. IHARG(I).EQ.'A   ' .AND.
     1         IHARG(I+1).EQ.'D   '.AND. IHARG(I+2).EQ.'PLOT')THEN
          IFOUND='YES'
          ICASPL='AD'
          ILASTC=MIN(ILASTC,I-1)
          ILASTZ=I+2
        ELSEIF(IHARG(I).EQ.'CHIS' .AND. IHARG(I+1).EQ.'PLOT')THEN
          IFOUND='YES'
          ICASPL='CHSQ'
          ILASTC=MIN(ILASTC,I-1)
          ILASTZ=I+1
        ELSEIF(I.LE.NUMARG-2 .AND. IHARG(I).EQ.'CHI ' .AND.
     1         IHARG(I+1).EQ.'SQUA'.AND. IHARG(I+2).EQ.'PLOT')THEN
          IFOUND='YES'
          ICASPL='CHSQ'
          ILASTC=MIN(ILASTC,I-1)
          ILASTZ=I+2
        ELSEIF(IHARG(I).EQ.'CENS')THEN
          ICENSO='ON'
          ILASTC=MIN(ILASTC,I-1)
        ELSEIF(IHARG(I).EQ.'REPL')THEN
          IREPL='ON'
          ILASTC=MIN(ILASTC,I-1)
        ELSEIF(IHARG(I).EQ.'MULT')THEN
          IMULT='ON'
          ILASTC=MIN(ILASTC,I-1)
        ELSEIF(IHARG(I).EQ.'GROU')THEN
          IF(IGROUP.NE.'UNEQ')IGROUP='EQUA'
          ILASTC=MIN(ILASTC,I-1)
        ELSEIF(IHARG(I).EQ.'UNEQ')THEN
          IGROUP='UNEQ'
          ILASTC=MIN(ILASTC,I-1)
        ENDIF
  100 CONTINUE
C
      IF(IFOUND.EQ.'NO')GOTO9000
      IF(IMULT.EQ.'ON')THEN
        IF(IREPL.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
  101     FORMAT('***** ERROR IN PPCC PLOT--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,102)
  102     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ',
     1           '"REPLICATION" FOR THE PPCC PLOT.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSEIF(ICENSO.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,112)
  112     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ',
     1           '"CENSORING" FOR THE PPCC PLOT.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
C               ***************************************************
C               **  STEP 2--EXTRACT THE DISTRIBUTION NAME        **
C               ***************************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,211)IMULT,IREPL,ICENSO,ILASTC,ILASTZ
  211   FORMAT('IMULT,IREPL,ICENSO,ILASTC,ILASTZ = ',3(A4,2X),2I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      NLOCAL=0
      NPLOTP=0
C
      JMIN=0
      JMAX=ILASTC
C
      CALL EXTDIS(ICOM,ICOM2,IHARG,IHARG2,NUMARG,JMIN,JMAX,
     1            ICASP2,IDIST,NUMSHA,IFOUND,ILOCV,
     1            ISUBRO,IBUGG3,IERROR)
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,251)
  251   FORMAT('***** AFTER CALL EXTDIS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,252)ICASPL,ICASP2,NUMSHA,IDIST
  252   FORMAT('ICASPL,ICASP2,NUMSHA,IDIST = ',A4,2X,A4,2X,I8,2X,A60)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IFOUND.EQ.'NO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,262)
  262   FORMAT('      NO MATCH FOUND FOR DISTRIBUTION NAME.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSEIF(NUMSHA.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,272)IDIST
  272   FORMAT('      THE ',A60,' DISTRIBUTION')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,274)
  274   FORMAT('      HAS NO SHAPE PARAMETERS, SO PPCC PLOT IS NOT ',
     1         'APPLICABLE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSEIF(NUMSHA.GT.1 .AND. IREPL.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)
  282   FORMAT('      REPLICATION NOT SUPPORTED FOR CASES WITH MORE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,284)
  284   FORMAT('      THAN ONE SHAPE PARAMETER.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSEIF(NUMSHA.GT.1 .AND. IMULT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,292)
  292   FORMAT('      "MULTIPLE" NOT SUPPORTED FOR CASES WITH MORE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,294)
  294   FORMAT('      THAN ONE SHAPE PARAMETER.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ELSE
        CALL ADJUST(ILASTZ,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      ENDIF
C
C               ***************************************************
C               **  STEP 3--EXTRACT THE RANGES FOR THE SHAPE     **
C               **          PARAMETERS FOR THE SPECIFIED         **
C               **          DISTRIBUTION.                        **
C               ***************************************************
C
      ISTEPN='3'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASP2.EQ.'GMCL' .OR. ICASP2.EQ.'TRAP' .OR.
     1       ICASP2.EQ.'GTRA' .OR. ICASP2.EQ.'UTSP' .OR.
     1       ICASP2.EQ.'GLGP' .OR.
     1       ICASP2.EQ.'PARE' .OR. ICASP2.EQ.'PAR2'
     1  )THEN
        CONTINUE
      ELSE
        IHP='A   '
        IHP2='    '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
        IF(IERROR.EQ.'YES')THEN
          A=0.0
          IF(ICASP2.EQ.'TRIA')A=-1.0
        ELSE
          A=VALUE(ILOCV)
        ENDIF
C
        IHP='B   '
        IHP2='    '
        IHWUSE='P'
        MESSAG='NO'
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1              IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1              ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
        IF(IERROR.EQ.'YES')THEN
          B=1.0
        ELSE
          B=VALUE(ILOCV)
        ENDIF
C
      ENDIF
C
      SHAPE1=CPUMIN
      SHAPE2=CPUMIN
      SHAPE3=CPUMIN
      SHAPE4=CPUMIN
      SHAPE5=CPUMIN
      IF(NUMSHA.GE.1)THEN
        CALL EXTPA2(ICASP2,IDIST,A,B,
     1              SHAP11,SHAP12,SHAP21,SHAP22,
     1              SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1              IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1              ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1              IGETDF,ICONDF,IGOMDF,IKATDF,
     1              IGIGDF,IGEODF,
     1              ISUBRO,IBUGG2,IERROR)
        IF(IERROR.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,302)
  302     FORMAT('      UNABLE TO EXTRACT PARAMETER RANGES.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,304)ICASP2
  304     FORMAT('      ICASP2 = ',A4)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')THEN
          WRITE(ICOUT,312)ICASP2,IDIST
  312     FORMAT('AFTER EXTPA2: ICASP2,IDIST = ',A4,2X,A60)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,314)SHAP11,SHAP12,SHAP21,SHAP22
  314     FORMAT('SHAP11,SHAP12,SHAP21,SHAP22 = ',4G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
C               *********************************
C               **  STEP 4--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='4'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='PPCC PLOT'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IFLAGM=0
      IF(IMULT.EQ.'ON')THEN
        IFLAGE=0
        IFLAGM=1
      ELSE
         IF(IREPL.EQ.'OFF' .AND. ICENSO.EQ.'OFF')IFLAGM=1
      ENDIF
      IF(ICASP2.EQ.'BFWE' .AND. IBFWTY.EQ.'ON')THEN
        IFLAGM=0
      ELSEIF(ICASP2.EQ.'BFWE' .AND. IBFWLI.EQ.'VARI')THEN
        IFLAGM=0
      ELSEIF(ICASP2.EQ.'EEWE' .AND. IEEWLI.EQ.'VARI')THEN
        IFLAGM=0
      ENDIF
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=MAXSPN
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,481)
  481   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,482)NQ,NUMVAR
  482   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO485I=1,NUMVAR
            WRITE(ICOUT,487)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  487       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  485     CONTINUE
        ENDIF
      ENDIF
C
C               *************************************************
C               **  STEP 5--                                   **
C               **  DETERMINE:                                 **
C               **  1) NUMBER OF REPLICATION VARIABLES (0-6)   **
C               **  2) NUMBER OF CENSORING   VARIABLES (0-1)   **
C               **  3) NUMBER OF GROUPING    VARIABLES (0-2)   **
C               **  4) NUMBER OF RESPONSE    VARIABLES (>= 1)  **
C               *************************************************
C
      ISTEPN='5'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NRESP=0
      NREPL=0
      NCENS=0
      NGROUP=0
      NLEVEL=0
      IDATSW='RAW'
      IF(IMULT.EQ.'ON')THEN
        NRESP=NUMVAR
      ELSEIF(IREPL.EQ.'ON')THEN
        NRESP=1
        IF(ICENSO.EQ.'ON')THEN
          NCENS=1
        ENDIF
        IF(IGROUP.EQ.'EQUA')THEN
          NGROUP=1
          IDATSW='FREQ'
        ELSEIF(IGROUP.EQ.'UNEQ')THEN
          NGROUP=2
          IDATSW='FRE2'
        ENDIF
        NREPL=NUMVAR-NRESP-NCENS-NGROUP
        IF(NREPL.LT.1 .OR. NREPL.GT.6)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,511)
  511     FORMAT('      FOR THE REPLICATION CASE, THE NUMBER OF ',
     1           'REPLICATION VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,512)
  512     FORMAT('      MUST BE BETWEEN 1 AND 6;  SUCH WAS NOT THE ',
     1           'CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,513)NREPL
  513     FORMAT('      THE NUMBER OF REPLICATION VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ELSE
        NRESP=1
        NLEVEL=0
        IF(ICENSO.EQ.'ON')THEN
          NCENS=1
        ENDIF
        IF(ICASP2.EQ.'BFWE')THEN
          IF(IBFWTY.EQ.'ON' .AND. NUMVAR.GT.1)THEN
             NLEVEL=1
             ILEVEL='ON'
          ENDIF
          IF(IBFWLI.EQ.'VARI' .AND. NUMVAR.GT.1)THEN
             NLEVEL=1
             ILEVEL='ON'
          ENDIF
          NGROUP=NUMVAR-NRESP-NCENS-NLEVEL
        ELSEIF(ICASP2.EQ.'EEWE')THEN
          IF(IEEWLI.EQ.'VARI' .AND. NUMVAR.GT.1)THEN
             NLEVEL=1
             ILEVEL='ON'
          ENDIF
          NGROUP=NUMVAR-NRESP-NCENS-NLEVEL
        ELSE
          NGROUP=NUMVAR-NRESP-NCENS
        ENDIF
        IF(NGROUP.EQ.1)IDATSW='FREQ'
        IF(NGROUP.EQ.2)IDATSW='FRE2'
        IF(NGROUP.LT.0 .OR. NGROUP.GT.2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,521)
  521     FORMAT('      THE NUMBER OF CLASS VARIABLES IS LESS THAN ',
     1           'ZERO OR GREATER THAN TWO.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,523)NGROUP
  523     FORMAT('      THE NUMBER OF CLASS VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
C               *****************************************
C               **  STEP 6--                           **
C               **  GENERATE THE PPCC        PLOTS FOR **
C               **  THE VARIOUS CASES.  SEE IF USER    **
C               **  HAS SPECIFIED VALUES FOR KSLOC,    **
C               **  KSSCAL, MINSIZE, OR CHSLIM.        **
C               *****************************************
C
      ISTEPN='6'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHP='KSLO'
      IHP2='C   '
      IHWUSE='P'
      MESSAG='NO '
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        KSLOC=CPUMIN
      ELSE
       KSLOC=VALUE(ILOCP)
      ENDIF
C
      IHP='KSSC'
      IHP2='ALE '
      IHWUSE='P'
      MESSAG='NO '
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        KSSCAL=CPUMIN
      ELSE
        KSSCAL=VALUE(ILOCP)
      ENDIF
      IF(KSSCAL.LE.0.0)KSSCAL=CPUMIN
C
      IHP='MINS'
      IHP2='IZE '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        MINSIZ=5
      ELSE
        MINSIZ=INT(VALUE(ILOCP)+0.5)
        IF(MINSIZ.LE.0)MINSIZ=5
      ENDIF
C
C
C               *****************************************
C               **  STEP 7A--                          **
C               **  CASE 1: SINGLE RESPONSE VARIABLE   **
C               **          WITH NO REPLICATION        **
C               *****************************************
C
      IF(NRESP.EQ.1 .AND. NREPL.EQ.0)THEN
        ISTEPN='7A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        IF(IFLAGM.EQ.1 .AND. NUMVAR.EQ.1)THEN
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y1,XTEMP1,XTEMP2,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1                IBUGG3,ISUBRO,IFOUND,IERROR)
        ELSE
          J=0
          IMAX=NRIGHT(1)
          IF(NQ.LT.NRIGHT(1))IMAX=NQ
          DO710I=1,IMAX
            IF(ISUB(I).EQ.0)GOTO710
            J=J+1
C
C           RESPONSE VARIABLE IN Y1
C
            IJ=MAXN*(ICOLR(1)-1)+I
            IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
            IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
            IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
            IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
            IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
            IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
            IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
            ICOLC=1
C
C           LENGTH VARIABLE IN XLEVEL
C
            IF(ILEVEL.EQ.'ON')THEN
              ICOLC=ICOLC+1
              ICOLT=ICOLR(ICOLC)
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)XLEVEL(J)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)XLEVEL(J)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)XLEVEL(J)=RES(I)
              IF(ICOLT.EQ.MAXCP3)XLEVEL(J)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)XLEVEL(J)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)XLEVEL(J)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)XLEVEL(J)=TAGPLO(I)
            ENDIF
C
C           CENSORING VARIABLE IN XCENS
C
            IF(ICENSO.EQ.'ON')THEN
              ICOLC=ICOLC+1
              ICOLT=ICOLR(ICOLC)
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)XCENS(J)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)XCENS(J)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)XCENS(J)=RES(I)
              IF(ICOLT.EQ.MAXCP3)XCENS(J)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)XCENS(J)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)XCENS(J)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)XCENS(J)=TAGPLO(I)
            ENDIF
C
C           CLASS VARIABLE IN XLOW FOR FREQUENCY DATA
C
            IF(NGROUP.GE.1)THEN
              IDATSW='FREQ'
              ICOLC=ICOLC+1
              ICOLT=ICOLR(ICOLC)
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)XLOW(J)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)XLOW(J)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)XLOW(J)=RES(I)
              IF(ICOLT.EQ.MAXCP3)XLOW(J)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)XLOW(J)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)XLOW(J)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)XLOW(J)=TAGPLO(I)
            ENDIF
C
C           IF FREQUENCY DATA GIVEN WITH LOWER AND UPPER CLASS LIMITS,
C           THEN UPPER CLASS LIMIT VARIABLE IN XHIGH
C
            IF(NGROUP.EQ.2)THEN
              IDATSW='FRE2'
              ICOLC=ICOLC+1
              ICOLT=ICOLR(ICOLC)
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)XHIGH(J)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)XHIGH(J)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)XHIGH(J)=RES(I)
              IF(ICOLT.EQ.MAXCP3)XHIGH(J)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)XHIGH(J)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)XHIGH(J)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)XHIGH(J)=TAGPLO(I)
            ENDIF
C
  710     CONTINUE
          NLOCAL=J
        ENDIF
C
C       *****************************************************
C       **  STEP 7B--                                      **
C       **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C       **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C       **  RESET THE VECTOR D(.) TO ALL ONES.             **
C       **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).  **
C       **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).  **
C       *****************************************************
C
        ISTEPN='7B'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')THEN
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,711)
  711     FORMAT('***** FROM THE MIDDLE  OF DPPPCC--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,712)ICASPL,ILEVEL,NUMVAR,IDATSW,NLOCAL
  712     FORMAT('ICASPL,ILEVEL,NUMVAR,IDATSW,NQ = ',
     1           2(A4,2X),I8,2X,A4,I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,713)NRESP,NCENS,NLEVEL,NGROUP
  713     FORMAT('NRESP,NCENS,NLEVEL,NGROUP = ',4I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO715I=1,NLOCAL
              WRITE(ICOUT,716)I,Y1(I),XLOW(I),XHIGH(I),XCENS(I),
     1                        XLEVEL(I)
  716         FORMAT('I,Y1(I),XLOW(I),XHIGH(I),XCENS(I),XLEVEL(I) = ',
     1               I8,5F12.5)
              CALL DPWRST('XXX','BUG ')
  715       CONTINUE
          ENDIF
        ENDIF
C
        NPLOTP=0
        NCURVE=1
        IFLAGF='ON'
        IF(NGROUP.EQ.0 .AND. ICASPL.NE.'CHSQ')THEN
          CALL DPPPC2(Y1,XCENS,XLEVEL,NLOCAL,MAXOBV,
     1                ICASPL,ICASP2,
     1                SHAP11,SHAP12,SHAP21,SHAP22,
     1                SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                YLOWLM,YUPPLM,A,B,MINMAX,
     1                DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                IGETDF,ICONDF,IGOMDF,IKATDF,
     1                IGIGDF,IGEODF,
     1                IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,IFLAGF,NCURVE,
     1                PCHSLM,ILEVEL,
     1                Y,X,X3D,D,NPLOTP,NPLOTV,
     1                PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,A0BWSV,A1BWSV,
     1                IBUGG3,ISUBRO,IERROR)
        ELSE
          CALL DPPPC3(Y1,XCENS,XLOW,XHIGH,NLOCAL,MAXOBV,
     1                ICASPL,ICASP2,IDATSW,IDIST,
     1                SHAP11,SHAP12,SHAP21,SHAP22,
     1                SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                YLOWLM,YUPPLM,A,B,MINMAX,
     1                DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                IGETDF,ICONDF,IGOMDF,IKATDF,
     1                IGIGDF,IGEODF,
     1                IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,IFLAGF,NCURVE,
     1                PCHSLM,MINSIZ,IHSTCW,CLWIDT,CLLIMI,
     1                Y,X,X3D,D,NPLOTP,NPLOTV,
     1                PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                IBUGG3,ISUBRO,IERROR)
        ENDIF
C
C               ***************************************
C               **  STEP 7C--                        **
C               **  COMPUTE PPCC PLOT STAT           **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
        ISTEPN='7C'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IFLAGU='ON'
        IFRST=.FALSE.
        ILAST=.FALSE.
        CALL DPPPC4(ICASPL,PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,NUMSHA,
     1              IFLAGU,IFRST,ILAST,
     1              IBUGG2,IBUGG3,ISUBRO,IERROR)
C
C               ******************************************
C               **  STEP 8A--                           **
C               **  CASE 2: MULTIPLE RESPONSE VARIABLES **
C               **          NOTE THAT CENSORING AND     **
C               **          GROUPING ARE NOT SUPPORTED  **
C               **          FOR THIS CASE.              **
C               ******************************************
C
      ELSEIF(NRESP.GT.1)THEN
        ISTEPN='8A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C       LOOP THROUGH EACH OF THE RESPONSE VARIABLES
C
        NPLOTP=0
        NCURVE=0
        IFLAGF='ON'
        DO810IRESP=1,NRESP
          NCURVE=NCURVE+1
C
          IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,811)IRESP,NCURVE
  811       FORMAT('IRESP,NCURVE = ',2I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          ICOL=IRESP
          NUMVA2=1
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y1,XTEMP1,XTEMP2,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1                IBUGG3,ISUBRO,IFOUND,IERROR)
C
C         *****************************************************
C         **  STEP 8B--                                      **
C         **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C         **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C         **  RESET THE VECTOR D(.) TO ALL ONES.             **
C         **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).  **
C         **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).  **
C         *****************************************************
C
          ISTEPN='8B'
          IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'DPPP')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,822)
  822       FORMAT('***** FROM THE MIDDLE  OF DPPP--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,823)ICASPL,NUMVAR,NLOCAL
  823       FORMAT('ICASPL,NUMVAR,NQ = ',A4,2I8)
            CALL DPWRST('XXX','BUG ')
            IF(NLOCAL.GE.1)THEN
              DO825I=1,NLOCAL
                WRITE(ICOUT,826)I,Y1(I)
  826           FORMAT('I,Y1(I) = ',I8,G15.7)
                CALL DPWRST('XXX','BUG ')
  825         CONTINUE
            ENDIF
          ENDIF
C
          NPLOT1=NPLOTP
          CALL DPPPC2(Y1,XCENS,XLEVEL,NLOCAL,MAXOBV,
     1                ICASPL,ICASP2,
     1                SHAP11,SHAP12,SHAP21,SHAP22,
     1                SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                YLOWLM,YUPPLM,A,B,MINMAX,
     1                DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                IGETDF,ICONDF,IGOMDF,IKATDF,
     1                IGIGDF,IGEODF,
     1                IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,IFLAGF,NCURVE,
     1                PCHSLM,ILEVEL,
     1                Y,X,X3D,D,NPLOTP,NPLOTV,
     1                PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,A0BWSV,A1BWSV,
     1                IBUGG3,ISUBRO,IERROR)
          NPLOT2=NPLOTP
C
C               ***************************************
C               **  STEP 8C--                        **
C               **  COMPUTE PROB PLOT STAT           **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
          ISTEPN='8C'
          IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1      CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IFLAGU='FILE'
          IFRST=.FALSE.
          ILAST=.FALSE.
          IF(IRESP.EQ.1)IFRST=.TRUE.
          IF(IRESP.EQ.NRESP)ILAST=.TRUE.
          CALL DPPPC4(ICASPL,PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,NUMSHA,
     1                IFLAGU,IFRST,ILAST,
     1                IBUGG2,IBUGG3,ISUBRO,IERROR)
C
  810   CONTINUE
C
C               ***************************************************
C               **  STEP 9A--                                    **
C               **  CASE 3: ONE OR MORE REPLICATION VARIABLES.   **
C               **          FOR THIS CASE, THE NUMBER OF         **
C               **          VARIABLES MUST BE EXACTLY 1.  BOTH   **
C               **          CENSORING AND GROUPING ARE SUPPORTED.**
C               **          FOR THIS CASE, ALL VARIABLES MUST    **
C               **          HAVE THE SAME LENGTH.                **
C               ***************************************************
C
      ELSEIF(NRESP.EQ.1 .AND. NREPL.GE.1)THEN
        ISTEPN='9A'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'DPPP')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        J=0
        IMAX=NRIGHT(1)
        IF(NQ.LT.NRIGHT(1))IMAX=NQ
        DO910I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO910
          J=J+1
C
C         RESPONSE VARIABLE IN Y1
C
          IJ=MAXN*(ICOLR(1)-1)+I
          IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
          IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
          IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
          IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
          IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
          IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
          IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
C
C         CENSORING VARIABLE IN XCENS
C
          ICOLC=1
          IF(ICENSO.EQ.'ON')THEN
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XCENS(J)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XCENS(J)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XCENS(J)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XCENS(J)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XCENS(J)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XCENS(J)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XCENS(J)=TAGPLO(I)
          ENDIF
C
C         CLASS VARIABLE IN X1 FOR FREQUENCY DATA
C
          IF(NGROUP.GE.1)THEN
            IDATSW='FREQ'
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XLOW(J)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XLOW(J)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XLOW(J)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XLOW(J)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XLOW(J)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XLOW(J)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XLOW(J)=TAGPLO(I)
          ENDIF
C
C         IF FREQUENCY DATA GIVEN WITH LOWER AND UPPER CLASS LIMITS,
C         THEN UPPER CLASS LIMIT VARIABLE IN XHIGH
C
          IF(NGROUP.EQ.2)THEN
            IDATSW='FRE2'
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XHIGH(J)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XHIGH(J)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XHIGH(J)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XHIGH(J)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XHIGH(J)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XHIGH(J)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XHIGH(J)=TAGPLO(I)
          ENDIF
C
          DO920IR=1,MIN(NREPL,6)
            ICOLC=ICOLC+1
            ICOLT=ICOLR(ICOLC)
            IJ=MAXN*(ICOLT-1)+I
            IF(ICOLT.LE.MAXCOL)XDESGN(J,IR)=V(IJ)
            IF(ICOLT.EQ.MAXCP1)XDESGN(J,IR)=PRED(I)
            IF(ICOLT.EQ.MAXCP2)XDESGN(J,IR)=RES(I)
            IF(ICOLT.EQ.MAXCP3)XDESGN(J,IR)=YPLOT(I)
            IF(ICOLT.EQ.MAXCP4)XDESGN(J,IR)=XPLOT(I)
            IF(ICOLT.EQ.MAXCP5)XDESGN(J,IR)=X2PLOT(I)
            IF(ICOLT.EQ.MAXCP6)XDESGN(J,IR)=TAGPLO(I)
  920     CONTINUE
C
  910   CONTINUE
        NLOCAL=J
C
C       *****************************************************
C       **  STEP 9B--                                      **
C       **  FORM THE VERTICAL AND HORIZONTAL AXIS          **
C       **  VALUES Y(.) AND X(.) FOR THE PLOT.             **
C       **                                                 **
C       **  FOR THIS CASE, WE NEED TO LOOP THROUGH THE     **
C       **  VARIOUS REPLICATIONS.                          **
C       *****************************************************
C
        ISTEPN='9B'
        IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')THEN
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,931)
  931     FORMAT('***** FROM THE MIDDLE  OF DPPPCC--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,932)ICASPL,NUMVAR,IDATSW,NLOCAL
  932     FORMAT('ICASPL,NUMVAR,IDATSW,NLOCAL = ',
     1           A4,I8,2X,A4,I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO935I=1,NLOCAL
              WRITE(ICOUT,936)I,Y1(I),XLOW(I),XHIGH(I),XCENS(I),
     1                        XDESGN(I,1),XDESGN(I,2)
  936         FORMAT('I,Y1(I),XLOW(I),XHIGH(I),XCENS(I),XDESGN(I,1)',
     1               'XDESGN(I,2) = ',I8,6F12.5)
              CALL DPWRST('XXX','BUG ')
  935       CONTINUE
          ENDIF
        ENDIF
C
C       *****************************************************
C       **  STEP 9C--                                      **
C       **  FIND THE DISTINCT VALUES IN EACH OF THE        **
C       **  REPLICATION VARIABLES.                         **
C       *****************************************************
C
        CALL DPPP5(XDESGN(1,1),XDESGN(1,2),XDESGN(1,3),
     1             XDESGN(1,4),XDESGN(1,5),XDESGN(1,6),
     1             NREPL,NLOCAL,MAXOBV,
     1             XIDTEM,XIDTE2,XIDTE3,XIDTE4,XIDTE5,XIDTE6,
     1             XTEMP1,XTEMP2,
     1             NUMSE1,NUMSE2,NUMSE3,NUMSE4,NUMSE5,NUMSE6,
     1             IBUGG3,ISUBRO,IERROR)
C
C       *****************************************************
C       **  STEP 9D--                                      **
C       **  NOW LOOP THROUGH THE VARIOUS REPLICATIONS      **
C       *****************************************************
C
        NPLOTP=0
        NCURVE=0
        IF(NREPL.EQ.1)THEN
          J=0
          DO1110ISET1=1,NUMSE1
            K=0
            DO1130I=1,NLOCAL
              IF(XIDTEM(ISET1).EQ.XDESGN(I,1))THEN
                K=K+1
                ZY(K)=Y1(I)
                ZXLOW(K)=XLOW(I)
                ZXHIGH(K)=XHIGH(I)
                ZCENS(K)=XCENS(I)
              ENDIF
 1130       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NGROUP.EQ.0 .AND. ICASPL.NE.'CHSQ')THEN
              IF(NTEMP.GT.0)THEN
                CALL DPPPC2(Y1,XCENS,XLEVEL,NLOCAL,MAXOBV,
     1                      ICASPL,ICASP2,
     1                      SHAP11,SHAP12,SHAP21,SHAP22,
     1                      SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                      YLOWLM,YUPPLM,A,B,MINMAX,
     1                      DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                      XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                      X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                      IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                      ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                      IGETDF,ICONDF,IGOMDF,IKATDF,
     1                      IGIGDF,IGEODF,
     1                      IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                      IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                      IFLAGF,NCURVE,
     1                      PCHSLM,ILEVEL,
     1                      Y,X,X3D,D,NPLOTP,NPLOTV,
     1                      PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                      A0BWSV,A1BWSV,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ELSE
              IF(NTEMP.GT.0)THEN
                CALL DPPPC3(Y1,XCENS,XLOW,XHIGH,NLOCAL,MAXOBV,
     1                      ICASPL,ICASP2,IDATSW,IDIST,
     1                      SHAP11,SHAP12,SHAP21,SHAP22,
     1                      SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                      YLOWLM,YUPPLM,A,B,MINMAX,
     1                      DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                      XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                      X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                      IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                      ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                      IGETDF,ICONDF,IGOMDF,IKATDF,
     1                      IGIGDF,IGEODF,
     1                      IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                      IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                      IFLAGF,NCURVE,
     1                      PCHSLM,MINSIZ,IHSTCW,CLWIDT,CLLIMI,
     1                      Y,X,X3D,D,NPLOTP,NPLOTV,
     1                      PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NUMSE1)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPPPC4(ICASPL,PPCCMX,SHA1MX,SHA2MX,
     1                  A0SAVE,A1SAVE,NUMSHA,
     1                  IFLAGU,IFRST,ILAST,
     1                  IBUGG2,IBUGG3,ISUBRO,IERROR)
 1110     CONTINUE
        ELSEIF(NREPL.EQ.2)THEN
          J=0
          NTOT=NUMSE1*NUMSE2
          DO1210ISET1=1,NUMSE1
          DO1220ISET2=1,NUMSE2
            K=0
            DO1290I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
                ZXLOW(K)=XLOW(I)
                ZXHIGH(K)=XHIGH(I)
                ZCENS(K)=XCENS(I)
              ENDIF
 1290       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NGROUP.EQ.0 .AND. ICASPL.NE.'CHSQ')THEN
              IF(NTEMP.GT.0)THEN
                CALL DPPPC2(Y1,XCENS,XLEVEL,NLOCAL,MAXOBV,
     1                      ICASPL,ICASP2,
     1                      SHAP11,SHAP12,SHAP21,SHAP22,
     1                      SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                      YLOWLM,YUPPLM,A,B,MINMAX,
     1                      DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                      XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                      X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                      IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                      ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                      IGETDF,ICONDF,IGOMDF,IKATDF,
     1                      IGIGDF,IGEODF,
     1                      IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                      IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                      IFLAGF,NCURVE,
     1                      PCHSLM,ILEVEL,
     1                      Y,X,X3D,D,NPLOTP,NPLOTV,
     1                      PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                      A0BWSV,A1BWSV,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ELSE
              IF(NTEMP.GT.0)THEN
                CALL DPPPC3(Y1,XCENS,XLOW,XHIGH,NLOCAL,MAXOBV,
     1                      ICASPL,ICASP2,IDATSW,IDIST,
     1                      SHAP11,SHAP12,SHAP21,SHAP22,
     1                      SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                      YLOWLM,YUPPLM,A,B,MINMAX,
     1                      DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                      XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                      X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                      IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                      ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                      IGETDF,ICONDF,IGOMDF,IKATDF,
     1                      IGIGDF,IGEODF,
     1                      IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                      IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                      IFLAGF,NCURVE,
     1                      PCHSLM,MINSIZ,IHSTCW,CLWIDT,CLLIMI,
     1                      Y,X,X3D,D,NPLOTP,NPLOTV,
     1                      PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            NPTEMP=NPLOT2-NPLOT1
            CALL DPPPC4(ICASPL,PPCCMX,SHA1MX,SHA2MX,
     1                  A0SAVE,A1SAVE,NUMSHA,
     1                  IFLAGU,IFRST,ILAST,
     1                  IBUGG2,IBUGG3,ISUBRO,IERROR)
 1220     CONTINUE
 1210     CONTINUE
        ELSEIF(NREPL.EQ.3)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3
          DO1310ISET1=1,NUMSE1
          DO1320ISET2=1,NUMSE2
          DO1330ISET3=1,NUMSE3
            K=0
            DO1390I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
                ZXLOW(K)=XLOW(I)
                ZXHIGH(K)=XHIGH(I)
                ZCENS(K)=XCENS(I)
              ENDIF
 1390       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NGROUP.EQ.0 .AND. ICASPL.NE.'CHSQ')THEN
              IF(NTEMP.GT.0)THEN
                CALL DPPPC2(Y1,XCENS,XLEVEL,NLOCAL,MAXOBV,
     1                      ICASPL,ICASP2,
     1                      SHAP11,SHAP12,SHAP21,SHAP22,
     1                      SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                      YLOWLM,YUPPLM,A,B,MINMAX,
     1                      DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                      XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                      X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                      IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                      ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                      IGETDF,ICONDF,IGOMDF,IKATDF,
     1                      IGIGDF,IGEODF,
     1                      IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                      IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                      IFLAGF,NCURVE,
     1                      PCHSLM,ILEVEL,
     1                      Y,X,X3D,D,NPLOTP,NPLOTV,
     1                      PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                      A0BWSV,A1BWSV,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ELSE
              IF(NTEMP.GT.0)THEN
                CALL DPPPC3(Y1,XCENS,XLOW,XHIGH,NLOCAL,MAXOBV,
     1                      ICASPL,ICASP2,IDATSW,IDIST,
     1                      SHAP11,SHAP12,SHAP21,SHAP22,
     1                      SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                      YLOWLM,YUPPLM,A,B,MINMAX,
     1                      DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                      XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                      X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                      IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                      ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                      IGETDF,ICONDF,IGOMDF,IKATDF,
     1                      IGIGDF,IGEODF,
     1                      IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                      IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                      IFLAGF,NCURVE,
     1                      PCHSLM,MINSIZ,IHSTCW,CLWIDT,CLLIMI,
     1                      Y,X,X3D,D,NPLOTP,NPLOTV,
     1                      PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPPPC4(ICASPL,PPCCMX,SHA1MX,SHA2MX,
     1                  A0SAVE,A1SAVE,NUMSHA,
     1                  IFLAGU,IFRST,ILAST,
     1                  IBUGG2,IBUGG3,ISUBRO,IERROR)
 1330     CONTINUE
 1320     CONTINUE
 1310     CONTINUE
        ELSEIF(NREPL.EQ.4)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4
          DO1410ISET1=1,NUMSE1
          DO1420ISET2=1,NUMSE2
          DO1430ISET3=1,NUMSE3
          DO1440ISET4=1,NUMSE4
            K=0
            DO1490I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
                ZXLOW(K)=XLOW(I)
                ZXHIGH(K)=XHIGH(I)
                ZCENS(K)=XCENS(I)
              ENDIF
 1490       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NGROUP.EQ.0 .AND. ICASPL.NE.'CHSQ')THEN
              IF(NTEMP.GT.0)THEN
                CALL DPPPC2(Y1,XCENS,XLEVEL,NLOCAL,MAXOBV,
     1                      ICASPL,ICASP2,
     1                      SHAP11,SHAP12,SHAP21,SHAP22,
     1                      SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                      YLOWLM,YUPPLM,A,B,MINMAX,
     1                      DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                      XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                      X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                      IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                      ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                      IGETDF,ICONDF,IGOMDF,IKATDF,
     1                      IGIGDF,IGEODF,
     1                      IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                      IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                      IFLAGF,NCURVE,
     1                      PCHSLM,ILEVEL,
     1                      Y,X,X3D,D,NPLOTP,NPLOTV,
     1                      PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                      A0BWSV,A1BWSV,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ELSE
              IF(NTEMP.GT.0)THEN
                CALL DPPPC3(Y1,XCENS,XLOW,XHIGH,NLOCAL,MAXOBV,
     1                      ICASPL,ICASP2,IDATSW,IDIST,
     1                      SHAP11,SHAP12,SHAP21,SHAP22,
     1                      SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                      YLOWLM,YUPPLM,A,B,MINMAX,
     1                      DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                      XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                      X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                      IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                      ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                      IGETDF,ICONDF,IGOMDF,IKATDF,
     1                      IGIGDF,IGEODF,
     1                      IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                      IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                      IFLAGF,NCURVE,
     1                      PCHSLM,MINSIZ,IHSTCW,CLWIDT,CLLIMI,
     1                      Y,X,X3D,D,NPLOTP,NPLOTV,
     1                      PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPPPC4(ICASPL,PPCCMX,SHA1MX,SHA2MX,
     1                  A0SAVE,A1SAVE,NUMSHA,
     1                  IFLAGU,IFRST,ILAST,
     1                  IBUGG2,IBUGG3,ISUBRO,IERROR)
 1440     CONTINUE
 1430     CONTINUE
 1420     CONTINUE
 1410     CONTINUE
        ELSEIF(NREPL.EQ.5)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5
          DO1510ISET1=1,NUMSE1
          DO1520ISET2=1,NUMSE2
          DO1530ISET3=1,NUMSE3
          DO1540ISET4=1,NUMSE4
          DO1550ISET5=1,NUMSE5
            K=0
            DO1590I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
                ZXLOW(K)=XLOW(I)
                ZXHIGH(K)=XHIGH(I)
                ZCENS(K)=XCENS(I)
              ENDIF
 1590       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NGROUP.EQ.0 .AND. ICASPL.NE.'CHSQ')THEN
              IF(NTEMP.GT.0)THEN
                CALL DPPPC2(Y1,XCENS,XLEVEL,NLOCAL,MAXOBV,
     1                      ICASPL,ICASP2,
     1                      SHAP11,SHAP12,SHAP21,SHAP22,
     1                      SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                      YLOWLM,YUPPLM,A,B,MINMAX,
     1                      DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                      XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                      X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                      IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                      ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                      IGETDF,ICONDF,IGOMDF,IKATDF,
     1                      IGIGDF,IGEODF,
     1                      IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                      IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                      IFLAGF,NCURVE,
     1                      PCHSLM,ILEVEL,
     1                      Y,X,X3D,D,NPLOTP,NPLOTV,
     1                      PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                      A0BWSV,A1BWSV,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ELSE
              IF(NTEMP.GT.0)THEN
                CALL DPPPC3(Y1,XCENS,XLOW,XHIGH,NLOCAL,MAXOBV,
     1                      ICASPL,ICASP2,IDATSW,IDIST,
     1                      SHAP11,SHAP12,SHAP21,SHAP22,
     1                      SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                      YLOWLM,YUPPLM,A,B,MINMAX,
     1                      DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                      XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                      X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                      IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                      ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                      IGETDF,ICONDF,IGOMDF,IKATDF,
     1                      IGIGDF,IGEODF,
     1                      IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                      IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                      IFLAGF,NCURVE,
     1                      PCHSLM,MINSIZ,IHSTCW,CLWIDT,CLLIMI,
     1                      Y,X,X3D,D,NPLOTP,NPLOTV,
     1                      PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPPPC4(ICASPL,PPCCMX,SHA1MX,SHA2MX,
     1                  A0SAVE,A1SAVE,NUMSHA,
     1                  IFLAGU,IFRST,ILAST,
     1                  IBUGG2,IBUGG3,ISUBRO,IERROR)
 1550     CONTINUE
 1540     CONTINUE
 1530     CONTINUE
 1520     CONTINUE
 1510     CONTINUE
        ELSEIF(NREPL.EQ.6)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5*NUMSE6
          DO1610ISET1=1,NUMSE1
          DO1620ISET2=1,NUMSE2
          DO1630ISET3=1,NUMSE3
          DO1640ISET4=1,NUMSE4
          DO1650ISET5=1,NUMSE5
          DO1660ISET6=1,NUMSE6
            K=0
            DO1690I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5) .AND.
     1           XIDTE6(ISET6).EQ.XDESGN(I,6)
     1          )THEN
                K=K+1
                ZY(K)=Y1(I)
                ZXLOW(K)=XLOW(I)
                ZXHIGH(K)=XHIGH(I)
                ZCENS(K)=XCENS(I)
              ENDIF
 1690       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NGROUP.EQ.0 .AND. ICASPL.NE.'CHSQ')THEN
              IF(NTEMP.GT.0)THEN
                CALL DPPPC2(Y1,XCENS,XLEVEL,NLOCAL,MAXOBV,
     1                      ICASPL,ICASP2,
     1                      SHAP11,SHAP12,SHAP21,SHAP22,
     1                      SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                      YLOWLM,YUPPLM,A,B,MINMAX,
     1                      DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                      XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                      X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                      IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                      ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                      IGETDF,ICONDF,IGOMDF,IKATDF,
     1                      IGIGDF,IGEODF,
     1                      IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                      IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                      IFLAGF,NCURVE,
     1                      PCHSLM,ILEVEL,
     1                      Y,X,X3D,D,NPLOTP,NPLOTV,
     1                      PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                      A0BWSV,A1BWSV,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ELSE
              IF(NTEMP.GT.0)THEN
                CALL DPPPC3(Y1,XCENS,XLOW,XHIGH,NLOCAL,MAXOBV,
     1                      ICASPL,ICASP2,IDATSW,IDIST,
     1                      SHAP11,SHAP12,SHAP21,SHAP22,
     1                      SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                      YLOWLM,YUPPLM,A,B,MINMAX,
     1                      DISPAR,DISPA2,DISPA3,CORR,NUMSHA,
     1                      XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                      X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                      IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                      ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                      IGETDF,ICONDF,IGOMDF,IKATDF,
     1                      IGIGDF,IGEODF,
     1                      IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                      IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                      IFLAGF,NCURVE,
     1                      PCHSLM,MINSIZ,IHSTCW,CLWIDT,CLLIMI,
     1                      Y,X,X3D,D,NPLOTP,NPLOTV,
     1                      PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                      IBUGG3,ISUBRO,IERROR)
              ENDIF
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPPPC4(ICASPL,PPCCMX,SHA1MX,SHA2MX,
     1                  A0SAVE,A1SAVE,NUMSHA,
     1                  IFLAGU,IFRST,ILAST,
     1                  IBUGG2,IBUGG3,ISUBRO,IERROR)
 1660     CONTINUE
 1650     CONTINUE
 1640     CONTINUE
 1630     CONTINUE
 1620     CONTINUE
 1610     CONTINUE
        ENDIF
C
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPCC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPPCC--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        IF(IFOUND.EQ.'NO')GOTO9099
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         I8,I8,I8,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9021)NLOCAL,MINMAX
 9021   FORMAT('NLOCAL,MINMAX = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9017)PPCCMX,SHA1MX,SHA2MX
 9017   FORMAT('PPCCMX,SHA1MX,SHA2MX = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
        IF(NLOCAL.GT.0)THEN
          DO9022I=1,NLOCAL
            WRITE(ICOUT,9023)I,Y1(I),XCENS(I),XLOW(I),XHIGH(I)
 9023       FORMAT('I,Y1(I),XCENS(I),XLOW(I),XHIGH(I) = ',I8,4F12.5)
            CALL DPWRST('XXX','BUG ')
 9022     CONTINUE
        ENDIF
        IF(NPLOTP.GT.0)THEN
          DO9032I=1,NPLOTP
            WRITE(ICOUT,9033)I,Y(I),X(I),D(I)
 9033       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9032     CONTINUE
        ENDIF
      ENDIF
C
 9099 CONTINUE
      RETURN
      END
      SUBROUTINE DPPPC2(Y1,XCENS,XLEVEL,N1,MAXNXT,
     1                  ICASPL,ICASP2,
     1                  SHAP11,SHAP12,SHAP21,SHAP22,
     1                  SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                  YLOWLM,YUPPLM,A,B,MINMAX,
     1                  DISPAR,DISPA2,DISPA3,CORRV,NUMSHA,
     1                  XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                  X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                  IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                  ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                  IGETDF,ICONDF,IGOMDF,IKATDF,
     1                  IGIGDF,IGEODF,
     1                  IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                  IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                  IFLAGF,NCURVE,
     1                  PCHSLM,ILEVEL,
     1                  Y2,X2,X3D2,D2,N2,NPLOTV,
     1                  PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                  A0BWSV,A1BWSV,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS THAT WILL DEFINE
C              THE PROBABILITY PLOT CORRELATION COEFFICIENT TRACE FOR
C              SOME DISTRIBUTIONAL FAMILY.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--FEBRUARY  1981.
C     UPDATED         --JUNE      1981.
C     UPDATED         --AUGUST    1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --MAY       1990.  IG, WALD, RIG, FL (SAUNDERS)
C     UPDATED         --APRIL     1992.  AN TO AN1
C     UPDATED         --DECEMBER  1993.  MINMAX FOR EV1/EV2/WEIB DIST.
C     UPDATED         --MAY       1993.  EXTREME VALUE (GENERAL)
C     UPDATED         --MAY       1993.  GENERALIZED PARETO
C     UPDATED         --APRIL     1995.  NEW DISTRIBUTIONS
C     UPDATED         --OCTOBER   1995.  LOG GAMMA DISTRIBUTION
C     UPDATED         --OCTOBER   1995.  5 DISTRIBUTIONS
C     UPDATED         --DECEMBER  1995.  GENERALIZED LOGISTIC
C     UPDATED         --JANUARY   1996.  DOUBLE GAMMA
C     UPDATED         --FEBRUARY  1996.  BRADFORD
C     UPDATED         --MAY       1996.  RECIPROCAL
C     UPDATED         --JANUARY   1998.  BINOMIAL
C     UPDATED         --JANUARY   1998.  NEGATIVE BINOMIAL
C     UPDATED         --JANUARY   1998.  LOGARITHMIC SERIES
C     UPDATED         --FEBRUARY  1998.  CHECK FOR 0 COUNT FREQUENCIES
C                                        FOR BINNED DATA
C     UPDATED         --AUGUST    2001.  SUPPORT FOR A NUMBER OF
C                                        2 SHAPE PARAMETER
C                                        DISTRIBUTIONS.
C     UPDATED         --SEPTEMBER 2001.  SUPPORT FOR 4 ADDITIONAL
C                                        DISTRIBUTIONS
C     UPDATED         --NOVEMBER  2001.  GEE DISTRIBUTION
C     UPDATED         --NOVEMBER  2001.  ALPHA DISTRIBUTION
C     UPDATED         --NOVEMBER  2001.  POWER LOGNORMAL SUPPORT
C                                        2 SHAPE PARAMETERS
C     UPDATED         --MAY       2003.  ERROR (=SUBBOTIN=EXPO POWER)
C     UPDATED         --NOVEMBER  2003.  FOLDED T
C     UPDATED         --DECEMBER  2003.  SKEW NORMAL, SKEW T,
C                                        INVERTED BETA,
C                                        G-AND-H
C     UPDATED         --MARCH     2004.  LOG SKEW NORMAL,
C                                        NON-CENTRAL T
C                                        NON-CENTRAL CHI-SQUARE
C     UPDATED         --MARCH     2004.  FOR 2 SHAPE PARAMETER CASE,
C                                        WRITE COORDINATES TO FILE
C     UPDATED         --APRIL     2004.  HERMITE
C     UPDATED         --MAY       2004.  SUPPORT DIFFERENT CORRELATION
C                                        MEASURES
C     UPDATED         --MAY       2004.  SUPPORT FOR KS PLOT
C     UPDATED         --MAY       2004.  SUPPORT FOR GENERATING 2-SHAPE
C                                        PARAMETER CASE AS MULTI-TRACE
C                                        PLOT
C     UPDATED         --JUNE      2004.  SKEW DOUBLE EXPONENTIAL
C     UPDATED         --JUNE      2004.  ASYMMETRIC DOUBLE EXPONENTIAL
C     UPDATED         --JUNE      2004.  MAXWELL
C     UPDATED         --JULY      2004.  GOMPERTZ-MAKEHAM
C     UPDATED         --AUGUST    2004.  GENERALIZED ASYMMETRIC
C                                        DOUBLE EXPONENTIAL
C     UPDATED         --AUGUST    2004.  MCLEISH
C     UPDATED         --SEPTEMBER 2004. GENERALIZED MCLEISH
C     UPDATED         --SEPTEMBER 2004. HYPERBOLIC (NOT WORKING YET)
C     UPDATED         --SEPTEMBER 2004. SUPPORT FOR FOLLOWING OPTIONS:
C                                       1) SET PPCC PLOT DATA POINTS
C                                       2) SET PPCC PLOT AXIS POINTS
C                                       3) SET PPCC PLOT AXIS ORDER
C     UPDATED         --OCTOBER   2004. MODIFY HOW "ALOC"
C                                       PARAMETER HANDLED
C                                       FOR PARETO DISTRIBUTION
C     UPDATED         --OCTOBER   2004. WRITE LOCATION AND SCALE
C                                       PARAMETERS TO FILE
C     UPDATED         --OCTOBER   2004. FOR BINNED CASE, USE CHI-SQUARE
C                                       RATHER THAN K-S TEST
C     UPDATED         --OCTOBER   2004. FOR UNBINNED DATA, SUPPORT
C                                       CENSORING
C     UPDATED         --OCTOBER   2004. WRITE : PPCC, LOC, SCALE,
C                                               SHAPE1, SHAPE2 TO
C                                               DPST2F.DAT
C     UPDATED         --DECEMBER  2004. IF USER HAS NOT SET KSLOC
C                                       AND KSSCAL, SET THEM TO 0 AND
C                                       1 FOR PARETO DISTRIBUTIONS
C     UPDATED         --APRIL     2005. FOR ONE SHAPE PARAMETER CASE,
C                                       ADD SUPPORT FOR REPLICATION
C                                       CASE (GROUPS, AS OPPOSSED TO
C                                       BINS, IN THE DATA)
C     UPDATED         --APRIL     2005. FOR BINNED DATA, SUPPORT CASE
C                                       WHERE BINS GIVEN AS LOWER AND
C                                       UPPER LIMITS (INSTEAD OF
C                                       JUST THE MID-POINT).  THIS
C                                       ALLOWS UNEQUALLY SPACED BINS.
C     UPDATED         --JULY      2005. CALL LIST TO LGAPPF AND SNPPF
C                                       CALL LIST TO DP1KS2
C                                       CALL LIST TO DPCHS2
C     UPDATED         --FEBRUARY  2006. GENERALIZED LOGISTIC TYPE 5
C     UPDATED         --FEBRUARY  2006. FMKL PARAMETERIZATION OF
C                                       GENERALIZED TUKEY LAMBDA
C     UPDATED         --MARCH     2006. SUPPORT FOR DIFFERENT DEFAULT
C                                       BINNING ALGORITHMS
C     UPDATED         --MARCH     2006. BETA NORMAL
C     UPDATED         --MARCH     2006. GENERALIZED LOGISTIC TYPE 2
C     UPDATED         --MARCH     2006. GENERALIZED LOGISTIC TYPE 3
C     UPDATED         --MARCH     2006. GENERALIZED LOGISTIC TYPE 4
C     UPDATED         --MARCH     2006. ASYMMETRIC LOG LAPLACE
C     UPDATED         --MAY       2006. FOR KS PLOT, ALLOW BIWEIGHT
C                                       ADJUSTMENT FOR LOCATION AND
C                                       SCALE PARAMETERS.
C     UPDATED         --MAY       2006. BETA-GEOMETRIC
C     UPDATED         --MAY       2006. ZETA, ZIPF
C     UPDATED         --MAY       2006. BOREL-TANNER
C     UPDATED         --JUNE      2006. LAGRANGE-POISSON
C     UPDATED         --JUNE      2006. LOG BETA
C     UPDATED         --JUNE      2006. POLYA-AEPPLI
C     UPDATED         --JUNE      2006. LOST GAMES
C     UPDATED         --JUNE      2006. GENERALIZED LOGARITHMIC SERIES
C     UPDATED         --JULY      2006. GEETA
C     UPDATED         --JULY      2006. QUASI BINOMIAL TYPE 1
C     UPDATED         --AUGUST    2006. CONSUL
C     UPDATED         --NOVEMBER  2006. DISCRETE WEIBULL
C     UPDATED         --NOVEMBER  2006. GENERALIZED LOST GAMES
C     UPDATED         --JANUARY   2007. KATZ
C     UPDATED         --FEBRUARY  2007. TOPP AND LEONE
C     UPDATED         --FEBRUARY  2007. TRAPEZOID
C     UPDATED         --FEBRUARY  2007. GENERALIZED TOPP AND LEONE
C     UPDATED         --FEBRUARY  2007. REFLECTED GENERALIZED
C                                       TOPP AND LEONE
C     UPDATED         --MARCH     2007. SPECIFY LOWER/UPPER LIMITS
C                                       FOR TRIANGULAR DISTRIBUTION
C     UPDATED         --JUNE      2007. SPECIFY LOWER/UPPER LIMITS
C                                       FOR TWO-SIDED POWER DISTRIBUTION
C     UPDATED         --AUGUST    2007. EXTRACT FREQUENCY CASE TO A
C                                       SEPARATE ROUTINE (DPPPC3)
C     UPDATED         --SEPTEMBER 2007. SLOPE
C     UPDATED         --SEPTEMBER 2007. TWO-SIDED SLOPE
C     UPDATED         --SEPTEMBER 2007. OGIVE
C     UPDATED         --SEPTEMBER 2007. TWO-SIDED OGIVE
C     UPDATED         --OCTOBER   2007. BURR TYPE 2
C     UPDATED         --OCTOBER   2007. BURR TYPE 3
C     UPDATED         --OCTOBER   2007. BURR TYPE 4
C     UPDATED         --OCTOBER   2007. BURR TYPE 5
C     UPDATED         --OCTOBER   2007. BURR TYPE 6
C     UPDATED         --OCTOBER   2007. BURR TYPE 7
C     UPDATED         --OCTOBER   2007. BURR TYPE 8
C     UPDATED         --OCTOBER   2007. BURR TYPE 9
C     UPDATED         --OCTOBER   2007. BURR TYPE 10
C     UPDATED         --OCTOBER   2007. BURR TYPE 12
C     UPDATED         --OCTOBER   2007. DOUBLY-PARETO UNIFORM
C     UPDATED         --OCTOBER   2007. KUMARASWAMY
C     UPDATED         --DECEMBER  2007. REFLECTED POWER
C     UPDATED         --JANUARY   2008. MUTH
C     UPDATED         --FEBRUARY  2008. LOGISTIC-EXPONENTIAL
C     UPDATED         --FEBRUARY  2008. SIGMA PARAMETER FOR
C                                       MAXWELL REALLY A SCALE
C                                       PARAMETER, SO REMOVE
C     UPDATED         --MARCH     2008. TRUNCATED PARETO
C     UPDATED         --MARCH     2008. 3-PARAMETER LOGISTIC-EXPONENTIAL
C     UPDATED         --MAY       2008. PEARSON TYPE 3
C     UPDATED         --MAY       2008. KAPPA
C     UPDATED         --MAY       2008. MIELKE'S BETA-KAPPA
C     UPDATED         --JULY      2008. 2-SHAPE PARAMERER GENERALIZED
C                                       INVERSE GAUSSIAN
C     UPDATED         --DECEMBER  2008. TRUNCATED NORMAL (ASSUME
C                                       TRUNCATION POINTS KNOWN)
C     UPDATED         --OCTOBER   2009. CALL "DPPP2" TO GENERATE
C                                       UNDERLYING PROBABILITY PLOT
C     UPDATED         --OCTOBER   2009. GENERALIZE GOODNESS OF FIT
C                                       STATISTIC THAT WILL BE USED
C     UPDATED         --OCTOBER   2009. HANDLING OF REPLICATION MOVED
C                                       TO CALLING ROUTINE (DPPPCC)
C     UPDATED         --OCTOBER   2009. REMOVE OPTION FOR ROBUST
C                                       ESTIMATES FOR CORRELATION
C                                       COEFFICIENT (E.G., BIWEIGHT
C                                       MID-CORRELATION).  THESE
C                                       TEND TO RESULT IN A "FLAT"
C                                       PPCC PLOT THAT DOES NOT
C                                       DISTINGUISH BETWEEN VALUES OF
C                                       THE SHAPE PARAMETER.
C     UPDATED         --OCTOBER   2009. MAKE OUTPUT TO "dpst1f.dat" AND
C                                       "dpst2f.dat" OPTIONAL (TO
C                                       FACILITATE USE OF DPPPC2 BY
C                                       ROUTINES OTHER THAN DPPPCC)
C     UPDATED         --SEPTEMBER 2010. SUPPORT A "LEVEL" VARIABLE
C                                       FOR BRITTLE FIBER WEIBULL
C                                       (MAY ADD TO A FEW OTHERS AT
C                                       A LATER TIME).  NOTE THAT THIS
C                                       IS CURRENTLY ONLY SUPPORTED
C                                       FOR THE SINGLE RESPONSE
C                                       VARIABLE RAW DATA CASE
C     UPDATED         --JULY      2019. CALL LIST TO DPPP2
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASP2
      CHARACTER*4 IPPCCC
      CHARACTER*4 IPPCFO
      CHARACTER*4 IPPCAO
      CHARACTER*4 IADEDF
      CHARACTER*4 IGEPDF
      CHARACTER*4 IMAKDF
      CHARACTER*4 IBEIDF
      CHARACTER*4 ILGADF
      CHARACTER*4 ISKNDF
      CHARACTER*4 IGLDDF
      CHARACTER*4 IBGEDF
      CHARACTER*4 IGETDF
      CHARACTER*4 ICONDF
      CHARACTER*4 IGOMDF
      CHARACTER*4 IKATDF
      CHARACTER*4 IGIGDF
      CHARACTER*4 IGEODF
      CHARACTER*4 IGIGSV
      CHARACTER*4 IMETHD
      CHARACTER*4 ICENSO
      CHARACTER*4 ILEVEL
      CHARACTER*4 IFLAGF
      CHARACTER*4 IWRITE
      CHARACTER*4 IDATSW
      CHARACTER*4 IDIR
      CHARACTER*4 IPPCBW
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IDISFL
      CHARACTER*4 IFOUND
      CHARACTER*4 IOP
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOF2.INC'
C
C---------------------------------------------------------------------
C
      INTEGER IPPCDP
      INTEGER IPPCAP(2)
C
      DIMENSION Y1(*)
      DIMENSION XCENS(*)
      DIMENSION XLEVEL(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION X3D2(*)
      DIMENSION D2(*)
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION XTEMP4(*)
      DIMENSION XTEMP5(*)
      DIMENSION X2TEMP(*)
      DIMENSION Y2TEMP(*)
      DIMENSION D2TEMP(*)
      DIMENSION WEIGHH(*)
      DIMENSION WEIGHV(*)
C
      DIMENSION DISPAR(*)
      DIMENSION DISPA2(*)
      DIMENSION DISPA3(*)
      DIMENSION CORRV(*)
C
      REAL KSLOC
      REAL KSSCAL
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
CCCCC DATA PI / 3.1415926535 /
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPP'
      ISUBN2='C2  '
      IWRITE='OFF'
      IERROR='NO'
      IGIGSV=IGIGDF
C
      IF(ICASP2.EQ.'PARE' .OR. ICASP2.EQ.'PAR2')THEN
        IF(KSLOC.EQ.CPUMIN .AND.  KSSCAL.EQ.CPUMIN)THEN
          KSLOC=0.0
          KSSCAL=1.0
        ENDIF
      ENDIF
      AN1=0.0
C
      NHOR1=IPPCAP(1)
      NHOR2=IPPCAP(2)
C
C     DISTINGUISH DISCRETE DISTRIBUTIONS
C
      CALL EXTDST(ICASPL,IDISFL,ILOWLM,
     1            SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1            SHAPE5,SHAPE6,SHAPE7,
     1            IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1            ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1            IGETDF,ICONDF,IGOMDF,IKATDF,
     1            IGIGDF,IGEODF)
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11)
   11   FORMAT('***** AT THE BEGINNING OF DPPPC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,12)ICASPL,ICASP2,ILEVEL,IPPCCC,N1,NPLOTV
   12   FORMAT('ICASPL,ICASP2,ILEVEL,IPPCCC,N1,NPLOTV = ',4(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,13)SHAP11,SHAP12,SHAP21,SHAP22,PCHSLM
   13   FORMAT('SHAP11,SHAP12,SHAP21,SHAP22,PCHSLM = ',5G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,14)MINMAX,IPPCDP,IPPLDP,KSLOC,KSSCAL
   14   FORMAT('MINMAX,IPPCDP,IPPLDP,KSLOC,KSSCAL = ',3I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        IF(N1.GT.0)THEN
          DO25I=1,MIN(N1,200)
            WRITE(ICOUT,26)I,Y1(I),XCENS(I),XLEVEL(I)
   26       FORMAT('I,Y1(I),XCENS(I),XLEVEL(I) = ',I8,4G12.5)
            CALL DPWRST('XXX','BUG ')
   25     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N1.LE.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,46)
   46   FORMAT('***** ERROR IN PPCC PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,47)
   47   FORMAT('      THE NUMBER OF OBSERVATIONS IS LESS THAN OR ',
     1         'EQUAL TO 1.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,48)N1
   48   FORMAT('      THE NUMBER OF OBSERVATIONS = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y1(1)
      DO60I=1,N1
        IF(Y1(I).NE.HOLD)GOTO69
   60 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,46)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)
   62 FORMAT('      ALL INPUT RESPONSE VARIABLE ELEMENTS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,63)HOLD
   63 FORMAT('      ARE IDENTICALLY EQUAL TO ',G15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   69 CONTINUE
C
C     CURRENTLY, CENSORING NOT SUPPORTED FOR KS, ANDERSON-DARLING,
C     AIC, CHI-SQUARE, ETC., GOODNESS OF FIT CASES.  SO FOR NOW,
C     TREAT THIS COMBINATION AS AN ERROR.
C
      IF(ICENSO.EQ.'ON' .AND. ICASPL.NE.'PPCC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,46)
        CALL DPWRST('XXX','BUG ')
        IF(ICASPL.EQ.'KS  ')THEN
          WRITE(ICOUT,72)
   72     FORMAT('      CURRENTLY, THE KOLMOGOROV-SMIRNOV GOODNESS OF ',
     1           'FIT STATISTIC')
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICASPL.EQ.'AD  ')THEN
          WRITE(ICOUT,73)
   73     FORMAT('      CURRENTLY, THE ANDERSON-DARLING GOODNESS OF ',
     1           'FIT STATISTIC')
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICASPL.EQ.'CHSQ')THEN
          WRITE(ICOUT,74)
   74     FORMAT('      CURRENTLY, THE CHI-SQUARE GOODNESS OF ',
     1           'FIT STATISTIC')
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICASPL.EQ.'AIC ')THEN
          WRITE(ICOUT,75)
   75     FORMAT('      CURRENTLY, THE AIC GOODNESS OF ',
     1           'FIT STATISTIC')
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,79)
   79   FORMAT('      IS NOT SUPPORTED FOR THE CENSORED CASE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ********************************************
C               **  STEP 1B-                              **
C               **  IF SET PPCC DATA POINTS COMMAND WAS   **
C               **  ENTERED, THIN DATA SET BY COMPUTING   **
C               **  PERCENTILES OF THE DATA.  CURRENTLY   **
C               **  ONLY SUPPORTED FOR UNBINNED AND       **
C               **  UNCENSORED DATA.                      **
C               ********************************************
C
      IF(IPPCDP.GT.0 .AND. ICENSO.EQ.'OFF' .AND. ILEVEL.EQ.'OFF')THEN
        NPERC=MAX(20,IPPCDP)
        NPERC=MIN(NPERC,N1)
        ASTRT=0.0
        ASTOP=100.0
        AINC=(ASTOP - ASTRT)/REAL(NPERC+1)
        CALL SORT(Y1,N1,Y1)
        AN=REAL(N1)
        DO100I=1,NPERC
          P100=(ASTRT + REAL(I)*AINC)/100.0
          ANI=P100*(AN+1.0)
          NI=INT(ANI)
          A2NI=REAL(NI)
          REM=ANI-A2NI
          NIP1=NI+1
          IF(NI.LE.1)NI=1
          IF(NI.GE.N1)NI=N1
          IF(NIP1.LE.1)NIP1=1
          IF(NIP1.GE.N1)NIP1=N1
          XPERC=(1.0-REM)*Y1(NI)+REM*Y1(NIP1)
          XTEMP1(I)=XPERC
  100   CONTINUE
        N1=NPERC
        DO110I=1,N1
          Y1(I)=XTEMP1(I)
  110   CONTINUE
C
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC2')THEN
          WRITE(ICOUT,113)IPPCDP,NPERC,N1
  113     FORMAT('      IPPCDP, NPER, N1 = ',3I8)
          CALL DPWRST('XXX','BUG ')
          DO117I=1,N1
            WRITE(ICOUT,118)I,Y1(I)
  118       FORMAT('      I, Y1(I) = ',I8,G15.7)
            CALL DPWRST('XXX','BUG ')
  117     CONTINUE
        ENDIF
      ENDIF
C
C               *******************************************************
C               **  STEP 2--                                         **
C               **  DETERMINE MIN AND MAX OF DATA, CHECK CENSORING   **
C               **  VARIABLES, OPEN DPST1F.DAT AND DPST2F.DAT FILES. **
C               *******************************************************
C
      IF(ICENSO.EQ.'ON')THEN
        CALL DISTIN(XCENS,N1,IWRITE,XTEMP1,NDIST,IBUGG3,IERROR)
        IF(NDIST.EQ.1)THEN
          DO201I=1,N1
            XCENS(I)=1.0
  201     CONTINUE
        ELSEIF(NDIST.EQ.2)THEN
          IF(XTEMP1(1).EQ.1.0 .OR. XTEMP1(2).EQ.1.0)THEN
            DO203I=1,N1
              IF(XCENS(I).NE.1.0)XCENS(I)=0.0
  203       CONTINUE
          ELSE
            ATEMP1=MIN(XTEMP1(1),XTEMP1(2))
            ATEMP2=MAX(XTEMP1(1),XTEMP1(2))
            DO208I=1,N1
              IF(XCENS(I).EQ.ATEMP1)XCENS(I)=1.0
              IF(XCENS(I).EQ.ATEMP2)XCENS(I)=0.0
  208       CONTINUE
          ENDIF
        ELSE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,46)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,215)
  215     FORMAT('      FOR CENSORED DATA, THE CENSORING VARIABLE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,216)
  216     FORMAT('      SHOULD CONTAIN AT MOST TWO DISTINCT VALUES.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,217)NDIST
  217     FORMAT('      ',I8,' DISTINCT VALUES FOUND.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        CALL SORTC(Y1,XCENS,N1,XTEMP1,XCENS)
        IF(ILEVEL.EQ.'YES')THEN
          CALL SORTC(Y1,XLEVEL,N1,XTEMP1,XLEVEL)
        ENDIF
        DO220I=1,N1
          Y1(I)=XTEMP1(I)
  220   CONTINUE
        XMIN=Y1(1)
        XMAX=Y1(N1)
      ELSE
        IF(ILEVEL.EQ.'YES')THEN
          CALL SORTC(Y1,XLEVEL,N1,XTEMP1,XLEVEL)
          DO222I=1,N1
            Y1(I)=XTEMP1(I)
  222     CONTINUE
        ELSE
          CALL SORT(Y1,N1,Y1)
        ENDIF
        XMIN=Y1(1)
        XMAX=Y1(N1)
      ENDIF
C
      IF(MOD(N1,2).EQ.1)THEN
        XMED=Y1((N1/2)+1)
      ELSE
        XMED=(Y1(N1/2)+Y1((N1/2)+1))/2.0
      ENDIF
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPC2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,221)XMIN,XMAX,XMED
  221   FORMAT('XMIN,XMAX,XMED = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
        DO223I=1,N1
          WRITE(ICOUT,224)I,Y1(I),XCENS(I),XLEVEL(I)
  224     FORMAT('I,Y1(I),XCENS(I),XLEVEL(I)=',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
  223   CONTINUE
      ENDIF
C
      IF(IFLAGF.EQ.'ON')THEN
        IOP='OPEN'
        IFLAG1=0
        IFLAG2=1
        IFLAG3=1
        IFLAG4=0
        IFLAG5=0
        CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGG3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
C               *******************************************************
C               **  STEP 3--                                         **
C               **  BRANCH TO THE APPROPRIATE DISTRIBUTIONAL FAMILY  **
C               **  AND DETERMINE THE SET OF PARAMETER VALUES        **
C               **  TO BE USED FOR THE PROBABILITY PLOTS             **
C               *******************************************************
C
      CALL DPPPC7(ICASPL,ICASP2,IPPCAP,
     1            SHAP11,SHAP12,SHAP21,SHAP22,
     1            SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1            XMIN,XMAX,A,B,
     1            DISPAR,DISPA2,NUMDIS,NUMSHA,
     1            IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1            ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,
     1            ICONDF,IGOMDF,IKATDF,IGIGDF,IGEODF,
     1            IBUGG3,ISUBRO,IERROR)
C
C               **************************************
C               **  STEP 4--                        **
C               **  DETERMINE PLOT COORDINATES      **
C               **************************************
C
C
C     FOR TRIANGULAR DISTRIBUTION, ADJUST LIMITS BASED ON
C     MIN/MAX OF DATA IF NEEDED.
C
      IF(ICASPL.EQ.'TRIA' .AND. ICASP2.NE.'PPCC')THEN
        IF(DISPAR(1).LT.XMIN .OR. DISPAR(NUMDIS).GT.XMAX)THEN
          NUMDIS=50
          IF(NHOR1.GT.0)NUMDIS=NHOR1
          AINC=(XMAX-XMIN)/REAL(NUMDIS+1)
          ANUMDI=NUMDIS
          A=XMIN
          B=XMAX
          SHAPE1=XMIN + AINC
          SHAPE2=XMAX - AINC
          DO411IDIS=1,NUMDIS
            AIDIS=IDIS
            DISPAR(IDIS)=SHAP11 +
     1                   ((AIDIS-1.0)/(ANUMDI-1.0))*(SHAP12-SHAP11)
  411     CONTINUE
        ENDIF
      ENDIF
C
      IDIR='MAXI'
      IF(ICASPL.EQ.'KS  ')IDIR='MINI'
      IF(ICASPL.EQ.'AD  ')IDIR='MINI'
      IF(ICASPL.EQ.'CHSQ')IDIR='MINI'
      IF(ICASPL.EQ.'AIC ')IDIR='AMIN'
      SHA1MX=CPUMIN
      SHA1MX=CPUMIN
      IF(IDIR.EQ.'MAXI')THEN
        PPCCMX=CPUMIN
      ELSE
        PPCCMX=CPUMAX
      ENDIF
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPC2')THEN
        WRITE(ICOUT,420)
  420   FORMAT('****** AFTER CALL DPPPC7')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,421)SHAP11,SHAP12,SHAP21,SHAP22
  421   FORMAT('SHAP11,SHAP12,SHAP21,SHAP22 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,422)A,B,YLOWLM,YUPPLM,NUMDIS
  422   FORMAT('A,B,YLOWLM,YUPPLM,NUMDIS = ',4G15.7,I8)
        CALL DPWRST('XXX','BUG ')
        DO425I=1,NUMDIS
          WRITE(ICOUT,427)I,DISPAR(I),DISPA2(I)
  427     FORMAT('I,DISPAR(I),DISPA2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
  425   CONTINUE
      ENDIF
C
C     NOTE: FOR PPCC PLOT, WE NEED TO GENERATE AN UNDERLYING
C           PROBABILITY PLOT TO ESTIMATE PPCC VALUE.
C
C           FOR THE OTHER GOODNESS OF FIT MEASURES, WE GENERATE THE
C           PROBABILITY PLOT TO ESTIMATE LOCATION/SCALE.  IF USER HAS
C           DEFINED "KSLOC" AND "KSSCAL", THEN WE SKIP THIS STEP.
C           WE ALSO SKIP FOR DISCRETE DISTRIBUTIONS SINCE WE DO
C           NOT DEFINE LOCATION/SCALE FOR THESE.
C
      IF(ICASPL.EQ.'PPCC')THEN
        IPPFLG=1
      ELSE
        IPPFLG=0
        IF(KSLOC.EQ.CPUMIN .OR. KSSCAL.EQ.CPUMIN)IPPFLG=1
CCCCC   IF(IFLAG.EQ.1)IPPFLG=0
      ENDIF
C
      IFLAG2=0
      IF(NUMSHA.EQ.2)THEN
        CALL DISTIN(DISPAR,NUMDIS,IWRITE,XTEMP1,N1SHAP,IBUGG3,IERROR)
        CALL DISTIN(DISPA2,NUMDIS,IWRITE,XTEMP1,N2SHAP,IBUGG3,IERROR)
        IF(N1SHAP.EQ.1)IFLAG2=2
        IF(N2SHAP.EQ.1)IFLAG2=1
      ELSE
        N1SHAP=-99
        N2SHAP=-99
      ENDIF
C
      IF(NCURVE.EQ.1)THEN
        ICNTPT=0
      ELSE
        ICNTPT=N2
      ENDIF
      AHOLD=CPUMIN
      ATAG=0.0
C
      DO1105IDIS=1,NUMDIS
C
        ICNT=0
        SHAPE1=DISPAR(IDIS)
        IF(NUMSHA.GT.1)THEN
          SHAPE2=DISPA2(IDIS)
        ELSE
          IF(SHAPE2.EQ.CPUMIN)SHAPE2=-999999.0
        ENDIF
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPC2')THEN
          WRITE(ICOUT,1107)IDIS,N1,SHAPE1,SHAPE2
 1107     FORMAT('IDIS,N1,SHAPE1,SHAPE2 = ',2I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        CALL DPPPC8(ICASPL,ICASP2,
     1              SHAP11,SHAP12,SHAP21,SHAP22,
     1              SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1              YLOWLM,YUPPLM,A,B,MINMAX,
     1              IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1              ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1              IGETDF,ICONDF,IGOMDF,IKATDF,
     1              IGIGDF,IGEODF,
     1              AMIN,AMAX,
     1              IBUGG3,ISUBRO,IERROR)
C
C       GENERATE UNDERLYING PROBABILITY PLOT:
C
C       1) FOR PPCC METHOD, THIS IS USED TO OBTAIN PPCC VALUE
C          (ONLY INTERESTED IN LOCATION/SCALE FOR MAXIMUM PPCC VALUE)
C
C       2) FOR NON-PPCC METHOD, THIS IS USED TO OBTAIN THE
C          LOCATION/SCALE ESTIMATES (AND WE DON'T CARE ABOUT THE
C          PPCC VALUE)
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPC2')THEN
          WRITE(ICOUT,520)
  520     FORMAT('****** BEFORE CALL DPPP2')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,521)IPPFLG,ICASP2,AMIN,AMAX,N1
  521     FORMAT('IPPFLG,ICASP2,AMIN,AMAX,N1 = ',I5,2X,A4,2X,2G15.7,I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,522)SHAPE1,SHAPE2
  522     FORMAT('SHAPE1,SHAPE2 = ',2G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(IPPFLG.EQ.1)THEN
          NCURVT=1
          NHIGH=0
          N2TEMP=0
          PPLOC=0.0
          PPSCAL=1.0
          CALL DPPP2(Y1,XCENS,XLEVEL,N1,ICASP2,NHIGH,
     1               XTEMP1,XTEMP2,XTEMP3,
     1               YLOWLM,YUPPLM,A,B,MINMAX,
     1               SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1               SHAPE5,SHAPE6,SHAPE7,
     1               IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1               ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1               IGETDF,ICONDF,IGOMDF,IKATDF,
     1               IGIGDF,IGEODF,
     1               IPPLDP,MAXNXT,ICENSO,IMETHD,ILEVEL,
     1               PPLOC,PPSCAL,
     1               PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1               CCALBE,PPA0BW,PPA1BW,
     1               WEIGHH,WEIGHV,
     1               Y2TEMP,X2TEMP,D2TEMP,N2TEMP,NPLOTV,NCURVT,
     1               IBUGG3,ISUBRO,IERROR)
C
          CORRV(IDIS)=PPCC
          A0TEMP=PPA0
          A1TEMP=PPA1
          IF(IPPCBW.EQ.'BIWE')THEN
            A0TEMP=PPA0BW
            A1TEMP=PPA1BW
          ENDIF
C
          IF(ICASPL.EQ.'PPCC' .AND. CORRV(IDIS).GT.PPCCMX)THEN
            A0SAVE=PPA0
            A1SAVE=PPA1
            A0BWSV=PPA0BW
            A1BWSV=PPA1BW
            PPCCMX=CORRV(IDIS)
            SHA1MX=DISPAR(IDIS)
            SHA2MX=DISPA2(IDIS)
          ENDIF
C
          IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPC2')THEN
             WRITE(ICOUT,530)
  530        FORMAT('****** AFTER CALL DPPP2')
             CALL DPWRST('XXX','BUG ')
             WRITE(ICOUT,531)N1,N2TEMP
  531        FORMAT('N1,N2TEMP = ',2I8)
             CALL DPWRST('XXX','BUG ')
             WRITE(ICOUT,532)PPA0,PPA1,PPCC,PPA0BW,PPA1BW
  532        FORMAT('PPA0,PPA1,PPCC,PPA0BW,PPA1BW = '5G15.7)
             CALL DPWRST('XXX','BUG ')
             WRITE(ICOUT,533)A0SAVE,A1SAVE,PPCCMX,SHA1MX
  533        FORMAT('A0SAVE,A1SAVE,PPCCMX,SHA1MX = ',4G15.7)
             CALL DPWRST('XXX','BUG ')
          ENDIF
C
        ELSE
          IF(KSLOC.NE.CPUMIN .AND. KSSCAL.NE.CPUMIN)THEN
            A0TEMP=KSLOC
            A1TEMP=KSSCAL
          ELSE
            A0TEMP=0.0
            A1TEMP=1.0
          ENDIF
        ENDIF
C
        IF(ICASPL.NE.'PPCC')THEN
C
          CALL DPPPC6(ICASPL,ICASP2,
     1                SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                A0TEMP,A1TEMP,XMIN,XMAX,AMIN,AMAX,XMED,
     1                IBUGG3,ISUBRO,IERROR)
C
          CALL DPGOF9(Y1,N1,ICASP2,ICASPL,
     1                XTEMP1,XTEMP2,XTEMP3,N3TEMP,
     1                YLOWLM,YUPPLM,A,B,MINMAX,
     1                SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1                SHAPE5,SHAPE6,SHAPE7,
     1                IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,ICONDF,
     1                IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                MAXNXT,
     1                A0TEMP,A1TEMP,
     1                STATVA,DM,
     1                IBUGG3,ISUBRO,IERROR,IERRFL)
C
          IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC2')THEN
            WRITE(ICOUT,1740)STATVA,DM
 1740       FORMAT('AFTER CALL DPGOF9: STATVA,DM = ',2G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          CORRV(IDIS)=STATVA
          XTEMP4(IDIS)=A0TEMP
          XTEMP5(IDIS)=A1TEMP
          IF(IDIR.EQ.'MAXI')THEN
            IF(CORRV(IDIS).LT.PPCCMX)THEN
              A0SAVE=A0TEMP
              A1SAVE=A1TEMP
              PPCCMX=CORRV(IDIS)
              SHA1MX=DISPAR(IDIS)
              SHA2MX=DISPA2(IDIS)
            ENDIF
          ELSE
            IF(CORRV(IDIS).LT.PPCCMX)THEN
              A0SAVE=A0TEMP
              A1SAVE=A1TEMP
              PPCCMX=CORRV(IDIS)
              SHA1MX=DISPAR(IDIS)
              SHA2MX=DISPA2(IDIS)
            ENDIF
          ENDIF
C
        ENDIF
C
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC2')THEN
          WRITE(ICOUT,1830)N1
 1830     FORMAT('AT END OF 1105 LOOP: N1 = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1831)NUMDIS,IDIS,DISPAR(IDIS),DISPA2(IDIS),
     1                     CORRV(IDIS)
 1831     FORMAT('NUMDIS,IDIS,DISPAR(IDIS),DISPA2(IDIS),CORRV(IDIS)=',
     1           2I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1832)A0SAVE,A1SAVE
 1832     FORMAT('A0SAVE,A1SAVE = ',2G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        XTEMP4(IDIS)=A0SAVE
        XTEMP5(IDIS)=A1SAVE
C
 1105 CONTINUE
C
C     NOW THAT WE HAVE LOOPED OVER ALL VALUES OF THE SHAPE
C     PARAMETER(S), DO THE FOLLOWING:
C
C       1) WRITE RELEVANT INFO TO DPST1F.DAT
C
C       2) GENERATE THE PLOT POINTS (Y2, X2, D2).  NEED TO ACCOUNT
C          FOR REPLICATION CASE.  ALSO, NEED TO DISTINGUISH BETWEEN
C          THE ONE SHAPE PARAMETER AND THE TWO SHAPE PARAMETER
C          CASE.  NOTE THAT DISTRIBUTIONS WITH TWO SHAPE PARAMETERS
C          MAY ONLY HAVE A SINGLE VALUE FOR ONE OF THE SHAPE PARAMETERS.
C          THESE CASES NEED TO BE PLOTTED AS A SINGLE SHAPE PARAMETER
C          CASE.
C
C          ALSO, THE TWO SHAPE PARAMETER CASE MAY BE PLOTTED AS A
C          3D PLOT OR AS A 2D PLOT WHERE EACH VALUE OF THE SECOND
C          SHAPE PARAMETER IS DRAWN AS A SEPARATE TRACE ON THE
C          2D PLOT.
C
      CALL DPPPC9(ICASPL,ICASP2,IOUNI2,ICNTPT,IFLAG2,
     1            DISPAR,DISPA2,DISPA3,NUMDIS,CORRV,NUMSHA,
     1            XTEMP4,XTEMP5,X2TEMP,
     1            IPPCFO,IPPCAO,IFLAGF,NCURVE,
     1            Y2,X2,X3D2,D2,N2,NPLOTV,
     1            IBUGG3,ISUBRO,IERROR)
C
      IF(NCURVE.EQ.1 .AND. NUMSHA.EQ.1)THEN
        IDATSW='RAW'
        CALL DPWCPP(XTEMP1,N1,ICASP2,IDATSW,
     1              CORRV,DISPAR,NUMDIS,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
      ENDIF
C
      IF(IFLAGF.EQ.'ON')THEN
        IOP='CLOS'
        CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGG3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(ICASPL.EQ.'GIGA')THEN
        IGIGDF=IGIGSV
      ENDIF
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPPC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)N2,A0SAVE,A1SAVE,IERROR
 9012   FORMAT('N2,A0SAVE,A1SAVE,IERROR = ',I8,2X,2G15.7,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)PPCCMX,SHA1MX,SHA2MX
 9015   FORMAT('PPCCMX,SHA1MX,SHA2MX=',3G15.7)
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,N2
          WRITE(ICOUT,9021)I,Y2(I),X2(I),D2(I)
 9021     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2E15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPPC3(Y1,XCENS,XLOW,XHIGH,N1,MAXNXT,
     1                  ICASPL,ICASP2,IDATSW,IDIST,
     1                  SHAP11,SHAP12,SHAP21,SHAP22,
     1                  SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                  YLOWLM,YUPPLM,A,B,MINMAX,
     1                  DISPAR,DISPA2,DISPA3,CORRV,NUMSHA,
     1                  XTEMP1,XTEMP2,XTEMP3,XTEMP4,XTEMP5,
     1                  X2TEMP,Y2TEMP,D2TEMP,WEIGHH,WEIGHV,IPPCBW,
     1                  IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                  ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                  IGETDF,ICONDF,IGOMDF,IKATDF,
     1                  IGIGDF,IGEODF,
     1                  IPPCCC,IPPCFO,IPPLDP,KSLOC,KSSCAL,
     1                  IPPCDP,IPPCAP,IPPCAO,IMETHD,ICENSO,
     1                  IFLAGF,NCURVE,
     1                  PCHSLM,MINSIZ,IHSTCW,CLWIDT,CLLIMI,
     1                  Y2,X2,X3D2,D2,N2,NPLOTV,
     1                  PPCCMX,SHA1MX,SHA2MX,A0SAVE,A1SAVE,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS THAT WILL DEFINE
C              THE PROBABILITY PLOT CORRELATION COEFFICIENT TRACE FOR
C              SOME DISTRIBUTIONAL FAMILY.
C
C              THIS ROUTINE HANDLES THE GROUPED CASE.  NOTE THAT
C              CURRENTLY ONLY THE PPCC AND THE CHI-SQUARE METHODS
C              SUPPORT GROUPED DATA.  HOWEVER, IT IS POSSIBLE THAT
C              THE K-S, ANDERSON-DARLING, AND AIC WILL ADD IT AT
C              A LATER TIME.
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2007/8
C     ORIGINAL VERSION--AUGUST    2007. EXTRACTED FROM DPPPC2
C     UPDATED         --NOVEMBER  2009. RE-WRITTEN IN A SIMILAR
C                                       FASHION AS DPPPC2 TO BE
C                                       MORE MODULARIZED AND TO REDUCE
C                                       CODE DUPLICATION AND TO MAKE
C                                       EASIER TO CALL BY ROUTINES
C                                       OTHER THAN DPPPCC.
C     UPDATED         --JULY      2019. CALL LIST TO DPPP3
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASP2
      CHARACTER*4 IPPCCC
      CHARACTER*4 IPPCFO
      CHARACTER*4 IPPCAO
      CHARACTER*4 IADEDF
      CHARACTER*4 IGEPDF
      CHARACTER*4 IMAKDF
      CHARACTER*4 IBEIDF
      CHARACTER*4 ILGADF
      CHARACTER*4 ISKNDF
      CHARACTER*4 IGLDDF
      CHARACTER*4 IBGEDF
      CHARACTER*4 IGETDF
      CHARACTER*4 ICONDF
      CHARACTER*4 IGOMDF
      CHARACTER*4 IKATDF
      CHARACTER*4 IGIGDF
      CHARACTER*4 IGEODF
      CHARACTER*4 IGIGSV
      CHARACTER*4 IMETHD
      CHARACTER*4 ICENSO
      CHARACTER*4 IFLAGF
      CHARACTER*4 IWRITE
      CHARACTER*4 IDATSW
      CHARACTER*4 IHSTCW
      CHARACTER*4 IHSTOU
      CHARACTER*4 IDIR
      CHARACTER*4 IPPCBW
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*60 IDIST
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IDISFL
      CHARACTER*4 IFOUND
      CHARACTER*4 IOP
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOF2.INC'
C
C---------------------------------------------------------------------
C
      INTEGER IPPCDP
      INTEGER IPPCAP(2)
C
      DIMENSION Y1(*)
      DIMENSION XCENS(*)
      DIMENSION XLOW(*)
      DIMENSION XHIGH(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION X3D2(*)
      DIMENSION D2(*)
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION XTEMP3(*)
      DIMENSION XTEMP4(*)
      DIMENSION XTEMP5(*)
      DIMENSION X2TEMP(*)
      DIMENSION Y2TEMP(*)
      DIMENSION D2TEMP(*)
      DIMENSION WEIGHH(*)
      DIMENSION WEIGHV(*)
C
      DIMENSION DISPAR(*)
      DIMENSION DISPA2(*)
      DIMENSION DISPA3(*)
      DIMENSION CORRV(*)
C
      DIMENSION CLWIDT(*)
      DIMENSION CLLIMI(*)
C
      REAL KSLOC
      REAL KSSCAL
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
CCCCC DATA PI / 3.1415926535 /
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPP'
      ISUBN2='C3  '
      IWRITE='OFF'
      IERROR='NO'
      IGIGSV=IGIGDF
C
      NHOR1=IPPCAP(1)
      NHOR2=IPPCAP(2)
C
      IF(ICASP2.EQ.'PARE' .OR. ICASP2.EQ.'PAR2')THEN
        IF(KSLOC.EQ.CPUMIN .AND.  KSSCAL.EQ.CPUMIN)THEN
          KSLOC=0.0
          KSSCAL=1.0
        ENDIF
      ENDIF
      AN1=0.0
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,10)
   10   FORMAT('***** AT THE BEGINNING OF DPPPC3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11)IDATSW,IPPCCC
   11   FORMAT('IDATSW,IPPCCC = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,12)ICASPL,ICASP2,N1,NPLOTV,MINSIZ
   12   FORMAT('ICASPL,ICASP2,N1,NPLOTV,MINSIZ = ',2(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,13)SHAP11,SHAP12,SHAP21,SHAP22
   13   FORMAT('SHAP11,SHAP12,SHAP21,SHAP22 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,14)MINMAX,IPPCDP,IPPLDP,KSLOC,KSSCAL
   14   FORMAT('MINMAX,IPPCDP,IPPLDP,KSLOC,KSSCAL = ',3I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
        IF(N1.GT.0)THEN
          DO25I=1,MIN(N1,200)
            WRITE(ICOUT,26)I,Y1(I),XCENS(I),XLOW(I),XHIGH(I)
   26       FORMAT('I,Y1(I),XCENS(I),XLOW(I),XHIGH(I) = ',
     1             I8,5G12.5)
            CALL DPWRST('XXX','BUG ')
   25     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N1.LE.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,46)
   46   FORMAT('***** ERROR IN PPCC PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,47)
   47   FORMAT('      THE NUMBER OF OBSERVATIONS IS LESS THAN OR ',
     1         'EQUAL TO 1.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,48)N1
   48   FORMAT('      THE NUMBER OF OBSERVATIONS = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     CURRENTLY, CENSORING NOT SUPPORTED FOR KS, ANDERSON-DARLING,
C     AIC, CHI-SQUARE, ETC., GOODNESS OF FIT CASES.  SO FOR NOW,
C     TREAT THIS COMBINATION AS AN ERROR.
C
      IF(ICENSO.EQ.'ON' .AND. ICASPL.NE.'PPCC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,46)
        CALL DPWRST('XXX','BUG ')
        IF(ICASPL.EQ.'KS  ')THEN
          WRITE(ICOUT,52)
   52     FORMAT('      CURRENTLY, THE KOLMOGOROV-SMIRNOV GOODNESS OF ',
     1           'FIT STATISTIC')
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICASPL.EQ.'AD  ')THEN
          WRITE(ICOUT,53)
   53     FORMAT('      CURRENTLY, THE ANDERSON-DARLING GOODNESS OF ',
     1           'FIT STATISTIC')
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICASPL.EQ.'CHSQ')THEN
          WRITE(ICOUT,54)
   54     FORMAT('      CURRENTLY, THE CHI-SQUARE GOODNESS OF ',
     1           'FIT STATISTIC')
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICASPL.EQ.'AIC ')THEN
          WRITE(ICOUT,55)
   55     FORMAT('      CURRENTLY, THE AIC GOODNESS OF ',
     1           'FIT STATISTIC')
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,59)
   59   FORMAT('      IS NOT SUPPORTED FOR THE CENSORED CASE.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               *******************************************************
C               **  STEP 3--                                         **
C               **  BRANCH TO THE APPROPRIATE DISTRIBUTIONAL FAMILY  **
C               **  AND DETERMINE THE SET OF PARAMETER VALUES        **
C               **  TO BE USED FOR THE PROBABILITY PLOTS             **
C               *******************************************************
C
      CALL DPPPC7(ICASPL,ICASP2,IPPCAP,
     1            SHAP11,SHAP12,SHAP21,SHAP22,
     1            SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1            XMIN,XMAX,A,B,
     1            DISPAR,DISPA2,NUMDIS,NUMSHA,
     1            IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1            ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,
     1            ICONDF,IGOMDF,IKATDF,IGIGDF,IGEODF,
     1            IBUGG3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C     CALL DPGOFB TO CHECK FOR ERRORS IN BINNING.  CHECK FOR
C     ERRORS IN CENSORING VARIABLE IN THIS ROUTINE.
C
      DO69I=1,N1 
C
        IF(ICENSO.EQ.'ON' .AND. XCENS(I).LT.0.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,46)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,66)INT(XCENS(I)-0.01)
   66     FORMAT('      A NEGATIVE NUMBER OF CENSORED VALUES (',I8,
     1           ') WAS ENCOUTERED FOR ROW ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSE
          IVAL=INT(XCENS(I)+0.5)
          XCENS(I)=REAL(IVAL)
        ENDIF
   69 CONTINUE
C
      IHSTOU='ON'
      CALL DPGOFB(Y1,XLOW,XHIGH,XCENS,N1,
     1            ICASP2,ICASPL,IDATSW,
     1            XTEMP1,XTEMP2,XTEMP3,
     1            YLOWLM,YUPPLM,A,B,MINMAX,
     1            CLWIDT,CLLIMI,IHSTCW,IHSTOU,MINSIZ,
     1            SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1            SHAPE5,SHAPE6,SHAPE7,
     1            IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1            ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1            IGETDF,ICONDF,IGOMDF,IKATDF,
     1            IGIGDF,IGEODF,
     1            MAXNXT,NUMSHA,KSLOC,KSSCAL,
     1            NCELLS,NTOT,IDISFL,ILOWLM,
     1            IBUGG3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IF(N1.LE.1)THEN
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IDATSW.EQ.'FREQ')THEN
        XDEL=XLOW(2) - XLOW(1)
        XMIN=XLOW(1) - XDEL
        XMAX=XLOW(N1) + XDEL
      ELSEIF(IDATSW.EQ.'FRE2')THEN
        XMIN=XLOW(1)
        XMAX=XHIGH(N1)
      ENDIF
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPC3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,221)XMIN,XMAX
  221   FORMAT('AFTER DPGOFB: XMIN,XMAX = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,222)N1,IDATSW
  222   FORMAT('N1,IDATSW = ',I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IFLAGF.EQ.'ON')THEN
        IOP='OPEN'
        IFLAG1=0
        IFLAG2=1
        IFLAG3=1
        IFLAG4=0
        IFLAG5=0
        CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGG3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
      ENDIF
C
C               **************************************
C               **  STEP 4--                        **
C               **  DETERMINE PLOT COORDINATES      **
C               **************************************
C
C
C     FOR TRIANGULAR DISTRIBUTION, ADJUST LIMITS BASED ON
C     MIN/MAX OF DATA IF NEEDED.
C
      IF(ICASPL.EQ.'TRIA' .AND. ICASP2.NE.'PPCC')THEN
        IF(DISPAR(1).LT.XMIN .OR. DISPAR(NUMDIS).GT.XMAX)THEN
          NUMDIS=50
          IF(NHOR1.GT.0)NUMDIS=NHOR1
          AINC=(XMAX-XMIN)/REAL(NUMDIS+1)
          ANUMDI=NUMDIS
          A=XMIN
          B=XMAX
          SHAPE1=XMIN + AINC
          SHAPE2=XMAX - AINC
          DO411IDIS=1,NUMDIS
            AIDIS=IDIS
            DISPAR(IDIS)=SHAP11 +
     1                   ((AIDIS-1.0)/(ANUMDI-1.0))*(SHAP12-SHAP11)
  411     CONTINUE
        ENDIF
      ENDIF
C
      IDIR='MAXI'
      IF(ICASPL.EQ.'KS  ')IDIR='MINI'
      IF(ICASPL.EQ.'AD  ')IDIR='MINI'
      IF(ICASPL.EQ.'CHSQ')IDIR='MINI'
      IF(ICASPL.EQ.'AIC ')IDIR='AMIN'
      SHA1MX=CPUMIN
      SHA1MX=CPUMIN
      IF(IDIR.EQ.'MAXI')THEN
        PPCCMX=CPUMIN
      ELSE
        PPCCMX=CPUMAX
      ENDIF
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPC3')THEN
        WRITE(ICOUT,420)
  420   FORMAT('****** AFTER CALL DPPPC7')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,421)SHAP11,SHAP12,SHAP21,SHAP22
  421   FORMAT('SHAP11,SHAP12,SHAP21,SHAP22 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,422)A,B,YLOWLM,YUPPLM,NUMDIS
  422   FORMAT('A,B,YLOWLM,YUPPLM,NUMDIS = ',4G15.7,I8)
        CALL DPWRST('XXX','BUG ')
        DO425I=1,NUMDIS
          WRITE(ICOUT,427)I,DISPAR(I),DISPA2(I)
  427     FORMAT('I,DISPAR(I),DISPA2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
  425   CONTINUE
      ENDIF
C
C     NOTE: FOR PPCC PLOT, WE NEED TO GENERATE AN UNDERLYING
C           PROBABILITY PLOT TO ESTIMATE PPCC VALUE.
C
C           FOR THE OTHER GOODNESS OF FIT MEASURES, WE GENERATE THE
C           PROBABILITY PLOT TO ESTIMATE LOCATION/SCALE.  IF USER HAS
C           DEFINED "KSLOC" AND "KSSCAL", THEN WE SKIP THIS STEP.
C           WE ALSO SKIP FOR DISCRETE DISTRIBUTIONS SINCE WE DO
C           NOT DEFINE LOCATION/SCALE FOR THESE.
C
      IF(ICASPL.EQ.'PPCC')THEN
        IPPFLG=1
      ELSE
        IPPFLG=0
        IF(KSLOC.EQ.CPUMIN .OR. KSSCAL.EQ.CPUMIN)IPPFLG=1
        IF(IDISFL.EQ.'DISC')IPPFLG=0
      ENDIF
C
      IFLAG2=0
      IF(NUMSHA.EQ.2)THEN
        CALL DISTIN(DISPAR,NUMDIS,IWRITE,XTEMP1,N1SHAP,IBUGG3,IERROR)
        CALL DISTIN(DISPA2,NUMDIS,IWRITE,XTEMP1,N2SHAP,IBUGG3,IERROR)
        IF(N1SHAP.EQ.1)IFLAG2=2
        IF(N2SHAP.EQ.1)IFLAG2=1
      ELSE
        N1SHAP=-99
        N2SHAP=-99
      ENDIF
C
      IF(NCURVE.EQ.1)THEN
        ICNTPT=0
      ELSE
        ICNTPT=N2
      ENDIF
      AHOLD=CPUMIN
      ATAG=0.0
C
      DO1105IDIS=1,NUMDIS
C
        ICNT=0
        SHAPE1=DISPAR(IDIS)
        IF(NUMSHA.GT.1)THEN
          SHAPE2=DISPA2(IDIS)
        ELSE
          SHAPE2=-999999.0
        ENDIF
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPC3')THEN
          WRITE(ICOUT,1107)IDIS,N1,IPPFLG,SHAPE1,SHAPE2
 1107     FORMAT('IDIS,N1,IPPFLG,SHAPE1,SHAPE2,IPPFL = ',3I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        CALL DPPPC8(ICASPL,ICASP2,
     1              SHAP11,SHAP12,SHAP21,SHAP22,
     1              SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1              YLOWLM,YUPPLM,A,B,MINMAX,
     1              IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1              ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1              IGETDF,ICONDF,IGOMDF,IKATDF,
     1              IGIGDF,IGEODF,
     1              AMIN,AMAX,
     1              IBUGG3,ISUBRO,IERROR)
C
C       GENERATE UNDERLYING PROBABILITY PLOT:
C
C       1) FOR PPCC METHOD, THIS IS USED TO OBTAIN PPCC VALUE
C          (ONLY INTERESTED IN LOCATION/SCALE FOR MAXIMUM PPCC VALUE)
C
C       2) FOR NON-PPCC METHOD, THIS IS USED TO OBTAIN THE
C          LOCATION/SCALE ESTIMATES (AND WE DON'T CARE ABOUT THE
C          PPCC VALUE)
C
        IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPC3')THEN
          WRITE(ICOUT,520)
  520     FORMAT('****** BEFORE CALL DPPP3/DPGOFA')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,521)IPPFLG,AMIN,AMAX,N1
  521     FORMAT('IPPFLG,AMIN,AMAX,N1 = ',I5,2G15.7,I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,522)SHAPE1,SHAPE2
  522     FORMAT('SHAPE1,SHAPE2 = ',2G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(IPPFLG.EQ.1)THEN
          NCURVT=1
          N2TEMP=0
          PPLOC=0.0
          PPSCAL=1.0
          CALL DPPP3(Y1,XLOW,XHIGH,N1,ICASP2,IDATSW,
     1               XCENS,XTEMP1,
     1               XTEMP2,XTEMP3,XTEMP4,
     1               YLOWLM,YUPPLM,A,B,MINMAX,
     1               SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1               SHAPE5,SHAPE6,SHAPE7,
     1               IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1               ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1               IGETDF,ICONDF,IGOMDF,IKATDF,
     1               IGIGDF,IGEODF,
     1               IPPLDP,MAXNXT,ICENSO,IMETHD,
     1               PPLOC,PPSCAL,
     1               PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1               CCALBE,PPA0BW,PPA1BW,
     1               WEIGHH,WEIGHV,
     1               Y2TEMP,X2TEMP,D2TEMP,N2TEMP,NPLOTV,NCURVT,
     1               IBUGG3,ISUBRO,IERROR)
C
          IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPC3')THEN
             WRITE(ICOUT,530)
  530        FORMAT('****** AFTER CALL DPPP3')
             CALL DPWRST('XXX','BUG ')
             WRITE(ICOUT,531)N1,N2TEMP
  531        FORMAT('N1,N2TEMP = ',2I8)
             CALL DPWRST('XXX','BUG ')
             WRITE(ICOUT,532)PPA0,PPA1,PPCC,PPA0BW,PPA1BW
  532        FORMAT('PPA0,PPA1,PPCC,PPA0BW,PPA1BW = '5G15.7)
             CALL DPWRST('XXX','BUG ')
          ENDIF
C
          CORRV(IDIS)=PPCC
          A0TEMP=PPA0
          A1TEMP=PPA1
          IF(IPPCBW.EQ.'BIWE')THEN
            A0TEMP=PPA0BW
            A1TEMP=PPA1BW
          ENDIF
C
          IF(ICASPL.EQ.'PPCC' .AND. CORRV(IDIS).GT.PPCCMX)THEN
            A0SAVE=PPA0
            A1SAVE=PPA1
            A0BWSV=PPA0BW
            A1BWSV=PPA1BW
            PPCCMX=CORRV(IDIS)
            SHA1MX=DISPAR(IDIS)
            SHA2MX=DISPA2(IDIS)
          ENDIF
        ELSE
          IF(KSLOC.NE.CPUMIN .AND. KSSCAL.NE.CPUMIN)THEN
            A0TEMP=KSLOC
            A1TEMP=KSSCAL
          ELSE
            A0TEMP=0.0
            A1TEMP=1.0
          ENDIF
        ENDIF
C
        IF(ICASPL.NE.'PPCC')THEN
C
          CALL DPPPC6(ICASPL,ICASP2,
     1                SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                A0TEMP,A1TEMP,XMIN,XMAX,AMIN,AMAX,XMED,
     1                IBUGG3,ISUBRO,IERROR)
C
          CALL DPGOFA(Y1,XLOW,XHIGH,N1,ICASP2,ICASPL,IDATSW,
     1                XCENS,XTEMP1,XTEMP2,XTEMP3,XTEMP4,
     1                WEIGHH,WEIGHV,Y2,X2,D2,N2,
     1                YLOWLM,YUPPLM,A,B,MINMAX,
     1                PCHSLM,MINSIZ,
     1                SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1                SHAPE5,SHAPE6,SHAPE7,
     1                IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                IGETDF,ICONDF,IGOMDF,IKATDF,
     1                IGIGDF,IGEODF,
     1                MAXNXT,NUMSHA,A0TEMP,A1TEMP,
     1                PPA0,PPA1,PPCC,SDPPA0,SDPPA1,XRESSD,XRESDF,
     1                CCALBE,PPA0BW,PPA1BW,
     1                STATVA,STAT,STATCD,PVAL,IDF,
     1                NCELLS,NTOT,IDISFL,ILOWLM,IMETHD,IDIST,
     1                IBUGG3,ISUBRO,IERROR)
          IF(ICASPL.EQ.'CHSQ')STATVA=STAT
          IF(IERROR.EQ.'YES')GOTO9000
C
          IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC3')THEN
            WRITE(ICOUT,1740)STATVA
 1740       FORMAT('AFTER CALL DPGOFA: STATVA = ',2G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          CORRV(IDIS)=STATVA
          XTEMP4(IDIS)=A0TEMP
          XTEMP5(IDIS)=A1TEMP
          IF(IDIR.EQ.'MAXI')THEN
            IF(CORRV(IDIS).LT.PPCCMX)THEN
              A0SAVE=A0TEMP
              A1SAVE=A1TEMP
              PPCCMX=CORRV(IDIS)
              SHA1MX=DISPAR(IDIS)
              SHA2MX=DISPA2(IDIS)
            ENDIF
          ELSE
            IF(CORRV(IDIS).LT.PPCCMX)THEN
              A0SAVE=A0TEMP
              A1SAVE=A1TEMP
              PPCCMX=CORRV(IDIS)
              SHA1MX=DISPAR(IDIS)
              SHA2MX=DISPA2(IDIS)
            ENDIF
          ENDIF
C
        ENDIF
C
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC3')THEN
          WRITE(ICOUT,1830)N1
 1830     FORMAT('AT END OF 1105 LOOP: N1 = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1831)NUMDIS,IDIS,DISPAR(IDIS),DISPA2(IDIS),
     1                     CORRV(IDIS)
 1831     FORMAT('NUMDIS,IDIS,DISPAR(IDIS),DISPA2(IDIS),CORRV(IDIS)=',
     1           2I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1832)A0TEMP,A1TEMP
 1832     FORMAT('A0TEMP,A1TEMP = ',2G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        XTEMP4(IDIS)=A0TEMP
        XTEMP5(IDIS)=A1TEMP
C
 1105 CONTINUE
C
C     NOW THAT WE HAVE LOOPED OVER ALL VALUES OF THE SHAPE
C     PARAMETER(S), DO THE FOLLOWING:
C
C       1) WRITE RELEVANT INFO TO DPST1F.DAT
C
C       2) GENERATE THE PLOT POINTS (Y2, X2, D2).  NEED TO ACCOUNT
C          FOR REPLICATION CASE.  ALSO, NEED TO DISTINGUISH BETWEEN
C          THE ONE SHAPE PARAMETER AND THE TWO SHAPE PARAMETER
C          CASE.  NOTE THAT DISTRIBUTIONS WITH TWO SHAPE PARAMETERS
C          MAY ONLY HAVE A SINGLE VALUE FOR ONE OF THE SHAPE PARAMETERS.
C          THESE CASES NEED TO BE PLOTTED AS A SINGLE SHAPE PARAMETER
C          CASE.
C
C          ALSO, THE TWO SHAPE PARAMETER CASE MAY BE PLOTTED AS A
C          3D PLOT OR AS A 2D PLOT WHERE EACH VALUE OF THE SECOND
C          SHAPE PARAMETER IS DRAWN AS A SEPARATE TRACE ON THE
C          2D PLOT.
C
      CALL DPPPC9(ICASPL,ICASP2,IOUNI2,ICNTPT,IFLAG2,
     1            DISPAR,DISPA2,DISPA3,NUMDIS,CORRV,NUMSHA,
     1            XTEMP4,XTEMP5,X2TEMP,
     1            IPPCFO,IPPCAO,IFLAGF,NCURVE,
     1            Y2,X2,X3D2,D2,N2,NPLOTV,
     1            IBUGG3,ISUBRO,IERROR)
C
      IF(NCURVE.EQ.1 .AND. NUMSHA.EQ.1)THEN
        IDATSW='RAW'
        CALL DPWCPP(XTEMP1,N1,ICASP2,IDATSW,
     1              CORRV,DISPAR,NUMDIS,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
      ENDIF
C
      IF(IFLAGF.EQ.'ON')THEN
        WRITE(IOUNI3,'(I8,5E15.7)')NCURVE,PPCCMX,SHA1MX,SHA2MX,
     1                             A0SAVE,A1SAVE
C
        IOP='CLOS'
        CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1              IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1              IBUGG3,ISUBRO,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
      ENDIF
C
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(ICASPL.EQ.'GIGA')THEN
        IGIGDF=IGIGSV
      ENDIF
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPPC3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)N2,IERROR
 9012   FORMAT('N2,IERROR = ',I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,N2
          WRITE(ICOUT,9021)I,Y2(I),X2(I),D2(I)
 9021     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2E15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPPC4(ICASPL,PPCC,SHAPE1,SHAPE2,A0SAVE,A1SAVE,NUMSHA,
     1                 IFLAGU,IFRST,ILAST,
     1                 IBUGG2,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--UTILITY ROUTINE USED BY DPPPCC.  UPDATE THE DATAPLOT
C              PARAMETER TABLE OR WRITE VALUES TO EXTERNAL FILE.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/11
C     ORIGINAL VERSION--NOVEMBER  2009. EXTRACTED AS SEPARATE ROUTINE
C                                       FROM DPPPCC
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IFLAGU
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IOP
      CHARACTER*15 ISTAT
C
      SAVE IOUNI1
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOF2.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C               ***************************************
C               **  STEP 1--                         **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PPC4')THEN
        ISTEPN='1'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPPC4--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IFLAGU,IFRST,ILAST
   53   FORMAT('ICASPL,IFLAGU,IFRST,ILAST = ',A4,2X,A4,2X,A8,2X,A8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,65)PPCC,SHAPE1,SHAPE2,A0SAVE,A1SAVE,NUMSHA
   65   FORMAT('PPCC,SHAPE1,SHAPE2,A0SAVE,A1SAVE,NUMSHA = ',5G15.7,I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ISUBN0='PPC4'
C
      IF(IFLAGU.EQ.'FILE')THEN
        IF(IFRST)THEN
          IOP='OPEN'
          IFLAG1=1
          IFLAG2=0
          IFLAG3=0
          IFLAG4=0
          IFLAG5=0
          CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1                IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1                IBUGG2,ISUBRO,IERROR)
C
          IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PPC4')THEN
            ISTEPN='2A'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,201)
  201       FORMAT('AFTER CALL DPOPFI, IERRF1 = ',A4)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,203)IERROR,IOUNI1
  203       FORMAT('IERROR,IOUNI1 = ',A4,2X,I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(IERROR.EQ.'YES')GOTO9000
C
          ISTAT='        MAXPPCC'
          IF(ICASPL.EQ.'KS  ')ISTAT='          MINKS'
          IF(ICASPL.EQ.'AD  ')ISTAT='          MINAD'
          IF(NUMSHA.EQ.1)THEN
            WRITE(IOUNI1,297)ISTAT
  297       FORMAT(A15,10X,'SHAPE',7X,'LOCATION',10X,'SCALE')
          ELSE
            WRITE(IOUNI1,299)ISTAT
  299       FORMAT(A15,9X,'SHAPE1',9X,'SHAPE2',7X,'LOCATION',10X,
     1             'SCALE')
          ENDIF
        ENDIF
      ELSEIF(IFLAGU.EQ.'ON')THEN
C
        IH='LOCS'
        IH2='AVE '
        VALUE0=A0SAVE
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IH='SCAL'
        IH2='ESAV'
        VALUE0=A1SAVE
        CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1              IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1              IANS,IWIDTH,IBUGG3,IERROR)
C
        IF(ICASPL.EQ.'PPCC')THEN
          IH='MAXP'
          IH2='PCC '
          VALUE0=PPCC
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGG3,IERROR)
        ELSEIF(ICASPL.EQ.'KS  ')THEN
          IH='MINK'
          IH2='S   '
          VALUE0=PPCC
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGG3,IERROR)
        ELSEIF(ICASPL.EQ.'CHSQ')THEN
          IH='MINC'
          IH2='HISQ'
          VALUE0=PPCC
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGG3,IERROR)
        ELSEIF(ICASPL.EQ.'AD  ')THEN
          IH='MINA'
          IH2='D   '
          VALUE0=PPCC
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGG3,IERROR)
        ENDIF
C
        IF(NUMSHA.EQ.1)THEN
          IH='SHAP'
          IH2='E   '
          VALUE0=SHAPE1
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGG3,IERROR)
        ELSE
          IH='SHAP'
          IH2='E1  '
          VALUE0=SHAPE1
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGG3,IERROR)
C
          IH='SHAP'
          IH2='E2  '
          VALUE0=SHAPE2
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGG3,IERROR)
        ENDIF
C
      ENDIF
C
      IF(IFLAGU.EQ.'FILE')THEN
        IF(NUMSHA.EQ.1)THEN
          WRITE(IOUNI1,1030)PPCC,SHAPE1,A0SAVE,A1SAVE
 1030     FORMAT(4E15.7)
        ELSE
          WRITE(IOUNI1,1031)PPCC,SHAPE1,SHAPE2,A0SAVE,A1SAVE
 1031     FORMAT(5E15.7)
        ENDIF
      ENDIF
C
      IF(IFLAGU.EQ.'FILE')THEN
        IF(ILAST)THEN
          IOP='CLOS'
          IFLAG1=1
          IFLAG2=0
          IFLAG3=0
          IFLAG4=0
          IFLAG5=0
          CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1                IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1                IBUGG2,ISUBRO,IERROR)
C
          IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PPC4')THEN
            ISTEPN='3A'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,301)IERROR,IOUNI1
  301       FORMAT('AFTER CALL DPCLFI: IERROR,IOUNI1 = ',A4,2X,I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(IERROR.EQ.'YES')GOTO9000
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PPC4')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END OF DPPPC4--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPPC6(ICASPL,ICASP2,
     1                  SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                  A0TEMP,A1TEMP,XMIN,XMAX,AMIN,AMAX,XMED,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--NON-PPCC BASED GOODNESS OF FIT METHODS ARE NOT
C              INVARIANT TO LOCATION AND SCALE.  IF THESE WERE
C              ESTIMATED FROM PROBABILITY PLOT, THEN MAY NEED
C              TO TWEAK LOCATION AND SCALE SO THAT MINIMUM AND
C              MAXIMUM POINTS ARE IN THE VALID DOMAIN OF THE
C              SPECIFIED DISTRIBUTION.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2010/1
C     ORIGINAL VERSION--JANUARY   2010. EXTRACTED AS SEPARATE ROUTINE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASP2
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC6')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11)
   11   FORMAT('***** AT THE BEGINNING OF DPPPC6--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,12)ICASPL,ICASP2
   12   FORMAT('ICASPL,ICASP2 = ',2(A4,2X))
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,13)A0TEMP,A1TEMP
   13   FORMAT('A0TEMP,A1TEMP = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,14)AMIN,AMAX,XMIN,XMAX
   14   FORMAT('AMIN,AMAX,XMIN,XMAX = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,17)SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5
   17   FORMAT('SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5 = ',5G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     FOR NON-PPCC METHODS, CHECK THAT LOCATION AND SCALE ESTIMATES
C     GENERATED FROM PROBABILITY PLOT RESULT IN THE MINIMUM/MAXIMUM
C     OF THE DATA BEING IN THE VALID DOMAIN OF THE SPECIFIED
C     DISTRIBUTION.  IF NOT, TWEAK THE LOCATION/SCALE ESTIMATES
C     ENOUGH SO THAT THEY ARE.
C
      IF(ICASPL.EQ.'PPCC')GOTO9000
C
      IERROR='NO'
      EPS=0.000001
      ZMIN=A0TEMP
      ZMAX=A0TEMP + A1TEMP
C
C     CASE 1: DISTRIBUTIONS BOUNDED ON (0,1)

C             TOPP AND LEONE, TWO-SIDED POWER, TWO-SIDED SLOPE,
C             TWO-SIDED OGIVE, GENERALIZED TOPP AND LEONE,
C             REFLECTED GENERALIZED TOPP AND LEONE, BETA,
C             KUMARASWAMY DISTRIBUTIONS.
C
      IF(ICASP2.EQ.'TOPL' .OR. ICASP2.EQ.'TSPO' .OR.
     1   ICASP2.EQ.'BETA' .OR. ICASP2.EQ.'KUMA' .OR.
     1   ICASP2.EQ.'TSSL' .OR. ICASP2.EQ.'TSOG' .OR.
     1   ICASP2.EQ.'GTOL' .OR. ICASP2.EQ.'RGTL')THEN
        IF(ZMIN.GT.XMIN .OR. ZMAX.LT. XMAX)THEN
          IF(XMIN.GE.0.0 .AND. XMIN.LE.1.0 .AND.
     1       XMAX.GE.0.0 .AND. XMAX.LE.1.0)THEN
            A0TEMP=0.0
            A1TEMP=1.0
          ELSE
            A0TEMP=XMIN-EPS
            A1TEMP=(XMAX+EPS) - (XMIN-EPS)
          ENDIF
        ENDIF
C
C       CASE 2: TRIANGULAR DISTRIBUTION
C
C               FOR TRIANGULAR, IF MIN AND MAX ARE IN (0,1),
C               USE (0,1), IF THEY ARE IN (-1,1), USE (-1,1).
C               OTHERWISE, USE MIN AND MAX.
C

      ELSEIF(ICASP2.EQ.'TRIA')THEN
        IF(ZMIN.GT.XMIN .OR. ZMAX.LT. XMAX)THEN
          EPS=(XMAX-XMIN)/1000.
          IF(XMIN.GE.0.0 .AND. XMAX.LE.1.0)THEN
            A0TEMP=0.0
            A1TEMP=1.0
          ELSEIF(XMIN.GE.-1.0 .AND. XMAX.LE.1.0)THEN
            A0TEMP=-1.0
            A1TEMP=1.0
          ELSE
            A0TEMP=XMIN - EPS
            A1TEMP=XMAX + EPS
          ENDIF
        ENDIF
C
C       CASE 3: TUKEY-LAMBDA DISTRIBUTION
C
      ELSEIF(ICASP2.EQ.'TULA' .AND. SHAPE1.GT.0.0)THEN
        IF((XMIN-A0TEMP)/A1TEMP.LT.AMIN .OR.
     1     (XMAX-A0TEMP)/A1TEMP.GT.AMAX)THEN
           A0TEMP=XMED
           ATEMP1=SHAPE1*ABS(XMAX-A0TEMP) + 0.1
           ATEMP2=SHAPE2*ABS(XMIN-A0TEMP) + 0.1
           A1TEMP=MAX(ATEMP1,ATEMP2)
        ENDIF
C
C       CASE 4: VON-MISES AND WRAPPED CAUCHY DISTRIBUTIONS
C
      ELSEIF(ICASP2.EQ.'VONM' .OR. ICASP2.EQ.'WCAU')THEN
        IF((XMIN-A0TEMP)/A1TEMP.LT.AMIN .OR.
     1     (XMAX-A0TEMP)/A1TEMP.GT.AMAX)THEN
           A0TEMP=XMED
           ATEMP1=(XMAX-A0TEMP)/AMAX
        ENDIF
C
C       CASE 5: GENERIC CASE WHERE DOMAIN BOUNDED BOTH ABOVE
C               AND BELOW.  SOLVE
C
C               (XMIN-A0)/A1 = AMIN
C               (XMAX-A0)/A1 = AMAX
C
C               NOTE: IF AMIN = -AMAX (E.G., VON MISES), THEN GET
C                     DIVISION BY ZERO.  IN THIS CASE, SET A0 TO
C                     DATA MINIMUM MINUS EPS, THEN SET
C                     A1 = (XMAX-A0)/AMAX
C
      ELSEIF(AMIN.GT.CPUMIN .AND. AMAX.LT.CPUMAX)THEN
        IF((XMIN-A0TEMP)/A1TEMP.LT.AMIN .OR.
     1     (XMAX-A0TEMP)/A1TEMP.GT.AMAX)THEN
           CMIN=AMIN
           CMAX=AMAX
           CONST=CMIN/CMAX
           IF(CONST.NE.-1.0)THEN
             A0TEMP=(XMIN-CONST*XMAX)/(1.0+CONST) - EPS
             A1TEMP=(XMAX-A0TEMP)/CMAX + EPS
           ELSE
             A0TEMP=XMIN - EPS
             A1TEMP=(XMAX - A0TEMP)/AMAX
           ENDIF
        ENDIF
C
C       CASE 6: GENERIC CASE WHERE DOMAIN BOUNDED BELOW ONLY
C
      ELSEIF(AMIN.GT.CPUMIN .AND. AMAX.EQ.CPUMAX)THEN
        IF((XMIN-A0TEMP)/A1TEMP.LT.AMIN)THEN
          A0TEMP=XMIN-EPS
        ENDIF
C
C       CASE 7: GENERIC CASE WHERE DOMAIN BOUNDED ABOVE ONLY
C
      ELSEIF(AMIN.EQ.CPUMIN .AND. AMAX.LT.CPUMAX)THEN
        CTEMP=(XMAX-A0TEMP)/A1TEMP
        IF(CTEMP.GE.AMAX)THEN
          A0TEMP=(XMAX-EPS) - A1TEMP*AMAX
        ENDIF
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC6')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPPC6--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)A0TEMP,A1TEMP
 9013   FORMAT('A0TEMP,A1TEMP = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPPC7(ICASPL,ICASP2,IPPCAP,
     1                  SHAP11,SHAP12,SHAP21,SHAP22,
     1                  SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1                  YMIN,YMAX,A,B,
     1                  DISPAR,DISPA2,NUMDIS,NUMSHA,
     1                  IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                  ILGADF,ISKNDF,IGLDDF,IBGEDF,IGETDF,
     1                  ICONDF,IGOMDF,IKATDF,IGIGDF,IGEODF,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--UTILITY ROUTINE FOR PPCC PLOT.  CREATE THE ARRAYS THAT
C              CONTAIN THE VALUES OF THE SHAPE PARAMETER(S) WHERE THE
C              UNDERLYING PROBABILITY PLOT WILL BE GENERATED.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/10
C     ORIGINAL VERSION--OCTOBER   2009. EXTRACTED FROM DPPPC2 AND
C                                       DPPPC3 ROUTINES
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASP2
      CHARACTER*4 IADEDF
      CHARACTER*4 IGEPDF
      CHARACTER*4 IMAKDF
      CHARACTER*4 IBEIDF
      CHARACTER*4 ILGADF
      CHARACTER*4 ISKNDF
      CHARACTER*4 IGLDDF
      CHARACTER*4 IBGEDF
      CHARACTER*4 IGETDF
      CHARACTER*4 ICONDF
      CHARACTER*4 IGOMDF
      CHARACTER*4 IKATDF
      CHARACTER*4 IGIGDF
      CHARACTER*4 IGEODF
C
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      INTEGER IPPCAP(2)
C
      DIMENSION DISPAR(*)
      DIMENSION DISPA2(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC7')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11)
   11   FORMAT('***** AT THE BEGINNING OF DPPPC7--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,12)ICASPL,ICASP2,A,B
   12   FORMAT('ICASPL,ICASP2,A,B = ',A4,2X,A4,2X,2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,13)SHAP11,SHAP12,SHAP21,SHAP22
   13   FORMAT('SHAP11,SHAP12,SHAP21,SHAP22 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IERROR='NO'
C
C               *******************************************************
C               **  STEP 1--                                         **
C               **  DEFINE DEFAULT NUMBER OF POINTS AT WHICH TO      **
C               **  COMPUTE THE PPCC (OR OTHER GOODNESS OF FIT).     **
C               *******************************************************
C
      NHOR1=IPPCAP(1)
      NHOR2=IPPCAP(2)
C
      N1DFLT=50
      N2DFLT=50
      IF(ICASP2.EQ.'BETA' .OR. ICASP2.EQ.'GGAM' .OR.
     1   ICASP2.EQ.'IBET' .OR. ICASP2.EQ.'LSNO' .OR.
     1   ICASP2.EQ.'BNOR' .OR. ICASP2.EQ.'BGEO' .OR.
     1   ICASP2.EQ.'LBET' .OR. ICASP2.EQ.'KATZ' .OR.
     1   ICASP2.EQ.'KUMA' .OR. ICASP2.EQ.'MBKA' .OR.
     1   ICASP2.EQ.'KAPP' .OR. ICASP2.EQ.'GIGA' .OR.
     1   ICASP2.EQ.'WARI' .OR. ICASP2.EQ.'TRAP' .OR.
     1   (ICASP2.EQ.'GEET' .AND. IGETDF.EQ.'MU') .OR.
     1   (ICASP2.EQ.'CONS' .AND. ICONDF.EQ.'MU')
     1   )THEN
        N1DFLT=25
        N2DFLT=25
      ELSEIF(ICASP2.EQ.'AEPP')THEN
        N1DFLT=25
        N2DFLT=18
      ELSEIF((ICASP2.EQ.'GEET' .AND. IGETDF.EQ.'THET') .OR.
     1       ICASP2.EQ.'GLOS')THEN
        N1DFLT=25
        N2DFLT=20
      ELSEIF(ICASP2.EQ.'GHPP')THEN
        N1DFLT=21
        N2DFLT=41
      ELSEIF(ICASP2.EQ.'GPP')THEN
        N1DFLT=101
        N2DFLT=1
      ELSEIF(ICASP2.EQ.'HPP')THEN
        N1DFLT=51
        N2DFLT=1
      ELSEIF(ICASP2.EQ.'TEXP')THEN
        N1DFLT=21
        N2DFLT=51
      ELSEIF(ICASP2.EQ.'FNOR' .OR. ICASP2.EQ.'FCAU' .OR.
     1       ICASP2.EQ.'BBIN' .OR. ICASP2.EQ.'HERM' .OR.
     1       ICASP2.EQ.'TNOR'
     1      )THEN
        N1DFLT=51
        N2DFLT=51
      ELSEIF(ICASP2.EQ.'GALP' .OR. ICASP2.EQ.'G4LO')THEN
        N1DFLT=20
        N2DFLT=20
      ELSEIF(ICASP2.EQ.'LPOI')THEN
        N1DFLT=31
        N2DFLT=31
      ELSEIF(ICASP2.EQ.'L3EX')THEN
        N1DFLT=50
        N2DFLT=25
      ELSEIF(ICASP2.EQ.'NCCS')THEN
        N1DFLT=10
        N2DFLT=21
      ELSEIF(ICASP2.EQ.'GMCL')THEN
        N1DFLT=17
        N2DFLT=20
      ELSEIF(ICASP2.EQ.'DISW' .OR. ICASP2.EQ.'GLGP' .OR.
     1       ICASP2.EQ.'GTOL' .OR. ICASP2.EQ.'RGTL')THEN
        N1DFLT=21
        N2DFLT=25
      ELSEIF(ICASP2.EQ.'MCLE' .OR. ICASP2.EQ.'G3LO' .OR.
     1       ICASP2.EQ.'ZETA' .OR. ICASP2.EQ.'ZIPF' .OR.
     1       ICASP2.EQ.'BTAN'
     1      )THEN
        N1DFLT=30
      ELSEIF(ICASP2.EQ.'LOST')THEN
        N1DFLT=45
      ENDIF
C
      IF(SHAP11.GT.SHAP12)THEN
        ATEMP=SHAP11
        SHAP11=SHAP12
        SHAP12=SHAP11
      ENDIF
      IF(SHAP21.GT.SHAP22)THEN
        ATEMP=SHAP21
        SHAP21=SHAP22
        SHAP22=SHAP21
      ENDIF
C
      IF(ICASP2.EQ.'TEXP')THEN
        IF(SHAP22.GE.YMIN)THEN
          SHAP22=YMIN-0.1
          IF(SHAP21.GE.SHAP22)THEN
            SHAP21=SHAP22-5.0
            IF(SHAP21.LT.0.0)SHAP21=0.0
          ENDIF
        ENDIF
      ENDIF
C
C               *******************************************************
C               **  STEP 2--                                         **
C               **  CREATE THE DISPAR AND DISPA2 ARRAYS (VALUES      **
C               **  FOR THE SHAPE PARAMETER(S)).                     **
C               *******************************************************
C
      IF(NUMSHA.EQ.1)THEN
C
C       ONE SHAPE PARAMETER CASES:
C
C       A) CASES WITH AN INTEGER SHAPE PARAMETER
C
        IF(ICASP2.EQ.'TPP' .OR. ICASP2.EQ.'CHIS' .OR.
     1     ICASP2.EQ.'CHI' .OR. ICASP2.EQ.'FT')THEN
          NUMDIS=N1DFLT
          IF(NHOR1.GT.1)NUMDIS=NHOR1
          IHIGH=INT(SHAP12+0.1)
          ILOW =INT(SHAP11+0.1)
          IF(ILOW.EQ.IHIGH)IHIGH=ILOW+9
          NUMDI2=IHIGH-ILOW+1
          NUMDIS=MIN(NUMDIS,NUMDI2)
          ANUMDI=REAL(NUMDIS)
          ICNT=0
          DO110IDIS=1,NUMDIS
            AIDIS=REAL(IDIS)
            AFACT=(AIDIS-1.0)/(ANUMDI-1.0)
            ATEMP=SHAP11 + AFACT*(SHAP12-SHAP11)
            ITEMP=INT(ATEMP+0.1)
            ATEMP=REAL(ITEMP)
            IF(IDIS.GT.1 .AND. ATEMP.EQ.DISPAR(ICNT))GOTO110
            ICNT=ICNT+1
            DISPAR(ICNT)=ATEMP
  110     CONTINUE
C
C       GENERIC CASE
C
        ELSE
          NUMDIS=N1DFLT
          IF(NHOR1.GT.1)NUMDIS=NHOR1
          ANUMDI=REAL(NUMDIS)
          DO190IDIS=1,NUMDIS
            AIDIS=REAL(IDIS)
            AFACT=(AIDIS-1.0)/(ANUMDI-1.0)
            DISPAR(IDIS)=SHAP11 + AFACT*(SHAP12-SHAP11)
  190     CONTINUE
        ENDIF
C
C       CASES WITH TWO SHAPE PARAMETERS
C
      ELSE
C
C       CASES THAT REQUIRE SPECIAL HANDLING
C
C       A) SECOND SHAPE PARAMETER SET TO A FIXED VALUE
C
        IF(ICASP2.EQ.'NBIN' .AND. SHAP21.EQ.SHAP22)THEN
          NUMDIS=N1DFLT
          IF(NHOR1.GT.1)NUMDIS=NHOR1
          ANUMDI=REAL(NUMDIS)
          DO210IDIS=1,NUMDIS
            AIDIS=REAL(IDIS)
            AFACT=(AIDIS-1.0)/(ANUMDI-1.0)
            DISPAR(IDIS)=SHAP11 + AFACT*(SHAP12-SHAP11)
            DISPAR(IDIS)=SHAP21
  210     CONTINUE
C
C       B) FIRST SHAPE PARAMETER IS BOUNDED BY A MINIMUM (A) AND
C          A MAXIMUM (B)
C
        ELSEIF(ICASP2.EQ.'TSPO' .OR. ICASP2.EQ.'TSSL' .OR.
     1         ICASP2.EQ.'TSOG')THEN
          NUMDI1=N1DFLT
          IF(NHOR1.GT.0)NUMDI1=NHOR1
          ANMDI1=NUMDI1
          NUMDI2=N2DFLT
          IF(NHOR2.GT.0)NUMDI2=NHOR2
          ANMDI2=NUMDI2
          ICOUNT=0
          IF(SHAP11.LT.A)SHAP11=A
          IF(SHAP12.GT.B)SHAP12=B
          DO220IDIS1=1,NUMDI1
            AIDI1=IDIS1
            A1=SHAP11+((AIDI1-1.0)/(ANMDI1-1.0))*(SHAP12-SHAP11)
            DO225IDIS2=1,NUMDI2
              AIDI2=IDIS2
              A2=SHAP21+((AIDI2-1.0)/(ANMDI2-1.0))*(SHAP22-SHAP21)
              ICOUNT=ICOUNT+1
              DISPAR(ICOUNT)=A1
              DISPA2(ICOUNT)=A2
  225       CONTINUE
  220     CONTINUE
          NUMDIS=ICOUNT
C
C       C) BOTH SHAPE PARAMETERS REQUIRE INTEGER VALUES
C          A MAXIMUM (B)
C
        ELSEIF(ICASP2.EQ.'FPP ')THEN
          NU11=INT(SHAP11+0.1)
          NU12=INT(SHAP12+0.1)
          NU21=INT(SHAP21+0.1)
          NU22=INT(SHAP22+0.1)
          NUMDI1=NU12 - NU11 + 1
          IF(NHOR1.GT.0)NUMDI1=NHOR1
          IF(NUMDI1.LT.10)NUMDI1=10
          ANMDI1=NUMDI1
          NUMDI2=NU22 - NU21 + 1
          IF(NHOR2.GT.0)NUMDI2=NHOR2
          IF(NUMDI2.LT.10)NUMDI2=10
          ANMDI2=NUMDI2
          ICOUNT=0
          DO230IDIS1=1,NUMDI1
            NTEMP1=NU11 + IDIS1 - 1
            DO235IDIS2=1,NUMDI2
              NTEMP2=NU21 + IDIS2 - 1
              ICOUNT=ICOUNT+1
              DISPAR(ICOUNT)=REAL(NTEMP1)
              DISPA2(ICOUNT)=REAL(NTEMP2)
  235       CONTINUE
  230     CONTINUE
          NUMDIS=ICOUNT
C
C       D) FIRST SHAPE PARAMETER REQUIRES INTEGER VALUE
C
        ELSEIF(ICASP2.EQ.'TSKE' .OR. ICASP2.EQ.'NCCS' .OR.
     1         ICASP2.EQ.'NCT')THEN
          NU11=INT(SHAP11+0.1)
          NU12=INT(SHAP12+0.1)
          NUMDI1=NU12 - NU11 + 1
          IF(NHOR1.GT.0)NUMDI1=NHOR1
          IF(NUMDI1.LT.10)NUMDI1=10
          ANMDI1=REAL(NUMDI1)
          NUMDI2=N2DFLT
          IF(NHOR2.GT.0)NUMDI2=NHOR2
          ANMDI2=REAL(NUMDI2)
          ICOUNT=0
          DO240IDIS1=1,NUMDI1
            NTEMP1=NU11 + IDIS1 - 1
            DO245IDIS2=1,NUMDI2
              AIDIS2=IDIS2
              A2=SHAP21+((AIDIS2-1.0)/(ANMDI2-1.0))*(SHAP22-SHAP21)
              ICOUNT=ICOUNT+1
              DISPAR(ICOUNT)=REAL(NTEMP1)
              DISPA2(ICOUNT)=A2
  245       CONTINUE
  240     CONTINUE
          NUMDIS=ICOUNT
C
C       E) FOR WARING, SECOND SHAPE PARAMETER BOUNDED BY THE FIRST
C
        ELSEIF(ICASP2.EQ.'WARI')THEN
          NUMDI1=N1DFLT
          IF(NHOR1.GT.0)NUMDI1=NHOR1
          ANMDI1=NUMDI1
          NUMDI2=N2DFLT
          IF(NHOR2.GT.0)NUMDI2=NHOR2
          ANMDI2=NUMDI2
          ICOUNT=0
          DO250IDIS1=1,NUMDI1
            AIDI1=IDIS1
            A1=SHAP11+((AIDI1-1.0)/(ANMDI1-1.0))*(SHAP12-SHAP11)
            DO255IDIS2=1,NUMDI2
              AIDI2=IDIS2
              A2=SHAP21+((AIDI2-1.0)/(ANMDI2-1.0))*(SHAP22-SHAP21)
              IF(A1.GT.A2)THEN
                ICOUNT=ICOUNT+1
                DISPAR(ICOUNT)=A1
                DISPA2(ICOUNT)=A2
              ENDIF
  255       CONTINUE
  250     CONTINUE
          NUMDIS=ICOUNT
C
C       F) FOR GENERALIZED LOGARITHMIC SERIES, GEETA (THETA
C          PARAMETERIZATION), AND CONSUL (THETA PARAMETERIZATION),
C          THE SECOND SHAPE PARAMETER BOUNDED BY THE FIRST
C
        ELSEIF(ICASP2.EQ.'GLOS' .OR.
     1        (ICASP2.EQ.'GEET' .AND. IGETDF.EQ.'THET') .OR.
     1        (ICASP2.EQ.'CONS' .AND. ICONDF.EQ.'THET'))THEN
          NUMDI1=N1DFLT
          IF(NHOR1.GT.0)NUMDI1=NHOR1
          ANMDI1=NUMDI1
          NUMDI2=N2DFLT
          IF(NHOR2.GT.0)NUMDI2=NHOR2
          ANMDI2=NUMDI2
          ICOUNT=0
          DO260IDIS1=1,NUMDI1
            AIDI1=IDIS1
            A1=SHAP11+((AIDI1-1.0)/(ANMDI1-1.0))*(SHAP12-SHAP11)
            BETA1Z=SHAP21
            BETA2Z=SHAP22
            ZMAXBE=1.0/A1
            ATEMP=REAL(N2DFLT)
            IF(BETA1Z.GE.ZMAXBE)BETA1Z=1.0 + (ZMAXBE-1.0)/ATEMP
            IF(BETA2Z.GE.ZMAXBE)BETA2Z=1.0 +
     1                          (ATEMP-1.0)*(ZMAXBE-1.0)/ATEMP
            DO265IDIS2=1,NUMDI2
              AIDI2=IDIS2
              A2=BETA1Z+((AIDI2-1.0)/(ANMDI2-1.0))*(BETA2Z-BETA1Z)
              ICOUNT=ICOUNT+1
              DISPAR(ICOUNT)=A1
              DISPA2(ICOUNT)=A2
  265       CONTINUE
  260     CONTINUE
          NUMDIS=ICOUNT
C
C       G) FOR QUASI BINOMIAL TYPE 1, -P/M < PHI < (1-P)/M
C          SO SET RANGE FOR PHI DEPENDENT ON P.
C
        ELSEIF(ICASP2.EQ.'QBIN')THEN
          NUMDI1=19
          IF(NHOR1.GT.0)NUMDI1=NHOR1
          ANMDI1=NUMDI1
          NUMDI2=20
          IF(NHOR2.GT.0)NUMDI2=NHOR2
          ANMDI2=NUMDI2
          ICOUNT=0
          DO270IDIS1=1,NUMDI1
            AIDI1=IDIS1
            A1=SHAP11+((AIDI1-1.0)/(ANMDI1-1.0))*(SHAP12-SHAP11)
            ZMINPH=-A1/SHAPE3
            ZMAXPH=(1.0-A1)/SHAPE3
            AINC=(ZMAXPH-ZMINPH)/REAL(NUMDI2)
            ZMINPH=ZMINPH + AINC
            ZMAXPH=ZMAXPH - AINC
            PHI1Z=SHAP21
            PHI2Z=SHAP22
            IF(PHI1Z.LT.ZMINPH)PHI1Z=ZMINPH
            IF(PHI2Z.GT.ZMAXPH)PHI2Z=ZMAXPH
            DO275IDIS2=1,NUMDI2
              AIDI2=IDIS2
              A2=PHI1Z+((AIDI2-1.0)/(ANMDI2-1.0))*(PHI2Z-PHI1Z)
              ICOUNT=ICOUNT+1
              DISPAR(ICOUNT)=A1
              DISPA2(ICOUNT)=A2
  275       CONTINUE
  270     CONTINUE
          NUMDIS=ICOUNT
C
C       H) FOR TRAPEZOID DISTRIBUTION, B < C,
C          SO SET RANGE FOR C DEPENDENT ON B.
C
        ELSEIF(ICASP2.EQ.'TRAP')THEN
          NUMDI1=N1DFLT
          IF(NHOR1.GT.0)NUMDI1=NHOR1
          ANMDI1=NUMDI1
          NUMDI2=N2DFLT
          IF(NHOR2.GT.0)NUMDI2=NHOR2
          ANMDI2=NUMDI2
          ICOUNT=0
          DO280IDIS1=1,NUMDI1
            AIDI1=IDIS1
            A1=SHAP11+((AIDI1-1.0)/(ANMDI1-1.0))*(SHAP12-SHAP11)
            ZMINC=A1
            DO285IDIS2=1,NUMDI2
              AIDI2=IDIS2
              A2=SHAP21+((AIDI2-1.0)/(ANMDI2-1.0))*(SHAP22-SHAP21)
              IF(A2.GT.ZMINC)THEN
                ICOUNT=ICOUNT+1
                DISPAR(ICOUNT)=A1
                DISPA2(ICOUNT)=A2
              ENDIF
  285       CONTINUE
  280     CONTINUE
          NUMDIS=ICOUNT
C
C       GENERIC CASE
C
        ELSE
          NUMDI1=N1DFLT
          IF(NHOR1.GT.0)NUMDI1=NHOR1
          ANMDI1=NUMDI1
          NUMDI2=N2DFLT
          IF(NHOR2.GT.0)NUMDI2=NHOR2
          ANMDI2=NUMDI2
          ICOUNT=0
          DO290IDIS1=1,NUMDI1
            AIDI1=IDIS1
            A1=SHAP11+((AIDI1-1.0)/(ANMDI1-1.0))*(SHAP12-SHAP11)
            DO295IDIS2=1,NUMDI2
              AIDI2=IDIS2
              A2=SHAP21+((AIDI2-1.0)/(ANMDI2-1.0))*(SHAP22-SHAP21)
              ICOUNT=ICOUNT+1
              DISPAR(ICOUNT)=A1
              DISPA2(ICOUNT)=A2
  295       CONTINUE
  290     CONTINUE
          NUMDIS=ICOUNT
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC7')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPPC7--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)SHAPE1,SHAPE2,SHAPE3,SHAPE4
 9012   FORMAT('SHAPE1,SHAPE2,SHAPE3,SHAPE4 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NUMDI1,NUMDI2,NUMDIS
 9013   FORMAT('NUMDI1,NUMDI2,NUMDIS = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)IADEDF,IBEIDF,IBGEDF,ICONDF,IGEODF
 9015   FORMAT('IADEDF,IBEIDF,IBGEDF,ICONDF,IGEODF = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IGEODF,IGETDF,IGOMDF,IKATDF,ILGADF
 9016   FORMAT('IGEODF,IGETDF,IGOMDF,IKATDF,ILGADF = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9018)IMAKDF,ISKNDF,IGIGDF,IGEPDF,IGLDDF
 9018   FORMAT('IGEODF,IGETDF,IGIGDF,IGEPDF,IGLDDF = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,NUMDIS
          WRITE(ICOUT,9021)I,DISPAR(I),DISPA2(I)
 9021     FORMAT('I,DISPAR(I),DISPA2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
        WRITE(ICOUT,9031)YMIN,YMAX,A,B
 9031   FORMAT('YMIN,YMAX,A,B = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPPC8(ICASPL,ICASP2,
     1                  SHAP11,SHAP12,SHAP21,SHAP22,
     1                  SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                  YLOWLM,YUPPLM,A,B,MINMAX,
     1                  IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                  ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                  IGETDF,ICONDF,IGOMDF,IKATDF,
     1                  IGIGDF,IGEODF,
     1                  AMIN,AMAX,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--FOR PPCC PLOT (DPPPC2, DPPPC3), SET VALUES FOR AMIN
C              AND AMAX.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2010/1
C     ORIGINAL VERSION--JANUARY   2010. EXTRACT AS SEPARATE SUBROUTINE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASP2
      CHARACTER*4 IADEDF
      CHARACTER*4 IGEPDF
      CHARACTER*4 IMAKDF
      CHARACTER*4 IBEIDF
      CHARACTER*4 ILGADF
      CHARACTER*4 ISKNDF
      CHARACTER*4 IGLDDF
      CHARACTER*4 IBGEDF
      CHARACTER*4 IGETDF
      CHARACTER*4 ICONDF
      CHARACTER*4 IGOMDF
      CHARACTER*4 IKATDF
      CHARACTER*4 IGIGDF
      CHARACTER*4 IGEODF
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
C
      DOUBLE PRECISION DPPF
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
      DATA PI / 3.1415926535 /
C
C-----START POINT-----------------------------------------------------
C
      IWRITE='OFF'
      IERROR='NO'
C
      AMIN=CPUMIN
      AMAX=CPUMAX
C
C     CONVERT 3-PARAMETER DISTRIBUTION NAMES TO BE EQUIVALENT TO
C     2-PARAMETER DISTRIBUTION NAMES
C
      IF(ICASP2.EQ.'3WEI')ICASP2='WEIB'
      IF(ICASP2.EQ.'3IWE')ICASP2='IWEI'
      IF(ICASP2.EQ.'3GAM')ICASP2='GAMM'
      IF(ICASP2.EQ.'3IGA')ICASP2='IGAU'
      IF(ICASP2.EQ.'3LGN')ICASP2='LOGN'
C
      IF(ICASPL.NE.'PPCC')THEN
        IF(ICASP2.EQ.'TULA')THEN
          IF(SHAPE1.GT.0.0)THEN
            AMAX=ABS(1.0/SHAPE1)
            AMIN=-AMAX
          ENDIF
        ELSEIF(ICASP2.EQ.'CHIS' .OR. ICASP2.EQ.'WEIB' .OR.
     1         ICASP2.EQ.'GAMM' .OR. ICASP2.EQ.'INGA' .OR.
     1         ICASP2.EQ.'WALD' .OR. ICASP2.EQ.'RIGA' .OR.
     1         ICASP2.EQ.'FATL' .OR. ICASP2.EQ.'LOGN' .OR.
     1         ICASP2.EQ.'PLGN' .OR. ICASP2.EQ.'CHI ' .OR.
     1         ICASP2.EQ.'LOGL' .OR. ICASP2.EQ.'LGAM' .OR.
     1         ICASP2.EQ.'HLOG' .OR. ICASP2.EQ.'IGAM' .OR.
     1         ICASP2.EQ.'GGAM' .OR. ICASP2.EQ.'GOMP' .OR.
     1         ICASP2.EQ.'PEXP' .OR. ICASP2.EQ.'EWEI' .OR.
     1         ICASP2.EQ.'IWEI' .OR. ICASP2.EQ.'LDEX' .OR.
     1         ICASP2.EQ.'GEEX' .OR. ICASP2.EQ.'ALPH' .OR.
     1         ICASP2.EQ.'FT  ' .OR. ICASP2.EQ.'FPP ' .OR.
     1         ICASP2.EQ.'IBET' .OR. ICASP2.EQ.'LSNO' .OR.
     1         ICASP2.EQ.'NCCS' .OR. ICASP2.EQ.'FNOR' .OR.
     1         ICASP2.EQ.'FCAU' .OR. ICASP2.EQ.'FNOR' .OR.
     1         ICASP2.EQ.'MAXW' .OR. ICASP2.EQ.'GOMM' .OR.
     1         ICASP2.EQ.'ALDE' .OR. ICASP2.EQ.'LBET' .OR.
     1         ICASP2.EQ.'BUR3' .OR. ICASP2.EQ.'BU12' .OR.
     1         ICASP2.EQ.'MUTH' .OR. ICASP2.EQ.'BU12' .OR.
     1         ICASP2.EQ.'LEXP' .OR. ICASP2.EQ.'L3EX' .OR.
     1         ICASP2.EQ.'MBKA' .OR. ICASP2.EQ.'L3EX' .OR.
     1         ICASP2.EQ.'GIGA' .OR. ICASP2.EQ.'BFWE'
     1        )THEN
          AMIN=0.0
        ELSEIF(ICASP2.EQ.'POWF' .OR. ICASP2.EQ.'BETA' .OR.
     1         ICASP2.EQ.'JOSB' .OR. ICASP2.EQ.'TOPL' .OR.
     1         ICASP2.EQ.'GTOL' .OR. ICASP2.EQ.'RGTL' .OR.
     1         ICASP2.EQ.'SLOP' .OR. ICASP2.EQ.'TSSL' .OR.
     1         ICASP2.EQ.'OGIV' .OR. ICASP2.EQ.'TSOG' .OR.
     1         ICASP2.EQ.'RPOW' .OR. ICASP2.EQ.'KUMA'
     1        )THEN
          AMIN=0.0
          AMAX=1.0
        ELSEIF(ICASP2.EQ.'VONM')THEN
          AMIN=-PI
          AMAX=PI
        ELSEIF(ICASP2.EQ.'BUR4')THEN
          AMIN=0.0
          AMAX=SHAPE2
        ELSEIF(ICASP2.EQ.'WCAU')THEN
          AMIN=0.0
          AMAX=2.0*PI
        ELSEIF(ICASP2.EQ.'TEXP')THEN
          AMIN=SHAPE1
          AMAX=SHAPE3
        ELSEIF(ICASP2.EQ.'TPAR')THEN
          AMIN=A
          AMAX=SHAPE3
        ELSEIF(ICASP2.EQ.'TRAP')THEN
          AMIN=YLOWLM
          AMAX=YUPPLM
        ELSEIF(ICASP2.EQ.'RECI')THEN
          AMIN=1.0/SHAPE1
          AMAX=1.0
        ELSEIF(ICASP2.EQ.'TRIA')THEN
CCCCC     AMIN=XMIN
CCCCC     AMAX=XMAX
        ELSEIF(ICASP2.EQ.'EV2 ')THEN
          IF(MINMAX.EQ.1)THEN
            AMAX=0.0
          ELSE
            AMIN=0.0
          ENDIF
        ELSEIF(ICASP2.EQ.'GEV ')THEN
          IF(MINMAX.EQ.2 .OR. MINMAX.EQ.0)THEN
            IF(SHAPE1.GT.0.0)THEN
              AMAX=(1.0/SHAPE1) - 0.1E-6
            ELSE
              AMIN=(1.0/SHAPE1) + 0.1E-6
            ENDIF
          ELSE
            IF(SHAPE1.GT.0.0)THEN
              AMIN=(-1.0/SHAPE1) + 0.1E-6
            ELSE
              AMAX=(-1.0/SHAPE1) - 0.1E-6
            ENDIF
          ENDIF
        ELSEIF(ICASP2.EQ.'PARE' .OR. ICASP2.EQ.'PAR2')THEN
          AMIN=A
        ELSEIF(ICASP2.EQ.'GHLO')THEN
          AMIN=0.0
          AMAX=1.0/SHAPE1
        ELSEIF(ICASP2.EQ.'GPAR')THEN
          IF(IGEPDF.EQ.'JOHN')THEN
            IF(SHAPE1.LE.0.0)THEN
              AMIN=0.0
            ELSE
              AMIN=0.0
              AMAX=(1.0/SHAPE1)
            ENDIF
          ELSE
            IF(SHAPE1.GE.0.0)THEN
              AMIN=0.0
            ELSE
              AMIN=0.0
              AMAX=-(1.0/SHAPE1)
            ENDIF
          ENDIF
        ELSEIF(ICASP2.EQ.'GTLA')THEN
          IF(SHAPE1.LE.0.0 .AND. SHAPE2.LE.0.0)THEN
            AMIN=CPUMIN
            AMAX=CPUMAX
          ELSEIF(SHAPE1.LE.0.0)THEN
            AMIN=CPUMIN
            CALL GLDPPF(1.0D0,DBLE(SHAPE1),DBLE(SHAPE2),DPPF,
     1                  IGLDDF,IWRITE)
            AMAX=REAL(DPPF)
          ELSEIF(SHAPE2.LE.0.0)THEN
            AMIN=1.0/SHAPE2
            AMAX=CPUMAX
          ELSE
            CALL GLDPPF(0.0D0,DBLE(SHAPE1),DBLE(SHAPE2),DPPF,
     1                  IGLDDF,IWRITE)
            AMIN=REAL(DPPF)
            CALL GLDPPF(1.0D0,DBLE(SHAPE1),DBLE(SHAPE2),DPPF,
     1                  IGLDDF,IWRITE)
            AMAX=REAL(DPPF)
          ENDIF
        ELSEIF(ICASP2.EQ.'PEA3')THEN
          IF(SHAPE1.GT.0.0)THEN
            AMIN=-2.0/SHAPE1
          ELSEIF(SHAPE1.LT.0.0)THEN
            AMAX=-2.0/SHAPE1
          ENDIF
        ELSEIF(ICASP2.EQ.'KAPP')THEN
          IF(SHAPE1.GT.0.0)THEN
            AMAX=1.0/SHAPE1
          ENDIF
          IF(SHAPE2.GT.0.0)THEN
            AMIN=(1.0 - SHAPE2**(-SHAPE1))/SHAPE1
          ELSE
            IF(SHAPE1.LT.0.0)THEN
              AMIN=1.0/SHAPE1
            ENDIF
          ENDIF
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC8')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPPC8--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)AMIN,AMAX,A,B
 9012   FORMAT('AMIN,AMAX,A,B = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)SHAP11,SHAP12,SHAP21,SHAP22
 9013   FORMAT('SHAP11,SHAP12,SHAP21,SHAP22 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5
 9014   FORMAT('SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5 = ',5G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)IADEDF,IBEIDF,IBGEDF,ICONDF,IGEODF
 9015   FORMAT('IADEDF,IBEIDF,IBGEDF,ICONDF,IGEODF = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IGEODF,IGETDF,IGOMDF,IKATDF,ILGADF
 9016   FORMAT('IGEODF,IGETDF,IGOMDF,IKATDF,ILGADF = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9018)IMAKDF,ISKNDF,IGIGDF
 9018   FORMAT('IGEODF,IGETDF,IGIGDF = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPPC9(ICASPL,ICASP2,IOUNI2,ICNTPT,IFLAG2,
     1                  DISPAR,DISPA2,DISPA3,NUMDIS,CORRV,NUMSHA,
     1                  XTEMP4,XTEMP5,X2TEMP,
     1                  IPPCFO,IPPCAO,IFLAGF,NCURVE,
     1                  Y2,X2,X3D2,D2,N2,NPLOTV,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--UTILITY ROUTINE FOR DPPPC2 AND DPPPC3:
C
C              AFTER WE HAVE LOOPED OVER ALL VALUES OF THE SHAPE
C              PARAMETER(S), DO THE FOLLOWING:
C
C              1) WRITE RELEVANT INFO TO DPST1F.DAT
C
C              2) GENERATE THE PLOT POINTS (Y2, X2, D2).  NEED TO ACCOUNT
C                 FOR REPLICATION CASE.  ALSO, NEED TO DISTINGUISH BETWEEN
C                 THE ONE SHAPE PARAMETER AND THE TWO SHAPE PARAMETER
C                 CASE.  NOTE THAT DISTRIBUTIONS WITH TWO SHAPE PARAMETERS
C                 MAY ONLY HAVE A SINGLE VALUE FOR ONE OF THE SHAPE
C                 PARAMETERS.  THESE CASES NEED TO BE PLOTTED AS A SINGLE
C                 SHAPE PARAMETER CASE.
C
C              ALSO, THE TWO SHAPE PARAMETER CASE MAY BE PLOTTED AS A
C              3D PLOT OR AS A 2D PLOT WHERE EACH VALUE OF THE SECOND
C              SHAPE PARAMETER IS DRAWN AS A SEPARATE TRACE ON THE
C              2D PLOT.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2010/1
C     ORIGINAL VERSION--JANUARY   2010. EXTRACTED AS SEPARATE ROUTINE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICASP2
      CHARACTER*4 IPPCFO
      CHARACTER*4 IPPCAO
      CHARACTER*4 IFLAGF
      CHARACTER*4 IWRITE
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION X3D2(*)
      DIMENSION D2(*)
      DIMENSION XTEMP4(*)
      DIMENSION XTEMP5(*)
      DIMENSION X2TEMP(*)
C
      DIMENSION DISPAR(*)
      DIMENSION DISPA2(*)
      DIMENSION DISPA3(*)
      DIMENSION CORRV(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IWRITE='OFF'
      IERROR='NO'
C
      AHOLD=CPUMIN
      ATAG=0.0
C
C     CASE 1: ONE SHAPE PARAMETER
C
      IF(NUMSHA.EQ.1 .OR. IFLAG2.GT.0)THEN
        DO1930IDIS=1,NUMDIS
          ICNTPT=ICNTPT+1
          IF(IFLAG2.EQ.2)THEN
            X2(ICNTPT)=DISPA2(IDIS)
          ELSE
            X2(ICNTPT)=DISPAR(IDIS)
          ENDIF
          Y2(ICNTPT)=CORRV(IDIS)
          D2(ICNTPT)=REAL(NCURVE)
          IF(IFLAGF.EQ.'ON')THEN
            WRITE(IOUNI2,'(5E15.7,I8)')Y2(ICNTPT),
     1                                 XTEMP4(ICNTPT),XTEMP5(ICNTPT),
     1                                 X2(ICNTPT),D2(ICNTPT),NCURVE
          ENDIF
 1930   CONTINUE
        N2=ICNTPT
        NPLOTV=2
C
C     CASE 2: TWO SHAPE PARAMETERS, MULTI-TRACE PLOT
C
      ELSEIF(NUMSHA.EQ.2 .AND. IFLAG2.EQ.0 .AND. IPPCFO.EQ.'TRAC')THEN
        DO1940IDIS=1,NUMDIS
          ICNTPT=ICNTPT+1
          IF(IPPCAO.EQ.'DEFA')THEN
            IF(DISPAR(IDIS).NE.AHOLD)THEN
              ATAG=ATAG+1.0
              AHOLD=DISPAR(IDIS)
            ENDIF
          ELSE
            DO1942JJ=1,NUMDIS
              IF(DISPA2(IDIS).EQ.DISPA2(JJ))THEN
                ATAG=REAL(JJ)
                GOTO1945
              ENDIF
 1942       CONTINUE
 1945       CONTINUE
          ENDIF
          Y2(ICNTPT)=CORRV(IDIS)
          IF(IPPCAO.EQ.'DEFA')THEN
            X2(ICNTPT)=DISPA2(IDIS)
            X3D2(ICNTPT)=DISPAR(IDIS)
          ELSE
            X3D2(ICNTPT)=DISPA2(IDIS)
            X2TEMP(ICNTPT)=DISPAR(IDIS)
          ENDIF
          D2(ICNTPT)=ATAG
          IF(IFLAGF.EQ.'ON')THEN
            WRITE(IOUNI2,'(6E15.7)')Y2(ICNTPT),
     1                              XTEMP4(IDIS),XTEMP5(IDIS),
     1                              X2(ICNTPT),X3D2(ICNTPT),
     1                              D2(ICNTPT)
          ENDIF
 1940   CONTINUE
        N2=ICNTPT
        NPLOTV=3
C
C     CASE 3: TWO SHAPE PARAMETERS, 3D-PLOT
C
      ELSEIF(NUMSHA.EQ.2 .AND. IFLAG2.EQ.0 .AND. IPPCFO.EQ.'3D  ')THEN
        IWRITE='OFF'
        CALL DISTIN(DISPA2,NUMDIS,IWRITE,DISPA3,NTEMP,IBUGG3,IERROR)
        IF(IERROR.EQ.'YES'.OR.IERROR.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1946)
 1946     FORMAT('***** ERROR IN PCCC PLOT--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1941)
 1941     FORMAT('       INTERNAL ERROR IN DPPPC9')
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
C
        DO1960IDIS=1,NUMDIS
          ICNTPT=ICNTPT+1
          IF(DISPAR(IDIS).NE.AHOLD)THEN
            ATAG=ATAG+1.0
            AHOLD=DISPAR(IDIS)
          ENDIF
          Y2(ICNTPT)=CORRV(IDIS)
          IF(IPPCAO.EQ.'DEFA')THEN
            X2(ICNTPT)=DISPAR(IDIS)
            X3D2(ICNTPT)=DISPA2(IDIS)
          ELSE
            X3D2(ICNTPT)=DISPAR(IDIS)
            X2(ICNTPT)=DISPA2(IDIS)
          ENDIF
          D2(ICNTPT)=ATAG
          IF(IFLAGF.EQ.'ON')THEN
            WRITE(IOUNI2,'(6E15.7)')Y2(ICNTPT),
     1                              XTEMP4(IDIS),XTEMP5(IDIS),
     1                              X2(ICNTPT),X3D2(ICNTPT),
     1                              D2(ICNTPT)
          ENDIF
 1960   CONTINUE
C
        DO1970J=1,NTEMP
          AHOLD=DISPA3(J)
          ATAG=ATAG+1.0
          DO1975IDIS=1,NUMDIS
            IF(DISPA2(IDIS).EQ.AHOLD)THEN
              ICNTPT=ICNTPT+1
              N2=N2+1
              Y2(ICNTPT)=CORRV(IDIS)
              IF(IPPCAO.EQ.'DEFA')THEN
                X2(ICNTPT)=DISPAR(IDIS)
                X3D2(ICNTPT)=DISPA2(IDIS)
              ELSE
                X3D2(ICNTPT)=DISPAR(IDIS)
                X2(ICNTPT)=DISPA2(IDIS)
              ENDIF
              D2(ICNTPT)=ATAG
            ENDIF
 1975     CONTINUE
 1970   CONTINUE
C
        NPLOTV=3
        N2=ICNTPT
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PPC9')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPPC9--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)N2,IERROR,ICASPL,ICASP2
 9012   FORMAT('N2,IERROR,ICASPL,ICASP2 = ',I8,3(2X,A4))
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,N2
          WRITE(ICOUT,9021)I,Y2(I),X2(I),D2(I)
 9021     FORMAT('I,Y2(I),X2(I),D2(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPPD(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                 IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE A PHASE PLANE DIAGRAM
C              (USED IN TIME SERIES MODELING).
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--89/8
C     ORIGINAL VERSION--JULY      1989.
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE COMMON
C     UPDATED         --JANUARY   2012. USE DPPARS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=10)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION Y2(MAXOBV)
C
CCCCC FOLLOWING LINES ADDED JUNE, 1990
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y2(1))
CCCCC END CHANGE
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPPP'
      ISUBN2='D   '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               *******************************************
C               **  TREAT THE PHASE PLANE DIAGRAM CASE   **
C               *******************************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PPPD')THEN
        WRITE(ICOUT,999)
 999    FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPPD--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2
   52   FORMAT('ICASPL,IAND1,IAND2 = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ,ISUBRO
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPPD')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.3.AND. ICOM.EQ.'PHAS' .AND. IHARG(1).EQ.'PLAN' .AND.
     1  (IHARG(2).EQ.'DIAG' .OR. IHARG(2).EQ.'PLOT'))THEN
        ILASTC=2
      ELSE
        GOTO9000
      ENDIF
C
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      IFOUND='YES'
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPPD')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='PHASE PLANE DIAGRAM'
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=1
      IFLAGM=1
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=2
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPPD')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),IVARTY(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),IVARTY(I) = ',I8,2X,A4,A4,2X,3I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      ICASPL='PPD1'
      ICOL=1
      NUMVA2=1
      CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Y1,Y1,Y1,NS,NS,NS,ICASE,
     1            IBUGG3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IF(NUMVAR.EQ.2)THEN
        ICASPL='PPD2'
        ICOL=2
        NUMVA2=1
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y2,Y2,Y2,NS,NS,NS,ICASE,
     1              IBUGG3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
      ENDIF
C
C               ********************************************************
C               **  STEP 9--                                           *
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS              *
C               **  VARIABLES (Y(.) AND X(.), RESPECTIVELY) FOR THE    *
C               **  PLOT.  FORM THE CURVE DESIGNATION VARIABLE D(.)  . *
C               **  THIS WILL BE BOTH ONES FOR BOTH CASES              *
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).      *
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).      *
C               ********************************************************
C
      ISTEPN='9'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PPPD')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPPPD2(Y1,Y2,NS,ICASPL,
     1            Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PPPD')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPPD--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',3I8,3(2X,A4))
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.LE.0)THEN
          DO9015I=1,NPLOTP
            WRITE(ICOUT,9016)I,Y(I),X(I),D(I)
 9016       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9015     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPPD2(Y1,Y2,N,ICASPL,
     1                  Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE
C                   1) A 1-VARIABLE PHASE PLANE DIAGRAM
C                   2) A 2-VARIABLE PHASE PLANE DIAGRAM
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--JANUARY   1989.
C     UPDATED         --JANUARY   1989.  DIVISION BY 0 TRAP
C     UPDATED         --APRIL     1992.  ICASPLN TO ICASPL
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION D(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPP'
      ISUBN2='D2  '
      IERROR='NO'
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'PPD2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('***** AT THE BEGINNING OF DPPPD2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)N,ICASPL
   71   FORMAT('N,ICASPL = ',I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO73I=1,N
          WRITE(ICOUT,74)I,Y1(I),Y2(I)
   74     FORMAT('I, Y1(I), Y2(I) = ',I8,2E15.7)
          CALL DPWRST('XXX','BUG ')
   73   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN DPPPD2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 1;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(N.GE.2)GOTO49
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,46)
   46 FORMAT('***** ERROR IN DPPPD2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,47)
   47 FORMAT('      THE NUMBER OF OBSERVATIONS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,48)
   48 FORMAT('      WAS EXACTLY EQUAL TO 1.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
   49 CONTINUE
C
C               **************************************
C               **  STEP 3--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **  AND DETERMINE PLOT COORDINATES  **
C               **************************************
C
      IF(ICASPL.EQ.'PPD1')GOTO1100
      IF(ICASPL.EQ.'PPD2')GOTO1200
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1011)
 1011 FORMAT('***** INTERNAL ERROR IN DPPPD2 ',
     1'AT BRANCH POINT 1011--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1012)
 1012 FORMAT('      ICASPL SHOULD BE EITHER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1013)
 1013 FORMAT('      PPD1  OR   PPD2, BUT IS NEITHER.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1014)ICASPL
 1014 FORMAT('      ICASPL = ',A4)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
C               *****************************************
C               **  STEP 4.1--                         **
C               **  FORM THE 1-VARIABLE PHASE PLANE DIAGRAM  **
C               *****************************************
C
 1100 CONTINUE
      IMIN=1
      IMAX=N-1
      J=0
      DO1110I=IMIN,IMAX
      J=J+1
      IP1=I+1
      Y(J)=Y1(IP1)-Y1(I)
      X(J)=Y1(I)
      D(J)=1.0
 1110 CONTINUE
      NPLOTP=J
      NPLOTV=2
      GOTO9000
C
C               *****************************************
C               **  STEP 4.2--                         **
C               **  FORM THE 2-VARIABLE PHASE PLANE DIAGRAM  **
C               *****************************************
C
 1200 CONTINUE
      IMIN=1
      IMAX=N-1
      J=0
      DO1210I=IMIN,IMAX
      J=J+1
      IP1=I+1
      ANUM=Y1(IP1)-Y1(I)
      ADEN=Y2(IP1)-Y2(I)
C
      IF(ADEN.EQ.0.0)GOTO1230
      GOTO1239
 1230 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1231)
 1231 FORMAT('***** ERROR IN DPPPD2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1232)
 1232 FORMAT('      A DIVISION BY ZERO WAS ATTEMPTED')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1233)
 1233 FORMAT('      BECAUSE THE INPUT DATA HAD 2 REPEATED')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1234)
 1234 FORMAT('      X VALUES AND THEREFORE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1235)
 1235 FORMAT('      YIELDED A 0 IN THE COMPUTATION')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1236)
 1236 FORMAT('      OF DELY / DELX   .')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1237)Y2(I)
 1237 FORMAT('      THE REPEAT WAS AT X = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 1239 CONTINUE
C
      Y(J)=ANUM/ADEN
      X(J)=Y1(I)
      D(J)=1.0
 1210 CONTINUE
      NPLOTP=J
      NPLOTV=2
      GOTO9000
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'OFF')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPPPD2--')
      CALL DPWRST('XXX','BUG ')
CCCCC THE FOLLOWING 2 LINES WERE FIXED   APRIL 1992
CCCCC WRITE(ICOUT,9012)ICASPLN,NPLOTP,IERROR
C9012 FORMAT('ICASPLN,NPLOTP,IERROR = ',A4,2I8,2X,A4)
CCCCC CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)ICASPL,NPLOTP,IERROR
 9012 FORMAT('ICASPL,NPLOTP,IERROR = ',A4,2I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
      DO9015I=1,NPLOTP
      WRITE(ICOUT,9016)I,Y(I),X(I),D(I)
 9016 FORMAT('I,Y(I),X(I),D(I) = ',I8,2E15.7,F9.2)
      CALL DPWRST('XXX','BUG ')
 9015 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPPPF1(Y,Y2,N,ICASPL,
     1                  SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1                  SHAPE5,SHAPE6,SHAPE7,
     1                  YLOWLM,YUPPLM,A,B,MINMAX,
     1                  ICAPSW,ICAPTY,
     1                  IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                  ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                  IGETDF,ICONDF,IGOMDF,IKATDF,
     1                  IGIGDF,IGEODF,
     1                  KSLOC,KSSCAL,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--COMPUTE THE PPF VALUE AT GIVEN SET OF POINTS.  FOR
C              EXAMPLE, THIS CAN BE USED TO COMPUTE THE QUANTILES
C              FROM A BOOTSTRAP SAMPLE.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2010/3
C     ORIGINAL VERSION--MARCH     2010.
C     UPDATED         --JULY      2010. END EFFECTS WEIBULL
C     UPDATED         --AUGUST    2010. BRITTLE FIBER WEIBULL
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IADEDF
      CHARACTER*4 IGEPDF
      CHARACTER*4 IMAKDF
      CHARACTER*4 IBEIDF
      CHARACTER*4 ILGADF
      CHARACTER*4 ISKNDF
      CHARACTER*4 IGLDDF
      CHARACTER*4 IBGEDF
      CHARACTER*4 IGETDF
      CHARACTER*4 ICONDF
      CHARACTER*4 IGOMDF
      CHARACTER*4 IKATDF
      CHARACTER*4 IGIGDF
      CHARACTER*4 IGEODF
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IFLAG2
C
      REAL KSLOC
      REAL KSSCAL
      REAL KSLOC2
      REAL KSSCA2
C
      DOUBLE PRECISION LANPPF
      DOUBLE PRECISION DXOUT
      DOUBLE PRECISION QUAGLO
      DOUBLE PRECISION QUAWAK
      DOUBLE PRECISION XPAR(5)
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION Y2(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C
      ISUBN1='DPPP'
      ISUBN2='F1  '
      IERROR='NO'
      IWRITE='OFF'
C
      KSLOC2=KSLOC
      KSSCA2=KSSCAL
      IF(KSLOC.EQ.CPUMIN)KSLOC=0.0
      IF(KSSCAL.EQ.CPUMIN)KSSCAL=1.0
C
      CALL MINIM(Y,N,IWRITE,XMIN,IBUGA3,IERROR)
      CALL MAXIM(Y,N,IWRITE,XMAX,IBUGA3,IERROR)
C
      IFLAGD=0
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LT.2)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN DPPPF1--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 2.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PPF1')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPPPF1--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)ICASPL,ICAPSW,ICAPTY,N,MINMAX
   72   FORMAT('ICASPL,ICAPSW,ICAPTY,N,MINMAX = ',3(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,74)KSLOC,KSSCAL,SHAPE1,SHAPE2
   74   FORMAT('KSLOC,KSSCAL,SHAPE1,SHAPE2 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        DO85I=1,N
          WRITE(ICOUT,86)I,Y(I)
   86     FORMAT('I,Y(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   85   CONTINUE
      ENDIF
C
C               ************************************************
C               **  STEP 2.1--                                **
C               **  COMPUTE CDF VALUE AT GIVEN POINTS         **
C               ************************************************
C
      ZSCALE=B - A
      ZLOC=A
C
      IF(ICASPL.EQ.'UNIF')THEN
        DO1010I=1,N
          CALL UNIPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + ZSCALE*Y2(I)
 1010   CONTINUE
C
      ELSEIF(ICASPL.EQ.'NORM')THEN
        DO1020I=1,N
          CALL NODPPF(DBLE(Y(I)),DXOUT)
          Y2(I)=REAL(DXOUT)
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1020   CONTINUE
C
      ELSEIF(ICASPL.EQ.'LOGI')THEN
        DO1030I=1,N
          CALL LOGPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1030   CONTINUE
C
      ELSEIF(ICASPL.EQ.'DEXP')THEN
        DO1040I=1,N
          CALL DEXPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1040   CONTINUE
C
      ELSEIF(ICASPL.EQ.'CAUC')THEN
        DO1050I=1,N
          CALL CAUPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1050   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TULA')THEN
        DO1060I=1,N
          CALL LAMPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1060   CONTINUE
C
      ELSEIF(ICASPL.EQ.'LOGN' .OR. ICASPL.EQ.'3LGN')THEN
        DO1070I=1,N
          CALL LGNPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1070   CONTINUE
C
      ELSEIF(ICASPL.EQ.'HNOR')THEN
        DO1080I=1,N
          CALL HFNPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1080   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TPP')THEN
        DO1090I=1,N
          CALL TPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1090   CONTINUE
C
      ELSEIF(ICASPL.EQ.'CHIS')THEN
        DO1100I=1,N
          CALL CHSPPF(Y(I),INT(SHAPE1+0.1),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1100   CONTINUE
C
      ELSEIF(ICASPL.EQ.'FPP')THEN
        DO1110I=1,N
          CALL FPPF(Y(I),INT(SHAPE1+0.1),INT(SHAPE2+0.1),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1110   CONTINUE
C
      ELSEIF(ICASPL.EQ.'EXPO' .OR. ICASPL.EQ.'1EXP')THEN
        DO1120I=1,N
          CALL EXPPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1120   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GAMM' .OR. ICASPL.EQ.'3GAM')THEN
        DO1130I=1,N
          CALL GAMPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1130   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BETA')THEN
        DO1140I=1,N
          CALL BETPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
          Y2(I)=KSLOC + ZSCALE*Y2(I)
 1140   CONTINUE
C
      ELSEIF(ICASPL.EQ.'WEIB' .OR. ICASPL.EQ.'3WEI')THEN
        DO1150I=1,N
          CALL WEIPPF(Y(I),SHAPE1,MINMAX,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1150   CONTINUE
C
      ELSEIF(ICASPL.EQ.'EV1 ')THEN
        DO1160I=1,N
          CALL EV1PPF(Y(I),MINMAX,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1160   CONTINUE
C
      ELSEIF(ICASPL.EQ.'EV2 ' .OR. ICASPL.EQ.'3EV2')THEN
        DO1170I=1,N
          CALL EV2PPF(Y(I),SHAPE1,MINMAX,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1170   CONTINUE
C
      ELSEIF(ICASPL.EQ.'PARE')THEN
        ZLOC=SHAPE2
        IF(ZLOC.GT.XMIN)ZLOC=XMIN
        DO1180I=1,N
          CALL PARPPF(Y(I),SHAPE1,ZLOC,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1180   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BINO')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO1190I=1,N
          CALL BINPPF(DBLE(Y(I)),DBLE(SHAPE1),INT(SHAPE2+0.1),DXOUT)
          Y2(I)=REAL(DXOUT)
 1190   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GEOM')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        IF(IGEODF.EQ.'DLMF')THEN
          DO1200I=1,N
            CALL GE2PPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
            Y2(I)=REAL(DXOUT)
 1200     CONTINUE
        ELSE
          DO1205I=1,N
            CALL GEOPPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
            Y2(I)=REAL(DXOUT)
 1205     CONTINUE
        ENDIF
C
      ELSEIF(ICASPL.EQ.'POIS')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO1210I=1,N
          CALL POIPPF(Y(I),SHAPE1,Y2(I))
 1210   CONTINUE
C
      ELSEIF(ICASPL.EQ.'NEBI')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO1220I=1,N
          CALL NBPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=REAL(DXOUT)
 1220   CONTINUE
C
      ELSEIF(ICASPL.EQ.'SEMI')THEN
        DO1230I=1,N
          CALL SEMPPF(Y(I),KSSCAL,Y2(I))
          Y2(I)=KSLOC + Y2(I)
 1230   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TRIA')THEN
        IF(A.EQ.CPUMIN .OR. B.EQ.CPUMAX)THEN
          ZLOWLM=-1.0
          ZUPPLM=1.0
        ELSE
          ZLOWLM=MIN(A,B)
          ZUPPLM=MAX(A,B)
        ENDIF
        IF(ZLOWLM.GT.XMIN)ZLOWLM=XMIN
        IF(ZUPPLM.LT.XMAX)ZUPPLM=XMAX
        IF(SHAPE1.LT.ZLOWLM .OR. SHAPE1.GT.ZUPPLM)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1343)
 1343     FORMAT('       FOR THE TRIANGULAR DISTRIBUTION, THE VALUE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1344)
 1344     FORMAT('       OF THE SHAPE PARAMETER IS OUTSIDE THE ',
     1           'INTERVAL')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1345)
 1345     FORMAT('       OF THE LOWER AND UPPER LIMIT PARAMETERS.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1346)SHAPE1
 1346     FORMAT('       THE VALUE OF THE SHAPE PARAMETER       = ',
     1         G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1347)ZLOWLM
 1347     FORMAT('       THE VALUE OF THE LOWER LIMIT PARAMETER = ',
     1           G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1348)ZUPPLM
 1348     FORMAT('       THE VALUE OF THE LOWER LIMIT PARAMETER = ',
     1           G15.7)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        DO1240I=1,N
          CALL TRIPPF(Y(I),SHAPE1,ZLOWLM,ZUPPLM,Y2(I))
 1240   CONTINUE
C
      ELSEIF(ICASPL.EQ.'INGA' .OR. ICASPL.EQ.'3IGA')THEN
        DO1250I=1,N
          CALL IGPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 1250   CONTINUE
C
      ELSEIF(ICASPL.EQ.'WALD')THEN
        ATEMP=1.0
        DO1260I=1,N
          CALL IGPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(ATEMP),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 1260   CONTINUE
C
      ELSEIF(ICASPL.EQ.'RIGA')THEN
        DO1270I=1,N
          CALL RIGPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 1270   CONTINUE
C
      ELSEIF(ICASPL.EQ.'FATL')THEN
        DO1280I=1,N
          CALL FLPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1280   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GPAR')THEN
        DO1290I=1,N
          CALL GEPPPF(Y(I),SHAPE1,MINMAX,IGEPDF,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1290   CONTINUE
C
      ELSEIF(ICASPL.EQ.'DUNI')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO1300I=1,N
          CALL DISPPF(Y(I),INT(SHAPE1+0.1),Y2(I))
 1300   CONTINUE
C
      ELSEIF(ICASPL.EQ.'NCT ')THEN
        DO1310I=1,N
          CALL NCTPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1310   CONTINUE
C
      ELSEIF(ICASPL.EQ.'NCF ')THEN
        DO1320I=1,N
          CALL NCFPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1320   CONTINUE
C
      ELSEIF(ICASPL.EQ.'NCCS')THEN
        DO1330I=1,N
          CALL NCCPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1330   CONTINUE
C
      ELSEIF(ICASPL.EQ.'NCBE')THEN
        DO1340I=1,N
          CALL NCBPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,Y2(I))
          Y2(I)=KSLOC + ZSCALE*Y2(I)
 1340   CONTINUE
C
      ELSEIF(ICASPL.EQ.'DNCT')THEN
        DO1350I=1,N
          CALL DNTPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1350   CONTINUE
C
      ELSEIF(ICASPL.EQ.'DNCF')THEN
        DO1360I=1,N
          CALL DNFPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,SHAPE4,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1360   CONTINUE
C
      ELSEIF(ICASPL.EQ.'HYPG')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO1365I=1,N
CCCCC     CALL HYPPPF(Y(I),INT(SHAPE1+0.1),INT(SHAPE2+0.1),
CCCCC1                INT(SHAPE3+0.1),Y2(I))
 1365   CONTINUE
C
      ELSEIF(ICASPL.EQ.'VONM')THEN
        DO1370I=1,N
          CALL VONPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1370   CONTINUE
C
      ELSEIF(ICASPL.EQ.'POWN')THEN
        DO1380I=1,N
          CALL PNRPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1380   CONTINUE
C
      ELSEIF(ICASPL.EQ.'PLGN')THEN
        DO1390I=1,N
          CALL PLNPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1390   CONTINUE
C
      ELSEIF(ICASPL.EQ.'ALPH')THEN
        DO1400I=1,N
          CALL ALPPPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 1400   CONTINUE
C
      ELSEIF(ICASPL.EQ.'COSI')THEN
        DO1410I=1,N
          CALL COSPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1410   CONTINUE
C
      ELSEIF(ICASPL.EQ.'COSI')THEN
        DO1415I=1,N
          CALL SINPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1415   CONTINUE
C
      ELSEIF(ICASPL.EQ.'POWF')THEN
        DO1420I=1,N
          CALL POWPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=ZLOC + ZSCALE*Y2(I)
 1420   CONTINUE
C
      ELSEIF(ICASPL.EQ.'CHI ')THEN
        DO1430I=1,N
          CALL CHPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1430   CONTINUE
C
      ELSEIF(ICASPL.EQ.'LOGS')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO1435I=1,N
          CALL DLGPPF(Y(I),SHAPE1,Y2(I))
 1435   CONTINUE
C
      ELSEIF(ICASPL.EQ.'LOGL')THEN
        DO1440I=1,N
          CALL LLGPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1440   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GGAM')THEN
        DO1450I=1,N
          CALL GGDPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1450   CONTINUE
C
      ELSEIF(ICASPL.EQ.'WARI')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        IFLAG2='OFF'
        DO1460I=1,N
CCCCC     CALL WARPPF(Y(I),SHAPE1,SHAPE2,Y2(I),IFLAG2)
          CALL WARPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
 1460   CONTINUE
C
      ELSEIF(ICASPL.EQ.'YULE')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO1470I=1,N
          CALL YULPPF(Y(I),SHAPE1,Y2(I))
 1470   CONTINUE
C
      ELSEIF(ICASPL.EQ.'ANGL')THEN
        DO1480I=1,N
          CALL ANGPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1480   CONTINUE
C
      ELSEIF(ICASPL.EQ.'ARSI')THEN
        DO1490I=1,N
          CALL ARSPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1490   CONTINUE
C
      ELSEIF(ICASPL.EQ.'FNOR')THEN
        DO1500I=1,N
          CALL FNRPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1500   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TNOR')THEN
        DO1510I=1,N
          CALL TNRPPF(DBLE(Y(I)),DBLE(A),DBLE(B),
     1                DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 1510   CONTINUE
C
      ELSEIF(ICASPL.EQ.'LGAM')THEN
        DO1520I=1,N
          CALL LGAPPF(Y(I),SHAPE1,ILGADF,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1520   CONTINUE
C
      ELSEIF(ICASPL.EQ.'HSEC')THEN
        DO1530I=1,N
          CALL HSEPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1530   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GOMP')THEN
        DO1540I=1,N
          CALL GOMPPF(Y(I),SHAPE1,SHAPE2,IGOMDF,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1540   CONTINUE
C
      ELSEIF(ICASPL.EQ.'HCAU')THEN
        DO1550I=1,N
          CALL HFCPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1550   CONTINUE
C
      ELSEIF(ICASPL.EQ.'HALO')THEN
        SHAPE1=-1.0
        DO1560I=1,N
          CALL HFLPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1560   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GHLO')THEN
        DO1570I=1,N
          CALL HFLPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1570   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GEV ')THEN
        DO1580I=1,N
          CALL GEVPPF(Y(I),SHAPE1,MINMAX,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1580   CONTINUE
C
      ELSEIF(ICASPL.EQ.'PAR2')THEN
        ZLOC=SHAPE2
        IF(ZLOC.GT.XMIN)ZLOC=XMIN
        DO1590I=1,N
          CALL PA2PPF(Y(I),SHAPE1,ZLOC,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1590   CONTINUE
C
      ELSEIF(ICASPL.EQ.'DWEI')THEN
        DO1600I=1,N
          CALL DWEPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1600   CONTINUE
C
      ELSEIF(ICASPL.EQ.'WCAU')THEN
        DO1610I=1,N
          CALL WCAPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1610   CONTINUE
C
      ELSEIF(ICASPL.EQ.'EWEI')THEN
        IARG1=1
        DO1620I=1,N
          CALL EWEPPF(Y(I),SHAPE1,SHAPE2,IARG1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1620   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TEXP')THEN
        DO1630I=1,N
          CALL TNEPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1630   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GLOG')THEN
        DO1640I=1,N
          CALL GLOPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1640   CONTINUE
C
      ELSEIF(ICASPL.EQ.'PEXP')THEN
        DO1650I=1,N
          CALL PEXPPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 1650   CONTINUE
C
      ELSEIF(ICASPL.EQ.'DGAM')THEN
        DO1660I=1,N
          CALL DGAPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1660   CONTINUE
C
      ELSEIF(ICASPL.EQ.'MBKA')THEN
        DO1670I=1,N
          CALL MIEPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 1670   CONTINUE
C
      ELSEIF(ICASPL.EQ.'FCAU')THEN
        DO1680I=1,N
          CALL FCAPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1680   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BBIN')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO1690I=1,N
          CALL BBNPPF(Y(I),SHAPE1,SHAPE2,INT(SHAPE3+0.1),Y2(I))
 1690   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BRAD')THEN
        DO1700I=1,N
          CALL BRAPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1700   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GEXP')THEN
        DO1710I=1,N
          CALL GEXPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1710   CONTINUE
C
      ELSEIF(ICASPL.EQ.'RECI')THEN
        DO1715I=1,N
          CALL RECPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1715   CONTINUE
C
      ELSEIF(ICASPL.EQ.'NORX')THEN
        DO1720I=1,N
CCCCC     CALL NMXPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
CCCCC1                Y2(I))
 1720   CONTINUE
C
      ELSEIF(ICASPL.EQ.'IGAM' .OR. ICASPL.EQ.'3IGM')THEN
        DO1730I=1,N
          CALL IGAPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1730   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GTLA')THEN
        DO1740I=1,N
          CALL GLDPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT,
     1                IGLDDF,IWRITE)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 1740   CONTINUE
C
      ELSEIF(ICASPL.EQ.'JOSB')THEN
        DO1750I=1,N
          CALL JSBPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
          Y2(I)=ZLOC + ZSCALE*Y2(I)
 1750   CONTINUE
C
      ELSEIF(ICASPL.EQ.'JOSU')THEN
        DO1760I=1,N
          CALL JSUPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1760   CONTINUE
C
      ELSEIF(ICASPL.EQ.'IWEI')THEN
        DO1770I=1,N
          CALL IWEPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1770   CONTINUE
C
      ELSEIF(ICASPL.EQ.'LDEX')THEN
        DO1780I=1,N
          CALL LDEPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1780   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GEEX')THEN
        DO1790I=1,N
          CALL GEEPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1790   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TSPO')THEN
        IF(A.EQ.CPUMIN .OR. B.EQ.CPUMAX)THEN
          ZLOWLM=0.0
          ZUPPLM=1.0
        ELSE
          ZLOWLM=MIN(A,B)
          ZUPPLM=MAX(A,B)
        ENDIF
        IF(ZLOWLM.GT.XMIN)ZLOWLM=XMIN
        IF(ZUPPLM.LT.XMAX)ZUPPLM=XMAX
        IF(SHAPE1.LT.ZLOWLM .OR. SHAPE1.GT.ZUPPLM)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,31)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1943)
 1943     FORMAT('       FOR THE TWO-SIDED POWER DISTRIBUTION, THE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1944)
 1944     FORMAT('       VALUE OF THE THETA SHAPE PARAMETER IS ',
     1           'OUTSIDE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1945)
 1945     FORMAT('       INTERVAL OF THE LOWER AND UPPER LIMIT ',
     1           'PARAMETERS.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1946)SHAPE1
 1946     FORMAT('       THE VALUE OF THE THETA SHAPE PARAMETER = ',
     1           G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1947)ZLOWLM
 1947     FORMAT('       THE VALUE OF THE LOWER LIMIT PARAMETER = ',
     1           G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1948)ZUPPLM
 1948     FORMAT('       THE VALUE OF THE LOWER LIMIT PARAMETER = ',
     1           G15.7)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        DO1800I=1,N
          CALL TSPPPF(Y(I),SHAPE1,SHAPE2,A,B,Y2(I))
 1800   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BWEI')THEN
        DO1810I=1,N
          CALL BWEPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                Y2(I),DXOUT)
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1810   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GHPP')THEN
        DO1820I=1,N
          CALL GHPPF(Y(I),SHAPE1,SHAPE2,Y2(I),DBLE(Y(I)),DXOUT)
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1820   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GPP')THEN
        HTEMP=0.0
        DO1821I=1,N
          CALL GHPPF(Y(I),SHAPE1,HTEMP,Y2(I),DBLE(Y(I)),DXOUT)
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1821   CONTINUE
C
      ELSEIF(ICASPL.EQ.'HPP')THEN
        GTEMP=0.0
        DO1823I=1,N
          CALL GHPPF(Y(I),GTEMP,SHAPE1,Y2(I),DBLE(Y(I)),DXOUT)
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1823   CONTINUE
      ELSEIF(ICASPL.EQ.'LAND')THEN
        DO1830I=1,N
          DXOUT=LANPPF(DBLE(Y(I)))
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 1830   CONTINUE
C
      ELSEIF(ICASPL.EQ.'ERRO')THEN
        DO1840I=1,N
          CALL ERRPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1840   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TRAP')THEN
        DO1850I=1,N
          CALL TRAPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,SHAPE4,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1850   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GTRA')THEN
        DO1860I=1,N
          CALL GTRPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                SHAPE6,SHAPE7,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1860   CONTINUE
C
      ELSEIF(ICASPL.EQ.'FT  ')THEN
        DO1870I=1,N
          CALL FTPPF(Y(I),INT(SHAPE1+0.1),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1870   CONTINUE
C
      ELSEIF(ICASPL.EQ.'SLAS')THEN
        DO1880I=1,N
          CALL SLAPPF(Y(I),Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1880   CONTINUE
C
      ELSEIF(ICASPL.EQ.'SNOR')THEN
        DO1890I=1,N
          CALL SNPPF(Y(I),SHAPE1,ISKNDF,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1890   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TSKE')THEN
        DO1900I=1,N
          CALL STPPF(Y(I),INT(SHAPE1+0.1),SHAPE2,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1900   CONTINUE
C
      ELSEIF(ICASPL.EQ.'IBET')THEN
        DO1910I=1,N
          CALL IBPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1910   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GOMM')THEN
        IF(IMAKDF.EQ.'DLMF')THEN
          DO1930I=1,N
            CALL MAKPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,Y2(I))
            Y2(I)=KSLOC + KSSCAL*Y2(I)
 1930     CONTINUE
        ELSEIF(IMAKDF.EQ.'MEEK')THEN
          XI=SHAPE1/SHAPE3
          THETA=SHAPE2/SHAPE1
          ALAMB=SHAPE3
          DO1935I=1,N
            CALL MAKPPF(Y(I),XI,ALAMBA,THETA,Y2(I))
            Y2(I)=KSLOC + KSSCAL*Y2(I)
 1935     CONTINUE
        ELSEIF(IMAKDF.EQ.'REPA')THEN
          DO1938I=1,N
            CALL MA2PPF(Y(I),SHAPE1,SHAPE2,Y2(I))
            Y2(I)=KSLOC + KSSCAL*Y2(I)
 1938     CONTINUE
        ENDIF
C
      ELSEIF(ICASPL.EQ.'LSNO')THEN
        DO1940I=1,N
          CALL LSNPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1940   CONTINUE
C
      ELSEIF(ICASPL.EQ.'LSKT')THEN
        DO1950I=1,N
          CALL LSTPPF(Y(I),INT(SHAPE1+0.1),SHAPE2,SHAPE3,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1950   CONTINUE
C
      ELSEIF(ICASPL.EQ.'POLY')THEN
        DO1960I=1,N
          CALL POLPPF(Y(I),SHAPE1,SHAPE2,INT(SHAPE3+0.1),Y2(I))
 1960   CONTINUE
C
      ELSEIF(ICASPL.EQ.'HERM')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO1970I=1,N
          CALL HERPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
 1970   CONTINUE
C
      ELSEIF(ICASPL.EQ.'SDEX')THEN
        DO1980I=1,N
          CALL SDEPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1980   CONTINUE
C
      ELSEIF(ICASPL.EQ.'ADEX')THEN
        DO1990I=1,N
          CALL ADEPPF(Y(I),SHAPE1,IADEDF,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 1990   CONTINUE
C
      ELSEIF(ICASPL.EQ.'MAXW' .OR. ICASPL.EQ.'1MAX')THEN
        IF(ICASPL.EQ.'1MAX')THEN
          AVAL=0.0
        ELSE
          AVAL=KSLOC
        ENDIF
        DO2000I=1,N
          CALL MAXPPF(Y(I),Y2(I))
          Y2(I)=AVAL + KSSCAL*Y2(I)
 2000   CONTINUE
C
      ELSEIF(ICASPL.EQ.'RAYL' .OR. ICASPL.EQ.'1RAY')THEN
        IF(ICASPL.EQ.'1RAY')THEN
          AVAL=0.0
        ELSE
          AVAL=KSLOC
        ENDIF
        DO2010I=1,N
          CALL RAYPPF(Y(I),Y2(I))
          Y2(I)=AVAL + KSSCAL*Y2(I)
 2010   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GIGA')THEN
        IF(IGIGDF.EQ.'2PAR')THEN
          DO2020I=1,N
            CALL GI2PPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
            Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2020     CONTINUE
        ELSE
          DO2030I=1,N
            CALL GIGPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                  DBLE(SHAPE3),DXOUT)
            Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2030     CONTINUE
        ENDIF
C
      ELSEIF(ICASPL.EQ.'GALP')THEN
        DO2040I=1,N
          CALL GALPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),IADEDF,DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2040   CONTINUE
C
      ELSEIF(ICASPL.EQ.'MCLE')THEN
        DO2050I=1,N
          CALL MCLPPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2050   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BEIP')THEN
        DO2060I=1,N
          CALL BEIPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DBLE(SHAPE3),
     1                IBEIDF,DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2060   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BEIK')THEN
        DO2070I=1,N
CCCCC     CALL BEKPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DBLE(SHAPE3),
CCCCC1                IBEIDF,DXOUT)
CCCCC     Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2070   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GMCL')THEN
        DO2080I=1,N
          CALL GMCPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2080   CONTINUE
C
      ELSEIF(ICASPL.EQ.'G5LO')THEN
        XPAR(1)=DBLE(SHAPE1)
        XPAR(2)=DBLE(SHAPE2)
        XPAR(3)=DBLE(SHAPE3)
        DO2090I=1,N
          DXOUT=QUAGLO(DBLE(Y(I)),XPAR)
          Y2(I)=REAL(DXOUT)
 2090   CONTINUE
C
      ELSEIF(ICASPL.EQ.'WAKE')THEN
        XPAR(1)=DBLE(KSLOC)
        XPAR(2)=DBLE(KSSCAL)
        XPAR(3)=DBLE(SHAPE1)
        XPAR(4)=DBLE(SHAPE2)
        XPAR(5)=DBLE(SHAPE3)
        DO2100I=1,N
          DXOUT=QUAWAK(DBLE(Y(I)),XPAR)
          Y2(I)=REAL(DXOUT)
 2100   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BNOR')THEN
        DO2110I=1,N
          CALL BNOPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2110   CONTINUE
C
      ELSEIF(ICASPL.EQ.'G2LO')THEN
        DO2120I=1,N
          CALL GL2PPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2120   CONTINUE
C
      ELSEIF(ICASPL.EQ.'G3LO')THEN
        DO2130I=1,N
          CALL GL3PPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2130   CONTINUE
C
      ELSEIF(ICASPL.EQ.'G4LO')THEN
        DO2140I=1,N
          CALL GL4PPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2140   CONTINUE
C
      ELSEIF(ICASPL.EQ.'ALDE')THEN
        DO2150I=1,N
          CALL ALDPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2150   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BGEO')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        IF(IBGEDF.EQ.'UNSH')THEN
          DO2160I=1,N
            CALL BGEPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
 2160     CONTINUE
        ELSE
          DO2165I=1,N
            CALL BG2PPF(Y(I),SHAPE1,SHAPE2,Y2(I))
 2165     CONTINUE
        ENDIF
C
      ELSEIF(ICASPL.EQ.'ZETA')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2170I=1,N
          CALL ZETPPF(Y(I),SHAPE1,Y2(I))
 2170   CONTINUE
C
      ELSEIF(ICASPL.EQ.'ZIPF')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2180I=1,N
          CALL ZIPPPF(Y(I),SHAPE1,INT(SHAPE2+0.1),Y2(I))
 2180   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BTAN')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2190I=1,N
          CALL BTAPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
 2190   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BNBI')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2200I=1,N
          CALL GWAPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DXOUT)
          Y2(I)=REAL(DXOUT)
 2200   CONTINUE
C
      ELSEIF(ICASPL.EQ.'LPOI')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2210I=1,N
          CALL LPOPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
 2210   CONTINUE
C
      ELSEIF(ICASPL.EQ.'LICT')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2220I=1,N
          CALL LCTPPF(Y(I),INT(SHAPE1+0.1),Y2(I))
 2220   CONTINUE
C
      ELSEIF(ICASPL.EQ.'MATC')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2230I=1,N
          CALL MATPPF(Y(I),INT(SHAPE1+0.1),Y2(I))
 2230   CONTINUE
C
      ELSEIF(ICASPL.EQ.'LBET')THEN
        YLOWLM=SHAPE3
        YUPPLM=SHAPE4
        EPS=(XMAX-XMIN)*0.01
        IF(YLOWLM.GT.XMIN)YLOWLM=XMIN-EPS
        IF(YUPPLM.LT.XMAX)YUPPLM=XMAX+EPS
        DO2240I=1,N
          CALL LBEPPF(Y(I),SHAPE1,SHAPE2,YLOWLM,YUPPLM,Y2(I))
          Y2(I)=KSLOC + KSSCAL*Y2(I)
 2240   CONTINUE
C
      ELSEIF(ICASPL.EQ.'AEPP')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2250I=1,N
          CALL PAPPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=REAL(DXOUT)
 2250   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GLOS')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2270I=1,N
          CALL GLSPPF(Y(I),SHAPE1,SHAPE2,Y2(I))
 2270   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GNBI')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2280I=1,N
          CALL GNBPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,Y2(I))
 2280   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GEET')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2290I=1,N
          CALL GETPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                IGETDF,DXOUT)
          Y2(I)=REAL(DXOUT)
 2290   CONTINUE
C
      ELSEIF(ICASPL.EQ.'QBIN')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2300I=1,N
          CALL QBIPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,Y2(I))
 2300   CONTINUE
C
      ELSEIF(ICASPL.EQ.'CONS')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2310I=1,N
          CALL CONPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                ICONDF,DXOUT)
          Y2(I)=REAL(DXOUT)
 2310   CONTINUE
C
      ELSEIF(ICASPL.EQ.'LKAT')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2320I=1,N
          CALL LKPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DXOUT)
          Y2(I)=REAL(DXOUT)
 2320   CONTINUE
C
      ELSEIF(ICASPL.EQ.'KATZ')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2330I=1,N
          CALL KATPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),IKATDF,DXOUT)
          Y2(I)=REAL(DXOUT)
 2330   CONTINUE
C
      ELSEIF(ICASPL.EQ.'DISW')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2340I=1,N
          CALL DIWPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=REAL(DXOUT)
 2340   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GLGP')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2350I=1,N
          CALL GLGPPF(Y(I),SHAPE1,INT(SHAPE2+0.1),SHAPE3,Y2(I))
 2350   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TGNB')THEN
        IF(IFLAGD.EQ.1)GOTO8000
        DO2360I=1,N
          CALL GNTPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,INT(SHAPE4+0.1),Y2(I))
 2360   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TOPL')THEN
        DO2370I=1,N
          CALL TOPPPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2370   CONTINUE
C
      ELSEIF(ICASPL.EQ.'GTOL')THEN
        DO2380I=1,N
          CALL GTLPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          DXOUT=DBLE(A) + (DBLE(B) - DBLE(A))*DXOUT
          Y2(I)=REAL(DXOUT)
 2380   CONTINUE
C
      ELSEIF(ICASPL.EQ.'RGTL')THEN
        DO2390I=1,N
          CALL RGTPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          DXOUT=DBLE(A) + (DBLE(B) - DBLE(A))*DXOUT
          Y2(I)=REAL(DXOUT)
 2390   CONTINUE
C
      ELSEIF(ICASPL.EQ.'SLOP')THEN
        DO2400I=1,N
          CALL SLOPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=ZLOC + ZSCALE*Y2(I)
 2400   CONTINUE
C
      ELSEIF(ICASPL.EQ.'OGIV')THEN
        DO2410I=1,N
          CALL OGIPPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=ZLOC + ZSCALE*Y2(I)
 2410   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TSSL')THEN
        DO2420I=1,N
          CALL TSSPPF(Y(I),SHAPE1,SHAPE2,A,B,Y2(I))
 2420   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TSOG')THEN
        DO2430I=1,N
          CALL TSOPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(A),DBLE(B),DXOUT)
          Y2(I)=REAL(DXOUT)
 2430   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BUR2')THEN
        DO2450I=1,N
          CALL BU2PPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2450   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BUR3')THEN
        DO2460I=1,N
          CALL BU3PPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2460   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BUR4')THEN
        DO2470I=1,N
          CALL BU4PPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2470   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BUR5')THEN
        DO2480I=1,N
          CALL BU5PPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2480   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BUR6')THEN
        DO2490I=1,N
          CALL BU6PPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2490   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BUR7')THEN
        DO2500I=1,N
          CALL BU7PPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2500   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BUR8')THEN
        DO2510I=1,N
          CALL BU8PPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2510   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BUR9')THEN
        DO2520I=1,N
          CALL BU9PPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2520   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BU10')THEN
        DO2530I=1,N
          CALL B10PPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2530   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BU11')THEN
        DO2540I=1,N
          CALL B11PPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2540   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BU12')THEN
        DO2550I=1,N
          CALL B12PPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2550   CONTINUE
C
      ELSEIF(ICASPL.EQ.'DPUN')THEN
        DO2560I=1,N
          CALL DPUPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DBLE(SHAPE4),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2560   CONTINUE
C
      ELSEIF(ICASPL.EQ.'KUMA')THEN
        DO2570I=1,N
          CALL KUMPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=ZLOC + ZSCALE*REAL(DXOUT)
 2570   CONTINUE
C
      ELSEIF(ICASPL.EQ.'RPOW')THEN
        DO2580I=1,N
          CALL RPOPPF(Y(I),SHAPE1,Y2(I))
          Y2(I)=ZLOC + ZSCALE*Y2(I)
 2580   CONTINUE
C
      ELSEIF(ICASPL.EQ.'UTSP')THEN
        DO2590I=1,N
          CALL UTSPPF(Y(I),SHAPE1,SHAPE2,SHAPE3,SHAPE4,SHAPE5,
     1                SHAPE6,Y2(I))
 2590   CONTINUE
C
      ELSEIF(ICASPL.EQ.'MUTH')THEN
        DO2600I=1,N
          CALL MUTPPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2600   CONTINUE
C
      ELSEIF(ICASPL.EQ.'LEXP')THEN
        DO2610I=1,N
          CALL LEXPPF(DBLE(Y(I)),DBLE(SHAPE1),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2610   CONTINUE
C
      ELSEIF(ICASPL.EQ.'TPAR')THEN
        DO2620I=1,N
          CALL TNPPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2620   CONTINUE
C
      ELSEIF(ICASPL.EQ.'BFRA')THEN
        DO2630I=1,N
          CALL BFRPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2630   CONTINUE
C
      ELSEIF(ICASPL.EQ.'L3EX')THEN
        DO2640I=1,N
          CALL LE3PPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(SHAPE3),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2640   CONTINUE
C
      ELSEIF(ICASPL.EQ.'KAPP')THEN
        DO2650I=1,N
          CALL KAPPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),
     1                DBLE(KSLOC),DBLE(KSSCAL),DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2650   CONTINUE
C
      ELSEIF(ICASPL.EQ.'PEA3')THEN
        DO2660I=1,N
          CALL PE3PPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(KSLOC),DBLE(KSSCAL),
     1                DXOUT)
          Y2(I)=KSLOC + KSSCAL*REAL(DXOUT)
 2660   CONTINUE
C
      ELSEIF(ICASPL.EQ.'EEWE')THEN
        DO2670I=1,N
          CALL EEWPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DBLE(SHAPE3),
     1                DBLE(SHAPE4),DBLE(SHAPE5),DXOUT)
          Y2(I)=REAL(DXOUT)
 2670   CONTINUE
      ELSEIF(ICASPL.EQ.'BFWE')THEN
        DO2680I=1,N
          CALL BFWPPF(DBLE(Y(I)),DBLE(SHAPE1),DBLE(SHAPE2),DXOUT)
          Y2(I)=REAL(DXOUT)
 2680   CONTINUE
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8011)ICASPL
 8011   FORMAT('      UNKNOWN DISTRIBUTION -- ',A40)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      GOTO9000
C
C     SET AN ERROR FLAG TO INDICATE A DISCRETE DISTRIBUTION
C     IS NOT TO BE PROCESSED.
C
 8000 CONTINUE
      IFLAGD=99
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      KSLOC=KSLOC2
      KSSCAL=KSSCA2
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PPF1')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPPF1--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,N,MINMAX,IERROR
 9012   FORMAT('ICASPL,N,MINMAX,IERROR = ',A4,2X,2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)KSLOC,KSSCAL
 9014   FORMAT('KSLOC,KSSCAL = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,N
          WRITE(ICOUT,9021)I,Y(I),Y2(I)
 9021     FORMAT('I,Y(I),Y2(I), = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPPGF(ICASPL,IDIST,NUMSHA,IFORSW,IADCVM,IGOFFS,
     1                  IGOFFM,PID,IVARID,IVARI2,NREPL,
     1                  N,XMEAN,XSD,XMIN,XMAX,
     1                  YLOWLM,YUPPLM,A,B,MINMAX,
     1                  SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1                  SHAPE5,SHAPE6,SHAPE7,
     1                  KSLOC,KSSCAL,ICAPSW,ICAPTY,IRTFFF,IRTFFP,
     1                  STATVA,STATV2,CDF1,CDF2,CDF3,CDF4,
     1                  PVAL,YSTAT,NMCSAM,NCNT,
     1                  XTEMP,MAXNXT,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--PRINT THE OUTPUT FOR THE PPCC TEST
C              (UNCENSORED, UNGROUPED CASE) IN ASCII, HTML, LATEX,
C              OR RTF FORMAT
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C         --DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/11
C     ORIGINAL VERSION--NOVEMBER  2009.
C     UPDATED         --JUNE      2011. IF IGOFFM = NULL, NO P-VALUES
C                                       OR CRITICAL VALUES
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      REAL PID(*)
      REAL YSTAT(*)
      REAL XTEMP(*)
C
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
      CHARACTER*4 ICASPL
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IADCVM
      CHARACTER*4 IADCVT
      CHARACTER*4 IGOFFS
      CHARACTER*4 IGOFFM
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IWRITE
      CHARACTER*4 IERROR
C
      CHARACTER*60 IDIST
      CHARACTER*40 IRTFFF
      CHARACTER*40 IRTFFP
C
      CHARACTER*4 IRTFMD
      COMMON/COMRTF/IRTFMD
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      REAL KSLOC
      REAL KSSCAL
C
C---------------------------------------------------------------------
C
      PARAMETER (NUMALP=14)
      REAL ALPHA(NUMALP)
C
      CHARACTER*1 IBASLC
      PARAMETER(NUMCLI=4)
      PARAMETER(MAXLIN=2)
      PARAMETER (MAXROW=50)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*15 IVALUE(MAXROW,NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
      LOGICAL IFLAG1
      LOGICAL IFLAG2
      LOGICAL IFLAG3
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
      DATA ALPHA/
     1 0.0, 0.5, 1.0, 2.5, 5.0, 10.0, 25.0, 50.0, 75.0,
     1  90.0, 95.0, 97.5, 99.0, 99.5/
C
C-----START POINT-----------------------------------------------------
C
C
      ISUBN1='DPPP'
      ISUBN2='GF  '
      IERROR='NO'
      IWRITE='OFF'
      CALL DPCONA(92,IBASLC)
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PPGF')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPPPGF--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)ICASPL,IDIST
   72   FORMAT('ICASPL,IDIST = ',A4,2X,A60)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,73)N,MINMAX,XMIN,XMAX,XMEAN,XSD
   73   FORMAT('N,MINMAX,XMIN,XMAX,XMEAN,XSD = ',2I8,4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,75)YLOWLM,YUPPLM
   75   FORMAT('YLOWLM,YUPPLM = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *******************************************
C               **   STEP 1--                            **
C               **   DETERMINE CRITICAL VALUES FROM      **
C               **   PRE-COMPUTED TABLES.  CURRENTLY NOT **
C               **   SUPPORTED, BUT MAY ADD ABILITY TO   **
C               **   READ FROM EXTERNAL FILES (FILES ARE **
C               **   CURRENTLY AVAILABLE FOR NORMAL AND  **
C               **   UNIFORM DISTRIBUTIONS).             **
C               *******************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PPGF')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IADCVT=IADCVM
      STATV2=STATVA
C
C     COMMENT OUT FOR NOW.  CURRENTLY, CRITICAL VALUES ALWAYS
C     GENERATED FROM SIMULATION.
C
CCCCC IF(IADCVM.EQ.'TABL')THEN
CCCCC   IERROR='YES'
CCCCC   GOTO9000
CCCCC ELSE
CCCCC   IADCVM='SIMU'
CCCCC ENDIF
C
C               *******************************************
C               **   STEP 41--                           **
C               **   WRITE OUT TABLES FOR PPCC GOODNESS  **
C               **   OF FIT TEST                         **
C               *******************************************
C
      ISTEPN='41'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PPGF')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='PPCC Goodness of Fit Test'
      NCTITL=25
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Response Variable: '
      WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
      WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      DO4101I=1,NREPL
        ICNT=ICNT+1
        ITEXT(ICNT)='Factor Variable  : '
        WRITE(ITEXT(ICNT)(17:17),'(I1)')I
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(I+1)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(I+1)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=PID(I+1)
        IDIGIT(ICNT)=NUMDIG
 4101 CONTINUE
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='H0: The distribution fits the data'
      NCTEXT(ICNT)=34
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Ha: The distribution does not fit the data'
      NCTEXT(ICNT)=43
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      IEND=46
      DO4111I=46,1,-1
        IF(IDIST(I:I).NE.' ')THEN
          IEND=I
          GOTO4119
        ENDIF
 4111 CONTINUE
      IEND=1
 4119 CONTINUE
      CALL EXTBOU(ICASPL,IBOUND)
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)(1:14)='Distribution: '
      ISTRT=15
      ISTOP=15+IEND-1
      ITEXT(ICNT)(ISTRT:ISTOP)=IDIST(1:IEND)
      NCTEXT(ICNT)=ISTOP
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      IF(IBOUND.EQ.0)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Location Parameter:'
        NCTEXT(ICNT)=19
        AVALUE(ICNT)=KSLOC
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Scale Parameter:'
        NCTEXT(ICNT)=16
        AVALUE(ICNT)=KSSCAL
        IDIGIT(ICNT)=NUMDIG
      ELSE
        ICNT=ICNT+1
        ITEXT(ICNT)='Lower Limit Parameter:'
        NCTEXT(ICNT)=22
        AVALUE(ICNT)=A
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Upper Limit Parameter:'
        NCTEXT(ICNT)=22
        AVALUE(ICNT)=B
        IDIGIT(ICNT)=NUMDIG
      ENDIF
      IF(NUMSHA.GE.1)THEN
        DO4140I=1,NUMSHA
          ICNT=ICNT+1
          ITEXT(ICNT)='Shape Parameter  :'
          WRITE(ITEXT(ICNT)(17:17),'(I1)')I
          NCTEXT(ICNT)=18
          IF(I.EQ.1)THEN
            AVALUE(ICNT)=SHAPE1
          ELSEIF(I.EQ.2)THEN
            AVALUE(ICNT)=SHAPE2
          ELSEIF(I.EQ.3)THEN
            AVALUE(ICNT)=SHAPE3
          ELSEIF(I.EQ.4)THEN
            AVALUE(ICNT)=SHAPE4
          ELSEIF(I.EQ.5)THEN
            AVALUE(ICNT)=SHAPE5
          ELSEIF(I.EQ.6)THEN
            AVALUE(ICNT)=SHAPE6
          ELSEIF(I.EQ.7)THEN
            AVALUE(ICNT)=SHAPE7
          ENDIF
          IDIGIT(ICNT)=NUMDIG
 4140   CONTINUE
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Minimum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMIN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Maximum:'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=XMAX
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Mean:'
      NCTEXT(ICNT)=12
      AVALUE(ICNT)=XMEAN
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample SD:'
      NCTEXT(ICNT)=10
      AVALUE(ICNT)=XSD
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='PPCC Test Statistic Value:'
      NCTEXT(ICNT)=38
      AVALUE(ICNT)=STATVA
      IDIGIT(ICNT)=NUMDIG
C
CCCCC IF(IADCVM.EQ.'SIMU' .AND. IGOFFM.NE.'NULL')THEN
      IF(IGOFFM.NE.'NULL')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Number of Monte Carlo Simulations:'
        NCTEXT(ICNT)=34
        AVALUE(ICNT)=REAL(NMCSAM)
        IDIGIT(ICNT)=NUMDIG
        IF(NMCSAM.NE.NCNT)THEN
          ICNT=ICNT+1
          ITEXT(ICNT)='Number of Samples Rejected:'
          NCTEXT(ICNT)=27
          AVALUE(ICNT)=REAL(NMCSAM-NCNT)
          IDIGIT(ICNT)=NUMDIG
        ENDIF
        ICNT=ICNT+1
        ITEXT(ICNT)='CDF Value:'
        NCTEXT(ICNT)=10
        STACDF=1.0 - PVAL
        AVALUE(ICNT)=STACDF
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='P-Value:'
        NCTEXT(ICNT)=7
        AVALUE(ICNT)=PVAL
        IDIGIT(ICNT)=NUMDIG
      ENDIF
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO2310I=1,NUMROW
        NTOT(I)=15
 2310 CONTINUE
C
      ITITLZ=' '
      NCTITZ=0
      IFRST=.TRUE.
      IF(IGOFFM.NE.'NULL')THEN
        IF(IGOFFS.EQ.'ON')THEN
          ITITLZ='(Fully Specified Model)'
          NCTITZ=23
        ELSE
          ITITLZ='(Parameters Estimated from the Data)'
          NCTITZ=36
        ENDIF
CCCCC   IF(IADCVM.EQ.'SIMU')THEN
          ILAST=.TRUE.
CCCCC   ELSE
CCCCC     ILAST=.FALSE.
CCCCC   ENDIF
      ELSE
        ILAST=.TRUE.
      ENDIF
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
      IF(IGOFFM.EQ.'NULL')GOTO9000
C
      ITITLE=' '
      NCTITL=0
      ITITL9=' '
      NCTIT9=0
C
CCCCC IF(IADCVM.EQ.'SIMU')THEN
        ITITLE(1:44)='Percent Points of the Reference Distribution'
        NCTITL=44
        NUMLIN=1
        NUMROW=14
        NUMCOL=3
        ITITL2(1,1)='Percent Point'
        ITITL2(1,2)=' '
        ITITL2(1,3)='Value'
        NCTIT2(1,1)=13
        NCTIT2(1,2)=1
        NCTIT2(1,3)=5
C
        NMAX=0
        DO2521I=1,NUMCOL
          VALIGN(I)='b'
          ALIGN(I)='r'
          NTOT(I)=15
          IF(I.EQ.2)NTOT(I)=5
          NMAX=NMAX+NTOT(I)
          IDIGIT(I)=NUMDIG
          ITYPCO(I)='NUME'
 2521   CONTINUE
        ITYPCO(2)='ALPH'
        IDIGIT(1)=1
        IDIGIT(3)=4
        DO2523I=1,NUMROW
          DO2525J=1,NUMCOL
            NCVALU(I,J)=0
            IVALUE(I,J)=' '
            NCVALU(I,J)=0
            AMAT(I,J)=0.0
            IF(J.EQ.1)THEN
              AMAT(I,J)=ALPHA(I)
            ELSEIF(J.EQ.2)THEN
              IVALUE(I,J)='='
              NCVALU(I,J)=1
            ELSEIF(J.EQ.3)THEN
              IF(I.GE.2)THEN
CCCCC           P100=100.0 - ALPHA(I)
                P100=ALPHA(I)
                CALL PERCEN(P100,YSTAT,NCNT,IWRITE,XTEMP,MAXNXT,
     1                      XPERC,IBUGA3,IERROR)
                XPERC2=RND(XPERC,4)
                AMAT(I,J)=XPERC2
              ENDIF
            ENDIF
 2525     CONTINUE
 2523   CONTINUE
C
        IWHTML(1)=150
        IWHTML(2)=50
        IWHTML(3)=150
        IWRTF(1)=2000
        IWRTF(2)=IWRTF(1)+500
        IWRTF(3)=IWRTF(2)+2000
        IFRST=.TRUE.
        ILAST=.FALSE.
C
        CALL DPDTA4(ITITL9,NCTIT9,
     1              ITITLE,NCTITL,ITITL2,NCTIT2,
     1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1              IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMROW,
     1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1              ICAPSW,ICAPTY,IFRST,ILAST,
     1              ISUBRO,IBUGA3,IERROR)
C
        CDF1=AMAT(3,3)
        CDF2=AMAT(4,3)
        CDF3=AMAT(5,3)
        CDF4=AMAT(6,3)
C
        ITITL9=' '
        NCTIT9=0
        ITITLE='Conclusions (Lower 1-Tailed Test)'
        NCTITL=33
        NUMLIN=1
        NUMROW=4
        NUMCOL=4
        ITITL2(1,1)='Alpha'
        ITITL2(1,2)='CDF'
        ITITL2(1,3)='Critical Value'
        ITITL2(1,4)='Conclusion'
        NCTIT2(1,1)=5
        NCTIT2(1,2)=3
        NCTIT2(1,3)=14
        NCTIT2(1,4)=10
C
        NMAX=0
        DO2821I=1,NUMCOL
          VALIGN(I)='b'
          ALIGN(I)='r'
          NTOT(I)=15
          IF(I.EQ.1 .OR. I.EQ.2)NTOT(I)=7
          IF(I.EQ.3)NTOT(I)=17
          NMAX=NMAX+NTOT(I)
CCCCC     IDIGIT(I)=NUMDIG
          IDIGIT(I)=4
          ITYPCO(I)='ALPH'
 2821   CONTINUE
        ITYPCO(3)='NUME'
        IDIGIT(1)=0
        IDIGIT(2)=0
        DO2823I=1,NUMROW
          DO2825J=1,NUMCOL
            NCVALU(I,J)=0
            IVALUE(I,J)=' '
            NCVALU(I,J)=0
            AMAT(I,J)=0.0
 2825     CONTINUE
 2823   CONTINUE
        IVALUE(1,1)='1%'
        IVALUE(2,1)='2.5%'
        IVALUE(3,1)='5%'
        IVALUE(4,1)='10%'
        NCVALU(1,1)=2
        NCVALU(2,1)=4
        NCVALU(3,1)=2
        NCVALU(4,1)=3
        IVALUE(1,2)='1%'
        IVALUE(2,2)='2.5%'
        IVALUE(3,2)='5%'
        IVALUE(4,2)='10%'
        NCVALU(1,2)=2
        NCVALU(2,2)=4
        NCVALU(3,2)=2
        NCVALU(4,2)=3
        IVALUE(1,4)='Accept H0'
        IVALUE(2,4)='Accept H0'
        IVALUE(3,4)='Accept H0'
        IVALUE(4,4)='Accept H0'
        NCVALU(1,4)=9
        NCVALU(2,4)=9
        NCVALU(3,4)=9
        NCVALU(4,4)=9
        IF(STATVA.LT.CDF1)IVALUE(1,4)='Reject H0'
        IF(STATVA.LT.CDF2)IVALUE(2,4)='Reject H0'
        IF(STATVA.LT.CDF3)IVALUE(3,4)='Reject H0'
        IF(STATVA.LT.CDF4)IVALUE(4,4)='Reject H0'
        AMAT(1,3)=RND(CDF1,IDIGIT(3))
        AMAT(2,3)=RND(CDF2,IDIGIT(3))
        AMAT(3,3)=RND(CDF3,IDIGIT(3))
        AMAT(4,3)=RND(CDF4,IDIGIT(3))
C
        IWHTML(1)=150
        IWHTML(2)=150
        IWHTML(3)=150
        IWHTML(4)=150
        IWRTF(1)=1500
        IWRTF(2)=IWRTF(1)+1500
        IWRTF(3)=IWRTF(2)+2000
        IWRTF(4)=IWRTF(3)+2000
        IFRST=.FALSE.
C
C       FOR LATEX, WE WANT TO ENSURE THAT TRAILING LINE IS PART
C       OF THE TABLE SO THAT IT WILL BE PRINTED IN THE PROPER PLACE.
C
        IF(ICAPTY.EQ.'LATE')THEN
          ILAST=.FALSE.
        ELSE
          ILAST=.TRUE.
        ENDIF
C
        CALL DPDTA4(ITITL9,NCTIT9,
     1              ITITLE,NCTITL,ITITL2,NCTIT2,
     1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1              IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMROW,
     1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1              ICAPSW,ICAPTY,IFRST,ILAST,
     1              ISUBRO,IBUGA3,IERROR)
C
        IF(IPRINT.EQ.'ON')THEN
C
        ITITLE(1:26)='*Critical Values Based on '
        WRITE(ITITLE(27:34),'(I8)')NCNT
        ITITLE(35:58)=' Monte Carlo Simulations'
        NCTITL=58
C
        IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'HTML')THEN
          CALL DPHTMV(ITITLE,NCTITL,CPUMIN,NUMDIG)
        ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'LATE')THEN
          CALL DPLATV(ITITLE,NCTITL,CPUMIN,NUMDIG)
          IFLAG1=.FALSE.
          IFLAG2=.TRUE.
          IFLAG3=.TRUE.
          CALL DPLATZ(IFLAG1,IFLAG2,IFLAG3,NHEAD)
        ELSEIF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')THEN
C
          IRTFMD='OFF'
          IPTSZ=14
          WRITE(ICOUT,8199)IBASLC,IPTSZ
 8199     FORMAT(A1,'fs',I2)
          CALL DPWRST(ICOUT,'WRIT')
          IF(IRTFFF.EQ.'Courier New')THEN
            ITEMP=1
          ELSEIF(IRTFFF.EQ.'Lucida Console')THEN
            ITEMP=8
          ENDIF 
          WRITE(ICOUT,8301)IBASLC,ITEMP
          CALL DPWRST(ICOUT,'WRIT')
          CALL DPRTFZ(ITITLE,NCTITL,CPUMIN,NUMDIG)
CCCCC     CALL DPRTF6(NHEAD)
CCCCC     CALL DPRTF6(NHEAD)
          IF(IRTFFP.EQ.'Times New Roman')THEN
            ITEMP=0
          ELSEIF(IRTFFP.EQ.'Lucida Sans')THEN
            ITEMP=6
          ELSEIF(IRTFFP.EQ.'Arial')THEN
            ITEMP=2
          ELSEIF(IRTFFP.EQ.'Bookman')THEN
            ITEMP=3
          ELSEIF(IRTFFP.EQ.'Georgia')THEN
            ITEMP=4
          ELSEIF(IRTFFP.EQ.'Tahoma')THEN
            ITEMP=5
          ELSEIF(IRTFFP.EQ.'Verdana')THEN
            ITEMP=7
          ENDIF 
          WRITE(ICOUT,8301)IBASLC,ITEMP
 8301     FORMAT(A1,'f',I1)
          CALL DPWRST(ICOUT,'WRIT')
C
C         END TABLE AND RESET "ASIS" MODE
C
          IF(IRTFFF.EQ.'Courier New')THEN
            ITEMP=1
          ELSEIF(IRTFFF.EQ.'Lucida Console')THEN
            ITEMP=8
          ENDIF 
          WRITE(ICOUT,8091)IBASLC,ITEMP
 8091     FORMAT(A1,'f',I1)
          CALL DPWRST(ICOUT,'WRIT')
C
          CALL DPRTF6(NHEAD)
          CALL DPRTF6(NHEAD)
C
          IRTFMD='VERB'
C
        ELSE
          WRITE(ICOUT,2589)ITITLE(1:58)
 2589     FORMAT(A60)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        ENDIF
C
CCCCC ELSE
C
CCCCC   ITITL9=' '
CCCCC   NCTIT9=0
CCCCC   ITITLE='Conclusions (Upper 1-Tailed Test)'
CCCCC   NCTITL=33
CCCCC   NUMLIN=1
CCCCC   NUMROW=4
CCCCC   NUMCOL=4
CCCCC   ITITL2(1,1)='Alpha'
CCCCC   ITITL2(1,2)='CDF'
CCCCC   ITITL2(1,3)='Critical Value'
CCCCC   ITITL2(1,4)='Conclusion'
CCCCC   NCTIT2(1,1)=5
CCCCC   NCTIT2(1,2)=3
CCCCC   NCTIT2(1,3)=14
CCCCC   NCTIT2(1,4)=10
C
CCCCC   NMAX=0
CCCCC   DO2421I=1,NUMCOL
CCCCC     VALIGN(I)='b'
CCCCC     ALIGN(I)='r'
CCCCC     NTOT(I)=15
CCCCC     IF(I.EQ.1 .OR. I.EQ.2)NTOT(I)=7
CCCCC     IF(I.EQ.3)NTOT(I)=17
CCCCC     NMAX=NMAX+NTOT(I)
CCCCC     IDIGIT(I)=NUMDIG
CCCCC     IDIGIT(I)=3
CCCCC     ITYPCO(I)='ALPH'
C2421   CONTINUE
CCCCC   ITYPCO(3)='NUME'
CCCCC   IDIGIT(1)=0
CCCCC   IDIGIT(2)=0
CCCCC   DO2423I=1,NUMROW
CCCCC     DO2425J=1,NUMCOL
CCCCC       NCVALU(I,J)=0
CCCCC       IVALUE(I,J)=' '
CCCCC       NCVALU(I,J)=0
CCCCC       AMAT(I,J)=0.0
C2425     CONTINUE
C2423   CONTINUE
CCCCC   IVALUE(1,1)='10%'
CCCCC   IVALUE(2,1)='5%'
CCCCC   IVALUE(3,1)='2.5%'
CCCCC   IVALUE(4,1)='1%'
CCCCC   IVALUE(1,2)='90%'
CCCCC   IVALUE(2,2)='95%'
CCCCC   IVALUE(3,2)='97.5%'
CCCCC   IVALUE(4,2)='99%'
CCCCC   NCVALU(1,1)=3
CCCCC   NCVALU(2,1)=2
CCCCC   NCVALU(3,1)=4
CCCCC   NCVALU(4,1)=2
CCCCC   NCVALU(1,2)=3
CCCCC   NCVALU(2,2)=3
CCCCC   NCVALU(3,2)=5
CCCCC   NCVALU(4,2)=3
CCCCC   IVALUE(1,4)='Accept H0'
CCCCC   IVALUE(2,4)='Accept H0'
CCCCC   IVALUE(3,4)='Accept H0'
CCCCC   IVALUE(4,4)='Accept H0'
CCCCC   NCVALU(1,4)=9
CCCCC   NCVALU(2,4)=9
CCCCC   NCVALU(3,4)=9
CCCCC   NCVALU(4,4)=9
CCCCC   IF(STATVA.GT.CDF1)IVALUE(1,4)='Reject H0'
CCCCC   IF(STATVA.GT.CDF2)IVALUE(2,4)='Reject H0'
CCCCC   IF(STATVA.GT.CDF3)IVALUE(3,4)='Reject H0'
CCCCC   IF(STATVA.GT.CDF4)IVALUE(4,4)='Reject H0'
CCCCC   AMAT(1,3)=RND(CDF1,IDIGIT(3))
CCCCC   AMAT(2,3)=RND(CDF2,IDIGIT(3))
CCCCC   AMAT(3,3)=RND(CDF3,IDIGIT(3))
CCCCC   AMAT(4,3)=RND(CDF4,IDIGIT(3))
C
CCCCC   IWHTML(1)=150
CCCCC   IWHTML(2)=150
CCCCC   IWHTML(3)=150
CCCCC   IWHTML(4)=150
CCCCC   IWRTF(1)=1500
CCCCC   IWRTF(2)=IWRTF(1)+1500
CCCCC   IWRTF(3)=IWRTF(2)+2000
CCCCC   IWRTF(4)=IWRTF(3)+2000
CCCCC   IFRST=.FALSE.
CCCCC   ILAST=.TRUE.
C
CCCCC   CALL DPDTA4(ITITL9,NCTIT9,
CCCCC1              ITITLE,NCTITL,ITITL2,NCTIT2,
CCCCC1              MAXLIN,NUMLIN,NUMCLI,NUMCOL,
CCCCC1              IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMROW,
CCCCC1              IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
CCCCC1              ICAPSW,ICAPTY,IFRST,ILAST,
CCCCC1              ISUBRO,IBUGA3,IERROR)
C
CCCCC ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IADCVM=IADCVT
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PPGF')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPPGF--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPRCL(MAXNXT,ICASAN,ANOPL1,ANOPL2,ICAPSW,IFORSW,
     1                  ISUBRO,IBUGA2,IBUGA3,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--GENERATE (SYMMETRIC) CONFIDENCE LIMITS FOR THE
C              PROPORTION OF SUCCESSES FOR PROBABILITY VALUE
C              P = .90, .95, .99, .999, AND .9999.
C              ALSO HANDLE THE DIFFERENCE OF TWO PROPORTIONS.
C              NOTE: 1 = SUCCESS
C                    0 = FAILURE
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/3
C     ORIGINAL VERSION--MARCH     1999.
C     UPDATED         --AUGUST    2008. REFORMAT OUTPUT
C                                       SUPPORT FOR HTML, LATEX,
C                                       RTF FORMATTED OUTPUT
C                                       ACCEPT DATA IN SUMMARY FORM
C     UPDATED         --FEBRUARY  2011. USE DPPARS, DPPAR3
C     UPDATED         --NOVEMBER  2017. SUPPORT AGRESTI-CAFO ADJUSTED
C                                       INTERVAL
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=20)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPR'
      ISUBN2='CL  '
      IFOUND='YES'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               ***************************************************
C               **  TREAT THE PROPORTION CONFIDENCE LIMITS CASE  **
C               ***************************************************
C
      IF(ISUBRO.EQ.'PRCL'.OR.IBUGA2.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPRCL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)MAXNXT,ICASAN
   55   FORMAT('MAXNXT,ICASAN = ',I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************
C               **  STEP 4--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='4'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRCL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASAN.EQ.'DPRO')THEN
        INAME='DIFFERENCE OF PROPORTIONS CONFIDENCE LIM'
      ELSE
        INAME='PROPORTION CONFIDENCE LIMITS'
      ENDIF
      MINNA=1
      MAXNA=100
      MINN2=2
      IFLAGE=0
      IFLAGM=1
      JMIN=1
      JMAX=NUMARG
      IF(ICASAN.EQ.'DPRO')THEN
        MINNVA=2
        MAXNVA=4
        IFLAGP=9
      ELSE
        MINNVA=1
        MAXNVA=2
        IFLAGP=1
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRCL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),PVAR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),PVAR(I) = ',I8,2X,A4,A4,2X,3I8,G15.7)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               ***********************************
C               **  STEP 22--                    **
C               **  CHECK FOR PROPER VALUES FOR  **
C               **  INPUT PARAMETERS             **
C               ***********************************
C
      IF(IVARTY(1).EQ.'PARA' .OR. IVARTY(1).EQ.'NUMB')THEN
        P1=PVAR(1)
        AN1=PVAR(2)
        N1=INT(AN1+0.1)
        IF(ICASAN.EQ.'DPRO')THEN
          P2=PVAR(3)
          AN2=PVAR(4)
          N2=INT(AN2+0.1)
        ENDIF
        ICASE='PARA'
C
        ISTEPN='22'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'BNTE')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IF(P1.LT.0.0 .OR. P1.GT.1.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(ICASAN.EQ.'PROP')THEN
            WRITE(ICOUT,2201)
 2201       FORMAT('***** ERROR FROM PROPORTION CONFIDENCE LIMITS--')
          ELSE
            WRITE(ICOUT,2202)
 2202       FORMAT('***** ERROR FROM DIFFERENCE OF PROPORTION ',
     1             'CONFIDENCE LIMITS--')
          ENDIF
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2203)
 2203     FORMAT('      THE VALUE OF THE FIRST PARAMETER (P1 = THE ',
     1           'PROBABILITY OF SUCCESS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2204)
 2204     FORMAT('      FOR THE FIRST VARIABLE MUST BE IN THE ',
     1           'INTERVAL (0,1).')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2205)P1
 2205     FORMAT('      P1 = ',G15.7)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
        ELSEIF(N1.LT.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(ICASAN.EQ.'PROP')THEN
            WRITE(ICOUT,2201)
          ELSE
            WRITE(ICOUT,2202)
          ENDIF
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2213)
 2213     FORMAT('      THE VALUE OF THE SECOND PARAMETER (N1 = THE ',
     1           'NUMBER OF TRIALS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2214)
 2214     FORMAT('      FOR THE FIRST VARIABLE MUST BE NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2215)N1
 2215     FORMAT('      N1 = ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
        ELSEIF(ICASAN.EQ.'DPRO'.AND.P2.LT.0.0 .OR. P2.GT.1.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(ICASAN.EQ.'PROP')THEN
            WRITE(ICOUT,2201)
          ELSE
            WRITE(ICOUT,2202)
          ENDIF
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2223)
 2223     FORMAT('      THE VALUE OF THE THIRD PARAMETER (P2 = THE ',
     1           'PROBABILITY OF SUCCESS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2224)
 2224     FORMAT('      FOR THE SECOND VARIABLE MUST BE IN THE ',
     1           'INTERVAL (0,1).')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2225)P2
 2225     FORMAT('      P2 = ',G15.7)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
        ELSEIF(N2.LT.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          IF(ICASAN.EQ.'PROP')THEN
            WRITE(ICOUT,2201)
          ELSE
            WRITE(ICOUT,2202)
          ENDIF
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2233)
 2233     FORMAT('      THE VALUE OF THE FOURTH PARAMETER (N2 = THE ',
     1           'NUMBER OF TRIALS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2234)
 2234     FORMAT('      FOR THE SECOND VARIABLE MUST BE NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2235)N2
 2235     FORMAT('      N2 = ',I8)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
C
        ENDIF
C
      ELSEIF(IVARTY(1).EQ.'VARI' .OR. IVARTY(I).EQ.'MATR')THEN
C
        ICASE='VARI'
        ICOL=1
        IF(ICASAN.EQ.'PROP' .AND. NUMVAR.NE.1)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2201)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2303)
 2303     FORMAT('      EXACTLY ONE VARIABLE MUST BE GIVEN.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2305)NUMVAR
 2305     FORMAT('      THE NUMBER OF VARIABLES GIVEN  = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ELSEIF(ICASAN.EQ.'DPRO' .AND. NUMVAR.NE.2)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2202)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2313)
 2313     FORMAT('      EXACTLY TWO VARIABLES MUST BE GIVEN.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2315)NUMVAR
 2315     FORMAT('      THE NUMBER OF VARIABLES GIVEN  = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y,X,X,N1,N2,NLOCA3,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
      ENDIF
C
C               ******************************************************
C               **  STEP 8--                                        **
C               **  PREPARE FOR ENTRANCE INTO DPPRC2--              **
C               ******************************************************
C
      ISTEPN='8'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRCL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *********************************
C               **  STEP 9--                   **
C               **  FORM THE CONFIDENCE LIMITS **
C               *********************************
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRCL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6211)
 6211   FORMAT('***** FROM DPPRCL, AS WE ARE ABOUT TO CALL DPPRC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6212)N1,N2,MAXN
 6212   FORMAT('N1,N2,MAXN = ',3I8)
        CALL DPWRST('XXX','BUG ')
        IF(ICASE.EQ.'PARA')THEN
          WRITE(ICOUT,6214)P1,P2
 6214     FORMAT('P1,P2 = ',2G15.7)
          CALL DPWRST('XXX','BUG ')
        ELSE
          DO6215I=1,MIN(N1,N2)
            WRITE(ICOUT,6216)I,Y(I),X(I)
 6216       FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
            CALL DPWRST('XXX','BUG ')
 6215      CONTINUE
        ENDIF
      ENDIF
C
      CALL DPPRC2(Y,N1,X,N2,MAXNXT,
     1            P1,P2,
     1            ICASAN,ICASE,
     1            PVAR,IVARN1,IVARN2,
     1            ANOPL1,ANOPL2,
     1            ICAPSW,ICAPTY,IFORSW,IBINME,IBI2ME,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRCL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPRCL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPRC2(Y,N1,X,N2,MAXNXT,
     1                  P1,P2,
     1                  ICASAN,ICASE,
     1                  PID,IVARID,IVARI2,
     1                  ANOPL1,ANOPL2,
     1                  ICAPSW,ICAPTY,IFORSW,IBINME,IBI2ME,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS ROUTINE GENERATES CONFIDENCE LIMITS FOR THE
C              PROPORTIONS FOR THE DATA IN THE INPUT VECTOR Y.
C              ALSO HANDLES THE DIFFERENCE OF TWO PROPORTIONS CASE.
C     NOTE--ASSUMPTION--MODEL IS   RESPONSE = CONSTANT + ERROR.
C     INPUT  ARGUMENTS--Y      = THE SINGLE PRECISION VECTOR
C                                OF OBSERVATIONS FOR BOTH CASES
C                       X      = THE SINGLE PRECISION VECTOR
C                                OF OBSERVATIONS FOR THE DIFFERENCE
C                                OF PROPORTIONS CASE
C                       N1     = THE INTEGER NUMBER OF
C                                OBSERVATIONS IN THE VECTOR Y.
C                       N2     = THE INTEGER NUMBER OF
C                                OBSERVATIONS IN THE VECTOR X.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/3
C     ORIGINAL VERSION--MARCH     1999.
C     UPDATED         --AUGUST    2008. MODIFY THE OUTPUT FORMAT
C                                       SUPPORT FOR HTML, LATEX, AND
C                                       RTF FORMAT
C                                       SUPPORT FOR SUMMARY DATA
C     UPDATED         --FEBRUARY  2011. USE DPDTA1, DPDTA5 TO PRINT
C                                       TABLES
C     UPDATED         --OCTOBER   2015. TWEAK TO TITLE FOR DIFFERENCE OF
C                                       PROPORTIONS
C     UPDATED         --NOVEMBER  2017. SUPPORT FOR AGRESTI-CAFO
C                                       ADJUSTED INTERVAL AND
C                                       BAYESIAN INTERVAL
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IBINME
      CHARACTER*4 IBI2ME
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASE
      CHARACTER*4 ICASE2
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IWRITE
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION PID(*)
C
      DIMENSION CONF(8)
      DIMENSION T(8)
      DIMENSION ALOWER(8)
      DIMENSION AUPPER(8)
C
      PARAMETER(NUMCLI=3)
      PARAMETER(MAXLIN=2)
      PARAMETER (MAXROW=25)
      PARAMETER (MAXRO2=8)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*1  ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      CHARACTER*15 IVALUE(MAXRO2,NUMCLI)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCVALU(MAXRO2,NUMCLI)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      REAL         AMAT(MAXRO2,NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPR'
      ISUBN2='C2  '
      IERROR='NO'
      IWRITE='OFF'
C
      PR1=CPUMIN
      PR2=CPUMIN
      PDIFF=CPUMIN
      YMIN=CPUMIN
      YMAX=CPUMIN
      NR1=0
      NR2=0
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPPRC2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)N1,N2,MAXNXT,PID(1),ICASE,IBUGA3
   52   FORMAT('N1,N2,MAXNXT,PID(1),ICASE,IBUGA3 = ',
     1         3I8,G15.7,2(2X,A4))
        CALL DPWRST('XXX','WRIT')
        IF(ICASE.EQ.'PARA')THEN
          WRITE(ICOUT,54)P1,P2
   54     FORMAT('P1,P2 = ',2G15.7)
          CALL DPWRST('XXX','WRIT')
        ELSE
          DO56I=1,MIN(N1,N2)
            WRITE(ICOUT,57)I,Y(I),X(I)
   57       FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
            CALL DPWRST('XXX','WRIT')
   56     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N1.LE.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        IF(ICASAN.EQ.'DPRO')THEN
          WRITE(ICOUT,111)
  111     FORMAT('****** ERROR IN DIFFERENCE OF PROPORTION ',
     1           'CONFIDENCE LIMITS--')
          CALL DPWRST('XXX','BUG ')
        ELSE
          WRITE(ICOUT,112)
  112     FORMAT('****** ERROR IN PROPORTION CONFIDENCE LIMITS--')
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,113)
  113   FORMAT('         THE NUMBER OF OBSERVATIONS FOR THE FIRST ',
     1         'RESPONSE VARIABLE IS LESS THAN 2.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,114)N1
  114   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(ICASAN.EQ.'DPRO'.AND.N2.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,111)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,123)
  123   FORMAT('         THE NUMBER OF OBSERVATIONS FOR THE ',
     1         'SECOND RESPONSE VARIABLE IS LESS THAN 2.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,124)N2
  124   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ***************************************************
C               **  STEP 3--                                     **
C               **  COMPUTE THE NUMBER OF SUCCESSES.             **
C               ***************************************************
C
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASE.EQ.'VARI')THEN
        IF(ANOPL1.NE.CPUMIN .AND. ANOPL2.NE.CPUMAX)THEN
          YMIN=ANOPL1
          IF(ANOPL1.GT.ANOPL2)YMIN=ANOPL2
          YMAX=ANOPL2
          IF(ANOPL1.GT.ANOPL2)YMAX=ANOPL1
        ELSE
          YMIN=0.5
          YMAX=1.5
        ENDIF
C
        AN=REAL(N1)
        NR1=0
        DO2120J=1,N1
          IF(YMIN.LE.Y(J).AND.Y(J).LE.YMAX)NR1=NR1+1
 2120   CONTINUE
        ANR1=NR1
        PR1=ANR1/AN
      ELSE
        PR1=REAL(P1)
        AN=REAL(N1)
        NR1=INT(PR1*AN + 0.5)
      ENDIF
C
      IF(ICASAN.EQ.'PROP'.AND.PR1.LT.0.0 .OR. PR1.GT.1.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        IF(ICASAN.EQ.'DPRO')THEN
          WRITE(ICOUT,111)
          CALL DPWRST('XXX','BUG ')
        ELSE
          WRITE(ICOUT,112)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,201)
  201   FORMAT('      FOR THE FIRST RESPONSE VARIABLE, THE ',
     1         'PROPORTION OF SUCCESSES IS ')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,203)
  203   FORMAT('      OUTSIDE THE ALLOWABLE (0,1) INTERVAL.')
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(ICASAN.EQ.'DPRO')THEN
        IF(ICASE.EQ.'VARI')THEN
          AN2=REAL(N2)
          NR2=0
          DO210J=1,N2
            IF(YMIN.LE.X(J).AND.X(J).LE.YMAX)NR2=NR2+1
 210      CONTINUE
          ANR2=REAL(NR2)
          PR2=ANR2/AN2
        ELSE
          ANR2=REAL(N2)
          PR2=P2
          NR2=INT(PR2*ANR2 + 0.5)
        ENDIF
C
        IF(ICASAN.EQ.'PROP'.AND.PR1.LT.0.0 .OR. PR1.GT.1.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,111)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
  211     FORMAT('      FOR THE SECOND RESPONSE VARIABLE, THE ',
     1         'PROPORTION OF SUCCESSES IS ')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,213)
  213     FORMAT('      OUTSIDE THE ALLOWABLE (0,1) INTERVAL.')
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ENDIF
C
      ENDIF
C
C               ***************************************
C               **  STEP 4--                         **
C               **  COMPUTE CONFIDENCE LIMITS        **
C               **  FOR VARIOUS PROBABILITY VALUES.  **
C               ***************************************
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CONF(1)=50.0
      CONF(2)=75.0
      CONF(3)=90.0
      CONF(4)=95.0
      CONF(5)=99.0
      CONF(6)=99.9
      CONF(7)=99.99
      CONF(8)=99.999
C
      IF(ICASAN.EQ.'PROP')THEN
        AN=REAL(N1)
        P=PR1
        Q=1.0 - P
        SE=SQRT(P*Q/AN)
        DO1400I=1,8
          PCONF=1.0-(CONF(I)/100.0)
          PCONF=PCONF/2.0
          IF(IBINME.EQ.'WILS')THEN
            CALL NORPPF(PCONF,ZALPHA)
            TERM1=ZALPHA*ZALPHA/(2.0*AN)
            TERM2=ZALPHA*SQRT((P*Q/AN) + ZALPHA*ZALPHA/(4.0*AN*AN))
            TERM3=1.0 + ZALPHA*ZALPHA/AN
            TERM4=(P + TERM1 + TERM2)/TERM3
            TERM5=(P + TERM1 - TERM2)/TERM3
            ALOWLM=MIN(TERM4,TERM5)
            AUPPLM=MAX(TERM4,TERM5)
            ALOWER(I)=ALOWLM
            AUPPER(I)=AUPPLM
            IF(AUPPER(I).GT.1.0)AUPPER(I)=1.0
            IF(ALOWER(I).LT.0.0)ALOWER(I)=0.0
          ELSEIF(IBINME.EQ.'WALD')THEN
            CALL NORPPF(PCONF,ZALPHA)
            AK2=ZALPHA**2
            AX=AN*P
            IX=INT(AX+0.5)
            AX=REAL(IX) + (AK2/2.0)
            ANTEMP=AN + (AK2/2.0)
            PTEMP=AX/ANTEMP
            A1=PTEMP - ZALPHA*SQRT(PTEMP*(1.0-PTEMP))/SQRT(ANTEMP)
            A2=PTEMP + ZALPHA*SQRT(PTEMP*(1.0-PTEMP))/SQRT(ANTEMP)
            ALOWER(I)=MIN(A1,A2)
            AUPPER(I)=MAX(A1,A2)
            IF(AUPPER(I).GT.1.0)AUPPER(I)=1.0
            IF(ALOWER(I).LT.0.0)ALOWER(I)=0.0
          ELSEIF(IBINME.EQ.'JEFF')THEN
            AX=AN*P
            IX=INT(AX+0.5)
            AX=REAL(IX)
            ALPHA=AX+0.5
            BETA=AN-AX+0.5
            CALL BETPPF(PCONF,ALPHA,BETA,ALOWLM)
            PCONF2=1.0 - PCONF
            CALL BETPPF(PCONF2,ALPHA,BETA,AUPPLM)
            ALOWER(I)=ALOWLM
            AUPPER(I)=AUPPLM
            IF(AUPPER(I).GT.1.0)AUPPER(I)=1.0
            IF(ALOWER(I).LT.0.0)ALOWER(I)=0.0
          ELSEIF(IBINME.EQ.'NORM')THEN
            CALL NORPPF(PCONF,ZALPHA)
            ALOWLM=P - ZALPHA*SQRT(P*Q/AN)
            AUPPLM=P + ZALPHA*SQRT(P*Q/AN)
            ALOWER(I)=MIN(ALOWLM,AUPPLM)
            AUPPER(I)=MAX(ALOWLM,AUPPLM)
            IF(AUPPER(I).GT.1.0)AUPPER(I)=1.0
            IF(ALOWER(I).LT.0.0)ALOWER(I)=0.0
          ELSE
            ICASE2='TWOS'
            PCONF=CONF(I)/100.0
            CALL DPEBLL(P,N1,PCONF,IWRITE,ALOWLM,ICASE2,IBUGA3,IERROR)
            CALL DPEBUL(P,N1,PCONF,IWRITE,AUPPLM,ICASE2,IBUGA3,IERROR)
            ALOWER(I)=ALOWLM
            AUPPER(I)=AUPPLM
            IF(AUPPER(I).GT.1.0)AUPPER(I)=1.0
            IF(ALOWER(I).LT.0.0)ALOWER(I)=0.0
CCCCC       CDF=1.0-PCONF
CCCCC       CALL BINPPF(DBLE(CDF),DBLE(PR1),N1,DPPF)
CCCCC       T(I)=REAL(DPPF)
CCCCC       AUPPER(I)=T(I)/REAL(N1)
CCCCC       CDF=PCONF
CCCCC       CALL BINPPF(DBLE(CDF),DBLE(PR1),N1,DPPF)
CCCCC       T(I)=REAL(DPPF)
CCCCC       ALOWER(I)=T(I)/REAL(N1)
          ENDIF
 1400   CONTINUE
      ELSEIF(ICASAN.EQ.'DPRO')THEN
        IF(IBI2ME.EQ.'WALD')THEN
C
C         THIS IS THE STANDARD WALD METHOD
C
          PDIFF=PR1-PR2
          PSE=SQRT(PR1*(1.0-PR1)/REAL(N1) + PR2*(1.0-PR2)/REAL(N2))
          DO1500I=1,8
            PCONF=1.0-(CONF(I)/100.0)
            PCONF=PCONF/2.0
            CDF=1.0-PCONF
            CALL NORPPF(CDF,T(I))
            AUPPER(I)=PDIFF+PSE*T(I)
            IF(AUPPER(I).GT.1.0)AUPPER(I)=1.0
            ALOWER(I)=PDIFF-PSE*T(I)
            IF(ALOWER(I).LT.-1.0)ALOWER(I)=-1.0
C
            IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC2')THEN
              WRITE(ICOUT,1501)I,PSE,T(I),ALOWER(I),AUPPER(I)
 1501         FORMAT('WALD METHOD: I,PSE,CDF,T(I),ALOWER(I),',
     1               'AUPPER(I) = ',I8,5G15.7)
              CALL DPWRST('XXX','WRIT')
            ENDIF
C
 1500     CONTINUE
        ELSEIF(IBI2ME.EQ.'ADJU')THEN
C
C         THIS IS THE ADJUSTED WALD METHOD RECOMMENDED BY
C         AGRESTI.
C
          PDIFF=PR1-PR2
          P1=(ANR1+1.0)/REAL(N1 + 2)
          P2=(ANR2+1.0)/REAL(N2 + 2)
          PDIFFT=P1-P2
          PSE=SQRT(P1*(1.0-P1)/REAL(N1+2) + P2*(1.0-P2)/REAL(N2+2))
          DO1510I=1,8
            PCONF=1.0-(CONF(I)/100.0)
            PCONF=PCONF/2.0
            CDF=1.0-PCONF
            CALL NORPPF(CDF,T(I))
            AUPPER(I)=PDIFFT+PSE*T(I)
            IF(AUPPER(I).GT.1.0)AUPPER(I)=1.0
            ALOWER(I)=PDIFFT-PSE*T(I)
            IF(ALOWER(I).LT.-1.0)ALOWER(I)=-1.0
C
            IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC2')THEN
              WRITE(ICOUT,1511)I,PSE,T(I),ALOWER(I),AUPPER(I)
 1511         FORMAT('ADJUSTED WALD METHOD: I,PSE,CDF,T(I),ALOWER(I),',
     1               'AUPPER(I) = ',I8,5G15.7)
              CALL DPWRST('XXX','WRIT')
              WRITE(ICOUT,1513)ANR1,P1,ANR2,P2
 1513         FORMAT('ANR1,P1,ANR2,P2 = ',4G15.7)
              CALL DPWRST('XXX','WRIT')
            ENDIF
C
 1510     CONTINUE
        ELSEIF(IBI2ME.EQ.'BAYE')THEN
C
C         THIS IS THE BAYESIAN ADJUSTED WALD METHOD DISCUSSED BY
C         AGRESTI.
C
          PDIFF=PR1-PR2
          P1=(ANR1+1.0)/REAL(N1 + 2)
          P2=(ANR2+1.0)/REAL(N2 + 2)
          PDIFFT=P1-P2
          PSE=SQRT(P1*(1.0-P1)/REAL(N1+3) + P2*(1.0-P2)/REAL(N2+3))
          DO1520I=1,8
            PCONF=1.0-(CONF(I)/100.0)
            PCONF=PCONF/2.0
            CDF=1.0-PCONF
            CALL NORPPF(CDF,T(I))
            AUPPER(I)=PDIFFT+PSE*T(I)
            IF(AUPPER(I).GT.1.0)AUPPER(I)=1.0
            ALOWER(I)=PDIFFT-PSE*T(I)
            IF(ALOWER(I).LT.-1.0)ALOWER(I)=-1.0
 1520     CONTINUE
        ENDIF
      ENDIF
C
C               ****************************
C               **  STEP 7--              **
C               **  WRITE EVERYTHING OUT  **
C               ****************************
C
      ISTEPN='7'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE=' '
      ITITLZ=' '
      IF(ICASAN.EQ.'PROP')THEN
        ITITLE='Two-Sided Confidence Limits for a Proportion'
        NCTITL=44
        IF(IBINME.EQ.'WILS')THEN
          ITITLZ='(Wilson Method)'
          NCTITZ=15
        ELSEIF(IBINME.EQ.'WALD')THEN
          ITITLZ='(Adjusted Wald Method)'
          NCTITZ=22
        ELSEIF(IBINME.EQ.'JEFF')THEN
          ITITLZ='(Bayesian with Jeffreys Prior Method)'
          NCTITZ=37
        ELSEIF(IBINME.EQ.'NORM')THEN
          ITITLZ='(Normal Approximation Method)'
          NCTITZ=29
        ELSEIF(IBINME.EQ.'EXAC')THEN
          ITITLZ='(Exact Binomial Method)'
          NCTITZ=23
        ENDIF
      ELSE
        ITITLE='Difference of Proportions Two-Sided Confidence Limits'
        NCTITL=53
        IF(IBI2ME.EQ.'WALD')THEN
          ITITLZ='(Wald Method)'
          NCTITZ=13
        ELSEIF(IBI2ME.EQ.'ADJU')THEN
          ITITLZ='(Agresti-Caffo (Adjusted Wald) Method)'
          NCTITZ=38
        ELSEIF(IBI2ME.EQ.'BAYE')THEN
          ITITLZ='(Carlin and Louis Bayesian Method)'
          NCTITZ=34
        ENDIF
      ENDIF
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      IF(ICASAN.EQ.'PROP' .AND. ICASE.EQ.'VARI')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Response Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ELSEIF(ICASAN.EQ.'DPRO' .AND. ICASE.EQ.'VARI')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='First Response Variable:  '
        WRITE(ITEXT(ICNT)(27:30),'(A4)')IVARID(1)(1:4)
        WRITE(ITEXT(ICNT)(31:34),'(A4)')IVARI2(1)(1:4)
        NCTEXT(ICNT)=34
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
C
      IF(ICASAN.EQ.'DPRO' .AND. ICASE.EQ.'VARI')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Second Response Variable: '
        WRITE(ITEXT(ICNT)(27:30),'(A4)')IVARID(2)(1:4)
        WRITE(ITEXT(ICNT)(31:34),'(A4)')IVARI2(2)(1:4)
        NCTEXT(ICNT)=34
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      IF(ICASAN.EQ.'PROP')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Sample:'
        NCTEXT(ICNT)=7
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ELSE
        ICNT=ICNT+1
        ITEXT(ICNT)='Sample 1:'
        NCTEXT(ICNT)=9
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N1)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Successes:'
      NCTEXT(ICNT)=20
      AVALUE(ICNT)=REAL(NR1)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Proportion of Successes:'
      NCTEXT(ICNT)=24
      AVALUE(ICNT)=PR1
      IDIGIT(ICNT)=NUMDIG
      IF(ICASAN.EQ.'PROP')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Standard Error:'
        NCTEXT(ICNT)=15
        AVALUE(ICNT)=PSE
        IDIGIT(ICNT)=NUMDIG
      ENDIF
C
      IF(ICASAN.EQ.'DPRO')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=0
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Sample 2:'
        NCTEXT(ICNT)=9
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Number of Observations:'
        NCTEXT(ICNT)=23
        AVALUE(ICNT)=REAL(N2)
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)='Number of Successes:'
        NCTEXT(ICNT)=20
        AVALUE(ICNT)=REAL(NR2)
        IDIGIT(ICNT)=0
        ICNT=ICNT+1
        ITEXT(ICNT)='Proportion of Successes:'
        NCTEXT(ICNT)=24
        AVALUE(ICNT)=PR2
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=1
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Difference Between Proportions:'
        NCTEXT(ICNT)=31
        AVALUE(ICNT)=PDIFF
        IDIGIT(ICNT)=NUMDIG
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      IF(ICASAN.EQ.'PROP' .AND. N1.LE.20)THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Warning: the sample size is <= 20.'
        NCTEXT(ICNT)=34
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='         The normal approximation may'
        NCTEXT(ICNT)=37
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='         not be accurate.'
        NCTEXT(ICNT)=26
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ELSEIF(ICASAN.EQ.'DPRO' .AND.
     1      (N1.LE.20 .OR. N2.LE.20))THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='Warning: if either sample size is less'
        NCTEXT(ICNT)=38
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='         than 20, the normal approximation'
        NCTEXT(ICNT)=42
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='         may not be accurate.'
        NCTEXT(ICNT)=29
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
C
      NUMROW=ICNT
      DO4210I=1,NUMROW
        NTOT(I)=15
 4210 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='5A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ISTEPN='5B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ITITLE=' '
      NCTITL=0
      ITITL9=' '
      NCTIT9=0
      ITITLE=' '
      NCTITL=0
      NUMLIN=2
      NUMROW=8
      NUMCOL=3
C
      ICNT=1
      ITITL2(1,ICNT)='Confidence'
      NCTIT2(1,ICNT)=10
      ITITL2(2,ICNT)='Value (%)'
      NCTIT2(2,ICNT)=9
C
      ICNT=ICNT+1
      ITITL2(1,ICNT)='Lower'
      NCTIT2(1,ICNT)=5
      ITITL2(2,ICNT)='Limit'
      NCTIT2(2,ICNT)=5
C
      ICNT=ICNT+1
      ITITL2(1,ICNT)='Upper'
      NCTIT2(1,ICNT)=5
      ITITL2(2,ICNT)='Limit'
      NCTIT2(2,ICNT)=5
C
      NMAX=0
      DO4221I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IDIGIT(I)=NUMDIG
        ITYPCO(I)='NUME'
        IWHTML(I)=150
        IF(I.EQ.1)THEN
          NTOT(I)=12
          IDIGIT(I)=3
          IWHTML(1)=75
        ENDIF
        NMAX=NMAX+NTOT(I)
 4221 CONTINUE
      DO4223I=1,NUMROW
        DO4225J=1,NUMCOL
          NCVALU(I,J)=0
          IVALUE(I,J)=' '
          AMAT(I,J)=0.0
 4225   CONTINUE
        AMAT(I,1)=CONF(I)
        AMAT(I,2)=ALOWER(I)
        AMAT(I,3)=AUPPER(I)
 4223 CONTINUE
C
      IWRTF(1)=800
      IWRTF(2)=IWRTF(2)+2000
      IWRTF(3)=IWRTF(2)+2000
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      CALL DPDTA4(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXRO2,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPRC2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)N,IBUGA3,IERROR
 9012   FORMAT('N,IBUGA3,IERROR = ',I8,2X,A4,2X,A4)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPRC3(Y,N,ALPHA,PSTAMV,IBINME,XTEMP1,
     1                  P,ALOWLM,AUPPLM,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--GIVEN A VARIABLE CONTAINING 1's (FOR SUCCESS) AND
C              0's (FOR FAILURE), COMPUTE THE PROPORTION OF SUCCESSES
C              AND ALSO THE LOWER AND UPPER CONFIDENCE LIMITS FOR THIS
C              PROPORTION (BASED ON SEVERAL DIFFERENT METHODS).
C     INPUT  ARGUMENTS--Y      = THE SINGLE PRECISION VECTOR OF
C                                OBSERVATIONS CONTAINING 0 OR 1 VALUES.
C                       N      = THE INTEGER NUMBER OF OBSERVATIONS IN
C                                THE VECTOR Y.
C                       ALPHA  = THE SCALAR VALUE SPECIFYING THE
C                                SIGNIFICANCE LEVEL FOR THE CONFIDENCE
C                                INTERVAL.
C                       IBINME = THE CHARACTER STRING THAT SPECIFIES THE
C                                METHOD FOR THE CONFIDENCE INTERVAL.
C     OUTPUT ARGUMENTS--P      = THE SCALAR VALUE THAT SPECIFIES THE
C                                PROPORTION OF SUCCESSES.
C                     --ALOWLM = THE SCALAR VALUE THAT SPECIFIES THE
C                                LOWER LIMIT FOR THE CONFIDENCE INTERVAL.
C                     --AUPPLM = THE SCALAR VALUE THAT SPECIFIES THE
C                                UPPER LIMIT FOR THE CONFIDENCE INTERVAL.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2017/11
C     ORIGINAL VERSION--NOVEMBER  2017.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBINME
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASE2
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IWRITE
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION XTEMP1(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPR'
      ISUBN2='C3  '
      IERROR='NO'
      IWRITE='OFF'
C
      P=PSTAMV
      ALOWLM=PSTAMV
      AUPPLM=PSTAMV
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPPRC2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)N,ALPHA,IBINME,IBUGA3,ISUBRO
   52   FORMAT('N,ALPHA,IBINME,IBUGA3,ISUBRO = ',I8,G15.7,3(2X,A4))
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N
          WRITE(ICOUT,57)I,Y(I)
   57     FORMAT('I,Y(I),X(I) = ',I8,G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     FIRST REMOVE ANY MISSING VALUES
C
      IF(N.GE.1)THEN
        ICNT=0
        DO110I=1,N
          IF(Y(I).NE.PSTAMV)THEN
            ICNT=ICNT+1
            Y(ICNT)=Y(I)
          ENDIF
  110   CONTINUE
        N=ICNT
      ENDIF
C
      IF(N.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,112)
  112   FORMAT('****** ERROR IN PROPORTION CONFIDENCE LIMITS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)
  113   FORMAT('         AFTER REMOVING MISSING VALUES, THE NUMBER OF')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,115)N
  115   FORMAT('         OBSERVATIONS (',I5,') FOR THE RESPONSE ',
     1         'VARIABLE IS LESS THAN 1.')
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ***************************************************
C               **  STEP 2--                                     **
C               **  COMPUTE THE NUMBER OF SUCCESSES.             **
C               ***************************************************
C
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      EPS=0.0001
      CALL DISTIN(Y,N,IWRITE,XTEMP1,NDIST,IBUGA3,IERROR)
      IF(NDIST.GT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,112)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,122)
  122   FORMAT('      MORE THAN TWO DISTINCT VALUES DETECTED.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,124)NDIST
  124   FORMAT('      NUMBER OF DISTINCT VALUES = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ELSEIF(NDIST.EQ.1)THEN
        IF(ABS(XTEMP1(1)).LE.EPS)THEN
C
C         ALL VALUES EQUAL 0
C
          XTEMP1(1)=0.0
          XTEMP1(2)=1.0
        ELSEIF(ABS(XTEMP1(1)-1.0).LE.EPS)THEN
C
C         ALL VALUES EQUAL 1
C
          XTEMP1(1)=0.0
          XTEMP1(2)=1.0
        ELSE
C
C         ALL VALUES EQUAL TO SOMETHING OTHER THAN 0 OR 1,
C         SO DON"T KNOW WHETHER THIS IS "ALL SUCCESS" OR
C         "ALL FAILURE" CASE.
C
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,112)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,132)
  132     FORMAT('      THERE IS ONLY ONE DISTINCT VALUE THAT IS NOT ',
     1           'EQUAL TO EITHER 0 OR 1.')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,134)
  134     FORMAT('      THEREFORE THE DEFINITION OF SUCCESS IS ',
     1           'AMBIVALENT AND NOTHING IS COMPUTED.')
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
      HOLD1=XTEMP1(1)
      HOLD2=XTEMP1(2)
      IF(HOLD1.LT.HOLD2)THEN
        XMIN=HOLD1
        XMAX=HOLD2
      ELSE
        XMAX=HOLD1
        XMIN=HOLD2
      ENDIF
C
C     NOW COMPUTE THE NUMBER OF SUCCESSES
C
      XSUM=0.0
      DO210I=1,N
        IF(Y(I).EQ.XMAX)THEN
          XSUM=XSUM + 1.0
        ENDIF
  210 CONTINUE
      AN=REAL(N)
      P=XSUM/AN
      Q=1.0 - P
C
C               ***************************************
C               **  STEP 3--                         **
C               **  COMPUTE CONFIDENCE LIMITS        **
C               ***************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C
      SE=SQRT(P*Q/AN)
      ALP=ALPHA
      IF(ALP.LT.0.5)THEN
        P1=ALP/2.0
        P2=1.0-(ALP/2.0)
      ELSE
        ALP=1.0 - ALPHA
        P1=ALP/2.0
        P2=1.0-(ALP/2.0)
      ENDIF
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC3')THEN
        WRITE(ICOUT,291)N,P,P1,P2
  291   FORMAT('N,XSUM,P,P1,P2 = ',I8,4G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      IF(IBINME.EQ.'WILS')THEN
C
C       WILSON METHOD
C
        CALL NORPPF(P2,ZALPHA)
        TERM1=ZALPHA*ZALPHA/(2.0*AN)
        TERM2=ZALPHA*SQRT((P*Q/AN) + ZALPHA*ZALPHA/(4.0*AN*AN))
        TERM3=1.0 + ZALPHA*ZALPHA/AN
        TERM4=(P + TERM1 + TERM2)/TERM3
        TERM5=(P + TERM1 - TERM2)/TERM3
        ALOWLM=MIN(TERM4,TERM5)
        AUPPLM=MAX(TERM4,TERM5)
        IF(AUPPLM.GT.1.0)UPPWLM=1.0
        IF(ALOWLM.LT.0.0)ALOWLM=0.0
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC3')THEN
          WRITE(ICOUT,301)ZALPHA,TERM1,TERM2,TERM3,TERM4
  301     FORMAT('WILSON METHOD: ZALPHA,TERM1,TERM2,TERM3,TERM4 = ',
     1           5G15.7)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ELSEIF(IBINME.EQ.'WALD')THEN
C
C       ADJUSTED WALD METHOD
C
        CALL NORPPF(P2,ZALPHA)
        AK2=ZALPHA**2
        AX=AN*P
        IX=INT(AX+0.5)
        AX=REAL(IX) + (AK2/2.0)
        ANTEMP=AN + (AK2/2.0)
        PTEMP=AX/ANTEMP
        A1=PTEMP - ZALPHA*SQRT(PTEMP*(1.0-PTEMP))/SQRT(ANTEMP)
        A2=PTEMP + ZALPHA*SQRT(PTEMP*(1.0-PTEMP))/SQRT(ANTEMP)
        ALOWLM=MIN(A1,A2)
        AUPPLM=MAX(A1,A2)
        IF(AUPPLM.GT.1.0)AUPPLM=1.0
        IF(ALOWLM.LT.0.0)ALOWLM=0.0
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC3')THEN
          WRITE(ICOUT,311)ZALPHA,AK2,AX,ANTEMP,PTEMP
  311     FORMAT('WALD METHOD: ZALPHA,AK2,AX,ANTEMP,PTEMP = ',
     1           5G15.7)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ELSEIF(IBINME.EQ.'JEFF')THEN
C
C       BAYESIAN METHOD BASED ON JEFFREY'S PRIOR
C
        AX=AN*P
        IX=INT(AX+0.5)
        AX=REAL(IX)
        ALPHA2=AX+0.5
        BETA=AN-AX+0.5
        CALL BETPPF(P1,ALPHA2,BETA,ALOWLM)
        CALL BETPPF(P2,ALPHA2,BETA,AUPPLM)
        IF(AUPPLM.GT.1.0)AUPPLM=1.0
        IF(ALOWLM.LT.0.0)ALOWLM=0.0
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC3')THEN
          WRITE(ICOUT,321)AX,ALPHA2,BETA
  321     FORMAT('JEFFREYS METHOD: AX,ALPHA2,BETA = ',3G15.7)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ELSEIF(IBINME.EQ.'NORM')THEN
C
C       NORMAL APPROXIMATION METHOD
C
        CALL NORPPF(P2,ZALPHA)
        ALOWLM=P - ZALPHA*SQRT(P*Q/AN)
        AUPPLM=P + ZALPHA*SQRT(P*Q/AN)
        IF(AUPPLM.GT.1.0)AUPPLM=1.0
        IF(ALOWLM.LT.0.0)ALOWLM=0.0
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC3')THEN
          WRITE(ICOUT,331)ZALPHA
  331     FORMAT('NORMAL APPROXIMATION METHOD: ZALPHA = ',G15.7)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ELSEIF(IBINME.EQ.'CCOR')THEN
      ELSE
C
C       EXACT BINOMIAL METHOD
C
        ICASE2='TWOS'
        CALL DPEBLL(P,N,P2,IWRITE,ALOWLM,ICASE2,IBUGA3,IERROR)
        CALL DPEBUL(P,N,P2,IWRITE,AUPPLM,ICASE2,IBUGA3,IERROR)
        IF(AUPPLM.GT.1.0)AUPPLM=1.0
        IF(ALOWLM.LT.0.0)ALOWLM=0.0
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC3')THEN
          WRITE(ICOUT,351)ZALPHA
  351     FORMAT('EXACT BINOMIAL METHOD: ZALPHA = ',G15.7)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPRC3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)P,ALOWLM,AUPPLM
 9012   FORMAT('P,ALOWLM,AUPPLM = ',3G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPRC4(Y1,N1,Y2,N2,ALPHA,PSTAMV,IBI2ME,XTEMP1,
     1                  PDIFF,ALOWLM,AUPPLM,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--GIVEN TWO VARIABLES CONTAINING 1's (FOR SUCCESS) AND
C              0's (FOR FAILURE), COMPUTE THE DIFFERENCE OF PROPORTION
C              OF SUCCESSES AND ALSO THE LOWER AND UPPER CONFIDENCE
C              LIMITS FOR THIS PROPORTION (BASED ON SEVERAL DIFFERENT
C              METHODS).
C     INPUT  ARGUMENTS--Y1     = THE SINGLE PRECISION VECTOR OF
C                                OBSERVATIONS CONTAINING 0 OR 1 VALUES
C                                FOR THE FIRST RESPONSE VARIABLE.
C                       N1     = THE INTEGER NUMBER OF OBSERVATIONS IN
C                                THE VECTOR Y1.
C                     --Y2     = THE SINGLE PRECISION VECTOR OF
C                                OBSERVATIONS CONTAINING 0 OR 1 VALUES
C                                FOR THE SECOND RESPONSE VARIABLE.
C                       N2     = THE INTEGER NUMBER OF OBSERVATIONS IN
C                                THE VECTOR Y2.
C                       ALPHA  = THE SCALAR VALUE SPECIFYING THE
C                                SIGNIFICANCE LEVEL FOR THE CONFIDENCE
C                                INTERVAL.
C                       IBI2ME = THE CHARACTER STRING THAT SPECIFIES THE
C                                METHOD FOR THE CONFIDENCE INTERVAL.
C     OUTPUT ARGUMENTS--P      = THE SCALAR VALUE THAT SPECIFIES THE
C                                PROPORTION OF SUCCESSES.
C                     --ALOWLM = THE SCALAR VALUE THAT SPECIFIES THE
C                                LOWER LIMIT FOR THE CONFIDENCE INTERVAL.
C                     --AUPPLM = THE SCALAR VALUE THAT SPECIFIES THE
C                                UPPER LIMIT FOR THE CONFIDENCE INTERVAL.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2017/11
C     ORIGINAL VERSION--NOVEMBER  2017.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBI2ME
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IWRITE
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION XTEMP1(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPR'
      ISUBN2='C4  '
      IERROR='NO'
      IWRITE='OFF'
C
      PDIFF=PSTAMV
      ALOWLM=PSTAMV
      AUPPLM=PSTAMV
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC4')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPPRC4--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)N1,N2,ALPHA,IBI2ME,IBUGA3,ISUBRO
   52   FORMAT('N1,N2,ALPHA,IBI2ME,IBUGA3,ISUBRO = ',2I8,G15.7,3(2X,A4))
        CALL DPWRST('XXX','WRIT')
        DO56I=1,MAX(N1,N2)
          WRITE(ICOUT,57)I,Y1(I),Y2(I)
   57     FORMAT('I,Y1(I),Y2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC4')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     SAMPLE ONE
C
C     FIRST REMOVE ANY MISSING VALUES
C
      IF(N1.GE.1)THEN
        ICNT=0
        DO110I=1,N1
          IF(Y1(I).NE.PSTAMV)THEN
            ICNT=ICNT+1
            Y1(ICNT)=Y1(I)
          ENDIF
  110   CONTINUE
        N1=ICNT
      ENDIF
C
      IF(N1.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,112)
  112   FORMAT('****** ERROR IN DIFFERENCE OF PROPORTION CONFIDENCE ',
     1         'LIMITS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)
  113   FORMAT('         AFTER REMOVING MISSING VALUES, THE NUMBER OF')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,115)N1
  115   FORMAT('         OBSERVATIONS (',I5,') FOR THE FIRST RESPONSE ',
     1         'VARIABLE IS LESS THAN 1.')
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     SAMPLE TWO
C
C     FIRST REMOVE ANY MISSING VALUES
C
      IF(N2.GE.1)THEN
        ICNT=0
        DO120I=1,N2
          IF(Y2(I).NE.PSTAMV)THEN
            ICNT=ICNT+1
            Y2(ICNT)=Y2(I)
          ENDIF
  120   CONTINUE
        N2=ICNT
      ENDIF
C
      IF(N2.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,112)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,123)
  123   FORMAT('         AFTER REMOVING MISSING VALUES, THE NUMBER OF')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,125)N2
  125   FORMAT('         OBSERVATIONS (',I5,') FOR THE SECOND ',
     1         'RESPONSE VARIABLE IS LESS THAN 1.')
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ***************************************************
C               **  STEP 2--                                     **
C               **  COMPUTE THE NUMBER OF SUCCESSES.             **
C               ***************************************************
C
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC4')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      EPS=0.0001
      CALL DISTIN(Y1,N1,IWRITE,XTEMP1,NDIST1,IBUGA3,IERROR)
      IF(NDIST1.GT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,112)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,132)
  132   FORMAT('      MORE THAN TWO DISTINCT VALUES DETECTED FOR ',
     1         'THE FIRST RESPONSE VARIABLE.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,134)NDIST1
  134   FORMAT('      NUMBER OF DISTINCT VALUES = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ELSEIF(NDIST1.EQ.1)THEN
        IF(ABS(XTEMP1(1)).LE.EPS)THEN
          XTEMP1(1)=0.0
          XTEMP1(2)=1.0
        ELSEIF(ABS(XTEMP1(1)-1.0).LE.EPS)THEN
          XTEMP1(1)=0.0
          XTEMP1(2)=1.0
        ELSE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,112)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,136)
  136     FORMAT('      FOR THE FIRST RESPONSE VARIABLE, THERE IS')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,137)
  137     FORMAT('      ONLY ONE DISTINCT VALUE THAT IS NOT EQUAL TO ',
     1           'EITHER 0 OR 1.')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,139)
  139     FORMAT('      THEREFORE THE DEFINITION OF SUCCESS IS ',
     1           'AMBIVALENT AND NOTHING IS COMPUTED.')
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
      HOLD1=XTEMP1(1)
      HOLD2=XTEMP1(2)
      IF(HOLD1.LT.HOLD2)THEN
        XMIN=HOLD1
        XMAX=HOLD2
      ELSE
        XMAX=HOLD1
        XMIN=HOLD2
      ENDIF
C
C     NOW COMPUTE THE NUMBER OF SUCCESSES
C
      ANR1=0.0
      DO140I=1,N1
        IF(Y1(I).EQ.XMAX)THEN
          ANR1=ANR1 + 1.0
        ENDIF
  140 CONTINUE
      AN1=REAL(N1)
      P1=ANR1/AN1
      Q1=1.0 - P1
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC4')THEN
        WRITE(ICOUT,141)XMIN,XMAX,ANR1
  141   FORMAT('SAMPLE ONE: XMIN,XMAX,ANR1 = ',3G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
C     NOW FOR SAMPLE TWO
C
      EPS=0.0001
      CALL DISTIN(Y2,N2,IWRITE,XTEMP1,NDIST2,IBUGA3,IERROR)
      IF(NDIST2.GT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,112)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,152)
  152   FORMAT('      MORE THAN TWO DISTINCT VALUES DETECTED FOR ',
     1         'THE SECOND RESPONSE VARIABLE.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,154)NDIST2
  154   FORMAT('      NUMBER OF DISTINCT VALUES = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ELSEIF(NDIST2.EQ.1)THEN
        IF(ABS(XTEMP1(1)).LE.EPS)THEN
          XTEMP1(1)=0.0
          XTEMP1(2)=1.0
        ELSEIF(ABS(XTEMP1(1)-1.0).LE.EPS)THEN
          XTEMP1(1)=0.0
          XTEMP1(2)=1.0
        ELSE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,112)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,156)
  156     FORMAT('      FOR THE SECOND RESPONSE VARIABLE, THERE IS')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,137)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,139)
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
      HOLD1=XTEMP1(1)
      HOLD2=XTEMP1(2)
      IF(HOLD1.LT.HOLD2)THEN
        XMIN=HOLD1
        XMAX=HOLD2
      ELSE
        XMAX=HOLD1
        XMIN=HOLD2
      ENDIF
C
C     NOW COMPUTE THE NUMBER OF SUCCESSES
C
      ANR2=0.0
      DO170I=1,N2
        IF(Y2(I).EQ.XMAX)THEN
          ANR2=ANR2 + 1.0
        ENDIF
  170 CONTINUE
      AN2=REAL(N2)
      P2=ANR2/AN2
      Q2=1.0 - P2
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC4')THEN
        WRITE(ICOUT,171)XMIN,XMAX,ANR2
  171   FORMAT('SAMPLE TWO: XMIN,XMAX,ANR2 = ',3G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
C               ***************************************
C               **  STEP 3--                         **
C               **  COMPUTE CONFIDENCE LIMITS        **
C               ***************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC4')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C
      ALP=ALPHA
      IF(ALP.LT.0.5)THEN
        ALP1=ALP/2.0
        ALP2=1.0-(ALP/2.0)
      ELSE
        ALP=1.0 - ALPHA
        ALP1=ALP/2.0
        ALP2=1.0-(ALP/2.0)
      ENDIF
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC4')THEN
        WRITE(ICOUT,291)N1,N2,P1,P2,ALP1,ALP2
  291   FORMAT('N1,N2,P1,P2,ALPHA,ALP1,ALP2 = ',2I8,5G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      IF(IBI2ME.EQ.'WALD')THEN
C
C       THIS IS THE STANDARD WALD METHOD
C
        PDIFF=P1-P2
        PSE=SQRT(P1*(1.0-P1)/REAL(N1) + P2*(1.0-P2)/REAL(N2))
        CALL NORPPF(ALP2,ANORCV)
        AUPPLM=PDIFF+PSE*ANORCV
        IF(AUPPLM.GT.1.0)AUPPLM=1.0
        ALOWLM=PDIFF-PSE*ANORCV
        IF(ALOWLM.LT.-1.0)ALOWLM=-1.0
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC4')THEN
          WRITE(ICOUT,292)PDIFF,PSE,ANORCV,ALOWLM,AUPPLM
  292     FORMAT('WALD: PDIFF,PSE,ANORCV,ALOWLM,AUPPLM = ',5G15.7)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ELSEIF(IBI2ME.EQ.'ADJU')THEN
C
C       THIS IS THE ADJUSTED WALD METHOD RECOMMENDED BY
C       AGRESTI.
C
        P1T=(ANR1+1.0)/REAL(N1 + 2)
        P2T=(ANR2+1.0)/REAL(N2 + 2)
        PDIFF=P1T-P2T
        PSE=SQRT(P1T*(1.0-P1T)/REAL(N1+2) + P2T*(1.0-P2T)/REAL(N2+2))
        CALL NORPPF(ALP2,ANORCV)
        AUPPLM=PDIFF+PSE*ANORCV
        IF(AUPPLM.GT.1.0)AUPPLM=1.0
        ALOWLM=PDIFF-PSE*ANORCV
        IF(ALOWLM.LT.-1.0)ALOWLM=-1.0
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC4')THEN
          WRITE(ICOUT,293)PDIFF,P1T,P2T,PSE,ANORCV,ALOWLM,AUPPLM
  293     FORMAT('ADJUSTED WALD: PDIFF,P1T,P2T,PSE,ANORCV,ALOWLM,',
     1           'AUPPLM = ',7G15.7)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ELSEIF(IBI2ME.EQ.'BAYE')THEN
C
C       THIS IS THE BAYESIAN ADJUSTED WALD METHOD DISCUSSED BY AGRESTI.
C
        P1T=(ANR1+1.0)/REAL(N1 + 2)
        P2T=(ANR2+1.0)/REAL(N2 + 2)
        PDIFF=P1T-P2T
        PSE=SQRT(P1T*(1.0-P1T)/REAL(N1+3) + P2T*(1.0-P2T)/REAL(N2+3))
        CALL NORPPF(ALP2,ANORCV)
        AUPPLM=PDIFF+PSE*ANORCV
        IF(AUPPLM.GT.1.0)AUPPLM=1.0
        ALOWLM=PDIFF-PSE*ANORCV
        IF(ALOWLM.LT.-1.0)ALOWLM=-1.0
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRC4')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPRC4--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)PDIFF,ALOWLM,AUPPLM
 9012   FORMAT('PDIFF,ALOWLM,AUPPLM = ',3G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPRE2(Y,XMAT,MAXNXT,NUMVAR,IVARN3,IVARN4,W,N,
     1                  MODEL,NUMCHA,PARAM3,IPARN3,IPARN4,NUMPAR,
     1                  ICON3,IANGLU,IPARO3,
     1                  PARLI3,V,MAXITS,FITSD,FITPOW,CPUEPS,
     1                  ITYPEH,IW2HOL,IW22HO,W2HOLD,NWHOLD,
     1                  IHARG,IHARG2,IARGT,IARG,ARG,NUMARG,
     1                  IREP,REPSD,REPDF,RESSD,RESDF,PRED2,RES2,ALFCDF,
     1                  DUM1,DUM2,IANS,IWIDTH,
     1                  ISUBRO,IBUGA3,IBUGCO,IBUGEV,IERROR)
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--OCTOBER   1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --MARCH     1988.      ADD LOFCDF
C     UPDATED         --MAY       1990.      MOVE SOME DIMENSIONING TO DPPREF
C     UPDATED         --NOVEMBER  1995. IANS, IWIDTH => INPUT ARGS
C     UPDATED         --NOVEMBER  1995. ALL ITERATIONS => DPST1F.DAT
C     UPDATED         --JULY      2019. REPLACE X1 ... X5 WITH XMAT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IVARN3
      CHARACTER*4 IVARN4
      CHARACTER*4 IPARN3
      CHARACTER*4 IPARN4
      CHARACTER*4 IANGLU
      CHARACTER*4 IPARO3
      CHARACTER*4 ITYPEH
      CHARACTER*4 IW2HOL
      CHARACTER*4 IW22HO
      CHARACTER*4 IHARG
      CHARACTER*4 IHARG2
      CHARACTER*4 IARGT
      CHARACTER*4 IREP
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGCO
      CHARACTER*4 IBUGEV
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASLS
      CHARACTER*4 IHPN
      CHARACTER*4 IHPN2
      CHARACTER*4 IHPNV
      CHARACTER*4 IHPNV2
      CHARACTER*4 IPARN5
      CHARACTER*4 IPARN6
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IH3
      CHARACTER*4 IH4
      CHARACTER*4 IH5
      CHARACTER*4 IH6
      CHARACTER*4 IH7
      CHARACTER*4 IH8
      CHARACTER*4 IH9
      CHARACTER*4 IH10
      CHARACTER*4 MODEL
      CHARACTER*4 IFOUNF
      CHARACTER*4 IANS
      CHARACTER*4 IOP
      CHARACTER*4 ISMALL
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOF2.INC'
C
      DIMENSION IHPNV(200)
      DIMENSION IHPNV2(200)
      DIMENSION ASTARV(200)
      DIMENSION AINCV(200)
      DIMENSION ASTOPV(200)
      DIMENSION NUMINV(200)
C
      DIMENSION WORST(200)
      DIMENSION BEST(200)
C
      DIMENSION Y(*)
      DIMENSION XMAT(MAXNXT,NUMVAR)
      DIMENSION PRED2(*)
      DIMENSION RES2(*)
      DIMENSION W(*)
      DIMENSION V(*)
      DIMENSION DUM1(*)
      DIMENSION DUM2(*)
C
      DIMENSION IHARG(*)
      DIMENSION IHARG2(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
C
      DIMENSION MODEL(*)
      DIMENSION IVARN3(*)
      DIMENSION IVARN4(*)
      DIMENSION PARAM3(*)
      DIMENSION IPARN3(*)
      DIMENSION IPARN4(*)
      DIMENSION ICON3(*)
      DIMENSION IPARO3(*)
      DIMENSION PARLI3(*)
C
      DIMENSION ITYPEH(*)
      DIMENSION IW2HOL(*)
      DIMENSION IW22HO(*)
      DIMENSION W2HOLD(*)
C
      DIMENSION IPARN5(100)
      DIMENSION IPARN6(100)
      DIMENSION PARAM5(100)
C
      DIMENSION IANS(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPR'
      ISUBN2='E2  '
      IERROR='NO'
      IH2='UNKN'
C
      IPASS=2
      IRESDF=0
      IMIN=0
      KMAX=0
      J12=0
      J22=0
      J32=0
      J42=0
      J52=0
      J62=0
      J72=0
      J82=0
      J92=0
      J102=0
      IPAR2=0
      IPAR3=0
      IPAR4=0
      IPAR5=0
      IPAR6=0
      IPAR7=0
      IPAR8=0
      IPAR9=0
      IPAR10=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PRE2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPRE2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)N,NUMVAR,NUMPAR,NUMCHA,MAXITS
   52   FORMAT('N,NUMVAR,NUMPAR,NUMCHA,MAXITS = ',5I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,83)FITPOW,FITSD,CPUEPS,V(1)
   83   FORMAT('FITPOW,FITSD,CPUEPS,V(1) = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGA3,IBUGCO,IBUGEV
   53   FORMAT('IBUGA3,IBUGCO,IBUGEV = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,56)I,Y(I),XMAT(I,1),W(I)
   56     FORMAT('I,Y(I),XMAT(I,1),W(I) = ',I5,3F20.10)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        DO61J=1,NUMVAR
          WRITE(ICOUT,62)J,IPARO3(J),IVARN3(J),IVARN4(J),PARLI3(J)
   62     FORMAT('I,IPARO3(J),IVARN3(J),IVARN4(J),PARLI3(J) = ',
     1           I8,2X,A4,2X,2A4,2X,G15.7)
          CALL DPWRST('XXX','BUG ')
   61   CONTINUE
        DO66J=1,NUMPAR
          WRITE(ICOUT,67)J,IPARN3(J),IPARN4(J),PARAM3(J),ICON3(J)
   67     FORMAT('I,IPARN3(I),IPARN4(I),PARAM3(I),ICON3(I) = ',
     1           I8,2X,2A4,G15.7,I8)
          CALL DPWRST('XXX','BUG ')
   66   CONTINUE
        WRITE(ICOUT,71)(MODEL(J),J=1,MIN(100,NUMCHA))
   71   FORMAT('FUNCTIONAL EXPRESSION--',100A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
CCCCCC THE FOLLOWING SECTION WAS ADDED NOVEMBER 1995
C               **************************************************
C               **  STEP 15--                                   **
C               **   OPEN THE STORAGE FILES                     **
C               **************************************************
C
      ISTEPN='15'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOP='OPEN'
      IFLAG1=1
      IFLAG2=0
      IFLAG3=0
      IFLAG4=0
      IFLAG5=0
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               **************************************************
C               **  STEP 1--                                    **
C               **  DETERMINE THE PARAMETER NAMES IN THE MODEL  **
C               **  AND THE NUMBER NUMPAR OF PARAMETERS.        **
C               **************************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IPASS=2
C
      DO1100I=1,100
        IPARN5(I)='JUNK'
        IPARN6(I)='JUNK'
        PARAM5(I)=-999.0
 1100 CONTINUE
      IF(NUMPAR.GE.1)THEN
        DO1150I=1,NUMPAR
          IPARN5(I)=IPARN3(I)
          IPARN6(I)=IPARN4(I)
          PARAM5(I)=PARAM3(I)
 1150   CONTINUE
      ENDIF
C
      IF(NUMVAR.GE.1)THEN
        DO1300I=1,NUMVAR
          IPARN5(NUMPAR+I)=IVARN3(I)
          IPARN6(NUMPAR+I)=IVARN4(I)
 1300   CONTINUE
      ENDIF
C
      NUMPV=NUMPAR+NUMVAR
C
C               ********************************************************
C               **  STEP 2--                                          **
C               **  DEFINE VARIOUS CONSTANTS.                         **
C               **  DEFINE EPS = MACHINE EPSILON.                     **
C               **  DEFINE TOL = CUTOFF TOLERANCE FOR SUCCESSIVE      **
C               **               ESTIMATES.                           **
C               **  DEFINE MAXITS = MAX NUMBER OF ITERATIONS.         **
C               **  DEFINE EXPND = EXPANSION FACTOR                   **
C               **  DEFINE COMPR  = COMPRESSION FACTOR                **
C               **  DEFINE NCONST = NUMBER OF PARAMETERS HELD CONSTANT.*
C               **  DEFINE NP = NUMBER OF NON-CONSTANT PARAMETERS.    **
C               **  DEFINE DF = DEGREES OF FREEDOM.                   **
C               **  DEFINE SOME WORKING STORAGE START POINTS IN WS.   **
C               ********************************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IREP='NO'
      REPSD=0.0
      REPDF=0.0
      IREPDF=INT(REPDF+0.5)
      RESSD=0.0
      RESDF=0.0
      ALFCDF=(-999.99)
      IF(NUMPAR.LE.0)GOTO2000
      EPS = 1.E-8
      DEPS=EPS
      TOL=0.00001
      DTOL=TOL
      ALAMBA=0.01
      EXPND=1.5
      COMPR=0.5
      NPST=NUMPAR
      NCONST=0
      DO501I=1,NUMPAR
        IF(ICON3(I).EQ.1)NCONST=NCONST+1
  501 CONTINUE
      NP=NUMPAR-NCONST
      IF(NP.LE.0)THEN
        WRITE(ICOUT,117) NP
117     FORMAT(10X,'NUMBER OF PARAMETERS TO BE VARIED = ',I8,
     *         '(LESS THAN ONE)')
        CALL DPWRST('XXX','BUG ')
        IER = 5
        IERROR='YES'
        GOTO8100
      ENDIF
      DF=N-NP
      RESDF=DF
      IRESDF=INT(DF+0.5)
      IC=0
      IER=2
      IDA=NP*NP
      IDU=IDA+NP
      ID =IDU+NP
      IDX=ID +NP
      IY =IDX+NP
 2000 CONTINUE
C
      ICASLS='ON'
      IF(FITPOW.LE.1.999)ICASLS='OFF'
      IF(FITPOW.GE.2.001)ICASLS='OFF'
C
      IF(IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IF(NUMPAR.GE.1.AND.ICASLS.EQ.'ON')THEN
          WRITE(ICOUT,101)
  101     FORMAT('LEAST SQUARES NON-LINEAR PRE-FIT')
          CALL DPWRST('XXX','BUG ')
        ELSEIF(NUMPAR.GE.1.AND.ICASLS.EQ.'OFF')THEN
          WRITE(ICOUT,102)FITPOW
  102     FORMAT('NON-LINEAR PRE-FIT (FIT POWER = ',F10.5,')')
          CALL DPWRST('XXX','BUG ')
        ELSEIF(NUMPAR.LE.0)THEN
          WRITE(ICOUT,105)
  105     FORMAT('FULLY-SPECIFIED MODEL')
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,106)N
  106   FORMAT('      SAMPLE SIZE N = ',I8)
        CALL DPWRST('XXX','BUG ')
        IF(MODEL(1).NE.' ')IMIN=1
        IF(MODEL(1).EQ.' ')IMIN=2
        IMAX=NUMCHA
        IDEL=IMAX-IMIN+1
        NUMLIN=((IDEL-1)/100)+1
C
        IF(NUMLIN.GE.1)THEN
          DO2240KLINE=1,NUMLIN
            IF(KLINE.EQ.1)THEN
              KMIN=IMIN
              KMAX=KMIN+100-1
              IF(KMAX.GT.IMAX)KMAX=IMAX
              WRITE(ICOUT,2252)(MODEL(K),K=KMIN,KMAX)
 2252         FORMAT('      MODEL--',100A1)
              CALL DPWRST('XXX','BUG ')
            ELSEIF(KLINE.GE.2)THEN
              KMIN=KMAX+1
              KMAX=KMIN+100-1
              IF(KMAX.GT.IMAX)KMAX=IMAX
              WRITE(ICOUT,2262)(MODEL(K),K=KMIN,KMAX)
 2262         FORMAT(13X,100A1)
              CALL DPWRST('XXX','BUG ')
            ENDIF
 2240     CONTINUE
        ENDIF
      ENDIF
C
C               ********************************************************
C               **  STEP 2.5--                                        **
C               **  CHECK FOR REPLICATION AND IF EXISTENT COMPUTE A   **
C               **  (MODEL-FREE) REPLICATION STANDARD DEVIATION.      **
C               ********************************************************
C
      ISTEPN='2.5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPREPS(Y,XMAT,MAXNXT,N,NUMVAR,DUM1,DUM2,
     1            IREP,REPSS,REPMS,REPSD,REPDF,NUMSET,IBUGA3,IERROR)
      IREPDF=INT(REPDF+0.5)
C
      IF(IREP.EQ.'NO')THEN
        IF(IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,2811)
 2811     FORMAT('      NO REPLICATION CASE')
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ELSE
        IF(IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,2911)
 2911     FORMAT('      REPLICATION CASE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2922)REPSD
 2922     FORMAT('      REPLICATION STANDARD DEVIATION = ',D20.10)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2923)IREPDF
 2923     FORMAT('      REPLICATION DEGREES OF FREEDOM = ',2X,I9)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2924)NUMSET
 2924     FORMAT('      NUMBER OF DISTINCT SUBSETS     = ',2X,I9)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
C               ********************************************************
C               **  STEP 3--                                          **
C               **  TREAT THE SPECIAL CASE WHERE NO PARAMETERS        **
C               **  EXIST IN THE MODEL--                              **
C               **  THAT IS, WE ARE REALLY INTERESTED IN GENERATING   **
C               **  PREDICTED VALUES AND RESIDUALS FROM A             **
C               **  FULLY-SPECIFIED MODEL. THIS IS USEFUL FOR         **
C               **  FOR MANUALLY ARRIVING AT REASONABLE STARTING      **
C               **  VALUES FOR A MORE COMPLICATED PRE-FIT; AND ALSO   **
C               **  FOR TESTING THE GOODNESS OF AN ALREADY-DERIVED    **
C               **  PRE-FIT FOR ONE DOMAIN OVER A SECOND DOMAIN.)     **
C               ********************************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMPAR.LT.1)THEN
        CALL DPPRE3(MODEL,NUMCHA,IPASS,PARAM5,IPARN5,IPARN6,NUMPV,
     1              IPARN3,IVARN3,PARAM3,IPARN4,IVARN4,ICON3,
     1              NUMPAR,NUMVAR,Y,XMAT,MAXNXT,W,N,FITPOW,
     1              IANGLU,ITYPEH,IW2HOL,IW22HO,W2HOLD,NWHOLD,
     1              PRED2,RES2,RESSS,RESSD,RESDF,
     1              ISUBRO,IBUGA3,IBUGCO,IBUGEV,IERROR)
        IF(IERROR.EQ.'YES')GOTO8100
      ENDIF
C
C               *************************************************
C               **  STEP 5--                                   **
C               **  DETERMINE THE LATTICE OF PARAMETER VALUES  **
C               *************************************************
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *************************************************
C               **  STEP 5.1--                                 **
C               **  SEARCH FOR THE FIRST OCCURRANCE OF    FOR  **
C               *************************************************
C
      ISTEPN='5.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMPF=0
      JMAX=NUMARG-1
      DO3100J=1,JMAX
        J2=J
        JP1=J+1
        IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    '.AND.
     1     IHARG(JP1).EQ.'I   '.AND.IHARG2(JP1).EQ.'   ')THEN
          GOTO3150
        ELSEIF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')THEN
          GOTO3190
        ENDIF
 3100 CONTINUE
 3150 CONTINUE
      CALL DPPRE3(MODEL,NUMCHA,IPASS,PARAM5,IPARN5,IPARN6,NUMPV,
     1            IPARN3,IVARN3,PARAM3,IPARN4,IVARN4,ICON3,
     1            NUMPAR,NUMVAR,Y,XMAT,MAXNXT,W,N,FITPOW,
     1            IANGLU,ITYPEH,IW2HOL,IW22HO,W2HOLD,NWHOLD,PRED2,RES2,
     1            RESSS,RESSD,RESDF,
     1            ISUBRO,IBUGA3,IBUGCO,IBUGEV,IERROR)
      IF(IERROR.EQ.'YES')GOTO8100
      DO3160I=1,NUMPAR
        BEST(I)=PARAM3(I)
 3160 CONTINUE
      RESSMN=RESSD
      GOTO6100
C
 3190 CONTINUE
      IFOLOC=J2
      ILALOC=IFOLOC-1
C
C               ************************************************
C               **  STEP 5.2--                                **
C               **  EXTRACT START,INCREMENT, AND STOP VALUES  **
C               **  FOR EACH PARAMETER GIVEN                  **
C               **  VIA EACH    FOR    QUALIFICATION.         **
C               ************************************************
C
      ISTEPN='5.2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMPF=0
      IF(IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      DO3200ITER=1,1000
        IFOLOC=ILALOC+1
        J=IFOLOC
        JP1=J+1
        IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    '.AND.
     1     IHARG(JP1).EQ.'I   '.AND.IHARG2(JP1).EQ.'   ')THEN
          GOTO3280
        ELSEIF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')THEN
          CALL DPEXS2(IFOLOC,IHARG,IHARG2,IARGT,IARG,ARG,NUMARG,
     1                IANS,IWIDTH,
     1                IHPN,IHPN2,ASTART,AINC,ASTOP,NUMINC,ILALOC,
     1                IBUGA3,IFOUNF,IERROR)
          IF(IFOUNF.EQ.'NO')GOTO3280
          NUMPF=NUMPF+1
          IHPNV(NUMPF)=IHPN
          IHPNV2(NUMPF)=IHPN2
          ASTARV(NUMPF)=ASTART
          AINCV(NUMPF)=AINC
          ASTOPV(NUMPF)=ASTOP
          NUMINV(NUMPF)=NUMINC
          IF(IPRINT.EQ.'ON'.AND.NUMPF.GE.1)THEN
            WRITE(ICOUT,3221)IHPN,IHPN2,ASTART,AINC,ASTOP
 3221       FORMAT('      LATTICE VALUES FOR ',A4,A4,' = ',3E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PRE2')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3231)NUMPF
 3231       FORMAT('NUMPF = ',I8)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3232)IHPNV(NUMPF),IHPNV2(NUMPF)
 3232       FORMAT('IHPNV(NUMPF),IHPNV2(NUMPF) = ',A4,2X,A4)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3233)ASTARV(NUMPF),AINCV(NUMPF),ASTOPV(NUMPF)
 3233       FORMAT('ASTARV(NUMPF),AINCV(NUMPF),ASTOPV(NUMPF) = ',3G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,3234)NUMINV(NUMPF)
 3234       FORMAT('NUMINV(NUMPF) = ',I8)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ELSE
          GOTO3280
        ENDIF
 3200 CONTINUE
 3280 CONTINUE
C
      IPROD=1
      IF(NUMPF.GT.0)THEN
        DO3285I=1,NUMPF
          IPROD=IPROD*NUMINV(I)
 3285   CONTINUE
      ENDIF
      NUMLAP=IPROD
      IF(IPRINT.EQ.'ON'.AND.NUMPF.GE.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3291)NUMLAP
 3291   FORMAT('      NUMBER OF LATTICE POINTS    = ',2X,I9)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PRE2')THEN
        WRITE(ICOUT,3292)NUMINV(NUMPF)
 3292   FORMAT('NUMINV(NUMPF) = ',I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 5.3--           **
C               **  PRINT OUT A HEADING  **
C               ***************************
C
      ISTEPN='5.3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,3311)
 3311   FORMAT('  STEP                  RESIDUAL  *  PARAMETER')
        CALL DPWRST('XXX','BUG ')
        IF(ICASLS.EQ.'ON')THEN
          WRITE(ICOUT,3312)
 3312     FORMAT(' NUMBER                 STANDARD  *  ESTIMATES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,3314)
 3314     FORMAT('                        DEVIATION *           ')
          CALL DPWRST('XXX','BUG ')
        ELSE
          WRITE(ICOUT,3313)
 3313     FORMAT(' NUMBER                   NORM    *  ESTIMATES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,3315)
 3315     FORMAT('                                  *           ')
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,3316)
 3316   FORMAT('----------------------------------*-----------')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************************
C               **  STEP 5.4--                                    **
C               **  STEP THROUGH THE VARIOUS VALUES               **
C               **  OF THE PARAMETER LATTICE;                     **
C               **  COMPUTE RESIDUAL STANDARD DEVIATION FOR EACH  **
C               **  LATTICE VALUE.                                **
C               ****************************************************
C
      ISTEPN='5.4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      RESSMN=CPUMAX
      RESSMX=CPUMIN
C
      N1=0
      N2=0
      N3=0
      N4=0
      N5=0
      N6=0
      N7=0
      N8=0
      N9=0
      N10=0
C
      I1=1
      I2=1
      I3=1
      I4=1
      I5=1
      I6=1
      I7=1
      I8=1
      I9=1
      I10=1
C
      IF(NUMPF.LE.0)GOTO4090
      N1=NUMINV(1)
      IF(NUMPF.LE.1)GOTO4090
      N2=NUMINV(2)
      IF(NUMPF.LE.2)GOTO4090
      N3=NUMINV(3)
      IF(NUMPF.LE.3)GOTO4090
      N4=NUMINV(4)
      IF(NUMPF.LE.4)GOTO4090
      N5=NUMINV(5)
      IF(NUMPF.LE.5)GOTO4090
      N6=NUMINV(6)
      IF(NUMPF.LE.6)GOTO4090
      N7=NUMINV(7)
      IF(NUMPF.LE.7)GOTO4090
      N8=NUMINV(8)
      IF(NUMPF.LE.8)GOTO4090
      N9=NUMINV(9)
      IF(NUMPF.LE.9)GOTO4090
      N10=NUMINV(10)
      IF(NUMPF.LE.10)GOTO4090
 4090 CONTINUE
C
      ISTEP=0
C
      IPAR1=1
      I1=0
 4100 CONTINUE
      I1=I1+1
      AI1=I1
      P1=ASTARV(IPAR1)+(AI1-1.0)*AINCV(IPAR1)
      IF(I1.EQ.N1)P1=ASTOPV(IPAR1)
      IF(I1.GE.2)THEN
        PARAM3(J12)=P1
        PARAM5(J12)=P1
        GOTO4119
      ENDIF
      IH=IHPNV(IPAR1)
      IH2=IHPNV2(IPAR1)
      DO4110J1=1,NUMPAR
        J12=J1
        IF(IH.EQ.IPARN5(J1).AND.IH2.EQ.IPARN6(J1))THEN
          PARAM3(J12)=P1
          PARAM5(J12)=P1
          GOTO4119
        ENDIF
 4110 CONTINUE
 4119 CONTINUE
      IF(NUMPF.LE.1)GOTO5100
C
      IPAR2=2
      I2=0
 4200 CONTINUE
      I2=I2+1
      AI2=I2
      P2=ASTARV(IPAR2)+(AI2-1.0)*AINCV(IPAR2)
      IF(I2.EQ.N2)P2=ASTOPV(IPAR2)
      IF(I2.GE.2)THEN
        PARAM3(J22)=P2
        PARAM5(J22)=P2
        GOTO4219
      ENDIF
      IH=IHPNV(IPAR2)
      IH2=IHPNV2(IPAR2)
      DO4210J2=1,NUMPAR
        J22=J2
        IF(IH.EQ.IPARN5(J2).AND.IH2.EQ.IPARN6(J2))THEN
          PARAM3(J22)=P2
          PARAM5(J22)=P2
          GOTO4219
        ENDIF
 4210 CONTINUE
 4219 CONTINUE
      IF(NUMPF.LE.2)GOTO5100
C
      IPAR3=3
      I3=0
 4300 CONTINUE
      I3=I3+1
      AI3=I3
      P3=ASTARV(IPAR3)+(AI3-1.0)*AINCV(IPAR3)
      IF(I3.EQ.N3)P3=ASTOPV(IPAR3)
      IF(I3.GE.2)THEN
        PARAM3(J32)=P3
        PARAM5(J32)=P3
        GOTO4319
      ENDIF
      IH=IHPNV(IPAR3)
      IH3=IHPNV2(IPAR3)
      DO4310J3=1,NUMPAR
        J32=J3
        IF(IH.EQ.IPARN5(J3).AND.IH2.EQ.IPARN6(J3))THEN
          PARAM3(J32)=P3
          PARAM5(J32)=P3
          GOTO4319
        ENDIF
 4310 CONTINUE
 4319 CONTINUE
      IF(NUMPF.LE.3)GOTO5100
C
      IPAR4=4
      I4=0
 4400 CONTINUE
      I4=I4+1
      AI4=I4
      P4=ASTARV(IPAR4)+(AI4-1.0)*AINCV(IPAR4)
      IF(I4.EQ.N4)P4=ASTOPV(IPAR4)
      IF(I4.GE.2)THEN
        PARAM3(J42)=P4
        PARAM5(J42)=P4
        GOTO4419
      ENDIF
      IH=IHPNV(IPAR4)
      IH4=IHPNV2(IPAR4)
      DO4410J4=1,NUMPAR
        J42=J4
        IF(IH.EQ.IPARN5(J4).AND.IH2.EQ.IPARN6(J4))THEN
          PARAM3(J42)=P4
          PARAM5(J42)=P4
          GOTO4419
        ENDIF
 4410 CONTINUE
 4419 CONTINUE
      IF(NUMPF.LE.4)GOTO5100
C
      IPAR5=5
      I5=0
 4500 CONTINUE
      I5=I5+1
      AI5=I5
      P5=ASTARV(IPAR5)+(AI5-1.0)*AINCV(IPAR5)
      IF(I5.EQ.N5)P5=ASTOPV(IPAR5)
      IF(I5.GE.2)THEN
        PARAM3(J52)=P5
        PARAM5(J52)=P5
        GOTO4519
      ENDIF
      IH=IHPNV(IPAR5)
      IH5=IHPNV2(IPAR5)
      DO4510J5=1,NUMPAR
        J52=J5
        IF(IH.EQ.IPARN5(J5).AND.IH2.EQ.IPARN6(J5))THEN
          PARAM3(J52)=P5
          PARAM5(J52)=P5
          GOTO4519
        ENDIF
 4510 CONTINUE
 4519 CONTINUE
      IF(NUMPF.LE.5)GOTO5100
C
      IPAR6=6
      I6=0
 4600 CONTINUE
      I6=I6+1
      AI6=I6
      P6=ASTARV(IPAR6)+(AI6-1.0)*AINCV(IPAR6)
      IF(I6.EQ.N6)P6=ASTOPV(IPAR6)
      IF(I6.GE.2)THEN
        PARAM3(J62)=P6
        PARAM5(J62)=P6
        GOTO4619
      ENDIF
      IH=IHPNV(IPAR6)
      IH6=IHPNV2(IPAR6)
      DO4610J6=1,NUMPAR
        J62=J6
        IF(IH.EQ.IPARN5(J6).AND.IH2.EQ.IPARN6(J6))THEN
          PARAM3(J62)=P6
          PARAM5(J62)=P6
          GOTO4619
        ENDIF
 4610 CONTINUE
 4619 CONTINUE
      IF(NUMPF.LE.6)GOTO5100
C
      IPAR7=7
      I7=0
 4700 CONTINUE
      I7=I7+1
      AI7=I7
      P7=ASTARV(IPAR7)+(AI7-1.0)*AINCV(IPAR7)
      IF(I7.EQ.N7)P7=ASTOPV(IPAR7)
      IF(I7.GE.2)THEN
        PARAM3(J72)=P7
        PARAM5(J72)=P7
        GOTO4719
      ENDIF
      IH=IHPNV(IPAR7)
      IH7=IHPNV2(IPAR7)
      DO4710J7=1,NUMPAR
        J72=J7
        IF(IH.EQ.IPARN5(J7).AND.IH2.EQ.IPARN6(J7))THEN
          PARAM3(J72)=P7
          PARAM5(J72)=P7
          GOTO4719
        ENDIF
 4710 CONTINUE
 4719 CONTINUE
      IF(NUMPF.LE.7)GOTO5100
C
      IPAR8=8
      I8=0
 4800 CONTINUE
      I8=I8+1
      AI8=I8
      P8=ASTARV(IPAR8)+(AI8-1.0)*AINCV(IPAR8)
      IF(I8.EQ.N8)P8=ASTOPV(IPAR8)
      IF(I8.GE.2)THEN
        PARAM3(J82)=P8
        PARAM5(J82)=P8
        GOTO4819
      ENDIF
      IH=IHPNV(IPAR8)
      IH8=IHPNV2(IPAR8)
      DO4810J8=1,NUMPAR
        J82=J8
        IF(IH.EQ.IPARN5(J8).AND.IH2.EQ.IPARN6(J8))THEN
          PARAM3(J82)=P8
          PARAM5(J82)=P8
          GOTO4819
        ENDIF
 4810 CONTINUE
 4819 CONTINUE
      IF(NUMPF.LE.8)GOTO5100
C
      IPAR9=9
      I9=0
 4900 CONTINUE
      I9=I9+1
      AI9=I9
      P9=ASTARV(IPAR9)+(AI9-1.0)*AINCV(IPAR9)
      IF(I9.EQ.N9)P9=ASTOPV(IPAR9)
      IF(I9.GE.2)THEN
        PARAM3(J92)=P9
        PARAM5(J92)=P9
        GOTO4919
      ENDIF
      IH=IHPNV(IPAR9)
      IH9=IHPNV2(IPAR9)
      DO4910J9=1,NUMPAR
        J92=J9
        IF(IH.EQ.IPARN5(J9).AND.IH2.EQ.IPARN6(J9))THEN
          PARAM3(J92)=P9
          PARAM5(J92)=P9
          GOTO4919
        ENDIF
 4910 CONTINUE
 4919 CONTINUE
      IF(NUMPF.LE.9)GOTO5100
C
      IPAR10=10
      I10=0
 5000 CONTINUE
      I10=I10+1
      AI10=I10
      P10=ASTARV(IPAR10)+(AI10-1.0)*AINCV(IPAR10)
      IF(I10.EQ.N10)P10=ASTOPV(IPAR10)
      IF(I10.GE.2)THEN
        PARAM3(J102)=P10
        PARAM5(J102)=P10
        GOTO5019
      ENDIF
      IH=IHPNV(IPAR10)
      IH10=IHPNV2(IPAR10)
      DO5010J10=1,NUMPAR
        J102=J10
        IF(IH.EQ.IPARN5(J10).AND.IH2.EQ.IPARN6(J10))THEN
          PARAM3(J102)=P10
          PARAM5(J102)=P10
          GOTO5019
        ENDIF
 5010 CONTINUE
 5019 CONTINUE
      IF(NUMPF.LE.10)GOTO5100
C
 5100 CONTINUE
      ISTEP=ISTEP+1
      CALL DPPRE3(MODEL,NUMCHA,IPASS,PARAM5,IPARN5,IPARN6,NUMPV,
     1            IPARN3,IVARN3,PARAM3,IPARN4,IVARN4,ICON3,
     1            NUMPAR,NUMVAR,Y,XMAT,MAXNXT,W,N,FITPOW,
     1            IANGLU,ITYPEH,IW2HOL,IW22HO,W2HOLD,NWHOLD,PRED2,RES2,
     1            RESSS,RESSD,RESDF,
     1            ISUBRO,IBUGA3,IBUGCO,IBUGEV,IERROR)
      IF(IERROR.EQ.'YES')GOTO8100
C
      IF(RESSD.GT.RESSMX)THEN
        DO5115I=1,NUMPAR
          WORST(I)=PARAM5(I)
 5115   CONTINUE
        RESSMX=RESSD
      ENDIF
C
CCCCC THE FOLLOWING 19 LINES WERE REWRITTEN    NOVEMBER 1995
      ISMALL='NO'
      IF(RESSD.LT.RESSMN)THEN
         DO5125I=1,NUMPAR
            BEST(I)=PARAM5(I)
 5125    CONTINUE
         RESSMN=RESSD
         ISMALL='YES'
      END IF
C
      IF(ISMALL.EQ.'YES')THEN
         IF(IPRINT.EQ.'ON')THEN
            WRITE(ICOUT,5191)ISTEP,RESSD,(PARAM3(J),J=1,NUMPAR)
 5191       FORMAT(I5,'--',4X,9X,1X,E12.5,' *',8E12.5)
            CALL DPWRST('XXX','BUG ')
         END IF
      END IF
C
      WRITE(IOUNI1,5192)RESSD,(PARAM3(J),J=1,NUMPAR)
 5192 FORMAT(1X,E12.5,8E12.5)
C
      IF(I10.LT.N10)GOTO5000
      IF(I9.LT.N9)GOTO4900
      IF(I8.LT.N8)GOTO4800
      IF(I7.LT.N7)GOTO4700
      IF(I6.LT.N6)GOTO4600
      IF(I5.LT.N5)GOTO4500
      IF(I4.LT.N4)GOTO4400
      IF(I3.LT.N3)GOTO4300
      IF(I2.LT.N2)GOTO4200
      IF(I1.LT.N1)GOTO4100
C
C               *******************************************************
C               **  STEP 12--                                        **
C               **  PRINT OUT FINAL PARAMETER ESTIMATES              **
C               **  AND THEIR STANDARD DEVIATIONS.                   **
C               **  ALSO PRINT OUT THE RESIDUAL STANDARD DEVIATION.  **
C               *******************************************************
C
 6100 CONTINUE
      ISTEPN='12'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO6110I=1,NUMPAR
        PARAM3(I)=BEST(I)
 6110 CONTINUE
      RESSD=RESSMN
C
      IF(IPRINT.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6111)
 6111   FORMAT (7X,'FINAL PARAMETER ESTIMATES           ')
        CALL DPWRST('XXX','BUG ')
        DO6120I=1,NUMPAR
          WRITE(ICOUT,6121)I,IPARN3(I),IPARN4(I),PARAM3(I)
 6121     FORMAT(I8,2X,2A4,2X,G22.6)
          CALL DPWRST('XXX','BUG ')
 6120   CONTINUE
      ENDIF
C
C               *********************************************
C               **  STEP 13--                              **
C               **  PRINT OUT GOODNESS OF FIT INFORMATION  **
C               *********************************************
C
      ISTEPN='13'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'ON')THEN
        IF(NUMPAR.GE.1)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IF(ICASLS.EQ.'ON')THEN
          WRITE(ICOUT,7125)RESSD
 7125     FORMAT('      RESIDUAL    STANDARD DEVIATION = ',F20.10)
          CALL DPWRST('XXX','BUG ')
        ELSE
          WRITE(ICOUT,7126)RESSD
 7126     FORMAT('      RESIDUAL    NORM               = ',F20.10)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,7127)IRESDF
 7127   FORMAT('      RESIDUAL    DEGREES OF FREEDOM = ',2X,I9)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IREP.EQ.'YES')THEN
        IFITDF=IRESDF-IREPDF
        IF(IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,7227)REPSD
 7227     FORMAT('      REPLICATION STANDARD DEVIATION = ',F20.10)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7228)IREPDF
 7228     FORMAT('      REPLICATION DEGREES OF FREEDOM = ',2X,I9)
          CALL DPWRST('XXX','BUG ')
          IF(IFITDF.LT.1)THEN
            WRITE(ICOUT,7236)
 7236       FORMAT('      LACK OF FIT F TEST CANNOT BE DONE BECAUSE')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7237)
 7237       FORMAT('      HAVE ONLY 0 DEGREES OF FREEDOM IN ',
     1             'NUMERATOR OF F RATIO.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7238)
 7238       FORMAT('      THIS HAPPENS WHEN NUMBER OF PARAMETERS ',
     1             'FITTED')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,7239)
 7239       FORMAT('      IS IDENTICAL TO NUMBER OF DISTINCT SUBSETS.')
            CALL DPWRST('XXX','BUG ')
            GOTO7250
          ENDIF
        ENDIF
C
        FITDF=IFITDF
        FITSS=RESSS-REPSS
        FITMS=FITSS/FITDF
        FSTAT=FITMS/REPMS
        CALL FCDF(FSTAT,IFITDF,IREPDF,CDF)
        CDF2=100.0*CDF
        ALFCDF=CDF
C
        IF(IPRINT.EQ.'ON')THEN
          WRITE(ICOUT,7240)FSTAT,CDF2
 7240     FORMAT('      LACK OF FIT F RATIO = ',F10.4,' = THE ',
     1           F8.4,'% POINT OF THE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7245)IFITDF,IREPDF
 7245     FORMAT('      F DISTRIBUTION WITH ',I6,' AND ',I6,
     1           ' DEGREES OF FREEDOM')
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
 7250 CONTINUE
      IF(NUMPAR.LE.0)GOTO8100
C
CCCCCC THE FOLLOWING SECTION WAS ADDED NOVEMBER 1995
C               **************************************
C               **  STEP 81--                       **
C               **  CLOSE       THE STORAGE FILES.  **
C               **************************************
C
 8100 CONTINUE
C
      ISTEPN='81'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRE2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PRE2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPRE2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IERROR,N,NUMVAR,NUMPAR,NUMCHA
 9013   FORMAT('IERROR,N,NUMVAR,NUMPAR,NUMCHA = ',A4,2X,4I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NUMPAR
          WRITE(ICOUT,9016)I,IPARN3(I),IPARN4(I),PARAM3(I)
 9016     FORMAT('I,IPARN3(I),IPARN4(I),PARAM3(I) = ',I8,2X,2A4,G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
        DO9020I=1,N
          WRITE(ICOUT,9021)I,Y(I),W(I),PRED2(I),RES2(I)
 9021     FORMAT('I,Y(I),W(I),PRED2(I),RES2(I) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPRE3(MODEL,NUMCHA,IPASS,PARAM5,IPARN5,IPARN6,NUMPV,
     1                  IPARN3,IVARN3,PARAM3,IPARN4,IVARN4,ICON3,
     1                  NUMPAR,NUMVAR,Y,XMAT,MAXNXT,W,N,FITPOW,
     1                  IANGLU,ITYPEH,IW2HOL,IW22HO,W2HOLD,NWHOLD,
     1                  PRED2,RES2,RESSS,RESSD,RESDF,
     1                  ISUBRO,IBUGA3,IBUGCO,IBUGEV,IERROR)
C
C     PURPOSE--TAKE A MODEL AND A DATA SET AND A SET OF PARAMETER VALUES
C              AND COMPUTE A RESIDUAL STANDARD DEVIATION.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--OCTOBER    1981.
C     UPDATED          --NOVEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --JULY      2019. RECODE TO USE MATRIX XMAT RATHER
C                                       THAN X1 ... X5
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 MODEL
      CHARACTER*4 IPARN5
      CHARACTER*4 IPARN6
      CHARACTER*4 IPARN3
      CHARACTER*4 IVARN3
      CHARACTER*4 IPARN4
      CHARACTER*4 IVARN4
      CHARACTER*4 IANGLU
      CHARACTER*4 ITYPEH
      CHARACTER*4 IW2HOL
      CHARACTER*4 IW22HO
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGCO
      CHARACTER*4 IBUGEV
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN3
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION XMAT(MAXNXT,NUMVAR)
      DIMENSION PRED2(*)
      DIMENSION RES2(*)
      DIMENSION W(*)
C
      DIMENSION MODEL(*)
      DIMENSION IVARN3(*)
      DIMENSION IVARN4(*)
      DIMENSION PARAM3(*)
      DIMENSION IPARN3(*)
      DIMENSION IPARN4(*)
      DIMENSION ICON3(*)
      DIMENSION ITYPEH(*)
      DIMENSION IW2HOL(*)
      DIMENSION IW22HO(*)
      DIMENSION W2HOLD(*)
C
      DIMENSION IPARN5(*)
      DIMENSION IPARN6(*)
      DIMENSION PARAM5(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPR'
      ISUBN3='E3  '
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PRE3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPRE3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)N,NUMVAR,NUMPAR,NUMPV,NUMCHA,FITPOW
   52   FORMAT('N,NUMVAR,NUMPAR,NUMPV,NUMCHA,FITPOW = ',5I8,G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGA3,IBUGCO,IBUGEV
   53   FORMAT('IBUGA3,IBUGCO,IBUGEV = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,56)I,Y(I),XMAT(I,1),W(I)
   56     FORMAT('I,Y(I),XMAT(I,1),W(I) = ',I5,3F20.10)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        DO61J=1,NUMVAR
          WRITE(ICOUT,62)J,IVARN3(J),IVARN4(J)
   62     FORMAT('I,IVARN3(I),IVARN4(I) = ',I8,2X,2A4)
          CALL DPWRST('XXX','BUG ')
   61   CONTINUE
        DO66J=1,NUMPV
          WRITE(ICOUT,67)J,IPARN3(J),IPARN4(J),PARAM3(J),ICON3(J)
   67     FORMAT('I,IPARN3(I),IPARN4(I),PARAM3(I),ICON3(I) = ',
     1           I8,2X,2A4,G15.7,I8)
          CALL DPWRST('XXX','BUG ')
   66   CONTINUE
        WRITE(ICOUT,71)(MODEL(J),J=1,MIN(100,NUMCHA))
   71   FORMAT('FUNCTIONAL EXPRESSION--',100A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      DO2100I=1,N
        W(I)=1.0
 2100 CONTINUE
C
      DO3000I=1,N
        IF(NUMVAR.GE.1)THEN
          DO3005J=1,NUMVAR
            PARAM5(NUMPAR+J)=XMAT(I,J)
 3005     CONTINUE
        ENDIF
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PRE3')THEN
          WRITE(ICOUT,888)NUMPAR,NUMVAR,NUMPV
  888     FORMAT('NUMPAR,NUMVAR,NUMPV = ',3I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,889)XMAT(1,1),XMAT(I,1),IPARN5(3),
     1                    IPARN6(3),PARAM5(3)
  889     FORMAT('XMAT(1,1),XMAT(I,1),IPARN5(3),IPARN6(3),',
     1           'PARAM5(3) = ',2G15.7,2(2X,A4),G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        CALL COMPIM(MODEL,NUMCHA,IPASS,PARAM5,IPARN5,IPARN6,NUMPV,
     1              IANGLU,ITYPEH,IW2HOL,IW22HO,W2HOLD,NWHOLD,PRED2(I),
     1              IBUGCO,IBUGEV,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
 3000 CONTINUE
C
      DO3100I=1,N
        RES2(I)=Y(I)-PRED2(I)
 3100 CONTINUE
C
      SUM=0.0
      DO3200I=1,N
        IF(RES2(I).NE.0.0)SUM=SUM+ABS(RES2(I))**FITPOW
 3200 CONTINUE
      RESSS=SUM
C
      IRESDF=N-NUMPAR
      RESDF=IRESDF
      RESMS=RESSS/RESDF
      IF(RESMS.LE.0.0)RESSD=0.0
      IF(RESMS.GT.0.0)RESSD=SQRT(RESMS)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PRE3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPRE3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IERROR,N,NUMVAR,NUMPAR,NUMCHA
 9013   FORMAT('IERROR,N,NUMVAR,NUMPAR,NUMCHA = ',A4,2X,4I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9018)RESSS,RESSD,RESDF
 9018   FORMAT('RESSS,RESSD,RESDF = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,N
          WRITE(ICOUT,9021)I,Y(I),W(I),PRED2(I),RES2(I)
 9021     FORMAT('I,Y(I),W(I),PRED2(I),RES2(I) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPREC(IHARG,NUMARG,IDEFPR,IHMXPR,
     1                  IPREC,IFOUND,IERROR)
C
C     PURPOSE--SPECIFY THE PRECISION SWITCH WHICH IN TURN
C              DETERMINES WHETHER SUBSEQUENT CALCULATIONS WILL BE
C              CARRIED OUT IN SINGLE, DOUBLE,
C              TRIPLE, OR QUADRUPLE PRECISION
C              (IF AVAILABLE ON THE HOST COMPUTER).
C              THE SPECIFIED PRECISION SWITCH SPECIFICATION
C              WILL BE PLACED IN THE HOLLERITH VARIABLE IPREC.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG (AN INTEGER VARIABLE)
C                     --IDEFPR (A  HOLLERITH VARIABLE)
C                     --IHMXPR (A  HOLLERITH VARIABLE)
C     OUTPUT ARGUMENTS--IPREC  (A HOLLERITH VARIABLE)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--NOVEMBER  1980.
C     UPDATED         --SEPTEMBER 1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --JANUARY   2017. CHECK FOR CONFLICT WITH
C                                       PRECISION STATISTIC
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEFPR
      CHARACTER*4 IHMXPR
      CHARACTER*4 IPREC
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
C     CHECK FOR CONFLICTS WITH PRECISION STATISTIC
C
      IF(IHARG(1).EQ.'PLOT')GOTO1199
      IF(IHARG(1).EQ.'CUMU' .AND. IHARG(2).EQ.'PLOT')GOTO1199
      IF(IHARG(1).EQ.'MOVI' .AND. IHARG(2).EQ.'PLOT')GOTO1199
      IF(IHARG(1).EQ.'WIND' .AND. IHARG(2).EQ.'PLOT')GOTO1199
      IF(IHARG(1).EQ.'BLOC' .AND. IHARG(2).EQ.'PLOT')GOTO1199
      IF(IHARG(1).EQ.'INFL' .AND. IHARG(2).EQ.'PLOT')GOTO1199
      IF(IHARG(1).EQ.'INFL' .AND. IHARG(2).EQ.'CURV')GOTO1199
C
      IFOUND='YES'
      IF(NUMARG.LE.0)GOTO1120
      IF(IHARG(NUMARG).EQ.'ON')GOTO1120
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1120
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1120
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1120
C
      IF(IHARG(NUMARG).EQ.'SING')GOTO1130
      IF(IHARG(NUMARG).EQ.'DOUB')GOTO1130
      IF(IHARG(NUMARG).EQ.'TRIP')GOTO1130
      IF(IHARG(NUMARG).EQ.'QUAD')GOTO1130
      GOTO1120
C
 1120 CONTINUE
      IHOLD=IDEFPR
      GOTO1160
C
 1130 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1160
C
 1160 CONTINUE
      IF(IHOLD.EQ.'DOUB'.AND.IHMXPR.EQ.'SING')GOTO1170
      IF(IHOLD.EQ.'TRIP'.AND.IHMXPR.EQ.'SING')GOTO1170
      IF(IHOLD.EQ.'TRIP'.AND.IHMXPR.EQ.'DOUB')GOTO1170
      IF(IHOLD.EQ.'QUAD'.AND.IHMXPR.EQ.'SING')GOTO1170
      IF(IHOLD.EQ.'QUAD'.AND.IHMXPR.EQ.'DOUB')GOTO1170
      IF(IHOLD.EQ.'QUAD'.AND.IHMXPR.EQ.'TRIP')GOTO1170
      GOTO1180
C
 1170 CONTINUE
      IERROR='YES'
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1172)
 1172 FORMAT('***** ERROR IN DPPREC--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1173)
 1173 FORMAT('      THE DESIRED PRECISION IS HIGHER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1174)
 1174 FORMAT('      THAN PERMITTED ON THIS COMPUTER.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1175)IHOLD
 1175 FORMAT('      DESIRED PRECISION           = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1176)IHMXPR
 1176 FORMAT('      MAXIMUM ALLOWABLE PRECISION = ',A4)
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1180 CONTINUE
      IPREC=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1188)IPREC
 1188 FORMAT('THE PRECISION SWITCH HAS JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPPREE(IHARG,NUMARG,
     1IERASW,IFOUND,IERROR)
C
C     PURPOSE--SPECIFY THE PRE-ERASE SWITCH WHICH IN TURN
C              DETERMINES WHETHER A PRE-ERASE WILL
C              AUTOMATICALLY OCCUR BEFORE PLOTS.
C              THIS CAPABILITY IS USEFUL FOR AUTOMATICALLY
C              CLEARING THE SCREEN BEFORE PLOTS.
C              THE SPECIFIED PRE-ERASE SWITCH SPECIFICATION
C              WILL BE PLACED IN THE HOLLERITH VARIABLE IERASW.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG (AN INTEGER VARIABLE)
C     OUTPUT ARGUMENTS--IERASW (A HOLLERITH VARIABLE)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--NOVEMBER  1980.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IERASW
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'ERAS')GOTO1110
      GOTO1199
C
 1110 CONTINUE
      IF(NUMARG.LE.0)GOTO1150
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1160
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      GOTO1150
C
 1150 CONTINUE
      IHOLD='ON'
      GOTO1180
C
 1160 CONTINUE
      IHOLD='OFF'
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      IERASW=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IERASW
 1181 FORMAT('THE PRE-ERASE SWITCH HAS JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPPREF(IBUGA2,IBUGA3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,
     1                  IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT A (LINEAR OR) NON-LINEAR PRE-FIT
C             = A FIT OVER A SPECIFIED LATTICE OF PARAMETER VALUES.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--OCTOBER   1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --MARCH     1988. ADD LOFCDF
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE
C                                       COMMON
C     UPDATED         --JUNE      1990. MOVE DIMENSIONING OF ARRAYS
C     UPDATED         --NOVEMBER  1995. IANS, IWIDTH => CALLING ARGS
C     UPDATED         --MAY       2009. REPLACE USE OF DPSWAP WITH
C                                       BUILT-IN SCRATCH STORAGE
C     UPDATED         --JULY      2019. TWEAK SCRATCH STORAGE
C     UPDATED         --JULY      2019. REPLACE X1 ... X5 WITH XMAT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGCO
      CHARACTER*4 IBUGEV
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASFI
      CHARACTER*4 ICASEQ
      CHARACTER*4 IKEY
      CHARACTER*4 IWD
      CHARACTER*4 IWD1
      CHARACTER*4 IWD12
      CHARACTER*4 IWD2
      CHARACTER*4 IWD22
      CHARACTER*4 ICH
      CHARACTER*4 ITYPEH
      CHARACTER*4 IW2HOL
      CHARACTER*4 IW22HO
      CHARACTER*4 IOP
      CHARACTER*4 IPAROC
      CHARACTER*4 IPARO3
      CHARACTER*4 IREPU
      CHARACTER*4 IRESU
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IPARN
      CHARACTER*4 IPARN2
      CHARACTER*4 IPARN3
      CHARACTER*4 IPARN4
      CHARACTER*4 IHPARN
      CHARACTER*4 IHPAR2
      CHARACTER*4 IVARN3
      CHARACTER*4 IVARN4
      CHARACTER*4 IREP
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      DIMENSION IPAROC(100)
      DIMENSION PARAM(100)
      DIMENSION IPARN(100)
      DIMENSION IPARN2(100)
      DIMENSION PARAM3(100)
      DIMENSION IPARN3(100)
      DIMENSION IPARN4(100)
      DIMENSION ICON3(100)
      DIMENSION IPARO3(100)
      DIMENSION PARLI3(100)
      DIMENSION IVARN3(100)
      DIMENSION IVARN4(100)
      DIMENSION ICOLV3(100)
      DIMENSION NIV(100)
      DIMENSION ITYPEH(1000)
      DIMENSION IW2HOL(1000)
      DIMENSION IW22HO(1000)
      DIMENSION W2HOLD(1000)
      DIMENSION ICH(10)
C
      DIMENSION XMAT(MAXOBV,5)
      DIMENSION W(MAXOBV)
      DIMENSION PRED2(MAXOBV)
      DIMENSION RES2(MAXOBV)
      DIMENSION DUM1(MAXOBV)
      DIMENSION DUM2(MAXOBV)
      DIMENSION VSCRT(10*MAXOBV)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOMC.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
C
C---------------------------------------------------------------------
C
      EQUIVALENCE (GARBAG(IGARB1),XMAT(1,1))
      EQUIVALENCE (GARBAG(IGARB6),DUM1(1))
      EQUIVALENCE (GARBAG(IGARB7),DUM2(1))
      EQUIVALENCE (GARBAG(IGARB8),RES2(1))
      EQUIVALENCE (GARBAG(IGARB9),W(1))
      EQUIVALENCE (GARBAG(IGAR10),PRED2(1))
      EQUIVALENCE (GARBAG(JGAR11),VSCRT(1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPR'
      ISUBN2='EF  '
      IERROR='NO'
      IPAROC(1)='NONE'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
      MAXV2=5
      MINN2=2
      MAXITS=IFITIT
      MAXN2=MAXCHF
      MAXN3=MAXCHF
      MAXN4=MAXCHF
      NUMPV=(-999)
      IP=(-999)
      IV=(-999)
      IWIDMO=(-999)
      ICOLL=(-999)
      IVAL=(-999)
      K1=0
C
      CPUEPS=R1MACH(3)
      CUTOFF=2**(NUMBPW-3)
C
C               ******************************
C               **  TREAT THE PRE-FIT CASE  **
C               ******************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPREF--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IBUGA2,IBUGA3,IBUGCO,IBUGEV,IBUGQ
   54   FORMAT('IBUGA2,IBUGA3,IBUGCO,IBUGEV,IBUGQ = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,56)NUMNAM
   56   FORMAT('NUMNAM = ',I8)
        CALL DPWRST('XXX','BUG ')
        DO57I=1,NUMNAM
          WRITE(ICOUT,58)I,IHNAME(I),IHNAM2(I),IUSE(I),IN(I),IVALUE(I),
     1                   VALUE(I)
   58     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IN(I),IVALUE(I)',
     1           'VALUE(I) = ',I8,2X,2A4,2X,A4,2I8,G15.7)
         CALL DPWRST('XXX','BUG ')
   57   CONTINUE
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL CKPREF(ICASFI,ILOCFI,IBUGA3,IFOUND,IERROR)
      IF(ICASFI.EQ.'    '.OR.IFOUND.EQ.'NO')GOTO9000
C
C               *******************************************************
C               **  STEP 2--                                         **
C               **  CHECK FOR THE PROPER NUMBER OF INPUT ARGUMENTS.  **
C               *******************************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MINNA=0
      MAXNA=100
      CALL CHECKA(NUMARG,MINNA,MAXNA,IANS,IWIDTH,ISUBN1,ISUBN2,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               ********************************************************
C               **  STEP 3--                                           *
C               **  FOR THE CASES WHEN HAVE PRE-FIT Y = SOME EXPRESSION*
C               **                   ROBUST PRE-FIT Y = SOME EXPRESSION*
C               **  DETERMINE IF WE HAVE A VALID FUNCTIONAL            *
C               **  EXPRESSION--IN PARTICULAR, CHECK THAT THE NUMBER   *
C               **  OF ARGUMENTS IS AT LEAST 1, AND ALSO CHECK THAT    *
C               **  THERE IS EXACTLY 1 EQUAL SIGN AND THAT THIS EQUAL  *
C               **  SIGN OCCURS AS THE SECOND ARGUMENT.                *
C               ********************************************************
C
      ISTEPN='3'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LT.1)THEN
        WRITE(ICOUT,2001)
 2001   FORMAT('***** ERROR IN DPPREF--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2002)
 2002   FORMAT('      THE NUMBER OF ARGUMENTS DETECTED FOR THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2003)NUMARG
 2003   FORMAT('      PRE-FIT COMMAND = 0.  NUMARG = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2007)
 2007   FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,2008)(IANS(J),J=1,MIN(100,IWIDTH))
 2008     FORMAT('      COMMAND LINE--',100A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
      DO2100J=1,NUMARG
      J1=J
      IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ')GOTO2110
      IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ')GOTO2110
      IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')GOTO2110
 2100 CONTINUE
      ILOCQ=NUMARG+1
      GOTO2120
 2110 CONTINUE
      ILOCQ=J1
      GOTO2120
 2120 CONTINUE
C
      IF(ICASFI.EQ.'FIT' .OR. ICASFI.EQ.'RFIT')THEN
        NUMEQ=0
        IMAX=ILOCQ-1
        DO2130I=1,IMAX
          IF(IHARG(I).EQ.'=   '.AND.IHARG2(I).EQ.'    ')NUMEQ=NUMEQ+1
 2130   CONTINUE
        IF(NUMEQ.NE.1)THEN
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2132)
 2132     FORMAT('      THE NUMBER OF EQUAL SIGNS DETECTED IN THE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2133)NUMEQ
 2133     FORMAT('      MODEL IS NOT EQUAL 1.  NUMEQ = ',I6)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2134)NUMARG,IMAX
 2134     FORMAT('      NUMARG, IMAX = ',2I10)
          CALL DPWRST('XXX','BUG ')
          DO2135I=1,NUMARG
            WRITE(ICOUT,2136)I,IHARG(I),IHARG2(I)
 2136       FORMAT('I,IHARG(I),IHARG2(I) = ',I8,2A4)
            CALL DPWRST('XXX','BUG ')
 2135     CONTINUE
          WRITE(ICOUT,2007)
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2008)(IANS(J),J=1,MIN(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO9000
      ENDIF
C
      IF((ICASFI.EQ.'FIT'.AND.IHARG(2).NE.'=') .OR.
     1   (ICASFI.EQ.'RFIT'.AND.IHARG(3).NE.'='))THEN
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2202)
 2202   FORMAT('      WHEN PRE-FITTING GENERAL EXPRESSIONS, THE ',
     1         'SECOND ARGUMENT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2203)
 2203   FORMAT('      AFTER THE WORD   PRE-FIT   SHOULD BE (BUT ',
     1         'WAS NOT) AND EQUAL SIGN.')
        CALL DPWRST('XXX','BUG ')
        IF(ICASFI.EQ.'FIT')THEN
          WRITE(ICOUT,2205)IHARG(2),IHARG2(2)
 2205     FORMAT('     THE ARGUMENT WAS ',2A4)
          CALL DPWRST('XXX','BUG ')
        ELSEIF(ICASFI.EQ.'RFIT')THEN
          WRITE(ICOUT,2205)IHARG(3),IHARG2(3)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,2007)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,2008)(IANS(J),J=1,MIN(100,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ********************************************************
C               **  STEP 4--                                          **
C               **  FOR ALL VARIATIONS OF THE PRE-FIT COMMAND, THE    **
C               **  WORD AFTER   PRE-FIT   SHOULD BE THE RESPONSE     **
C               **  VARIABLE (= THE DEPENDENT VARIABLE).  EXTRACT     **
C               **  THE RESPONSE VARIABLE AND DETERMINE IF IT IS      **
C               **  ALREADY IN THE NAME LIST AS A VARIABLE.           **
C               ********************************************************
C
      ISTEPN='4'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      I=0
      I2=I
      IP1=I+1
C
      IF(ICASFI.EQ.'RFIT')THEN
        IMAX=ILOCQ-1
        DO2330I=1,IMAX
          I2=I
          IF(IHARG(I).EQ.'PREF' .OR. IHARG(I).EQ.'PRE ')GOTO2349
 2330   CONTINUE
        WRITE(ICOUT,2331)
 2331   FORMAT('***** INTERNAL ERROR IN DPPREF--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2332)
 2332   FORMAT('      THE WORD    PRE   WAS NOT FOUND IN THE ',
     1         'ARGUMENT LIST')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3334)
 3334   FORMAT('      EVEN THOUGH IT HAD BEEN PREVIOSULY FOUND.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2134)NUMARG,IMAX
        CALL DPWRST('XXX','BUG ')
        DO2336I=1,NUMARG
          WRITE(ICOUT,2337)I,IHARG(I),IHARG2(I)
 2337     FORMAT('I,IHARG(I),IHARG2(I) = ',I8,2A4)
          CALL DPWRST('XXX','BUG ')
 2336   CONTINUE
        WRITE(ICOUT,2007)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,2008)(IANS(J),J=1,MIN(100,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
 2349 CONTINUE
      ILOCFI=I2
      ILOCF1=ILOCFI+1
      IHLEFT=IHARG(ILOCF1)
      IHLEF2=IHARG2(ILOCF1)
      DO2350I=1,NUMNAM
        I2=I
        IF(IHLEFT.EQ.IHNAME(I2).AND.IHLEF2.EQ.IHNAM2(I2).AND.
     1     IUSE(I2).EQ.'V')THEN
          ILOCV=I2
          ICOLL=IVALUE(ILOCV)
          NLEFT=IN(ILOCV)
          GOTO2390
        ENDIF
 2350 CONTINUE
C
      WRITE(ICOUT,2001)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2362)
 2362 FORMAT('      THE NAME FOLLOWING THE WORD    PRE-FIT    (WHICH ',
     1       'SHOULD BE THE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2363)
 2363 FORMAT('      RESPONSE VARIABLE) DOES NOT EXIST IN THE CURRENT ',
     1       'NAME TABLE AS A VARIABLE.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2369)IHLEFT,IHLEF2
 2369 FORMAT('      THE NAME AFTER THE WORD   PRE-FIT   = ',2A4)
      CALL DPWRST('XXX','BUG ')
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2372)
 2372   FORMAT('      CURRENT LIST OF DEFINED VARIABLES AND ',
     1         'PARAMETERS--')
        CALL DPWRST('XXX','BUG ')
        DO2373K2=1,NUMNAM
          WRITE(ICOUT,2374)IHNAME(K2),IHNAM2(K2),IUSE(K2),IVALUE(K2),
     1                     VALUE(K2)
 2374     FORMAT(6X,2A4,6X,A4,6X,I6,6X,G15.7)
          CALL DPWRST('XXX','BUG ')
 2373   CONTINUE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2376)IHLEFT,IHLEF2,ILOCFI,ILOCF1,I2
 2376   FORMAT('      IHLEFT,IHLEF2,ILOCFI,ILOCF1,I2 = ',2(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      WRITE(ICOUT,2007)
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,2008)(IANS(J),J=1,MIN(100,IWIDTH))
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IERROR='YES'
      GOTO9000
C
 2390 CONTINUE
C
C               ********************************************************
C               **  STEP 5--                                          **
C               **  FOR ALL VARIATIONS OF THE PRE-FIT COMMAND,        **
C               **  CHECK THAT THE INPUT NUMBER OF OBSERVATIONS       **
C               **  (NLEFT) FOR THE RESPONSE VARIABLE IS 2 OR LARGER. **
C               ********************************************************
C
      ISTEPN='5'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NLEFT.LT.MINN2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,312)IHLEFT,IHLEF2
  312   FORMAT('      THE NUMBER OF OBSERVATIONS IN VARIABLE ',2A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,313)MINN2
  313   FORMAT('      FOR THE PRE-FIT COMMAND MUST BE ',I5,
     1         ' OR LARGER;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,316)
  316   FORMAT('      SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,317)NLEFT
  317   FORMAT('      THE NUMBER OF OBSERVATIONS (NLEFT) = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2007)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,2008)(IANS(I),I=1,MIN(100,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               *********************************************************
C               **  STEP 6.1--                                          *
C               **  FOR THE CASES WHEN HAVE PRE-FIT Y = SOME EXPRESSION *
C               **                   ROBUST PRE-FIT Y = SOME EXPRESSION *
C               **  EXTRACT THE ENTIRE (LEFT AND RIGHT SIDE) FUNCTIONAL *
C               **  EXPRESSION FROM THE INPUT COMMAND LINE.             *
C               **  COPY OUT TO IWIDTH, OR OUT TO 'SUBS' (EXCLUSIVE),   *
C               **  OR OUT THE 'EXCE' (EXCLUSIVE)                       *
C               **  OR OUT THE 'FOR' (EXCLUSIVE).                       *
C               *********************************************************
C
      ISTEPN='6.1'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.EQ.0 .OR.
     1    (IHARG(1).EQ.'SUBS'.AND.IHARG2(1).EQ.'ET  ') .OR.
     1    (IHARG(1).EQ.'EXCE'.AND.IHARG2(1).EQ.'PT  ') .OR.
     1    (IHARG(1).EQ.'FOR '.AND.IHARG2(1).EQ.'    '))GOTO4160
        ISTART=-99
        ISTOP=-99
        DO4110I=1,IWIDTH
          IP1=I+1
          IP2=I+2
          IP3=I+3
          IP4=I+4
          IP5=I+5
          IP6=I+6
          IP7=I+7
C
          IF(IP2.GT.IWIDTH)GOTO4120
          IF(IANS(I).EQ.'F'.AND.IANS(IP1).EQ.'I' .AND.
     1       IANS(IP2).EQ.'T')ISTART=IP3
C
          IF(IP4.GT.IWIDTH)GOTO4120
          IF(IANS(I).EQ.' ' .AND. IANS(IP1).EQ.'F' .AND.
     1       IANS(IP2).EQ.'O' .AND. IANS(IP3).EQ.'R' .AND.
     1       IANS(IP4).EQ.' ')ISTOP=I
C
          IF(IP7.GT.IWIDTH)GOTO4120
          IF(IANS(I).EQ.' ' .AND. IANS(IP1).EQ.'S' .AND.
     1       IANS(IP2).EQ.'U' .AND. IANS(IP3).EQ.'B' .AND.
     1       IANS(IP4).EQ.'S' .AND. IANS(IP5).EQ.'E' .AND.
     1       IANS(IP6).EQ.'T'.AND.IANS(IP7).EQ.' ')ISTOP=I
C
 4110   CONTINUE
 4120   CONTINUE
        IF(ISTART.LT.1)THEN
          IBRAN=4120
          WRITE(ICOUT,4121)IBRAN
 4121     FORMAT('*****INTERNAL ERROR IN DPPREF--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4122)IBRAN
 4122     FORMAT('     AT BRANCH POINT = ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4123)
 4123     FORMAT('     THE STRING   PRE-FIT  NOT FOUND FOR MODEL ',
     1           'EXTRACTION')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2007)
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2008)(IANS(I),I=1,MIN(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IF(ISTOP.EQ.-99)ISTOP=IWIDTH
        IF(ISTART.GT.ISTOP)THEN
          IBRAN=4130
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4122)IBRAN
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4133)
 4133     FORMAT('      ISTART GREATER THAN ISTOP FOR MODEL EXTRACTION')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,4134)ISTART,ISTOP
 4134     FORMAT('ISTART, ISTOP = ',2I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2007)
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2008)(IANS(I),I=1,MIN(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO9000
        ENDIF
C
        J=0
        DO4150I=ISTART,ISTOP
          J=J+1
          MODEL(J)=IANS(I)
 4150   CONTINUE
        NUMCHA=ISTOP-ISTART+1
 4160   CONTINUE
      ENDIF
C
C               ***************************************************
C               **  STEP 6.2--                                   **
C               **  FOR THE CASES WHEN HAVE ... PRE-FIT Y X   ,  **
C               **  EXTRACT THE INDEPENDENT VARIABLE,            **
C               **  AND FORM THE 1 CHARACTER PER WORD            **
C               **  REPRESENTATION OF THE MODEL.                 **
C               ***************************************************
C
      ISTEPN='6.2'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASFI.EQ.'FIT' .OR.ICASFI.EQ.'RFIT')GOTO4290
C
      ILOCRV=ILOCFI+1
      ILOCIV=ILOCFI+2
C
      IDEGRE=0
      IF(ICASFI.EQ.'0FIT')IDEGRE=0
      IF(ICASFI.EQ.'1FIT')IDEGRE=1
      IF(ICASFI.EQ.'2FIT')IDEGRE=2
      IF(ICASFI.EQ.'3FIT')IDEGRE=3
      IF(ICASFI.EQ.'4FIT')IDEGRE=4
      IF(ICASFI.EQ.'5FIT')IDEGRE=5
      IF(ICASFI.EQ.'6FIT')IDEGRE=6
      IF(ICASFI.EQ.'7FIT')IDEGRE=7
      IF(ICASFI.EQ.'8FIT')IDEGRE=8
      IF(ICASFI.EQ.'9FIT')IDEGRE=9
      IF(ICASFI.EQ.'10FI')IDEGRE=10
      K1=IDEGRE+1
C
      I=0
C
      IWD=IHARG(ILOCRV)
      CALL DPXH1H(IWD,ICH,IEND,IBUGA3)
      IF(IEND.LE.0)GOTO4219
      DO4210J=1,IEND
        I=I+1
        MODEL(I)=ICH(J)
 4210 CONTINUE
 4219 CONTINUE
C
      IWD=IHARG2(ILOCRV)
      CALL DPXH1H(IWD,ICH,IEND,IBUGA3)
      IF(IEND.LE.0)GOTO4229
      DO4220J=1,IEND
        I=I+1
        MODEL(I)=ICH(J)
 4220 CONTINUE
 4229 CONTINUE
C
      KMAX=IDEGRE+1
      I=I+1
      MODEL(I)='='
C
      KMAX=IDEGRE+1
      DO4250K=1,KMAX
        KM1=K-1
C
        IF(KM1.GT.0)THEN
          I=I+1
          MODEL(I)='+'
        ENDIF
C
        I=I+1
        MODEL(I)='A'
C
        IF(0.LE.KM1.AND.KM1.LE.10)I=I+1
        IF(KM1.EQ.0)MODEL(I)='0'
        IF(KM1.EQ.1)MODEL(I)='1'
        IF(KM1.EQ.2)MODEL(I)='2'
        IF(KM1.EQ.3)MODEL(I)='3'
        IF(KM1.EQ.4)MODEL(I)='4'
        IF(KM1.EQ.5)MODEL(I)='5'
        IF(KM1.EQ.6)MODEL(I)='6'
        IF(KM1.EQ.7)MODEL(I)='7'
        IF(KM1.EQ.8)MODEL(I)='8'
        IF(KM1.EQ.9)MODEL(I)='9'
        IF(KM1.EQ.10)MODEL(I)='1'
        IF(KM1.EQ.10)I=I+1
        IF(J.EQ.10)MODEL(I)='0'
C
        IF(KM1.LE.0)GOTO4250
C
        I=I+1
        MODEL(I)='*'
C
        IWD=IHARG(ILOCIV)
        CALL DPXH1H(IWD,ICH,IEND,IBUGA3)
        IF(IEND.GT.0)THEN
          DO4260J=1,IEND
            I=I+1
            MODEL(I)=ICH(J)
 4260     CONTINUE
        ENDIF
C
        IWD=IHARG2(ILOCIV)
        CALL DPXH1H(IWD,ICH,IEND,IBUGA3)
        IF(IEND.GT.0)THEN
          DO4270J=1,IEND
            I=I+1
            MODEL(I)=ICH(J)
 4270     CONTINUE
        ENDIF
C
        IF(KM1.LE.1)GOTO4250
C
        I=I+1
        MODEL(I)='*'
        I=I+1
        MODEL(I)='*'
C
        IF(0.LE.KM1.AND.KM1.LE.10)I=I+1
        IF(KM1.EQ.0)MODEL(I)='0'
        IF(KM1.EQ.1)MODEL(I)='1'
        IF(KM1.EQ.2)MODEL(I)='2'
        IF(KM1.EQ.3)MODEL(I)='3'
        IF(KM1.EQ.4)MODEL(I)='4'
        IF(KM1.EQ.5)MODEL(I)='5'
        IF(KM1.EQ.6)MODEL(I)='6'
        IF(KM1.EQ.7)MODEL(I)='7'
        IF(KM1.EQ.8)MODEL(I)='8'
        IF(KM1.EQ.9)MODEL(I)='9'
        IF(KM1.EQ.10)MODEL(I)='1'
        IF(KM1.EQ.10)I=I+1
        IF(J.EQ.10)MODEL(I)='0'
C
 4250 CONTINUE
 4290 CONTINUE
      IWIDMO=I
      NUMCHA=IWIDMO
C
C               **************************************************
C               **  STEP 6.3--                                  **
C               **  FOR ALL VARIATIONS OF THE PRE-FIT COMMAND,  **
C               **  CHECK TO SEE THE TYPE CASE--                **
C               **    1) UNQUALIFIED (THAT IS, FULL);           **
C               **    2) SUBSET/EXCEPT; OR                      **
C               **    3) FOR.                                   **
C               **************************************************
C
      ISTEPN='6.3'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.GE.1)THEN
        DO400J=1,NUMARG
          J1=J
          IF((IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ') .OR.
     1       (IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  '))THEN
            ICASEQ='SUBS'
            IKEY='SUBS'
            IF(IHARG(J1).EQ.'EXCE')IKEY='EXCE'
            ILOCQ=J1
            GOTO490
          ELSEIF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')THEN
            ICASEQ='FOR'
            ILOCQ=J1
            GOTO490
          ENDIF
  400   CONTINUE
  490   CONTINUE
      ENDIF
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')THEN
        WRITE(ICOUT,491)NUMARG,ILOCQ
  491   FORMAT('NUMARG,ILOCQ = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **************************************************
C               **  STEP 6.4--                                  **
C               **  FOR ALL VARIATIONS OF THE PRE-FIT COMMAND,  **
C               **  EXTRACT THE UNDERLYING FUNCTION             **
C               **  FROM FUNCTION DEFINITIONS.                  **
C               **************************************************
C
C
      ISTEPN='6.4'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO5170I=1,NUMCHA
        I2=I
        IF(MODEL(I).EQ.'=')GOTO5175
 5170 CONTINUE
C
      IBRAN=5170
      WRITE(ICOUT,4121)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4122)IBRAN
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,5172)
 5172 FORMAT('      NO EQUAL SIGN FOUND FOR MODEL EXTRACTION')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2007)
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,2008)(IANS(I),I=1,MIN(100,IWIDTH))
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IERROR='YES'
      GOTO9000
C
 5175 CONTINUE
      ILOCEQ=I2
C
      IWD1='=   '
      IWD12='    '
      IF(ICASEQ.EQ.'FULL')IWD2='    '
      IF(ICASEQ.EQ.'FULL')IWD22='    '
      IF(ICASEQ.EQ.'SUBS'.AND.IKEY.EQ.'SUBS')IWD2='SUBS'
      IF(ICASEQ.EQ.'SUBS'.AND.IKEY.EQ.'SUBS')IWD22='ET  '
      IF(ICASEQ.EQ.'SUBS'.AND.IKEY.EQ.'EXCE')IWD2='EXCE'
      IF(ICASEQ.EQ.'SUBS'.AND.IKEY.EQ.'EXCE')IWD22='PT  '
      IF(ICASEQ.EQ.'FOR')IWD2='FOR '
      IF(ICASEQ.EQ.'FOR')IWD22='    '
C
      IF(ICASFI.EQ.'FIT'.OR.ICASFI.EQ.'RFIT')THEN
        CALL DPEXST(IANS,IWIDTH,IWD1,IWD12,IWD2,IWD22,MAXN2,
     1              IFUNC2,N2,IBUGA3,IFOUND,IERROR)
      ELSEIF(ICASFI.NE.'FIT'.AND.ICASFI.NE.'RFIT')THEN
        CALL DPEXST(MODEL,IWIDMO,IWD1,IWD12,IWD2,IWD22,MAXN2,
     1              IFUNC2,N2,IBUGA3,IFOUND,IERROR)
      ENDIF
      IF(IERROR.EQ.'YES')GOTO9000
      IF(IFOUND.EQ.'NO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3372)
 3372   FORMAT('      INVALID COMMAND FORM FOR PRE-FITTING.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3373)
 3373   FORMAT('      GENERAL FORM--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3374)
 3374   FORMAT('      PRE-FIT ... = ...  SUBSET ... ... ...')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2007)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,2008)(IANS(I),I=1,MIN(100,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
      CALL DPEXFU(IFUNC2,N2,IHNAME,IHNAM2,IUSE,IVSTAR,IVSTOP,
     1NUMNAM,IANS,IWIDTH,IFUNC,NUMCHF,MAXCHF,IFUNC3,N3,MAXN3,
     1IBUGA3,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      J=ILOCEQ
      DO5180I=1,N3
        J=J+1
        MODEL(J)=IFUNC3(I)
 5180 CONTINUE
      NUMCHA=J
C
C               ********************************************************
C               **  STEP 7--                                          **
C               **  MAKE A NON-CALCULATING PASS AT THE MODEL          **
C               **  SO AS TO EXTRACT ALL PARAMETER AND VARIABLE NAMES.**
C               ********************************************************
C
      ISTEPN='7'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IPASS=1
      CALL COMPIM(MODEL,NUMCHA,IPASS,PARAM,IPARN,IPARN2,NUMPV,
     1            IANGLU,ITYPEH,IW2HOL,IW22HO,W2HOLD,NWHOLD,AJUNK,
     1            IBUGCO,IBUGEV,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               ********************************************
C               **  STEP 8--                              **
C               **  CHECK TO MAKE SURE THAT THE COMBINED  **
C               **  NUMBER OF PARAMETERS AND VARIABLES    **
C               **  IN THE MODEL IS AT LEAST 1.           **
C               ********************************************
C
      ISTEPN='8'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMPV.LT.1)THEN
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4402)
 4402   FORMAT('      COMBINED NUMBER OF PARAMETERS AND VARIABLES')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4403)NUMVAR
 4403   FORMAT('      DETECTED IN THE MODEL IS 0.   NUMVP = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4407)NUMCHA
 4407   FORMAT('      NUMBER OF CHARACTERS IN MODEL = ',I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMCHA.GE.1)THEN
          WRITE(ICOUT,4408)(MODEL(J),J=1,MIN(100,NUMCHA))
 4408     FORMAT('      MODEL--',100A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ********************************************************
C               **  STEP 9--                                          **
C               **  CHECK THAT ALL VARIABLES IN THE MODEL ARE ALREADY **
C               **  PRESENT IN THE NAME LIST IHNAME(.) AND IHNAM2(.). **
C               **  CHECK THAT ALL PARAMETERS IN THE MODEL ARE        **
C               **  ALREADY PRESENT IN THE NAME LIST IHNAME(.) AND    **
C               **  IHNAM2(.).   ALL NAMES IN THE MODEL THAT ARE NOT  **
C               **  IN THE NAME LIST AT ALL WILL BE ADDED TO THE LIST,**
C               **  DEFINED AS PARAMETERS, AND GIVEN A VALUE OF 1.0.  **
C               **  THIS ALLOWS US TO MAKE AN INITIAL PRE-FIT WITHOUT **
C               **  HAVING TO DEFINE STARTING VALUES AT ALL (THEY WILL**
C               **  BE AUTOMATICALLY SET TO 1.0).  ALSO, FORM A NEW   **
C               **  VECTOR WHICH HAS ONLY PARAMETER NAMES AND ANOTHER **
C               **  VECTOR WHICH HAS ONLY VARIABLE NAMES.             **
C               ********************************************************
C
      ISTEPN='9'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IP=0
      IV=0
      DO4165J=1,NUMPV
        IHPARN=IPARN(J)
        IHPAR2=IPARN2(J)
        DO4166I=1,NUMNAM
          I2=I
          IF(IHPARN.EQ.IHNAME(I).AND.IHPAR2.EQ.IHNAM2(I).AND.
     1       IUSE(I).EQ.'V')THEN
            IV=IV+1
            IVARN3(IV)=IPARN(J)
            IVARN4(IV)=IPARN2(J)
            ICOLV3(IV)=IVALUE(I2)
            NIV(IV)=IN(I2)
            GOTO4165
          ELSEIF(IHPARN.EQ.IHNAME(I).AND.IHPAR2.EQ.IHNAM2(I).AND.
     1           IUSE(I).EQ.'P')THEN
            IP=IP+1
            IPARN3(IP)=IPARN(J)
            IPARN4(IP)=IPARN2(J)
            PARAM3(IP)=VALUE(I2)
            GOTO4165
          ENDIF
 4166   CONTINUE
        IP=IP+1
        IPARN3(IP)=IPARN(J)
        IPARN4(IP)=IPARN2(J)
        PARAM3(IP)=1.0
C
        IF(NUMNAM.GE.MAXNAM)THEN
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7752)
 7752     FORMAT('      THE TOTAL NUMBER OF (VARIABLE + PARAMETER)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7753)MAXNAM
 7753     FORMAT('      NAMES MUST BE AT MOST ',I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7754)
 7754     FORMAT('      SUCH WAS NOT THE CASE HERE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7755)
 7755     FORMAT('      THE MAXIMUM ALLOWABLE NUMBER OF NAMES WAS ',
     1           'JUST EXCEEDED.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7757)
 7757     FORMAT('      SUGGESTED ACTION--ENTER     STATUS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7758)
 7758     FORMAT('      TO DETERMINE THE IMPORTANT (VERSUS ',
     1           'UNIMPORTANT) VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7760)
 7760     FORMAT('      AND PARAMETERS, AND THEN REUSE SOME OF THE ',
     1           'NAMES.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2007)
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2008)(IANS(I),I=1,MIN(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO9000
        ENDIF
C
        I2=NUMNAM+1
        IHNAME(I2)=IPARN(J)
        IHNAM2(I2)=IPARN2(J)
        IUSE(I2)='P'
        IVALUE(I2)=1
        VALUE(I2)=1.0
        IN(I2)=1
        NUMNAM=I2
C
 4165 CONTINUE
      NUMPAR=IP
      NUMVAR=IV
C
C               *******************************************
C               **  STEP 10--                            **
C               **  CHECK FOR A VALID NUMBER             **
C               **  OF INDEPENDENT VARIABLES (1 TO 5).   **
C               **  CHECK THE VALIDITY OF EACH           **
C               **  OF THE INDEPENDENT VARIABLES.        **
C               **  DOES THE NAME EXIST IN THE TABLE?    **
C               **  DOES THE NUMBER OF ELEMENTS          **
C               **  AGREE WITH THE NUMBER OF ELEMENTS    **
C               **  IN THE RESPONSE VARIABLE?            **
C               *******************************************
C
      ISTEPN='10'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMVAR.LT.1.OR.NUMVAR.GT.MAXV2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2001)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,552)
  552   FORMAT('      FOR A LEAST SQUARES PRE-FIT, THE NUMBER OF ',
     1         'INDEPENDENT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,554)MAXV2
  554   FORMAT('      VARIABLES MUST BE AT LEAST 1 AND AT MOST ',
     1         I8,';')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,555)
  555   FORMAT('      SUCH WAS NOT THE CASE HERE;  THE SPECIFIED ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,557)NUMVAR
  557   FORMAT('      NUMBER OF INDEPENDENT VARIABLES WAS ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2007)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,2008)(IANS(I),I=1,MIN(100,IWIDTH))
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4507)NUMCHA
 4507   FORMAT('      NUMBER OF CHARACTERS IN MODEL = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4508)(MODEL(J),J=1,MIN(100,NUMCHA))
 4508   FORMAT('      MODEL--',100A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4504)
 4504   FORMAT('      VARIABLES EXTRACTED FROM MODEL--')
        CALL DPWRST('XXX','BUG ')
        DO4505J=1,NUMVAR
          WRITE(ICOUT,4506)J,IVARN3(J),IVARN4(J),ICOLV3(J)
 4506     FORMAT('I,IVARN3(I),IVARN4(I),ICOLV3(I) = ',I8,2X,2A4,2X,I8)
          CALL DPWRST('XXX','BUG ')
 4505   CONTINUE
        IERROR='YES'
        GOTO9000
      ENDIF
C
      DO540J=1,NUMVAR
        IF(NIV(J).NE.NLEFT)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,562)
  562     FORMAT('      FOR A LEAST SQUARES PRE-FIT, THE NUMBER OF ',
     1           'ELEMENTS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,564)
  564     FORMAT('      IN EACH INDEPENDENT VARIABLE SHOULD BE THE ',
     1           'SAME AS THE')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,566)
  566     FORMAT('      NUMBER OF ELEMENTS IN THE DEPENDENT VARIABLE ',
     1           '(RESPONSE);')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,567)
  567     FORMAT('      SUCH WAS NOT THE CASE HERE.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,571)
  571     FORMAT('      DEPENDENT   VARIABLE  (RESPONSE)--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,572)IHLEFT,IHLEF2,NLEFT
  572     FORMAT('                  ',2A4,'  HAS ',I8,' ELEMENTS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,576)
  576     FORMAT('      INDEPENDENT VARIABLES           --')
          CALL DPWRST('XXX','BUG ')
          DO580JJ=1,NUMVAR
            WRITE(ICOUT,578)IVARN3(JJ),IVARN4(JJ),NIV(JJ)
  578       FORMAT('                  ',2A4,'  HAS ',I8,' ELEMENTS')
            CALL DPWRST('XXX','BUG ')
  580     CONTINUE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2007)
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2008)(IANS(I),I=1,MIN(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO9000
        ENDIF
  540 CONTINUE
C
C               ********************************************************
C               **  STEP 11--                                         **
C               **  DUMP THE COMMON VECTOR V(.) OUT ONTO MASS STORAGE **
C               **  SO AS TO PRESERVE THEIR CONTENTS FOR LATER USE    **
C               **  (AFTER DPPRE2).                                   **
C               **  THE ABOVE DUMP TO MASS STORAGE IS UNNECESSARY AND **
C               **  IS NOT DONE FOR THE SPECIAL CASE WHEN THE NUMBER  **
C               **  OF PARAMETERS IS 0 (A NO-PRE-FIT CASE WHEREBY WE  **
C               **  ARE REALLY INTERESTED IN GENERATING PREDICTED     **
C               **  VALUES AND RESIDUALS FOR A GIVEN FULLY-SPECIFIED  **
C               **  MODEL).                                           **
C               ********************************************************
C
      ISTEPN='11'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOP='WRIT'
CCCCC CALL DPSWAP(IOP,V,NUMNAM,IHNAME,IHNAM2,IUSE,IN,
CCCCC1IVALUE,MAXN,MAXCOL,MAXN2,MAXCO2,MAXIJ2,IBUGA3,ISUBRO,IERROR)
C
C               ********************************************************
C               **  STEP 12--                                         **
C               **  BRANCH TO THE APPROPRIATE SUBCASE; THEN COPY OVER **
C               **  THE RESPONSE VECTOR TO BE USED IN THE MODEL INTO  **
C               **  THE VECTOR Y; AND COPY OVER THE VECTORS THAT WERE **
C               **  USED IN THE MODEL INTO THE VECTOR XMAT (MAX       **
C               **  NUMBER OF ALLOWABLE VECTORS = 5.)                 **
C               ********************************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')THEN
        ISTEPN='12'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,601)N,NUMVAR
  601   FORMAT('N,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICASEQ.EQ.'FULL')THEN
        DO615I=1,NLEFT
          ISUB(I)=1
  615   CONTINUE
        NQ=NLEFT
      ELSEIF(ICASEQ.EQ.'SUBS')THEN
        NIOLD=NLEFT
        CALL DPSUBS(NIOLD,ILOCS,NS,IBUGQ,IERROR)
        NQ=NIOLD
      ELSEIF(ICASEQ.EQ.'FOR')THEN
        NIOLD=NLEFT
        CALL DPFOR(NIOLD,NFOR,IROW1,IROWN,NLOCAL,ILOCS,NS,IBUGQ,IERROR)
        NQ=NFOR
      ENDIF
C
      IROW=0
      DO4501JJ=1,NLEFT
        IF(ISUB(I).EQ.0)GOTO4501
        IROW=IROW+1
 4501 CONTINUE
C
      K=ICOLL
      J=0
      DO4500I=1,NLEFT
        IF(ISUB(I).EQ.0)GOTO4500
        J=J+1
        IJ=MAXN*(K-1)+I
        IF(K.LE.MAXCOL)Y(J)=V(IJ)
        IF(K.EQ.MAXCP1)Y(J)=PRED(I)
        IF(K.EQ.MAXCP2)Y(J)=RES(I)
        IF(K.EQ.MAXCP3)Y(J)=YPLOT(I)
        IF(K.EQ.MAXCP4)Y(J)=XPLOT(I)
        IF(K.EQ.MAXCP5)Y(J)=X2PLOT(I)
        IF(K.EQ.MAXCP6)Y(J)=TAGPLO(I)
C
        DO4510KK=1,NUMVAR
          LL=ICOLV3(KK)
          IJ=MAXN*(LL-1)+I
          IF(K.LE.MAXCOL)XMAT(J,KK)=V(IJ)
          IF(K.EQ.MAXCP1)XMAT(J,KK)=PRED(I)
          IF(K.EQ.MAXCP2)XMAT(J,KK)=RES(I)
          IF(K.EQ.MAXCP3)XMAT(J,KK)=YPLOT(I)
          IF(K.EQ.MAXCP4)XMAT(J,KK)=XPLOT(I)
          IF(K.EQ.MAXCP5)XMAT(J,KK)=X2PLOT(I)
          IF(K.EQ.MAXCP6)XMAT(J,KK)=TAGPLO(I)
 4510   CONTINUE
 4500 CONTINUE
C
      NS=J
C
C               ********************************************************
C               **  STEP 13--                                         **
C               **  PREPARE FOR ENTRANCE INTO DPPRE2--                **
C               **  SET THE WEIGHT VECTOR TO UNITY THROUGHOUT.        **
C               **  SET THE ICON3 VECTOR (WHICH INDICATES WHICH       **
C               **  PARAMETERS ARE TO BE HELD CONSTANT) EQUAL TO 0    **
C               **  THROUGHOUT.  DEFINE CONSTRAINTS AND LIMITS.       **
C               ********************************************************
C
      ISTEPN='13'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO4592I=1,NS
        W(I)=1.0
 4592 CONTINUE
C
      DO4195I=1,NUMPAR
        ICON3(I)=0
 4195 CONTINUE
C
      IF(NUMCON.GT.0)THEN
        DO4700I=1,NUMPAR
          DO4800J=1,NUMCON
            J2=J
            IF(IPARN3(I).EQ.IPARNC(J).AND.IPARN4(I).EQ.IPANC2(J))THEN
              IPARO3(I)=IPAROC(J2)
              PARLI3(I)=PARLIM(J2)
              GOTO4700
            ENDIF
 4800     CONTINUE
          IPARO3(I)='NONE'
 4700   CONTINUE
      ENDIF
C
C               ********************
C               **  STEP 14--     **
C               **  ENTER DPPRE2. **
C               ********************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')THEN
        ISTEPN='14'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6081)
 6081   FORMAT('***** FROM DPPREF, AS WE ARE ABOUT TO CALL DPPRE2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,6082)NUMCHA,NLEFT,MAXN,NS,NUMPV,NUMPAR,NUMVAR
 6082   FORMAT('NUMCHA,NLEFT,MAXN,NS,NUMPV,NUMPAR,NUMVAR = ',7I8)
        CALL DPWRST('XXX','BUG ')
        DO6083I=1,NS
          WRITE(ICOUT,6084)I,Y(I),(XMAT(I,J),J=1,5),W(I)
 6084     FORMAT('I,Y(I),(XMAT(I,J),J=1,5),W(I) = ',I6,2X,7G15.7)
          CALL DPWRST('XXX','BUG ')
 6083   CONTINUE
        WRITE(ICOUT,6085)(MODEL(I),I=1,MIN(120,NUMCHA))
 6085   FORMAT('MODEL(.)--',120A1)
        CALL DPWRST('XXX','BUG ')
        DO6086J=1,NUMPAR
          WRITE(ICOUT,6087)J,IPARN3(J),IPARN4(J),PARAM3(J),ICON3(J)
 6087     FORMAT('I,IPARN3(I),IPARN4(I),PARAM3(I),ICON3(I) = ',
     1           I8,2X,2A4,G15.7,A4)
          CALL DPWRST('XXX','BUG ')
 6086   CONTINUE
        DO6088J=1,NUMVAR
          WRITE(ICOUT,6089)J,IVARN3(J),IVARN4(J),ICOLV3(J)
 6089     FORMAT('I,IVARN3(I),IVARN4(I),ICOLV3(I) = ',I8,2X,2A4,2X,I8)
          CALL DPWRST('XXX','BUG ')
 6088   CONTINUE
      ENDIF
C
      CALL DPPRE2(Y,XMAT,MAXOBV,NUMVAR,IVARN3,IVARN4,W,NS,
     1            MODEL,NUMCHA,PARAM3,IPARN3,IPARN4,NUMPAR,ICON3,
     1            IANGLU,IPARO3,
     1            PARLI3,VSCRT,MAXITS,FITSD,FITPOW,CPUEPS,
     1            ITYPEH,IW2HOL,IW22HO,W2HOLD,NWHOLD,
     1            IHARG,IHARG2,IARGT,IARG,ARG,NUMARG,
     1            IREP,REPSD,REPDF,RESSD,RESDF,PRED2,RES2,ALFCDF,
     1            DUM1,DUM2,IANS,IWIDTH,
     1            ISUBRO,IBUGA3,IBUGCO,IBUGEV,IERROR)
      IF(IERROR.EQ.'YES')GOTO8000
C
C               ***************************************
C               **  STEP 15--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='15'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOLPR=MAXCP1
      ICOLRE=MAXCP2
      IREPU='ON'
      IRESU='ON'
      CALL UPDAPR(ICOLPR,ICOLRE,PRED2,RES2,PRED,RES,ISUB,NLEFT,
     1            IREPU,REPSD,REPDF,IRESU,RESSD,RESDF,ALFCDF,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            IANS,IWIDTH,ILOCN,IBUGA3,IERROR)
C
      IF(ICASFI.EQ.'FIT' .OR.ICASFI.EQ.'RFIT')GOTO7900
C
      L=0
      DO7600J=1,K1
        L=L+1
        IH2='    '
        IF(J.EQ.1)IH='A0  '
        IF(J.EQ.2)IH='A1  '
        IF(J.EQ.3)IH='A2  '
        IF(J.EQ.4)IH='A3  '
        IF(J.EQ.5)IH='A4  '
        IF(J.LE.5)GOTO7640
        IF(J.EQ.6)IH='A5  '
        IF(J.EQ.7)IH='A6  '
        IF(J.EQ.8)IH='A7  '
        IF(J.EQ.9)IH='A8  '
        IF(J.EQ.10)IH='A9  '
        IF(J.LE.10)GOTO7640
        IF(J.EQ.11)IH='A10 '
        IF(J.LE.11)GOTO7640
C
 7640   CONTINUE
        DO7650I=1,NUMNAM
          I2=I
          IF(IH.EQ.IHNAME(I).AND.IH2.EQ.IHNAM2(I).AND.
     1       IUSE(I).EQ.'P')THEN
            VALUE(I2)=PARAM3(L)
            VAL=VALUE(I2)
            IF((-CUTOFF).LE.VAL.AND.VAL.LE.CUTOFF)IVAL=INT(VAL+0.5)
            IF(VAL.GT.CUTOFF)IVAL=INT(CUTOFF)
            IF(VAL.LT.(-CUTOFF))IVAL=INT((-CUTOFF))
            IVALUE(I2)=IVAL
            GOTO7600
          ENDIF
 7650   CONTINUE
C
        IF(NUMNAM.GE.MAXNAM)THEN
          WRITE(ICOUT,2001)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7752)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7753)MAXNAM
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7754)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7755)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7757)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7758)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,7760)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2007)
          CALL DPWRST('XXX','BUG ')
          IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2008)(IANS(I),I=1,MIN(100,IWIDTH))
            CALL DPWRST('XXX','BUG ')
          ENDIF
          IERROR='YES'
          GOTO9000
        ENDIF
C
        NUMNAM=NUMNAM+1
        ILOC=NUMNAM
        IHNAME(ILOC)=IH
        IHNAM2(ILOC)=IH2
        IUSE(ILOC)='P'
        VALUE(ILOC)=PARAM3(L)
        VAL=VALUE(ILOC)
        IF((-CUTOFF).LE.VAL.AND.VAL.LE.CUTOFF)IVAL=INT(VAL+0.5)
        IF(VAL.GT.CUTOFF)IVAL=INT(CUTOFF)
        IF(VAL.LT.(-CUTOFF))IVAL=INT(-CUTOFF)
        IVALUE(ILOC)=IVAL
        GOTO7600
C
 7600 CONTINUE
 7900 CONTINUE
C
C               *******************************************************
C               **  STEP 16--                                        **
C               **  READ BACK IN FROM MASS STORAGE THE CONTENTS OF   **
C               **  THE V(.) VECTOR.  THE ABOVE RETRIEVAL FROM MASS  **
C               **  STORAGE IS UNNECESSARY AND IS FOR THE SPECIAL    **
C               **  CASE WHEN THE NUMBER OF PARAMETERS IS 0 (A NO    **
C               **  PRE-FIT CASE WHEREBY WE ARE REALLY INTERESTED    **
C               **  IN GENERATING PREDICTED VALUES AND RESIDUALS     **
C               **  FOR A GIVEN FULLY-SPECIFIED MODEL).              **
C               *******************************************************
C
 8000 CONTINUE
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')THEN
        ISTEPN='16'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,8101)
 8101   FORMAT('WE ARE IN DPPREF AND ARE ABOUT TO READ V BACK IN')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8102)MAXN2,MAXCO2,MAXIJ2,NLEFT,NS,V(1),
     1                   PRED(1),RES(1)
 8102   FORMAT('MAXN2,MAXCO2,MAXIJ2,NLEFT,NS,V(1),PRED(1),RES(1) = ',
     1         5I6,3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8103)
 8103   FORMAT('NOTE THAT IF NUMBER OF PARAMETERS = 0, THEN ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8104)
 8104   FORMAT('NO   DUMP TO/RETRIEVAL FROM MASS STORAGE IS DONE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8106)NUMPAR
 8106   FORMAT('NUMPAR = ',I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IOP='READ'
CCCCC CALL DPSWAP(IOP,V,NUMNAM,IHNAME,IHNAM2,IUSE,IN,
CCCCC1            IVALUE,MAXN,MAXCOL,MAXN2,MAXCO2,MAXIJ2,
CCCCC1            IBUGA3,ISUBRO,IERROR)
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')THEN
        WRITE(ICOUT,8121)
 8121   FORMAT('WE ARE IN DPPREF AND HAVE JUST READ V(.) BACK IN')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8102)MAXN2,MAXCO2,MAXIJ2,NLEFT,NS,V(1),
     1                   PRED(1),RES(1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *************************************************
C               **  STEP 17--                                  **
C               **  COPY THE FINAL ESTIMATES FROM THE PRE-FIT  **
C               **  BACK INTO THE PARAMETERS.                  **
C               **  THESE FINAL ESTIMATES WILL THUS OVERWRITE  **
C               **  THE STARTING VALUES THAT WERE              **
C               **  ORIGINALLY ASSIGNED TO THE PARAMETERS.     **
C               *************************************************
C
      ISTEPN='17'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMPAR.GT.0)THEN
        DO6100J=1,NUMPAR
          IH=IPARN3(J)
          IH2=IPARN4(J)
          IHWUSE='P'
          MESSAG='YES'
          CALL CHECKN(IH,IH2,IHWUSE,
     1                IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1                ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
          VALUE(ILOCP)=PARAM3(J)
          VAL=VALUE(ILOCP)
          IF((-CUTOFF).LE.VAL.AND.VAL.LE.CUTOFF)IVAL=INT(VAL+0.5)
          IF(VAL.GT.CUTOFF)IVAL=INT(CUTOFF)
          IF(VAL.LT.(-CUTOFF))IVAL=INT(-CUTOFF)
          IVALUE(ILOCP)=IVAL
 6100   CONTINUE
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PREF')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPREF--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)NUMNAM,NS,NUMPV,IP,IV,ICASFI
 9015   FORMAT('NUMNAM,NS,NUMPV,IP,IV,ICASFI = ',5I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO9017I=1,NUMNAM
          WRITE(ICOUT,9018)I,IHNAME(I),IHNAM2(I),IUSE(I),IN(I),
     1                     IVALUE(I),VALUE(I)
 9018     FORMAT('I,IHNAME(I),IHNAM2(I),IUSE(I),IN(I),IVALUE(I)',
     1           'VALUE(I) = ',I8,2X,2A4,2X,A4,2I8,G15.7)
          CALL DPWRST('XXX','BUG ')
 9017   CONTINUE
        IF(NUMPV.GT.0)THEN
          DO9022I=1,NUMPV
            WRITE(ICOUT,9023)I,IPARN(I),IPARN2(I)
 9023       FORMAT('I,IPARN(I),IPARN2(I) = ',I8,2X,2A4)
            CALL DPWRST('XXX','BUG ')
 9022     CONTINUE
        ENDIF
        IF(IP.GT.0)THEN
          DO9032I=1,IP
            WRITE(ICOUT,9033)I,IPARN3(I),IPARN4(I)
 9033       FORMAT('I,IPARN3(I),IPARN4(I) = ',I8,2X,2A4)
            CALL DPWRST('XXX','BUG ')
 9032     CONTINUE
        ENDIF
        IF(IV.GT.0)THEN
          DO9042I=1,IV
            WRITE(ICOUT,9043)I,IVARN3(I),IVARN4(I)
 9043       FORMAT('I,IVARN3(I),IVARN4(I) = ',I8,2X,2A4)
            CALL DPWRST('XXX','BUG ')
 9042     CONTINUE
        ENDIF
        WRITE(ICOUT,9051)MAXN2,NLEFT,NS,V(1),PRED(1),RES(1)
 9051   FORMAT('MAXN2,NLEFT,NS,V(1),PRED(1),RES(1) = ',3I8,3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9061)ICASEQ,IWIDTH,IWIDMO
 9061   FORMAT('ICASEQ,IWIDTH,IWIDMO = ',A4,2X,2I8)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,9062)(IANS(I),I=1,MIN(100,IWIDTH))
 9062     FORMAT('(IANS(I),I=1,IWIDTH) = ',100A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IF(IWIDMO.GE.1)THEN
          WRITE(ICOUT,9064)(MODEL(I),I=1,MIN(100,IWIDMO))
 9064     FORMAT('(MODEL(I),I=1,IWIDMO) = ',100A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,9069)IFOUND,IERROR
 9069   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPREG(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE ONE OF THE FOLLOWING PLOTS:
C              1) A PARTIAL REGRESSION PLOT
C              2) A PARTIAL RESIDUAL PLOT
C              3) A PARTIAL LEVERAGE PLOT
C              4) A CCPR (COMPONENT AND COMPONENT-PLUS-RESIDUAL) PLOT
C              DPPRPL GENERATES THE PARTIAL REGRESSION PLOTS FOR ALL
C              OF THE X VARIABLES WHILE THIS COMMAND GENERATES THE
C              COORDINATES FOR A SINGLE X VARIABLE.  NOTE THAT THIS
C              COMMAND ASSUMES THE FIT HAS ALREADY BEEN GENERATED
C              (THIS IS DONE AUTOMATICALLY IN DPPRPL) AND THE SYNTAX
C              IS THEN: PARTIAL Y X1 TO XK INDEX
C              WHERE INDEX IS A PARAMETER THAT IDENTIFIES WHICH OF
C              THE X VARIABLES TO USE.
C     WRITTEN BY--ALAN HECKERT
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2002/6
C     ORIGINAL VERSION--JUNE      2002.
C     UPDATED         --JULY      2019. TWEAK SCRATCH SPACE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHP
      CHARACTER*4 IHP2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ICASEQ
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 IVARN1
      CHARACTER*4 IVARN2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZ3.INC'
      INCLUDE 'DPCOZI.INC'
      INCLUDE 'DPCODA.INC'
C
C  MAXPRG IS THE MAXIMUM NUMBER OF VARIABLES TO USE IN CREATING THE
C  PARTIAL REGRESSION PLOT
C
      PARAMETER(MAXPRG=30)
C
      DIMENSION IVARN1(MAXPRG)
      DIMENSION IVARN2(MAXPRG)
      DIMENSION ILIS(MAXPRG)
C
      DIMENSION XMAT(11*MAXOBV)
      DIMENSION XSCRT1(11*MAXOBV)
      DIMENSION XSCRT2(11*MAXOBV)
      DIMENSION Y1(MAXOBV)
      DIMENSION YTEMP2(MAXOBV)
      DIMENSION YTEMP3(MAXOBV)
      DIMENSION RES2(MAXOBV)
      DIMENSION COEF(MAXPRG)
      DIMENSION ITEMP1(MAXOBV)
C
      EQUIVALENCE (G3RBAG(KGARB1),Y1(1))
      EQUIVALENCE (G3RBAG(KGARB2),YTEMP2(1))
      EQUIVALENCE (G3RBAG(KGARB3),YTEMP3(1))
      EQUIVALENCE (G3RBAG(KGARB4),RES2(1))
      EQUIVALENCE (GARBAG(IGARB1),XMAT(1))
      EQUIVALENCE (GARBAG(JGAR12),XSCRT1(1))
      EQUIVALENCE (GARBAG(IGAR13),XSCRT2(1))
C
      EQUIVALENCE (IGARBG(IIGAR1),ITEMP1(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPPR'
      ISUBN2='EG  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      MAXV2=2
      MINN2=1
      NLOCAL=0
      NPLOTP=0
      NZ=0
      NPLOTV=0
      NS=0
      NTEMP=0
      ICOLH=0
      NUMVAR=0
      NRIGHT=0
C
C               ***********************************************
C               **  TREAT THE PARTIAL REGRESSSION PLOT CASE  **
C               ***********************************************
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PREG')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPREG--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGG2,IBUGG3,IBUGQ,ISUBRO
   52   FORMAT('IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IAND1,IAND2,NUMARG
   53   FORMAT('ICASPL,IAND1,IAND2,NUMARG = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        DO59I=1,NUMARG
          WRITE(ICOUT,57)I,IHARG(I),IHARG2(I)
   57     FORMAT('I,IHARG(I),IHARG2(I) = ',I8,A4,2X,A4)
          CALL DPWRST('XXX','BUG ')
   59   CONTINUE
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='11'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PREG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'REGR'.AND.
     1  IHARG(2).EQ.'PLOT')THEN
        ICASPL='PREG'
        GOTO112
      ENDIF
C
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'VARI'.AND.
     1  IHARG(2).EQ.'PLOT')THEN
        ICASPL='PREG'
        GOTO112
      ENDIF
C
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'LEVE'.AND.
     1  IHARG(2).EQ.'PLOT')THEN
        ICASPL='PLEV'
        GOTO112
      ENDIF
C
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'RESI'.AND.
     1  IHARG(2).EQ.'PLOT')THEN
        ICASPL='PRES'
        GOTO112
      ENDIF
C
      IF(NUMARG.GE.3.AND.IHARG(1).EQ.'PLUS'.AND.
     1  IHARG(2).EQ.'RESI'.AND.IHARG(3).EQ.'PLOT')THEN
        ICASPL='PRES'
        GOTO112
      ENDIF
C
      IF(ICASPL.EQ.'CCPR'.AND.NUMARG.GE.1.AND.IHARG(1).EQ.'PLOT')THEN
        ICASPL='CCPR'
        GOTO111
      ENDIF
C
      IFOUND='NO'
      GOTO9000
C
  111 CONTINUE
      ILASTC=1
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      GOTO119
C
  112 CONTINUE
      ILASTC=2
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      GOTO119
C
  119 CONTINUE
      IFOUND='YES'
      GOTO190
C
  190 CONTINUE
C
C               *******************************************************
C               **  STEP 2--                                         **
C               **  CHECK FOR THE PROPER NUMBER OF INPUT ARGUMENTS.  **
C               *******************************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PREG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      MINNA=3
      MAXNA=100
      CALL CHECKA(NUMARG,MINNA,MAXNA,IANS,IWIDTH,ISUBN1,ISUBN2,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************************************
C               **  STEP 11--                          **
C               **  CHECK TO SEE THE TYPE SUBCASE      **
C               **  (BASED ON THE QUALIFIER)--         **
C               **    1) UNQUALIFIED (THAT IS, FULL);  **
C               **    2) SUBSET/EXCEPT; OR             **
C               **    3) FOR.                          **
C               *****************************************
C
      ISTEPN='11'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PREG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.LT.1)GOTO1180
      DO1100J=1,NUMARG
      J1=J
      IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ')GOTO1110
      IF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ')GOTO1110
      IF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')GOTO1120
 1100 CONTINUE
      GOTO1180
 1110 CONTINUE
      ICASEQ='SUBS'
      ILOCQ=J1
      GOTO1190
 1120 CONTINUE
      ICASEQ='FOR'
      ILOCQ=J1
      GOTO1190
C
 1180 CONTINUE
      GOTO1190
C
 1190 CONTINUE
      IF(IBUGG2.EQ.'OFF'.AND.ISUBRO.NE.'PREG')GOTO1195
      WRITE(ICOUT,1191)NUMARG,ILOCQ,ICASEQ
 1191 FORMAT('NUMARG,ILOCQ,ICASEQ = ',I8,I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 1195 CONTINUE
C
C               **************************************************
C               **  STEP 12--                                   **
C               **  DETERMINE THE NUMBER OF VARIABLES           **
C               **  TO BE INCLUDED AS PLOT COMPONENTS           **
C               **  IF THE   TO   FEATURE IS USED IN THE        **
C               **  ARGUMENT LIST, TRANSLATE THE   TO   TO      **
C               **  EXPLICIT VARIABLE NAMES                     **
C               **  NOTE: LAST "VARIABLE" SHOULD BE A PARAMETER **
C               **        CONTAINING THE "INDEX" OF THE PRIMARY **
C               **        VARIABLE OF THE PLOT.                 **
C               **************************************************
C
      ISTEPN='12'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PREG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      JMIN=1
      JMAX=ILOCQ-1
      CALL EXTVAR(IHARG,IHARG2,NUMARG,JMIN,JMAX,MAXPRG,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,
     1            IVARN1,IVARN2,NUMVAR,IBUGG2,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               ***************************************
C               **  STEP 13--                        **
C               **  CHECK THE VALIDITY OF EACH       **
C               **  OF THE VARIABLES.                **
C               **  ALSO CHECK TO ASSURE THAT EACH   **
C               **  OF THE VARIABLES HAS AT LEAST    **
C               **  2 OBSERVATIONS AND THE SAME      **
C               **  NUMBER OF OBSERVATIONS           **
C               ***************************************
C
      ISTEPN='13'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PREG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IFLAG=0
      NVTOT=NUMVAR
      NUMVAR=NUMVAR-1
      DO1300I=1,NVTOT
C
      IHRIGH=IVARN1(I)
      IHRIG2=IVARN2(I)
      IHWUSE='V'
      MESSAG='YES'
      CALL CHECKN(IHRIGH,IHRIG2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      NRIGHT=IN(ILOCV)
      IF(I.EQ.1)NTEMP=NRIGHT
      ILIS(I)=ILOCV
      IF(NRIGHT.LT.MINN2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1311)
 1311   FORMAT('***** ERROR IN DPPREG--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1312)
 1312   FORMAT('      THE INPUT NUMBER OF OBSERVATIONS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1321)
 1321   FORMAT('      (FOR WHICH A PARTIAL REGRESSSION PLOT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1325)
 1325   FORMAT('      WAS TO HAVE BEEN FORMED)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1326)MINN2
 1326   FORMAT('      MUST BE ',I8,' OR LARGER;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1327)
 1327   FORMAT('      SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1328)
 1328   FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1329)(IANS(J),J=1,MIN(80,IWIDTH))
 1329     FORMAT('      ',80A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ELSE IF(NRIGHT.NE.NTEMP)THEN
        WRITE(ICOUT,1411)
 1411   FORMAT('***** ERROR IN DPPREG--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1413)
 1413   FORMAT('      THE NUMBER OF OBSERVATIONS IN ALL VARIABLES ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1414)
 1414   FORMAT('      MUST BE THE SAME; SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        I2=ILIS(I)
        WRITE(ICOUT,1416)IVARN1(I2),IVARN2(I2),IN(I2)
 1416   FORMAT('           VARIABLE ',A4,A4,' HAS ',I8,
     1         ' OBSERVATIONS;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1420)
 1420   FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,1421)(IANS(L),L=1,MIN(100,IWIDTH))
 1421     FORMAT('      ',100A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IERROR='YES'
        GOTO9000
      ENDIF
C
 1300 CONTINUE
C
      IF(NUMVAR*NRIGHT.GT.11*MAXOBV)THEN
        WRITE(ICOUT,1311)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1503)
 1503   FORMAT('      SCRATCH SPACE EXCEEDED.  USE FEWER VARIABLES.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1505)11*MAXOBV
 1505   FORMAT('      ROWS TIMES COLUMMS MUST BE <= ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1507)NRIGHT,NUMVAR,NUMVAR*NRIGHT
 1507   FORMAT('      CURRENT: ROWS = ',I8,', COLUMNS = ',I8,
     1         ', TOTAL = ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ******************************************************
C               **  STEP 1.5--                                      **
C               **  LAST VARIABLE IDENTIFIES THE PRIMARY VARIABLE   **
C               **  (WHICH SHOULD ALREADY BE IN THE LIST)           **
C               ******************************************************
C
      IHRIGH=IVARN1(NVTOT)
      IHRIG2=IVARN2(NVTOT)
C
      DO1521I=2,NUMVAR
        IF(IHRIGH.EQ.IVARN1(I).AND.IHRIG2.EQ.IVARN2(I))THEN
          IX=I
          GOTO1529
        ENDIF
 1521 CONTINUE
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1525)IHRIGH,IHRIG2
 1525 FORMAT('      THE NAME OF THE PRIMARY VARIABLE ',A4,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1527)
 1527 FORMAT('      DOES NOT MATCH ANY OF THE INDEPENDENT VARIABLES.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 1529 CONTINUE
C
C               ******************************************************
C               **  STEP 1.6--                                      **
C               **  EXTRACT FIT COEFFICIENTS FROM PREVIOUS FIT.     **
C               **  (A0, A1, ....)                                  **
C               ******************************************************
C
      IHP='A0  '
      IHP2='    '
      IHWUSE='P'
      MESSAG='YES'
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      COEF(1)=VALUE(ILOCP)
C
      NX=NUMVAR-1
      DO1610I=1,MIN(9,NX)
        IHP='A   '
        WRITE(IHP(2:2),'(I1)')I
        CALL CHECKN(IHP,IHP2,IHWUSE,
     1  IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1  ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        COEF(I+1)=VALUE(ILOCP)
 1610 CONTINUE
      IF(NX.GE.10)THEN
        DO1620I=1,MIN(10,NX)
          IHP='A   '
          WRITE(IHP(2:3),'(I2)')I
          CALL CHECKN(IHP,IHP2,IHWUSE,
     1    IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1    ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
          COEF(I+1)=VALUE(ILOCP)
 1620   CONTINUE
      ENDIF
C
      NX=NUMVAR-1
C
C               *************************************************
C               **  STEP 21--                                  **
C               **  BRANCH TO THE APPROPRIATE SUBCASE;         **
C               **  (BASED ON THE QUALIFIER)                   **
C               **  THEN FOR  EACH OF THE RESPONSE VARIABLES   **
C               **  EXTRACT THE DATA SUBSET                    **
C               **  (USUALLY ONLY 1 OBSERVATION)               **
C               **  AND ALSO EXTRACT THE                       **
C               **  MIN AND MAX FOR THE FULL VARIABLE          **
C               *************************************************
C
      ISTEPN='21'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PREG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ICASEQ.EQ.'FULL')GOTO2110
      IF(ICASEQ.EQ.'SUBS')GOTO2120
      IF(ICASEQ.EQ.'FOR')GOTO2130
C
 2110 CONTINUE
      DO2115I=1,NRIGHT
      ISUB(I)=1
 2115 CONTINUE
      NQ=NRIGHT
      GOTO2190
C
 2120 CONTINUE
      NIOLD=NRIGHT
      CALL DPSUBS(NIOLD,ILOCS,NS,IBUGQ,IERROR)
      NQ=NIOLD
      GOTO2190
C
 2130 CONTINUE
      NIOLD=NRIGHT
      CALL DPFOR(NIOLD,NFOR,IROW1,IROWN,
     1NLOCAL,ILOCS,NS,IBUGQ,IERROR)
      NQ=NFOR
      GOTO2190
C
 2190 CONTINUE
C
C               *************************************************
C               **  STEP 22--                                  **
C               **  FOR EACH OF THE RESPONSE VARIABLES,        **
C               **  EXTRACT THE DATA SUBSET                    **
C               **  (FREQUENTLY ONLY 1 OBSERVATION)            **
C               **  AND ALSO EXTRACT THE                       **
C               **  MIN AND MAX FOR THE FULL VARIABLE          **
C               *************************************************
C
      ISTEPN='22'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PREG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO2200K=1,NVTOT-1
      IHRIGH=IVARN1(K)
      IHRIG2=IVARN2(K)
C
      DO2210I=1,NUMNAM
      I2=I
      IF(IHRIGH.EQ.IHNAME(I).AND.IHRIG2.EQ.IHNAM2(I).AND.
     1IUSE(I).EQ.'V')GOTO2219
 2210 CONTINUE
      WRITE(ICOUT,2211)
 2211 FORMAT('***** INTERNAL ERROR IN DPPREG AT POINT 2210--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2212)IHRIGH,IHRIG2
 2212 FORMAT('      THE VARIABLE ',A4,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2213)
 2213 FORMAT('      NOT NOW FOUND IN INTERNAL NAME LIST')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2214)
 2214 FORMAT('      ALTHOUGH ALREADY FOUND EARLIER.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2215)
 2215 FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,2216)(IANS(I),I=1,IWIDTH)
 2216   FORMAT('      ',80A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IERROR='YES'
      GOTO9000
 2219 CONTINUE
C
      ILISTR=I2
      ICOLR=IVALUE(ILISTR)
      NRIGHT=IN(ILISTR)
C
      J=0
      IMAX=NRIGHT
      IF(NQ.LT.NRIGHT)IMAX=NQ
      DO2240I=1,IMAX
      IF(ISUB(I).EQ.0)GOTO2240
      J=J+1
      IJ=MAXN*(ICOLR-1)+I
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PREG')
     1WRITE(ICOUT,2241)I,J,MAXN,ICOLR,IJ,NRIGHT,NQ,IMAX
 2241 FORMAT('I,J,MAXN,ICOLR,IJ,NRIGHT,NQ,IMAX = ',8I8)
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PREG')
     1CALL DPWRST('XXX','BUG ')
      IF(K.EQ.1)THEN
        IF(ICOLR.LE.MAXCOL)Y1(J)=V(IJ)
        IF(ICOLR.EQ.MAXCP1)Y1(J)=PRED(I)
        IF(ICOLR.EQ.MAXCP2)Y1(J)=RES(I)
        IF(ICOLR.EQ.MAXCP3)Y1(J)=YPLOT(I)
        IF(ICOLR.EQ.MAXCP4)Y1(J)=XPLOT(I)
        IF(ICOLR.EQ.MAXCP5)Y1(J)=X2PLOT(I)
        IF(ICOLR.EQ.MAXCP6)Y1(J)=TAGPLO(I)
        RES2(J)=RES(I)
        XMAT(J)=1.0
      ELSE
        IJK=(K-1)*NQ+J
        IF(ICOLR.LE.MAXCOL)XMAT(IJK)=V(IJ)
        IF(ICOLR.EQ.MAXCP1)XMAT(IJK)=PRED(I)
        IF(ICOLR.EQ.MAXCP2)XMAT(IJK)=RES(I)
        IF(ICOLR.EQ.MAXCP3)XMAT(IJK)=YPLOT(I)
        IF(ICOLR.EQ.MAXCP4)XMAT(IJK)=XPLOT(I)
        IF(ICOLR.EQ.MAXCP5)XMAT(IJK)=X2PLOT(I)
        IF(ICOLR.EQ.MAXCP6)XMAT(IJK)=TAGPLO(I)
      ENDIF
 2240 CONTINUE
      NLOCAL=J
      NSUB=NLOCAL
C
 2200 CONTINUE
      NZ=NUMVAR
C
C               *******************************************************
C               **  STEP 31--                                        **
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS            **
C               **  VALUES Y(.) AND X(.) FOR THE PLOT.               **
C               **  DEFINE THE VECTOR D(.) SO THAT EACH ANDREW'S     **
C               **  CURVE HAS ITS OWNS TAG NUMBER.                   **
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).    **
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).    **
C               *******************************************************
C
      ISTEPN='8'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PREG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPPRG2(Y1,YTEMP2,YTEMP3,RES2,COEF,ITEMP1,
     1            XMAT,XSCRT1,XSCRT2,ICASPL,
     1            NLOCAL,NUMVAR,IX,MAXPRG,
     1            Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PREG')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPREG--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IFOUND,IERROR,NLOCAL,NZ
 9013   FORMAT('IFOUND,IERROR,NLOCAL,NZ = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9014   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',3I8,3(2X,A4))
        CALL DPWRST('XXX','BUG ')
        IF(NLOCAL.GT.0)THEN
          DO9022I=1,NLOCAL
            WRITE(ICOUT,9023)I,Y1(I),RES2(I),XMAT(I)
 9023       FORMAT('I,YTEMP1(I),RES(I),XMAT(I) = ',I8,3G15.7)
            CALL DPWRST('XXX','BUG ')
 9022     CONTINUE
        ENDIF
        IF(NPLOTP.GT.0)THEN
          DO9052I=1,NPLOTP
            WRITE(ICOUT,9053)I,Y(I),X(I),D(I)
 9053       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9052     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPRG2(Y1,Y2,Y3,RES,COEF,ITEMP1,
     1                  XMAT,XSCRT1,XSCRT2,ICASPL,
     1                  N,NUMVAR,IX,MAXPRG,
     1                  Y,X,D,NPLOTP,NPLOTV,IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE ONE OF THE FOLLOWING PLOTS:
C              1) A PARTIAL REGRESSION PLOT
C              2) A PARTIAL RESIDUAL PLOT
C              3) A PARTIAL LEVERAGE PLOT
C              4) A CCPR (COMPONENT AND COMPONENT-PLUS-RESIDUAL) PLOT
C              DPPRPL GENERATES THE PARTIAL REGRESSION PLOTS FOR ALL
C              OF THE X VARIABLES WHILE THIS COMMAND GENERATES THE
C              COORDINATES FOR A SINGLE X VARIABLE.  NOTE THAT THIS
C              COMMAND ASSUMES THE FIT HAS ALREADY BEEN GENERATED
C              (THIS IS DONE AUTOMATICALLY IN DPPRPL) AND THE SYNTAX
C              IS THEN: PARTIAL Y X1 TO XK INDEX
C              WHERE INDEX IS A PARAMETER THAT IDENTIFIES WHICH OF
C              THE X VARIABLES TO USE.
C     WRITTEN BY--ALAN HECKERT
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2002/6
C     ORIGINAL VERSION--JUNE      2002.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      DOUBLE PRECISION DSUM1
C
      DIMENSION XMAT(N,NUMVAR)
      DIMENSION XSCRT1(N,NUMVAR)
      DIMENSION XSCRT2(N,NUMVAR)
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION Y3(*)
      DIMENSION RES(*)
      DIMENSION ITEMP1(*)
      DIMENSION COEF(*)
C
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION D(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPR'
      ISUBN2='G2  '
      IERROR='NO'
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LE.1)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN DPPRG2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 2;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE NUMBER OF OBSERVATIONS = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PRG2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPPRG2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)ICASPL,NUMVAR,N,IX,MAXPRG
   72   FORMAT('ICASPL,NUMVAR,N,IX,MAXPRG = ',A4,2X,4I8)
        CALL DPWRST('XXX','BUG ')
        DO81I=1,N
          WRITE(ICOUT,82)I,Y(I),(XMAT(I,K),K=1,MIN(5,NUMVAR))
   82     FORMAT('I,Y(I),XMAT(I,K) = ',I8,6E12.5)
          CALL DPWRST('XXX','BUG ')
   81   CONTINUE
        DO91I=1,N
          WRITE(ICOUT,92)I,Y1(I),Y2(I),Y3(I)
   92     FORMAT('I,Y1(I),Y2(I),Y3(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
   91   CONTINUE
        DO85I=1,NUMVAR
          WRITE(ICOUT,87)I,COEF(I)
   87     FORMAT('I,COEF(I) = ',I8,E12.5)
          CALL DPWRST('XXX','BUG ')
   85   CONTINUE
      ENDIF
C
C               ****************************************
C               **  STEP 11--                         **
C               **  DETERMINE PLOT COORDINATES        **
C               **  PARTIAL REGRESSION PLOT CASE      **
C               ****************************************
C
      IF(ICASPL.EQ.'PREG')THEN
C
        CALL CATCHR(XMAT,XSCRT1,XSCRT2,Y2,Y3,ITEMP1,
     1              N,NUMVAR,N,NUMVAR,
     1              IBUGG3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PRG2')THEN
          IF(N.GT.0)THEN
            DO101I=1,N
            WRITE(ICOUT,102)I,(XSCRT2(I,K),K=1,MIN(7,NUMVAR))
  102       FORMAT('I,XSCRT(I,K) = ',I8,7E12.5)
            CALL DPWRST('XXX','BUG ')
  101       CONTINUE
          ENDIF
        ENDIF
C
        DSUM1=0.0D0
        DO110I=1,N
          DSUM1=DSUM1 + DBLE(XSCRT2(I,IX))**2
  110   CONTINUE
        DENOM=REAL(DSUM1)
        DO120I=1,N
          XJDOTJ=XSCRT2(I,IX)/DENOM
          Y(I)=RES(I) + COEF(IX)*XJDOTJ
          X(I)=XJDOTJ
          D(I)=1.0
  120   CONTINUE
C
        NPLOTP=N
        NPLOTV=2
        GOTO9000
      ELSEIF(ICASPL.EQ.'PLEV')THEN
C
        CALL CATCHR(XMAT,XSCRT1,XSCRT2,Y2,Y3,ITEMP1,
     1              N,NUMVAR,N,NUMVAR,
     1              IBUGG3,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PRG2')THEN
          IF(N.GT.0)THEN
            DO201I=1,N
            WRITE(ICOUT,202)I,(XSCRT2(I,K),K=1,MIN(7,NUMVAR))
  202       FORMAT('I,XSCRT(I,K) = ',I8,7E12.5)
            CALL DPWRST('XXX','BUG ')
  201       CONTINUE
          ENDIF
        ENDIF
C
        DSUM1=0.0D0
        DO210I=1,N
          DSUM1=DSUM1 + DBLE(XSCRT2(I,IX))**2
  210   CONTINUE
        DENOM=REAL(DSUM1)
        DSUM1=0.0
        DO220I=1,N
          XJDOTJ=XSCRT2(I,IX)/DENOM
          XJDOTJ=XJDOTJ*XJDOTJ
          DSUM1=DSUM1 + DBLE(XJDOTJ)
  220   CONTINUE
        DENOM2=REAL(DSUM1)
        DO230I=1,N
          XJDOTJ=XSCRT2(I,IX)/DENOM
          XJDOTJ=XJDOTJ*XJDOTJ
          Y(I)=XJDOTJ/DENOM2
          X(I)=REAL(I)
          D(I)=1.0
  230   CONTINUE
C
        NPLOTP=N
        NPLOTV=2
        GOTO9000
      ELSEIF(ICASPL.EQ.'PRES')THEN
C
        DO420I=1,N
          Y(I)=RES(I) + COEF(IX)*XMAT(I,IX)
          X(I)=XMAT(I,IX)
          D(I)=1.0
  420   CONTINUE
C
        NPLOTP=N
        NPLOTV=2
        GOTO9000
      ELSEIF(ICASPL.EQ.'CCPR')THEN
C
        DO520I=1,N
          Y(I)=RES(I) + COEF(IX)*XMAT(I,IX)
          X(I)=XMAT(I,IX)
          D(I)=1.0
  520   CONTINUE
C
        DO530I=1,N
          Y(I+N)=COEF(IX)*XMAT(I,IX)
          X(I+N)=XMAT(I,IX)
          D(I+N)=2.0
  530   CONTINUE
C
        NPLOTP=2*N
        NPLOTV=2
        GOTO9000
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,410)ICASPL
  410   FORMAT('***** ERROR IN DPPRG2: PLOT TYPE ',A4,' NOT ',
     1         'RECOGNIZED.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'PRG2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPRG2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,IERROR,NUMVAR,NPLOTP,NPLOTV
 9012   FORMAT('ICASPL,IERROR,NUMVAR,NPLOTP,NPLOTV = ',2(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        DO9035I=1,NPLOTP
          WRITE(ICOUT,9036)I,Y(I),X(I),D(I)
 9036     FORMAT('I,Y(I),X(I),D(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9035   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPRES(IHARG,NUMARG,ISORSW,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE PRE-SORT SWITCH ISORSW.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--ISORSW  ('ON'  OR 'OFF')
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--NOVEMBER  1978.
C     UPDATED         --SEPTEMBER 1980.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 ISORSW
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)GOTO1199
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'SORT')GOTO1150
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'SORT')GOTO1110
      GOTO1199
C
 1110 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1160
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      GOTO1199
C
 1150 CONTINUE
      ISORSW='ON'
      GOTO1180
C
 1160 CONTINUE
      ISORSW='OFF'
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)ISORSW
 1181 FORMAT('THE PRE-SORT SWITCH HAS JUST BEEN TURNED ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPPRFI(ICOM,IANSLC,IWIDTH,IHARG,IHARG2,NUMARG,
     1                  IBUGS2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--SEND AN INPUT FILE TO A PRINTER.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2019/03
C     ORIGINAL VERSION--MARCH     2019.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IANSLC(*)
      CHARACTER*4 IHARG(*)
      CHARACTER*4 IHARG2(*)
      CHARACTER*4 IBUGS2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      INCLUDE 'DPCOPA.INC'
C
CCCCC CHARACTER*80 IFILE1
      CHARACTER (LEN=MAXFNC) :: IFILE1
      CHARACTER*12 ISTAT1
      CHARACTER*12 IFORM1
      CHARACTER*12 IACCE1
      CHARACTER*12 IPROT1
      CHARACTER*12 ICURS1
C
      CHARACTER*4 IFTYPE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IANSI
CCCCC CHARACTER*255 ICANS
      CHARACTER (LEN=MAXSTR) :: ICANS
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOF2.INC'
      INCLUDE 'DPCOZC.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPR'
      ISUBN2='FI  '
      IFOUND='YES'
      IERROR='NO'
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'PRFI')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPRFI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICOM,IBUGS2,ISUBRO,IERROR
   53   FORMAT('ICOM,IBUGS2,ISUBRO,IERROR = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,55)(IANSLC(I),I=1,MIN(80,IWIDTH))
   55     FORMAT('(IANSLC(I),I=1,IWIDTH) = ',80A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,61)IHARG(1),IHARG2(1),NUMARG
   61   FORMAT('IHARG(1),IHARG2(1),NUMARG = ',2A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **************************
C               **  STEP 11--           **
C               **  COPY OVER VARIABLES **
C               **************************
C
      ISTEPN='11'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'PRFI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOUNI1=ILISNU
      IFILE1=ILISNA
      ISTAT1=ILISST
      IFORM1=ILISFO
      IACCE1=ILISAC
      IPROT1=ILISPR
      ICURS1=ILISCS
C
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'PRFI')THEN
        WRITE(ICOUT,1181)IOUNI1
 1181   FORMAT('IOUNI1 = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1182)IFILE1(1:80)
 1182   FORMAT('IFILE1 = ',A80)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1193)ISTAT1,IFORM1,IACCE1,IPROT1,ICURS1
 1193   FORMAT('ISTAT1,IFORM1,IACCE1,IPROT1,ICURS1 = ',
     1         4(A12,2X),A12)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***********************************************
C               **  STEP 12--                                **
C               **  CHECK TO SEE IF THE PRINT FILE MAY EXIST **
C               ***********************************************
C
      ISTEPN='12'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'PRFI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ISTAT1.EQ.'NONE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1211)
 1211   FORMAT('***** ERROR IN PRINT FILE (DPPRFI)--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1212)
 1212   FORMAT('      THE DESIRED PRINTING CANNOT BE CARRIED OUT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1214)
 1214   FORMAT('      BECAUSE THE INTERNAL VARIABLE    ILISST ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1215)
 1215   FORMAT('      WHICH ALLOWS SUCH LISTING HAS BEEN SET TO ',
     1         '  NONE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1217)ISTAT1,ILISST
 1217   FORMAT('ISTAT1,ILISST = ',A12,2X,A12)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ***************************************
C               **  STEP 13--                        **
C               **  EXTRACT THE INPUT  FILE NAME.    **
C               ***************************************
C
      ISTEPN='13'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'PRFI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO1310I=1,MAXSTR
        IANSI=IANSLC(I)
        ICANS(I:I)=IANSI(1:1)
 1310 CONTINUE
C
      ISTART=1
      ISTOP=IWIDTH
      IWORD=2
      CALL DPEXWO(ICANS,ISTART,ISTOP,IWORD,
     1            ICOL1,ICOL2,IFILE1,NCFIL1,
     1            IBUGS2,ISUBRO,IERROR)
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'PRFI')THEN
        WRITE(ICOUT,1321)NCFIL1,IFILE1
 1321   FORMAT('NCFIL1,IFILE1 = ',I8,2X,A80)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NCFIL1.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1211)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1372)
 1372   FORMAT('      NO INPUT FILE WAS SPECIFIED.')
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C
C               *****************************************
C               **  STEP 2--                           **
C               **  IMPLEMENT OPERATING SYSTEM PRINT   **
C               *****************************************
C
      ISTEPN='2'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'PRFI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IFTYPE='ASCI'
      CALL PRINFI(IFILE1,IFTYPE,IBUGS2,ISUBRO,IERROR)
C
 9000 CONTINUE
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'PRFI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPRFI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPRFO(IHARG,NUMARG,IPRITY,IFOUND,IERROR)
C
C     PURPOSE--SET THE FORMAT/TYPE SWITCH FOR THE PRINTER.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG (AN INTEGER VARIABLE)
C     OUTPUT ARGUMENTS--IPRITY (A HOLLERITH VARIABLE)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--92/4
C     ORIGINAL VERSION--MARCH     1992.
C     UPDATED         --FEBRUARY  1993.  DEFAULT CHANGED TO POSTSCRIPT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IPRITY
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)GOTO1150
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'?')GOTO1160
      GOTO1170
C
 1150 CONTINUE
CCCCC THE FOLLOWING LINE WAS CHANGED FEBRUARY 1993
CCCCC IHOLD='ASCI'
      IHOLD='POST'
      GOTO1180
C
 1160 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1169
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1161)IPRITY
 1161 FORMAT('THE CURRENT FORMAT FOR THE PRINTER IS ',A4)
      CALL DPWRST('XXX','BUG ')
 1169 CONTINUE
      IFOUND='YES'
      GOTO1199
C
 1170 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      IPRITY=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)IPRITY
 1181 FORMAT('THE PRINTER FORMAT SWITCH HAS JUST ',
     1'BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPPRIF(ILAB,NUMWDL,IFUNC,NCF,IBUGA3)
C
C     PURPOSE--PRINT OUT A FUNCTION IN A NEAT FORM.
C     NOTE--THIS SUBROUTINE IS NECESSITATED BECAUSE
C           SOME STORED WORDS HAVE 1 CHARACTER (E.G, A, B, C, ETC.)
C           WHILE OTHERS HAVE SEVERAL CHARACTERS PACKED INTO
C           A SINGLE WORD (E.G., SQRT, ARCT, ETC.).
C     NOTE--ILAB(.) AND IFUNC(.) ARE HOLLERITH A4 VECTORS.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--JANUARY   1979.
C     UPDATED         --JULY      1981.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ILAB
      CHARACTER*4 IFUNC
      CHARACTER*4 IBUGA3
C
      CHARACTER*4 IBLANK
      CHARACTER*4 IBUF
      CHARACTER*4 ILAST
      CHARACTER*4 IB
      CHARACTER*4 ICH
C
C---------------------------------------------------------------------
C
      DIMENSION ILAB(*)
      DIMENSION IFUNC(*)
C
      DIMENSION IB(140)
      DIMENSION ICH(10)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----DATA STATEMENTS-------------------------------------------------
C
      DATA MAXCPL/128/
      DATA NUMASC/4/
C
C-----START POINT-----------------------------------------------------
C
      ILAST='UNKN'
C
C               *******************************************************
C               **  DECOMPOSE EACH WORD INTO INDIVIDUAL CHARACTERS.  **
C               **  PRINT OUT ONLY THE LEADING NON-BLANK CHARACTERS. **
C               *******************************************************
C
      IBLANK=' '
C
      IF(IBUGA3.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPPRIF--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,52)NUMWDL
   52 FORMAT('NUMWDL = ',I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)(ILAB(I),I=1,NUMWDL)
   53 FORMAT('ILAB(.) = ',30A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,55)NCF
   55 FORMAT('NCF = ',I8)
      CALL DPWRST('XXX','BUG ')
CCCCC FEBRUARY 1995.  CHECK FOR NCF > 30.
      NPRINT=NCF
      IF(NPRINT.GT.30)NPRINT=30
CCCCC IF(NCF.GE.1)WRITE(ICOUT,56)(IFUNC(I),I=1,NCF)
      IF(NPRINT.GE.1)WRITE(ICOUT,56)(IFUNC(I),I=1,NPRINT)
   56 FORMAT('IFUNC(.) = ',30A4)
      IF(NCF.GE.1)CALL DPWRST('XXX','BUG ')
   90 CONTINUE
C
      NUMCPL=MAXCPL-NUMWDL*NUMASC
C
      L=0
      IL=0
      ICF=0
      IF(NCF.LE.0)ILAST='YES'
      IF(NCF.GE.1)ILAST='NO'
      IBUF='NO'
  100 CONTINUE
      ICF=ICF+1
      IF(IBUGA3.EQ.'ON')WRITE(ICOUT,101)ICF,L,IBUF,ILAST,IL
  101 FORMAT('ICF,L,IBUF,ILAST,IL = ',I8,I8,2X,A4,2X,A4,I8)
      IF(IBUGA3.EQ.'ON')CALL DPWRST('XXX','BUG ')
      IF(ICF.GT.NCF)GOTO300
      IF(ICF.EQ.NCF)ILAST='YES'
C
      CALL DPXH1H(IFUNC(ICF),ICH,IEND,IBUGA3)
C
      ITEST=L+IEND
      IF(ITEST.LE.NUMCPL)GOTO200
      IBUF='YES'
      GOTO300
C
  200 CONTINUE
      DO400I=1,IEND
      L=L+1
      IB(L)=ICH(I)
  400 CONTINUE
      GOTO100
C
  300 CONTINUE
      NUMCTL=L
      L=0
      IL=IL+1
C
      IF(NUMWDL.EQ.0)GOTO600
      IF(NUMWDL.EQ.1)GOTO610
      IF(NUMWDL.EQ.2)GOTO620
      IF(NUMWDL.EQ.3)GOTO630
      IF(NUMWDL.EQ.4)GOTO640
      IF(NUMWDL.EQ.5)GOTO650
      IF(NUMWDL.EQ.6)GOTO660
      IF(NUMWDL.EQ.7)GOTO670
      IF(NUMWDL.EQ.8)GOTO680
      IF(NUMWDL.GE.9)GOTO690
C
  600 CONTINUE
      IF(NUMCTL.LE.0)WRITE(ICOUT,606)
      IF(NUMCTL.LE.0)CALL DPWRST('XXX','BUG ')
      IF(NUMCTL.LE.0)GOTO609
      IF(IL.EQ.1)WRITE(ICOUT,606)(IB(K),K=1,MIN(NUMCTL,128))
      IF(IL.EQ.1)CALL DPWRST('XXX','BUG ')
      IF(IL.GE.2)WRITE(ICOUT,606)(IB(K),K=1,MIN(NUMCTL,128))
  606 FORMAT(128A1)
      IF(IL.GE.2)CALL DPWRST('XXX','BUG ')
  609 CONTINUE
      GOTO700
C
  610 CONTINUE
      IF(NUMCTL.LE.0)WRITE(ICOUT,616)(ILAB(J),J=1,NUMWDL)
      IF(NUMCTL.LE.0)CALL DPWRST('XXX','BUG ')
      IF(NUMCTL.LE.0)GOTO619
      IF(IL.EQ.1)WRITE(ICOUT,616)(ILAB(J),J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,124))
      IF(IL.EQ.1)CALL DPWRST('XXX','BUG ')
      IF(IL.GE.2)WRITE(ICOUT,616)(IBLANK ,J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,128))
  616 FORMAT(A4,124A1)
      IF(IL.GE.2)CALL DPWRST('XXX','BUG ')
  619 CONTINUE
      GOTO700
C
  620 CONTINUE
      IF(NUMCTL.LE.0)WRITE(ICOUT,626)(ILAB(J),J=1,NUMWDL)
      IF(NUMCTL.LE.0)CALL DPWRST('XXX','BUG ')
      IF(NUMCTL.LE.0)GOTO629
      IF(IL.EQ.1)WRITE(ICOUT,626)(ILAB(J),J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,120))
      IF(IL.EQ.1)CALL DPWRST('XXX','BUG ')
      IF(IL.GE.2)WRITE(ICOUT,626)(IBLANK ,J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,120))
  626 FORMAT(2A4,120A1)
      IF(IL.GE.2)CALL DPWRST('XXX','BUG ')
  629 CONTINUE
      GOTO700
C
  630 CONTINUE
      IF(NUMCTL.LE.0)WRITE(ICOUT,636)(ILAB(J),J=1,NUMWDL)
      IF(NUMCTL.LE.0)CALL DPWRST('XXX','BUG ')
      IF(NUMCTL.LE.0)GOTO639
      IF(IL.EQ.1)WRITE(ICOUT,636)(ILAB(J),J=1,NUMWDL),
     1(IB(K),K=1,MIN(NUMCTL,116))
      IF(IL.EQ.1)CALL DPWRST('XXX','BUG ')
      IF(IL.GE.2)WRITE(ICOUT,636)(IBLANK ,J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,116))
  636 FORMAT(3A4,116A1)
      IF(IL.GE.2)CALL DPWRST('XXX','BUG ')
  639 CONTINUE
      GOTO700
C
  640 CONTINUE
      IF(NUMCTL.LE.0)WRITE(ICOUT,646)(ILAB(J),J=1,NUMWDL)
      IF(NUMCTL.LE.0)CALL DPWRST('XXX','BUG ')
      IF(NUMCTL.LE.0)GOTO649
      IF(IL.EQ.1)WRITE(ICOUT,646)(ILAB(J),J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,112))
      IF(IL.EQ.1)CALL DPWRST('XXX','BUG ')
      IF(IL.GE.2)WRITE(ICOUT,646)(IBLANK ,J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,112))
  646 FORMAT(4A4,112A1)
      IF(IL.GE.2)CALL DPWRST('XXX','BUG ')
  649 CONTINUE
      GOTO700
C
  650 CONTINUE
      IF(NUMCTL.LE.0)WRITE(ICOUT,656)(ILAB(J),J=1,NUMWDL)
      IF(NUMCTL.LE.0)CALL DPWRST('XXX','BUG ')
      IF(NUMCTL.LE.0)GOTO659
      IF(IL.EQ.1)WRITE(ICOUT,656)(ILAB(J),J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,108))
      IF(IL.EQ.1)CALL DPWRST('XXX','BUG ')
      IF(IL.GE.2)WRITE(ICOUT,656)(IBLANK ,J=1,NUMWDL),
     1          (IB(K),K=1,MIN(NUMCTL,108))
  656 FORMAT(5A4,108A1)
      IF(IL.GE.2)CALL DPWRST('XXX','BUG ')
  659 CONTINUE
      GOTO700
C
  660 CONTINUE
      IF(NUMCTL.LE.0)WRITE(ICOUT,666)(ILAB(J),J=1,NUMWDL)
      IF(NUMCTL.LE.0)CALL DPWRST('XXX','BUG ')
      IF(NUMCTL.LE.0)GOTO669
      IF(IL.EQ.1)WRITE(ICOUT,666)(ILAB(J),J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,104))
      IF(IL.EQ.1)CALL DPWRST('XXX','BUG ')
      IF(IL.GE.2)WRITE(ICOUT,666)(IBLANK ,J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,104))
  666 FORMAT(6A4,104A1)
      IF(IL.GE.2)CALL DPWRST('XXX','BUG ')
  669 CONTINUE
      GOTO700
C
  670 CONTINUE
      IF(NUMCTL.LE.0)WRITE(ICOUT,676)(ILAB(J),J=1,NUMWDL)
      IF(NUMCTL.LE.0)CALL DPWRST('XXX','BUG ')
      IF(NUMCTL.LE.0)GOTO679
      IF(IL.EQ.1)WRITE(ICOUT,676)(ILAB(J),J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,100))
      IF(IL.EQ.1)CALL DPWRST('XXX','BUG ')
      IF(IL.GE.2)WRITE(ICOUT,676)(IBLANK ,J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,100))
  676 FORMAT(7A4,100A1)
      IF(IL.GE.2)CALL DPWRST('XXX','BUG ')
  679 CONTINUE
      GOTO700
C
  680 CONTINUE
      IF(NUMCTL.LE.0)WRITE(ICOUT,686)(ILAB(J),J=1,NUMWDL)
      IF(NUMCTL.LE.0)CALL DPWRST('XXX','BUG ')
      IF(NUMCTL.LE.0)GOTO689
      IF(IL.EQ.1)WRITE(ICOUT,686)(ILAB(J),J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,96))
      IF(IL.EQ.1)CALL DPWRST('XXX','BUG ')
      IF(IL.GE.2)WRITE(ICOUT,686)(IBLANK ,J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,96))
  686 FORMAT(8A4,96A1)
      IF(IL.GE.2)CALL DPWRST('XXX','BUG ')
  689 CONTINUE
      GOTO700
C
  690 CONTINUE
      IF(NUMCTL.LE.0)WRITE(ICOUT,696)(ILAB(J),J=1,NUMWDL)
      IF(NUMCTL.LE.0)CALL DPWRST('XXX','BUG ')
      IF(NUMCTL.LE.0)GOTO699
      IF(IL.EQ.1)WRITE(ICOUT,696)(ILAB(J),J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,92))
      IF(IL.EQ.1)CALL DPWRST('XXX','BUG ')
      IF(IL.GE.2)WRITE(ICOUT,696)(IBLANK ,J=1,NUMWDL),
     1           (IB(K),K=1,MIN(NUMCTL,92))
  696 FORMAT(9A4,92A1)
      IF(IL.GE.2)CALL DPWRST('XXX','BUG ')
  699 CONTINUE
      GOTO700
C
  700 CONTINUE
      IF(IL.LT.100)GOTO710
      WRITE(ICOUT,701)
  701 FORMAT('***** INTERNAL ERROR IN DPFUIP--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,702)
  702 FORMAT('INFINITE LOOP--IL = 100')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,703)NCF,L,IBUF,ILAST,IL
  703 FORMAT('NCF,L,IBUF,ILAST,IL = ',I8,I8,2X,A4,2X,A4,I8)
      CALL DPWRST('XXX','BUG ')
      GOTO9000
  710 CONTINUE
      IF(IBUF.EQ.'YES')GOTO800
      GOTO850
C
  800 CONTINUE
      DO810I=1,IEND
      L=L+1
      IB(L)=ICH(I)
  810 CONTINUE
      IBUF='NO'
C
      IF(ILAST.EQ.'YES')GOTO300
      IF(ILAST.EQ.'NO')GOTO100
C
  850 CONTINUE
      IF(ILAST.EQ.'YES')GOTO9000
      IF(ILAST.EQ.'NO')GOTO100
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'OFF')GOTO9090
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPPRIF--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)ICF,L,IBUF,ILAST,IL,NUMCTL
 9012 FORMAT('ICF,L,IBUF,ILAST,IL,NUMCTL = ',2I8,2X,A4,2X,A4,2I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)(IB(I),I=1,MIN(NUMCTL,120))
 9013 FORMAT('IB(.) = ',120A1)
      CALL DPWRST('XXX','BUG ')
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPPRLI(XTEMP1,XTEMP2,MAXNXT,ICASAN,
     1                  ICAPSW,IFORSW,IMULT,IREPL,
     1                  ISUBRO,IBUGA2,IBUGA3,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--GENERATE ONE OF THE FOLLOWING:
C
C                 1) PREDICTION LIMITS
C
C                    GIVEN A SET OF ORIGINAL OBSERVATIONS, THIS
C                    GENERATES A CONFIDENCE INTERVAL FOR THE MEAN
C                    OF ONE OR MORE NEW OBSERVATIONS.
C
C                 2) PREDICTION BOUNDS
C
C                    GIVEN A SET OF ORIGINAL OBSERVATIONS, THIS
C                    GENERATES AN INTERVAL THAT WILL CONTAIN ALL
C                    (WITH A GIVEN PROBABILITY LEVEL) OF ONE OR MORE
C                    NEW OBSERVATIONS.
C
C                 3) PREDICTION LIMITS FOR THE STANDARD DEVIATION
C
C                    GIVEN A SET OF ORIGINAL OBSERVATIONS, THIS
C                    GENERATES A CONFIDENCE INTERVAL FOR THE SD
C                    OF ONE OR MORE NEW OBSERVATIONS.
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2013/4
C     ORIGINAL VERSION--APRIL     2013.
C     UPDATED         --AUGUST    2019. ADD CTL999,CTU999
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASA2
      CHARACTER*4 ICASA3
      CHARACTER*4 ICASA4
      CHARACTER*4 ICASA5
      CHARACTER*4 ICASE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IFLAGU
C
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*4 IREPL
      CHARACTER*4 IMULT
      CHARACTER*4 ICTMP0
      CHARACTER*4 ICTMP1
      CHARACTER*4 ICTMP2
      CHARACTER*4 ICTMP3
      CHARACTER*4 ICTMP4
C
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      CHARACTER*4 IVARID(MAXSPN)
      CHARACTER*4 IVARI2(MAXSPN)
      REAL PVAR(MAXSPN)
      REAL PID(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION TEMP4(MAXOBV)
      DIMENSION TEMP5(MAXOBV)
C
      DIMENSION XDESGN(MAXOBV,6)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
      DIMENSION XIDTE3(MAXOBV)
      DIMENSION XIDTE4(MAXOBV)
      DIMENSION XIDTE5(MAXOBV)
      DIMENSION XIDTE6(MAXOBV)
C
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGARB2),XIDTE2(1))
      EQUIVALENCE (GARBAG(IGARB3),XIDTE3(1))
      EQUIVALENCE (GARBAG(IGARB4),XIDTE4(1))
      EQUIVALENCE (GARBAG(IGARB5),XIDTE5(1))
      EQUIVALENCE (GARBAG(IGARB6),XIDTE6(1))
      EQUIVALENCE (GARBAG(IGARB7),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB8),TEMP2(1))
      EQUIVALENCE (GARBAG(IGARB9),TEMP3(1))
      EQUIVALENCE (GARBAG(IGAR10),TEMP4(1))
      EQUIVALENCE (GARBAG(JGAR11),TEMP5(1))
      EQUIVALENCE (GARBAG(JGAR12),XDESGN(1,1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPPR'
      ISUBN2='LI  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IFOUND='YES'
      IERROR='NO'
C
C               ****************************************
C               **  TREAT THE PREDICTION LIMITS CASE  **
C               ****************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PRLI')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPPRLI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ,ISUBRO
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)MAXNXT,ICASAN,MAXV2
   55   FORMAT('MAXNXT,ICASAN,MAXV2 = ',I8,2X,A4,2X,I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************
C               **  STEP 1--                   **
C               **  EXTRACT THE COMMAND        **
C               *********************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRLI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     THE FOLLOWING COMMANDS ARE ACCEPTED:
C
C         PREDICTION LIMITS Y               (TWO SIDED)
C         LOWER PREDICTION LIMITS Y         (ONE SIDED)
C         UPPER PREDICTION LIMITS Y         (ONE SIDED)
C
C         PREDICTION BOUNDS Y               (TWO SIDED)
C         LOWER PREDICTION BOUNDS Y         (ONE SIDED)
C         UPPER PREDICTION BOUNDS Y         (ONE SIDED)
C
C         STANDARD DEVIATION PREDICTION LIMITS Y        (TWO SIDED)
C         LOWER STANDARD DEVIATION PREDICTION LIMITS Y  (ONE SIDED)
C         UPPER STANDARD DEVIATION PREDICTION LIMITS Y  (ONE SIDED)
C
C
C     IN ADDITION, CHECK FOR THE "MULTIPLE" AND "REPLICATION" OPTIONS.
C
C     CHECK FOR "LOGNORMAL" AND "BOX-COX" OPTIONS.
C
      ILASTZ=9999
      IFOUND='NO'
      ICASAN='LIMI'
      ICASA2='UPPE'
      ICASA3='RAW'
      ICASA4='TWOS'
      ICASA5='NORM'
C
      DO100I=0,NUMARG-1
C
        ICTMP0='XXXX'
        IF(I.EQ.0)THEN
          ICTMP1=ICOM
          ICTMP2=IHARG(I+1)
          ICTMP3=IHARG(I+2)
          ICTMP4=IHARG(I+3)
        ELSE
          IF(I.GE.2)ICTMP0=IHARG(I-1)
          ICTMP1=IHARG(I)
          ICTMP2=IHARG(I+1)
          ICTMP3=IHARG(I+2)
          ICTMP4=IHARG(I+3)
        ENDIF
C
        IF(ICTMP1.EQ.'=   ')GOTO9000
        IF(ICTMP1.EQ.'PRED' .AND. ICTMP2.EQ.'LIMI' .AND.
     1     ICTMP0.NE.'SD  ' .AND. ICTMP0.NE.'DEVI')THEN
          IFOUND='YES'
          ILASTZ=I+1
          ICASAN='LIMI'
          GOTO109
        ELSEIF(ICTMP1.EQ.'PRED' .AND. ICTMP2.EQ.'INTE' .AND.
     1     ICTMP0.NE.'SD  ' .AND. ICTMP0.NE.'DEVI')THEN
          IFOUND='YES'
          ILASTZ=I+1
          ICASAN='LIMI'
          GOTO109
        ELSEIF(ICTMP1.EQ.'PRED' .AND. ICTMP2.EQ.'BOUN')THEN
          IFOUND='YES'
          ILASTZ=I+1
          ICASAN='BOUN'
          GOTO109
        ELSEIF(ICTMP1.EQ.'SD  ' .AND. ICTMP2.EQ.'PRED' .AND.
     1         ICTMP3.EQ.'LIMI')THEN
          IFOUND='YES'
          ILASTZ=I+2
          ICASAN='SDLI'
          GOTO109
        ELSEIF(ICTMP1.EQ.'SD  ' .AND. ICTMP2.EQ.'PRED' .AND.
     1         ICTMP3.EQ.'INTE')THEN
          IFOUND='YES'
          ILASTZ=I+2
          ICASAN='SDLI'
          GOTO109
        ELSEIF(ICTMP1.EQ.'STAN' .AND. ICTMP2.EQ.'DEVI' .AND.
     1         ICTMP3.EQ.'PRED' .AND. ICTMP4.EQ.'LIMI')THEN
          IFOUND='YES'
          ILASTZ=I+3
          ICASAN='SDLI'
          GOTO109
        ELSEIF(ICTMP1.EQ.'STAN' .AND. ICTMP2.EQ.'DEVI' .AND.
     1         ICTMP3.EQ.'PRED' .AND. ICTMP4.EQ.'INTE')THEN
          IFOUND='YES'
          ILASTZ=I+3
          ICASAN='SDLI'
          GOTO109
        ELSEIF(ICTMP1.EQ.'LOWE')THEN
          ICASA4='ONES'
          ICASA2='LOWE'
        ELSEIF(ICTMP1.EQ.'UPPE')THEN
          ICASA4='ONES'
          ICASA2='UPPE'
        ELSEIF(ICTMP1.EQ.'ONE ' .AND. ICTMP2.EQ.'SIDE')THEN
          ICASA4='ONES'
        ELSEIF(ICTMP1.EQ.'REPL')THEN
          IREPL='ON'
        ELSEIF(ICTMP1.EQ.'MULT')THEN
          IMULT='ON'
        ELSEIF(ICTMP1.EQ.'LOGN')THEN
          ICASA5='LNPL'
        ELSEIF(ICTMP1.EQ.'BOXC')THEN
          ICASA5='BCPL'
        ELSEIF(ICTMP1.EQ.'BOX ' .AND. ICTMP2.EQ.'COX ')THEN
          ICASA5='BCPL'
        ENDIF
  100 CONTINUE
  109 CONTINUE
C
      IF(IFOUND.EQ.'NO')GOTO9000
      ISHIFT=ILASTZ
      CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1            IBUGA2,IERROR)
C
      IF(IMULT.EQ.'ON')THEN
        IF(IREPL.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
  101     FORMAT('***** ERROR IN PREDICTION LIMITS--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,102)
  102     FORMAT('      YOU CANNOT SPECIFY BOTH "MULTIPLE" AND ',
     1           '"REPLICATION" FOR THE PREDICTION LIMITS COMMAND.')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ENDIF
C
C               *********************************
C               **  STEP 2--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRLI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='PREDICTION LIMITS'
      MAXNA=100
      MINNVA=1
      MAXNVA=100
      MINNA=1
      IFLAGE=1
      IFLAGM=1
      IF(IREPL.EQ.'ON')THEN
        MAXNVA=7
        IFLAGM=0
      ELSE
        MAXNVA=30
        IFLAGE=0
      ENDIF
      MINN2=4
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(NUMVAR.GT.1 .AND. IREPL.EQ.'OFF')IMULT='ON'
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRLI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,181)
  181   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,182)NQ,NUMVAR,IMULT,IREPL
  182   FORMAT('NQ,NUMVAR,IMULT,IREPL = ',2I8,2(2X,A4))
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO185I=1,NUMVAR
            WRITE(ICOUT,187)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  187       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  185     CONTINUE
        ENDIF
      ENDIF
C
C               ***********************************************
C               **  STEP 2--                                 **
C               **  DETERMINE:                               **
C               **  1) NUMBER OF REPLICATION VARIABLES (0-6) **
C               **  2) NUMBER OF RESPONSE    VARIABLES (>= 1)**
C               ***********************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRLI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NRESP=0
      NREPL=0
C
      IF(IMULT.EQ.'ON')THEN
        NRESP=NUMVAR
      ELSEIF(IREPL.EQ.'ON')THEN
        NRESP=1
        NREPL=NUMVAR-NRESP
        IF(NREPL.LT.1 .OR. NREPL.GT.6)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,211)
  211     FORMAT('      FOR THE REPLICATION CASE, THE NUMBER OF ',
     1           'REPLICATION VARIABLES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,212)
  212     FORMAT('      MUST BE BETWEEN ONE AND SIX.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,213)NREPL
  213     FORMAT('      THE NUMBER OF REPLICATION VARIABLES = ',I5)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
      ELSE
        NRESP=1
      ENDIF
C
      IH='NNEW'
      IH2='    '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1            IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1            ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCV,IERROR)
      IF(IERROR.EQ.'YES')THEN
        NNEW=1
      ELSE
        NNEW=INT(VALUE(ILOCV)+0.5)
        IF(NNEW.LT.1)NNEW=1
      ENDIF
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRLI')THEN
        WRITE(ICOUT,221)NRESP,NREPL,NNEW
  221   FORMAT('NRESP,NREPL,NNEW = ',3I5)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ******************************************************
C               **  STEP 3--                                        **
C               **  GENERATE THE PREDICTION LIMITS FOR THE VARIOUS  **
C               **  CASES                                           **
C               ******************************************************
C
      ISTEPN='3'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRLI')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C               *****************************************
C               **  STEP 3A--                          **
C               **  CASE 1: NO REPLICATION             **
C               *****************************************
C
      IF(NREPL.EQ.0)THEN
        ISTEPN='3A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRLI')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C       LOOP THROUGH EACH OF THE RESPONSE VARIABLES
C
        NCURVE=0
        DO410IRESP=1,NRESP
          NCURVE=NCURVE+1
C
          IINDX=ICOLR(IRESP)
          PID(1)=CPUMIN
          IVARID(1)=IVARN1(IRESP)
          IVARI2(1)=IVARN2(IRESP)
C
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRLI')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,411)IRESP,NCURVE
  411       FORMAT('IRESP,NCURVE = ',2I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          ICOL=IRESP
          NUMVA2=1
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y,XTEMP1,XTEMP2,NLOCAL,NLOCA2,NLOCA3,ICASE,
     1                IBUGA3,ISUBRO,IFOUND,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
C         *****************************************************
C         **  STEP 4B--                                      **
C         *****************************************************
C
          ISTEPN='4B'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRLI')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PRLI')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,422)
  422       FORMAT('***** FROM THE MIDDLE  OF DPPRLI--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,423)ICASAN,NUMVAR,NLOCAL,IRESP
  423       FORMAT('ICASAN,NUMVAR,NLOCAL,IRESP = ',A4,3I8)
            CALL DPWRST('XXX','BUG ')
            IF(NLOCAL.GE.1)THEN
              DO425I=1,NLOCAL
                WRITE(ICOUT,426)I,Y(I)
  426           FORMAT('I,Y(I) = ',I8,F12.5)
                CALL DPWRST('XXX','BUG ')
  425         CONTINUE
            ENDIF
          ENDIF
C
          CALL DPPRL2(Y,NLOCAL,NNEW,ICASAN,ICASA2,ICASA3,ICASA4,ICASA5,
     1                TEMP3,TEMP4,TEMP5,
     1                PID,IVARID,IVARI2,NREPL,
     1                CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                CTL999,CTU999,
     1                ICAPSW,ICAPTY,IFORSW,
     1                ISUBRO,IBUGA3,IERROR)
C
          IFLAGU='FILE'
          IF(NRESP.EQ.1)IFLAGU='ON'
          IFRST=.FALSE.
          ILAST=.FALSE.
          IF(IRESP.EQ.1)IFRST=.TRUE.
          IF(IRESP.EQ.NRESP)ILAST=.TRUE.
          CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                CTL999,CTU999,
     1                IFLAGU,IFRST,ILAST,ICASAN,
     1                IBUGA2,IBUGA3,ISUBRO,IERROR)
C
  410   CONTINUE
C
C               ****************************************************
C               **  STEP 5A--                                     **
C               **  CASE 3: ONE OR MORE REPLICATION VARIABLES.    **
C               **          FOR THIS CASE, ALL VARIABLES MUST     **
C               **          HAVE THE SAME LENGTH.                 **
C               ****************************************************
C
      ELSEIF(IREPL.EQ.'ON')THEN
        ISTEPN='5A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRLI')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        J=0
        IMAX=NRIGHT(1)
        IF(NQ.LT.NRIGHT(1))IMAX=NQ
        DO510I=1,IMAX
          IF(ISUB(I).EQ.0)GOTO510
          J=J+1
C
C         RESPONSE VARIABLE IN Y
C
          ICOLC=1
          IJ=MAXN*(ICOLR(ICOLC)-1)+I
          IF(ICOLR(ICOLC).LE.MAXCOL)Y(J)=V(IJ)
          IF(ICOLR(ICOLC).EQ.MAXCP1)Y(J)=PRED(I)
          IF(ICOLR(ICOLC).EQ.MAXCP2)Y(J)=RES(I)
          IF(ICOLR(ICOLC).EQ.MAXCP3)Y(J)=YPLOT(I)
          IF(ICOLR(ICOLC).EQ.MAXCP4)Y(J)=XPLOT(I)
          IF(ICOLR(ICOLC).EQ.MAXCP5)Y(J)=X2PLOT(I)
          IF(ICOLR(ICOLC).EQ.MAXCP6)Y(J)=TAGPLO(I)
C
          IF(NREPL.GE.1)THEN
            DO520IR=1,MIN(NREPL,6)
              ICOLC=ICOLC+1
              ICOLT=ICOLR(ICOLC)
              IJ=MAXN*(ICOLT-1)+I
              IF(ICOLT.LE.MAXCOL)XDESGN(J,IR)=V(IJ)
              IF(ICOLT.EQ.MAXCP1)XDESGN(J,IR)=PRED(I)
              IF(ICOLT.EQ.MAXCP2)XDESGN(J,IR)=RES(I)
              IF(ICOLT.EQ.MAXCP3)XDESGN(J,IR)=YPLOT(I)
              IF(ICOLT.EQ.MAXCP4)XDESGN(J,IR)=XPLOT(I)
              IF(ICOLT.EQ.MAXCP5)XDESGN(J,IR)=X2PLOT(I)
              IF(ICOLT.EQ.MAXCP6)XDESGN(J,IR)=TAGPLO(I)
  520       CONTINUE
          ENDIF
C
  510   CONTINUE
        NLOCAL=J
C
        ISTEPN='5B'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRLI')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        PID(1)=CPUMIN
        IVARID(1)=IVARN1(1)
        IVARI2(1)=IVARN2(1)
        IADD=1
        DO540II=1,NREPL
          IVARID(II+IADD)=IVARN1(II+IADD)
          IVARI2(II+IADD)=IVARN2(II+IADD)
  540   CONTINUE
C
C       *****************************************************
C       **  STEP 5C--                                      **
C       **                                                 **
C       **  FOR THIS CASE, WE NEED TO LOOP THROUGH THE     **
C       **  VARIOUS REPLICATIONS.                          **
C       *****************************************************
C
        ISTEPN='5C'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PRLI')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PRLI')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,541)
  541     FORMAT('***** FROM THE MIDDLE  OF DPPRLI--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,542)ICASAN,NUMVAR,NLOCAL,NLOCA2,NREPL
  542     FORMAT('ICASAN,NUMVAR,NLOCAL,NLOCA2,NREPL = ',A4,2X,4I8)
          CALL DPWRST('XXX','BUG ')
          IF(NLOCAL.GE.1)THEN
            DO545I=1,NLOCAL
              WRITE(ICOUT,546)I,Y(I),X(I),XDESGN(I,1),XDESGN(I,2)
  546         FORMAT('I,Y(I),X(I),XDESGN(I,1),XDESGN(I,2) = ',
     1               I8,4F12.5)
              CALL DPWRST('XXX','BUG ')
  545       CONTINUE
          ENDIF
        ENDIF
C
C       *****************************************************
C       **  STEP 5C--                                      **
C       **  FIND THE DISTINCT VALUES IN EACH OF THE        **
C       **  REPLICATION VARIABLES.                         **
C       *****************************************************
C
        CALL DPPP5(XDESGN(1,1),XDESGN(1,2),XDESGN(1,3),
     1             XDESGN(1,4),XDESGN(1,5),XDESGN(1,6),
     1             NREPL,NLOCAL,MAXOBV,
     1             XIDTEM,XIDTE2,XIDTE3,XIDTE4,XIDTE5,XIDTE6,
     1             XTEMP1,XTEMP2,
     1             NUMSE1,NUMSE2,NUMSE3,NUMSE4,NUMSE5,NUMSE6,
     1             IBUGA3,ISUBRO,IERROR)
C
C       *****************************************************
C       **  STEP 5D--                                      **
C       **  NOW LOOP THROUGH THE VARIOUS REPLICATIONS      **
C       *****************************************************
C
        NPLOTP=0
        NCURVE=0
        IF(NREPL.EQ.1)THEN
          J=0
          DO1110ISET1=1,NUMSE1
            K=0
            PID(IADD+1)=XIDTEM(ISET1)
            DO1130I=1,NLOCAL
              IF(XIDTEM(ISET1).EQ.XDESGN(I,1))THEN
                K=K+1
                TEMP1(K)=Y(I)
                TEMP2(K)=X(I)
              ENDIF
 1130       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPPRL2(TEMP1,NTEMP,NNEW,ICASAN,ICASA2,ICASA3,ICASA4,
     1                    ICASA5,
     1                    TEMP3,TEMP4,TEMP5,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                    CTL999,CTU999,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    ISUBRO,IBUGA3,IERROR)
            ENDIF
C
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NUMSE1)ILAST=.TRUE.
            CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1110     CONTINUE
        ELSEIF(NREPL.EQ.2)THEN
          J=0
          NTOT=NUMSE1*NUMSE2
          DO1210ISET1=1,NUMSE1
          DO1220ISET2=1,NUMSE2
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            DO1290I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
                TEMP2(K)=X(I)
              ENDIF
 1290       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            NPLOT1=NPLOTP
            IF(NTEMP.GT.0)THEN
              CALL DPPRL2(TEMP1,NTEMP,NNEW,ICASAN,ICASA2,ICASA3,ICASA4,
     1                    ICASA5,
     1                    TEMP3,TEMP4,TEMP5,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                    CTL999,CTU999,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    ISUBRO,IBUGA3,IERROR)
            ENDIF
            NPLOT2=NPLOTP
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1220     CONTINUE
 1210     CONTINUE
        ELSEIF(NREPL.EQ.3)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3
          DO1310ISET1=1,NUMSE1
          DO1320ISET2=1,NUMSE2
          DO1330ISET3=1,NUMSE3
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            PID(3+IADD)=XIDTE3(ISET3)
            DO1390I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
                TEMP2(K)=X(I)
              ENDIF
 1390       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPPRL2(TEMP1,NTEMP,NNEW,ICASAN,ICASA2,ICASA3,ICASA4,
     1                    ICASA5,
     1                    TEMP3,TEMP4,TEMP5,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                    CTL999,CTU999,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    ISUBRO,IBUGA3,IERROR)
            ENDIF
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1330     CONTINUE
 1320     CONTINUE
 1310     CONTINUE
        ELSEIF(NREPL.EQ.4)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4
          DO1410ISET1=1,NUMSE1
          DO1420ISET2=1,NUMSE2
          DO1430ISET3=1,NUMSE3
          DO1440ISET4=1,NUMSE4
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            PID(3+IADD)=XIDTE3(ISET3)
            PID(4+IADD)=XIDTE4(ISET4)
            DO1490I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
                TEMP2(K)=X(I)
              ENDIF
 1490       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPPRL2(TEMP1,NTEMP,NNEW,ICASAN,ICASA2,ICASA3,ICASA4,
     1                    ICASA5,
     1                    TEMP3,TEMP4,TEMP5,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                    CTL999,CTU999,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    ISUBRO,IBUGA3,IERROR)
            ENDIF
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1440     CONTINUE
 1430     CONTINUE
 1420     CONTINUE
 1410     CONTINUE
        ELSEIF(NREPL.EQ.5)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5
          DO1510ISET1=1,NUMSE1
          DO1520ISET2=1,NUMSE2
          DO1530ISET3=1,NUMSE3
          DO1540ISET4=1,NUMSE4
          DO1550ISET5=1,NUMSE5
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            PID(3+IADD)=XIDTE3(ISET3)
            PID(4+IADD)=XIDTE4(ISET4)
            PID(5+IADD)=XIDTE5(ISET4)
            DO1590I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
                TEMP2(K)=X(I)
              ENDIF
 1590       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPPRL2(TEMP1,NTEMP,NNEW,ICASAN,ICASA2,ICASA3,ICASA4,
     1                    ICASA5,
     1                    TEMP3,TEMP4,TEMP5,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                    CTL999,CTU999,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    ISUBRO,IBUGA3,IERROR)
            ENDIF
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1550     CONTINUE
 1540     CONTINUE
 1530     CONTINUE
 1520     CONTINUE
 1510     CONTINUE
        ELSEIF(NREPL.EQ.6)THEN
          J=0
          NTOT=NUMSE1*NUMSE2*NUMSE3*NUMSE4*NUMSE5*NUMSE6
          DO1610ISET1=1,NUMSE1
          DO1620ISET2=1,NUMSE2
          DO1630ISET3=1,NUMSE3
          DO1640ISET4=1,NUMSE4
          DO1650ISET5=1,NUMSE5
          DO1660ISET6=1,NUMSE6
            K=0
            PID(1+IADD)=XIDTEM(ISET1)
            PID(2+IADD)=XIDTE2(ISET2)
            PID(3+IADD)=XIDTE3(ISET3)
            PID(4+IADD)=XIDTE4(ISET4)
            PID(5+IADD)=XIDTE5(ISET4)
            PID(6+IADD)=XIDTE6(ISET4)
            DO1690I=1,NLOCAL
              IF(
     1           XIDTEM(ISET1).EQ.XDESGN(I,1) .AND.
     1           XIDTE2(ISET2).EQ.XDESGN(I,2) .AND.
     1           XIDTE3(ISET3).EQ.XDESGN(I,3) .AND.
     1           XIDTE4(ISET4).EQ.XDESGN(I,4) .AND.
     1           XIDTE5(ISET5).EQ.XDESGN(I,5) .AND.
     1           XIDTE6(ISET6).EQ.XDESGN(I,6)
     1          )THEN
                K=K+1
                TEMP1(K)=Y(I)
                TEMP2(K)=X(I)
              ENDIF
 1690       CONTINUE
            NTEMP=K
            NCURVE=NCURVE+1
            IF(NTEMP.GT.0)THEN
              CALL DPPRL2(TEMP1,NTEMP,NNEW,ICASAN,ICASA2,ICASA3,ICASA4,
     1                    ICASA5,
     1                    TEMP3,TEMP4,TEMP5,
     1                    PID,IVARID,IVARI2,NREPL,
     1                    CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                    CTL999,CTU999,
     1                    ICAPSW,ICAPTY,IFORSW,
     1                    ISUBRO,IBUGA3,IERROR)
            ENDIF
            IFLAGU='FILE'
            IFRST=.FALSE.
            ILAST=.FALSE.
            IF(NCURVE.EQ.1)IFRST=.TRUE.
            IF(NCURVE.EQ.NTOT)ILAST=.TRUE.
            CALL DPCNF3(CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  IFLAGU,IFRST,ILAST,ICASAN,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
 1660     CONTINUE
 1650     CONTINUE
 1640     CONTINUE
 1630     CONTINUE
 1620     CONTINUE
 1610     CONTINUE
        ENDIF
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PRLI')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPRLI--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPRL2(Y,N,N2,ICASAN,ICASA2,ICASA3,ICASA4,ICASA5,
     1                  X2TEMP,Y2TEMP,D2TEMP,
     1                  PID,IVARID,IVARI2,NREPL,
     1                  CUTL90,CUTU90,CUTL95,CUTU95,CUTL99,CUTU99,
     1                  CTL999,CTU999,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--GENERATE ONE OF THE FOLLOWING:
C
C                 1) PREDICTION LIMITS
C
C                    GIVEN A SET OF ORIGINAL OBSERVATIONS, THIS
C                    GENERATES A CONFIDENCE INTERVAL FOR THE MEAN
C                    OF ONE OR MORE NEW OBSERVATIONS.
C
C                 2) PREDICTION BOUNDS
C
C                    GIVEN A SET OF ORIGINAL OBSERVATIONS, THIS
C                    GENERATES AN INTERVAL THAT WILL CONTAIN ALL
C                    (WITH A GIVEN PROBABILITY LEVEL) OF ONE OR MORE
C                    NEW OBSERVATIONS.
C
C                 3) STANDARD DEVIATION PREDICTION LIMITS
C
C                    GIVEN A SET OF ORIGINAL OBSERVATIONS, THIS
C                    GENERATES A CONFIDENCE INTERVAL FOR THE SD
C                    OF ONE OR MORE NEW OBSERVATIONS.
C
C     INPUT  ARGUMENTS--Y      = THE SINGLE PRECISION VECTOR OF 
C                                ORIGINAL OBSERVATIONS.
C                       N      = THE INTEGER NUMBER OF OBSERVATIONS
C                                IN THE VECTOR Y.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     REFERENCES--HAHN AND MEEKER (1991), "STATISTICAL INTERVALS: A
C                 GUIDE FOR PRACTIONERS", WILEY, PP. 61-65.
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2013/4
C     ORIGINAL VERSION--APRIL     2013.
C     UPDATED         --JUNE      2014. SUPPORT FOR LOGNORMAL
C                                       PREDICTION INTERVALS
C     UPDATED         --JUNE      2014. SUPPORT FOR BOX-COX
C                                       PREDICTION INTERVALS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASA2
      CHARACTER*4 ICASA3
      CHARACTER*4 ICASA4
      CHARACTER*4 ICASA5
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION PID(*)
      DIMENSION X2TEMP(*)
      DIMENSION Y2TEMP(*)
      DIMENSION D2TEMP(*)
C
      PARAMETER (NUMALP=6)
      REAL ALPHA(NUMALP)
      PARAMETER (NUMAL2=3)
      REAL ALPHA2(NUMAL2)
      REAL CONF(NUMALP)
C
      DIMENSION ALOWLM(NUMALP)
      DIMENSION AUPPLM(NUMALP)
C
      PARAMETER(NUMCLI=3)
      PARAMETER(MAXLIN=2)
      PARAMETER (MAXROW=30)
      CHARACTER*70 ITITLE
      CHARACTER*60 ITITLZ
      CHARACTER*40 ITITL9
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      CHARACTER*4  ITYPCO(NUMCLI)
      CHARACTER*20 ITITL2(MAXLIN,NUMCLI)
      CHARACTER*4  IVALUE(MAXROW,NUMCLI)
      REAL         AVALUE(MAXROW)
      REAL         AMAT(MAXROW,NUMCLI)
      INTEGER      NCVALU(MAXROW,NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      LOGICAL IFRST
      LOGICAL ILAST
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      DATA ALPHA /0.50, 0.80, 0.90, 0.95, 0.99, 0.999/
      DATA ALPHA2/0.90, 0.95, 0.99/
C
      ISUBN1='DPPR'
      ISUBN2='L2  '
      IERROR='NO'
      IWRITE='OFF'
C
      CUTL90=CPUMIN
      CUTU90=CPUMIN
      CUTL95=CPUMIN
      CUTU95=CPUMIN
      CUTL99=CPUMIN
      CUTU99=CPUMIN
      CTL999=CPUMIN
      CTU999=CPUMIN
      CCORG=CPUMIN
      CCMAX=CPUMIN
      ALOC=CPUMIN
      ALAMBA=CPUMIN
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PRL2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPPRL2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASAN,ICASA2,ICASA3,ICASA4,ICASA5
   52   FORMAT('IBUGA3,ISUBRO,ICASAN,ICASA2,ICASA3,ICASA4,ICASA5 = ',
     1         6(A4,2X),A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,54)N,N2
   54   FORMAT('N,N2 = ',2I8)
        CALL DPWRST('XXX','WRIT')
        DO56I=1,N
          WRITE(ICOUT,57)I,Y(I)
   57     FORMAT('I,Y(I) = ',I8,G15.7)
          CALL DPWRST('XXX','WRIT')
   56   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='1'
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PRL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N.LE.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN PREDICTION LIMITS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,103)
  103   FORMAT('      THE NUMBER OF OBSERVATIONS IN THE RESPONSE ',
     1         'VARIABLE IS LESS THAN TWO.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,105)N
  105   FORMAT('SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(N2.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,113)
  113   FORMAT('      THE NUMBER OF OBSERVATIONS IN THE NEW SAMPLE ',
     1         'IS NON-POSITIVE.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,105)N2
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO135I=2,N
        IF(Y(I).NE.HOLD)GOTO139
  135 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,101)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,131)HOLD
  131 FORMAT('      THE RESPONSE VARIABLE HAS ALL ELEMENTS = ',G15.7)
      CALL DPWRST('XXX','WRIT')
      GOTO9000
  139 CONTINUE
C
C               ********************************************
C               **  STEP 2--                              **
C               **  SUPPORT FOR LOGNORMAL AND BOX-COX     **
C               **  TRANSFORMATIONS                       **
C               ********************************************
C
C
C     JUNE 2014: FOR LOGNORMAL PREDICTION LIMITS, TAKE THE LOG OF THE
C                DATA, COMPUTE NORMAL PREDICTION LIMITS, AND THEN
C                TAKE EXPONENT FOR THE LIMITS.
C
C                ALSO CAN DO A BOX-COX NORMALITY TRANSFORMATION.
C
      IWRITE='OFF'
      CALL MEAN(Y,N,IWRITE,YMEANZ,IBUGA3,IERROR)
      CALL SD(Y,N,IWRITE,YSDZ,IBUGA3,IERROR)
C
      IF(ICASA5.EQ.'LNPL')THEN
        DO210I=1,N
          IF(Y(I).LE.0.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,211)
  211       FORMAT('***** ERROR: LOGNORMAL PREDICTION LIMITS--')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,212)I,Y(I)
  212       FORMAT('      ROW ',I8,' IS NON-POSITIVE (',G15.7,')')
            CALL DPWRST('XXX','WRIT')
            IERROR='YES'
            GOTO9000
          ELSE
            Y(I)=LOG(Y(I))
          ENDIF
  210   CONTINUE
      ELSEIF(ICASA5.EQ.'BCPL')THEN
C
C       NORMAL ORDER STATISTIC MEDIANS
C
        CALL UNIMED(N,X2TEMP)
        DO231I=1,N
          CALL NORPPF(X2TEMP(I),X2OUT)
          X2TEMP(I)=X2OUT
  231   CONTINUE
C
C       COMPUTE PPCC VALUE FOR UNTRANSFORMED DATA AND
C       RETURN CRITICAL VALUE FOR 3 <= N <= 1,000.
C
        CALL SORT(Y,N,D2TEMP)
        AN1=N
        SUMY=0.0
        DO233I=1,N
          SUMY=SUMY+D2TEMP(I)
  233   CONTINUE
        XBAR=0.0
        YBAR=SUMY/AN1
C
        SUMX=0.0
        SUMY=0.0
        SUMXY=0.0
        DO234I=1,N
          SUMX=SUMX+(X2TEMP(I)-XBAR)*(X2TEMP(I)-XBAR)
          SUMY=SUMY+(D2TEMP(I)-YBAR)*(D2TEMP(I)-YBAR)
          SUMXY=SUMXY+(X2TEMP(I)-XBAR)*(D2TEMP(I)-YBAR)
  234   CONTINUE
        ARG=SUMX*SUMY
        CCORG=0.0
        IF(ARG.GT.0.0)CCORG=SUMXY/SQRT(ARG)
C
        IF(N.GE.3 .AND. N.LE.1000)THEN
          ALPHAT=0.05
          CALL NORPCV(ALPHAT,N,CV,
     1                ISUBRO,IBUGA3,IERROR)
        ELSE
          CV=CPUMIN
        ENDIF
C
C       SORT DATA AND SHIFT DATA TO MAKE IT POSITIVE
C
CCCCC   CALL SORT(Y,N,D2TEMP)
        XMIN=D2TEMP(1)
        IF(XMIN.LE.0.0)THEN
          DO236I=1,N
            D2TEMP(I)=D2TEMP(I)-XMIN+1.0
  236     CONTINUE
          ALOC=XMIN-1.0
        ELSE
          ALOC=0.0
        ENDIF
C
        ALAMBA=-2.0
        ALAMSV=ALAMBA
        AINC=0.1
        CCMAX=CPUMIN
C
        DO240IDIS=1,41
C
C         LOG TRANSFORMATION
C
          IF(-0.001.LE.ALAMBA.AND.ALAMBA.LE.0.001)THEN
            ALAMBA=0.0
            DO241I=1,N
              Y2TEMP(I)=LOG(D2TEMP(I))
  241       CONTINUE
          ELSE
            DO246I=1,N
              Y2TEMP(I)=((D2TEMP(I)**ALAMBA)-1.0)/ALAMBA
  246       CONTINUE
          ENDIF
C
          AN1=N
          SUMY=0.0
          DO251I=1,N
            SUMY=SUMY+Y2TEMP(I)
  251     CONTINUE
          XBAR=0.0
          YBAR=SUMY/AN1
C
          SUMX=0.0
          SUMY=0.0
          SUMXY=0.0
          DO252I=1,N
            SUMX=SUMX+(X2TEMP(I)-XBAR)*(X2TEMP(I)-XBAR)
            SUMY=SUMY+(Y2TEMP(I)-YBAR)*(Y2TEMP(I)-YBAR)
            SUMXY=SUMXY+(X2TEMP(I)-XBAR)*(Y2TEMP(I)-YBAR)
  252     CONTINUE
          ARG=SUMX*SUMY
          CC=0.0
          IF(ARG.GT.0.0)CC=SUMXY/SQRT(ARG)
          IF(CC.GT.CCMAX)THEN
            CCMAX=CC
            ALAMSV=ALAMBA
          ENDIF
C
          ALAMBA=ALAMBA + AINC
C
  240   CONTINUE
C
C       NOW TRANSFORM THE DATA
C
        ALAMBA=ALAMSV
        IF(ALAMBA.EQ.0.0)THEN
          DO261I=1,N
            Y(I)=LOG(D2TEMP(I))
  261     CONTINUE
        ELSE
          DO263I=1,N
            Y(I)=((D2TEMP(I)**ALAMBA)-1.0)/ALAMBA
  263     CONTINUE
        ENDIF
C
      ENDIF
C
C               ***************************************
C               **  STEP 3--                         **
C               **  COMPUTE PREDICTION LIMITS        **
C               **  FOR VARIOUS PROBABILITY VALUES.  **
C               ***************************************
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     ICASAN - LIMI   => PREDICTION LIMIT FOR THE MEAN
C              BOUN   => PREDICTION BOUND FOR ALL OBSERVATIONS
C              SDLI   => PREDICTION LIMIT FOR THE STANDARD DEVIATION
C     ICASA2:  LOWE   => LOWER LIMIT
C              UPPE   => UPPER LIMIT
C     ICASA3:  RAW    => RAW DATA
C              SUMM   => SUMMARY DATA
C     ICASA4:  ONES   => ONE-SIDED LIMIT
C              TWOS   => TWO-SIDED LIMIT
C
      AN=N
      ICASA3='RAW'
C
C     FOR N <= 10 AND N2 <= 10, USE TABULATED VALUES FOR PREDICTION
C     BOUNDS.
C
      IF(ICASAN.EQ.'BOUN' .AND. N.LE.10 .AND. N2.LE.10)THEN
        CALL DPPRL3(Y,N,N2,ICASAN,ICASA2,ICASA3,ICASA4,
     1              YMEAN,YSD,
     1              ALPHA2,NUMAL2,ALOWLM,AUPPLM,
     1              ISUBRO,IBUGA3,IERROR)
        IF(ICASA5.EQ.'LNPL')THEN
          DO310II=1,NUMAL2
            ALOWLM(II)=EXP(ALOWLM(II))
            AUPPLM(II)=EXP(AUPPLM(II))
  310     CONTINUE
        ELSEIF(ICASA5.EQ.'BCPL')THEN
          IF(ALAMBA.EQ.0.0)THEN
            DO320II=1,NUMAL2
              ALOWLM(II)=EXP(ALOWLM(II))
              AUPPLM(II)=EXP(AUPPLM(II))
              ALOWLM(II)=ALOWLM(II)+ALOC
              AUPPLM(II)=AUPPLM(II)+ALOC
  320       CONTINUE
          ELSE
            DO330II=1,NUMAL2
              ALOWLM(II)=(ALAMBA*ALOWLM(II) + 1.0)**(1.0/ALAMBA)
              AUPPLM(II)=(ALAMBA*AUPPLM(II) + 1.0)**(1.0/ALAMBA)
              ALOWLM(II)=ALOWLM(II)+ALOC
              AUPPLM(II)=AUPPLM(II)+ALOC
  330       CONTINUE
          ENDIF
        ENDIF
        CUTL90=ALOWLM(1)
        CUTU90=AUPPLM(1)
        CUTL95=ALOWLM(2)
        CUTU95=AUPPLM(2)
        CUTL99=ALOWLM(3)
        CUTU99=AUPPLM(3)
        NALP=NUMAL2
        DO340I=1,NUMAL2
          CONF(I)=100.0*ALPHA2(I) + 0.0001
  340   CONTINUE
      ELSE
        CALL DPPRL3(Y,N,N2,ICASAN,ICASA2,ICASA3,ICASA4,
     1              YMEAN,YSD,
     1              ALPHA,NUMALP,ALOWLM,AUPPLM,
     1              ISUBRO,IBUGA3,IERROR)
        IF(ICASA5.EQ.'LNPL')THEN
          DO410II=1,NUMALP
            ALOWLM(II)=EXP(ALOWLM(II))
            AUPPLM(II)=EXP(AUPPLM(II))
  410     CONTINUE
        ELSEIF(ICASA5.EQ.'BCPL')THEN
          IF(ALAMBA.EQ.0.0)THEN
            DO420II=1,NUMALP
              ALOWLM(II)=EXP(ALOWLM(II))
              AUPPLM(II)=EXP(AUPPLM(II))
              ALOWLM(II)=ALOWLM(II)+ALOC
              AUPPLM(II)=AUPPLM(II)+ALOC
  420       CONTINUE
          ELSE
            DO430II=1,NUMALP
              ALOWLM(II)=(ALAMBA*ALOWLM(II) + 1.0)**(1.0/ALAMBA)
              AUPPLM(II)=(ALAMBA*AUPPLM(II) + 1.0)**(1.0/ALAMBA)
              ALOWLM(II)=ALOWLM(II)+ALOC
              AUPPLM(II)=AUPPLM(II)+ALOC
  430       CONTINUE
          ENDIF
        ENDIF
        CUTL90=ALOWLM(3)
        CUTU90=AUPPLM(3)
        CUTL95=ALOWLM(4)
        CUTU95=AUPPLM(4)
        CUTL99=ALOWLM(5)
        CUTU99=AUPPLM(5)
        CTL999=ALOWLM(6)
        CTU999=AUPPLM(6)
        NALP=NUMALP
        DO440I=1,NUMALP
          CONF(I)=100.0*ALPHA(I) + 0.0001
  440   CONTINUE
      ENDIF
C
C               ****************************
C               **  STEP 5--              **
C               **  WRITE EVERYTHING OUT  **
C               ****************************
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      IF(ICASAN.EQ.'LIMI')THEN
        IF(ICASA4.EQ.'TWOS')THEN
          IF(ICASA5.EQ.'LNPL')THEN
            ITITLE='Two-Sided Lognormal Prediction Limits for the Mean'
            NCTITL=50
          ELSEIF(ICASA5.EQ.'BCPL')THEN
            ITITLE='Two-Sided Box-Cox Prediction Limits for the Mean'
            NCTITL=48
          ELSE
            ITITLE='Two-Sided Prediction Limits for the Mean'
            NCTITL=40
          ENDIF
          ITITLZ=' '
          NCTITZ=0
        ELSEIF(ICASA4.EQ.'ONES')THEN
          IF(ICASA2.EQ.'LOWE')THEN
            IF(ICASA5.EQ.'LNPL')THEN
              ITITLE=
     1        'One-Sided Lower Lognormal Prediction Limits for the Mean'
              NCTITL=56
            ELSEIF(ICASA5.EQ.'BCPL')THEN
              ITITLE=
     1        'One-Sided Lower Box-Cox Prediction Limits for the Mean'
              NCTITL=54
            ELSE
              ITITLE='One-Sided Lower Prediction Limits for the Mean'
              NCTITL=46
            ENDIF
            ITITLZ=' '
            NCTITZ=0
          ELSEIF(ICASA2.EQ.'UPPE')THEN
            IF(ICASA5.EQ.'LNPL')THEN
              ITITLE=
     1        'One-Sided Lower Lognormal Prediction Limits for the Mean'
              NCTITL=56
            ELSEIF(ICASA5.EQ.'BCPL')THEN
              ITITLE=
     1        'One-Sided Lower Box-Cox Prediction Limits for the Mean'
              NCTITL=54
            ELSE
              ITITLE='One-Sided Upper Prediction Limits for the Mean'
              NCTITL=46
            ENDIF
            ITITLZ=' '
            NCTITZ=0
          ENDIF
        ENDIF
      ELSEIF(ICASAN.EQ.'BOUN')THEN
        IF(ICASA4.EQ.'TWOS')THEN
          IF(ICASA5.EQ.'LNPL')THEN
            ITITLE=
     1      'Two-Sided Lognormal Prediction Bounds for All Observations'
            NCTITL=58
          ELSEIF(ICASA5.EQ.'BCPL')THEN
            ITITLE=
     1      'Two-Sided Box-Cox Prediction Bounds for All Observations'
            NCTITL=56
          ELSE
            ITITLE='Two-Sided Prediction Bounds for All Observations'
            NCTITL=48
          ENDIF
          ITITLZ=' '
          NCTITZ=0
        ELSEIF(ICASA4.EQ.'ONES')THEN
          IF(ICASA2.EQ.'LOWE')THEN
            IF(ICASA5.EQ.'LNPL')THEN
              ITITLE(1:37)='One-Sided Lower Lognormal Prediction '
              ITITLE(38:64)='Bounds for All Observations'
              NCTITL=64
            ELSEIF(ICASA5.EQ.'BCPL')THEN
              ITITLE(1:35)='One-Sided Lower Box-Cox Prediction '
              ITITLE(36:62)='Bounds for All Observations'
              NCTITL=62
            ELSE
              ITITLE=
     1        'One-Sided Lower Prediction Bounds for All Observations'
              NCTITL=54
            ENDIF
            ITITLZ=' '
            NCTITZ=0
          ELSEIF(ICASA2.EQ.'UPPE')THEN
            IF(ICASA5.EQ.'LNPL')THEN
              ITITLE(1:37)='One-Sided Upper Lognormal Prediction '
              ITITLE(38:64)='Bounds for All Observations'
              NCTITL=64
            ELSEIF(ICASA5.EQ.'BCPL')THEN
              ITITLE(1:35)='One-Sided Upper Box-Cox Prediction '
              ITITLE(36:62)='Bounds for All Observations'
              NCTITL=62
            ELSE
              ITITLE=
     1        'One-Sided Upper Prediction Bounds for All Observations'
              NCTITL=54
            ENDIF
            ITITLZ=' '
            NCTITZ=0
          ENDIF
        ENDIF
      ELSEIF(ICASAN.EQ.'SDLI')THEN
        IF(ICASA4.EQ.'TWOS')THEN
          IF(ICASA5.EQ.'LNPL')THEN
            ITITLE='Two-Sided Lognormal Prediction Limits for the SD'
            NCTITL=48
          ELSEIF(ICASA5.EQ.'BCPL')THEN
            ITITLE='Two-Sided Box-Cox Prediction Limits for the SD'
            NCTITL=46
          ELSE
            ITITLE='Two-Sided Prediction Limits for the SD'
            NCTITL=38
          ENDIF
          ITITLZ=' '
          NCTITZ=0
        ELSEIF(ICASA4.EQ.'ONES')THEN
          IF(ICASA2.EQ.'LOWE')THEN
            IF(ICASA5.EQ.'LNPL')THEN
              ITITLE=
     1        'One-Sided Lognormal Lower Prediction Limits for the SD'
              NCTITL=54
            ELSEIF(ICASA5.EQ.'BCPL')THEN
              ITITLE=
     1        'One-Sided Box-Cox Lower Prediction Limits for the SD'
              NCTITL=52
            ELSE
              ITITLE='One-Sided Lower Prediction Limits for the SD'
              NCTITL=44
            ENDIF
            ITITLZ=' '
            NCTITZ=0
          ELSEIF(ICASA2.EQ.'UPPE')THEN
            IF(ICASA5.EQ.'LNPL')THEN
              ITITLE=
     1        'One-Sided Lognormal Upper Prediction Limits for the SD'
              NCTITL=54
            ELSEIF(ICASA5.EQ.'BCPL')THEN
              ITITLE=
     1        'One-Sided Box-Cox Upper Prediction Limits for the SD'
              NCTITL=52
            ELSE
              ITITLE='One-Sided Upper Prediction Limits for the SD'
              NCTITL=44
            ENDIF
            ITITLZ=' '
            NCTITZ=0
          ENDIF
        ENDIF
      ENDIF
C
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Response Variable: '
      WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
      WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      IF(NREPL.GT.0)THEN
        NRESP=1
        DO4101I=1,NREPL
          ICNT=ICNT+1
          ITEMP=I+NRESP
          ITEXT(ICNT)='Factor Variable  : '
          WRITE(ITEXT(ICNT)(17:17),'(I1)')I
          WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(ITEMP)(1:4)
          WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(ITEMP)(1:4)
          NCTEXT(ICNT)=27
          AVALUE(ICNT)=PID(ITEMP)
          IDIGIT(ICNT)=NUMDIG
 4101   CONTINUE
      ENDIF
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='Summary Statistics:'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      IF(ICASA5.EQ.'BCPL')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=1
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Untransformed Data:'
        NCTEXT(ICNT)=19
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Value of Normal PPCC:'
        NCTEXT(ICNT)=21
        AVALUE(ICNT)=CCORG
        IDIGIT(ICNT)=NUMDIG
        IF(CV.NE.CPUMIN)THEN
          ICNT=ICNT+1
          ITEXT(ICNT)='5% Critical Value:'
          NCTEXT(ICNT)=18
          AVALUE(ICNT)=CV
          IDIGIT(ICNT)=NUMDIG
        ENDIF
        ICNT=ICNT+1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=1
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
C
        ICNT=ICNT+1
        ITEXT(ICNT)='Transformed Data:'
        NCTEXT(ICNT)=19
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Value of Lambda:'
        NCTEXT(ICNT)=16
        AVALUE(ICNT)=ALAMBA
        IDIGIT(ICNT)=NUMDIG
        ICNT=ICNT+1
        ITEXT(ICNT)='Value of Normal PPCC:'
        NCTEXT(ICNT)=21
        AVALUE(ICNT)=CCMAX
        IDIGIT(ICNT)=NUMDIG
        IF(CV.NE.CPUMIN)THEN
          ICNT=ICNT+1
          ITEXT(ICNT)='5% Critical Value:'
          NCTEXT(ICNT)=18
          AVALUE(ICNT)=CV
          IDIGIT(ICNT)=NUMDIG
        ENDIF
        ICNT=ICNT+1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=1
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
      ENDIF
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(N)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
CCCCC IF(ICASA5.EQ.'LNPL')THEN
CCCCC   ITEXT(ICNT)='Sample Mean of Log of Data:'
CCCCC   NCTEXT(ICNT)=27
CCCCC ELSEIF(ICASA5.EQ.'BCPL')THEN
CCCCC   ITEXT(ICNT)='Sample Mean of Transformed Data:'
CCCCC   NCTEXT(ICNT)=33
CCCCC ELSE
CCCCC   ITEXT(ICNT)='Sample Mean:'
CCCCC   NCTEXT(ICNT)=12
CCCCC ENDIF
      ITEXT(ICNT)='Sample Mean:'
      NCTEXT(ICNT)=12
      AVALUE(ICNT)=YMEANZ
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Sample Standard Deviation:'
      NCTEXT(ICNT)=26
      AVALUE(ICNT)=YSDZ
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of New Observations:'
      NCTEXT(ICNT)=27
      AVALUE(ICNT)=REAL(N2)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=1
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      NUMROW=ICNT
      DO4210I=1,NUMROW
        NTOT(I)=15
 4210 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      ISTEPN='5A'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRL2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ITITL2(1,1)='Confidence'
      NCTIT2(1,1)=10
      ITITL2(2,1)='Value (%)'
      NCTIT2(2,1)=9
      ICOL=1
C
CCCCC print *,'icasa2,icasa4=',icasa2,' ',icasa4
      IF(ICASA4.EQ.'TWOS' .OR.
     1  (ICASA4.EQ.'ONES' .AND. ICASA2.EQ.'LOWE'))THEN
        ICOL=ICOL+1
        ITITL2(1,ICOL)='Lower'
        NCTIT2(1,ICOL)=5
        ITITL2(2,ICOL)='Limit'
        NCTIT2(2,ICOL)=5
      ENDIF
C
      IF(ICASA4.EQ.'TWOS' .OR.
     1  (ICASA4.EQ.'ONES' .AND. ICASA2.EQ.'UPPE'))THEN
        ICOL=ICOL+1
        ITITL2(1,ICOL)='Upper'
        NCTIT2(1,ICOL)=5
        ITITL2(2,ICOL)='Limit'
        NCTIT2(2,ICOL)=5
      ENDIF
C
      NUMLIN=2
      NUMCOL=ICOL
      NUMROW=NALP
      NMAX=0
      DO4221I=1,NUMCOL
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IDIGIT(I)=NUMDIG
        ITYPCO(I)='NUME'
        IF(I.EQ.1)THEN
          NTOT(I)=12
          IDIGIT(I)=1
          IWHTML(1)=75
        ENDIF
        NMAX=NMAX+NTOT(I)
 4221 CONTINUE
      DO4223I=1,NUMROW
        DO4225J=1,NUMCOL
          NCVALU(I,J)=0
          IVALUE(I,J)=' '
          AMAT(I,J)=0.0
 4225   CONTINUE
        JCNT=1
        AMAT(I,1)=CONF(I)
        IF(ICASA4.EQ.'TWOS' .OR.
     1    (ICASA4.EQ.'ONES' .AND. ICASA2.EQ.'LOWE'))THEN
          JCNT=JCNT+1
          AMAT(I,JCNT)=ALOWLM(I)
        ENDIF
        IF(ICASA4.EQ.'TWOS' .OR.
     1    (ICASA4.EQ.'ONES' .AND. ICASA2.EQ.'UPPE'))THEN
          JCNT=JCNT+1
          AMAT(I,JCNT)=AUPPLM(I)
        ENDIF
 4223 CONTINUE
C
      IWHTML(1)=150
      IWHTML(2)=150
      IWHTML(3)=150
      IWRTF(1)=2000
      IWRTF(2)=IWRTF(1)+2000
      IWRTF(3)=IWRTF(2)+2000
      IFRST=.TRUE.
      ILAST=.TRUE.
      NCTIT9=0
C
CCCCC print *,'nctit9,nctitl = ',nctit9,nctitl
CCCCC print *,'maxrow,numrow,maxlin,numlin=',maxrow,numrow,maxlin,numlin
CCCCC print *,'numcli,numcol=',numcli,numcol
      CALL DPDTA4(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            IVALUE,NCVALU,AMAT,ITYPCO,MAXROW,NUMROW,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PRL2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPPRL2--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPPRL3(Y1,N1,N2,ICASAN,ICASA2,ICASA3,ICASA4,
     1                  YMEAN,YSD,
     1                  ALPHA,NALPHA,ALOWLM,AUPPLM,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS SUBROUTINE COMPUTES NORMAL ONE-SIDED AND
C              TWO-SIDED NORMAL PREDICTION LOWER AND UPPER LIMITS.
C
C              THE FOLLOWING CASES ARE SUPPORTED:
C
C                 LET A = LOWER PREDICTION INTERVAL Y
C                 LET A = UPPER REDICTION INTERVAL Y
C                 LET A = ONE SIDED LOWER PREDICTION INTERVAL Y
C                 LET A = ONE SIDED UPPER PREDICTION INTERVAL Y
C
C                 LET A = LOWER PREDICTION BOUND Y
C                 LET A = UPPER REDICTION BOUND Y
C                 LET A = ONE SIDED LOWER PREDICTION BOUND Y
C                 LET A = ONE SIDED UPPER PREDICTION BOUND Y
C
C                 LET A = LOWER SD PREDICTION LIMIT Y
C                 LET A = UPPER SD PREDICTION LIMIT Y
C                 LET A = ONE SIDED LOWER SD PREDICTION INTERVAL Y
C                 LET A = ONE SIDED UPPER SD PREDICTION INTERVAL Y
C
C              THE DATA CONSISTS OF N1 ORIGINAL OBSERVATIONS IN Y1 AND
C              N2 NEW OBSERVATIONS.  FOR ALL CASES, THE NUMBER OF
C              OBSERVATIONS IN THE NEW SAMPLE IS SPECIFIED WITH THE
C              COMMAND
C
C                 LET NNEW = <VALUE>
C
C              FOR ALL OF THE CASES ABOVE, THERE IS A "SUMMARY" CASE
C              WHERE WE SPECIFY THE MEAN, STANDARD DEVIATION, AND SAMPLE
C              SIZE FOR THE FIRST SAMPLE.  FOR EXAMPLE,
C
C                 LET A = SUMMARY LOWER PREDICTION INTERVAL YMEAN YSD N1
C
C              THE PREDICITON INTERVAL IS AN INTERVAL FOR THE MEAN
C              OF THE N2 NEW OBSERVATIONS.  THE FORMULA IN THIS CASE IS:
C
C                  XBAR +/- t(1-alpha/2;N1-1)*SQRT((1/N1) + (1/N2))*S
C
C              WITH XBAR AND S DENOTING THE SAMPLE MEAN AND STANDARD
C              DEVIATION OF THE ORIGINAL SAMPLE AND t DENOTING THE
C              T PERCENT POINT FUNCTION.
C
C              THE PREDICTION BOUND IS AN INTERVAL THAT WILL
C              CONTAIN ALL OF THE N2 NEW OBSERVATIONS.  THE FORMULA FOR
C              A TWO-SIDED INTERVAL IS:
C
C                   XBAR +/- r(1-ALPHA;N2,N1)*S
C
C              A CONSERVATIVE VALUE FOR r IS:
C
C                   r(1-ALPHA;N2,N1) = SQRT(1 + (1/N1))*t(1-ALPHA/(2*N2);N1-1)
C
C              A ONE-SIDED INTERVAL IS:
C
C                   XBAR + r'(1-ALPHA;N2,N1)*S
C
C              A CONSERVATIVE VALUE FOR r' IS:
C
C                   r'(1-ALPHA;N2,N1) = SQRT(1 + (1/N1))*t(1-ALPHA/N2;N1-1)
C
C              A TWO-SIDED PREDICTION INTERVAL FOR THE STANDARD
C              DEVIATION IS:
C
C                  [s(lower),s(upper)] = [s*SQRT(1/F(1-alpha/2;n1-1,n2-1)),
C                                         s*SQRT(F(1-alpha/2;n2-1,n1-1))]
C
C     INPUT ARGUMENTS--Y1     = THE SINGLE PRECISION VECTOR OF
C                               (UNSORTED OR SORTED) OBSERVATIONS.
C                    --N1     = THE INTEGER NUMBER OF OBSERVATIONS
C                               IN THE VECTOR Y1.
C                    --Y2     = THE SINGLE PRECISION VECTOR OF
C                               OBSERVATIONS FOR WHICH THE PREDICTION
C                               LIMITS WILL BE COMPUTED.
C                    --N2     = THE INTEGER NUMBER OF OBSERVATIONS
C                               IN THE VECTOR Y2.
C                    --ALPHA  = THE SINGLE PRECISION VECTOR OF CONFIDENCE
C                               LEVELS
C                      NALPHA = THE INTEGER NUMBER OF ALPHA VALUES
C     OUTPUT ARGUMENTS-ALOWLM = THE SINGLE PRECISION VECTOR OF LOWER LIMIT
C                               VALUES
C                     -AUPPLM = THE SINGLE PRECISION VECTOR OF UPPER LIMIT
C                               VALUES
C     OTHER DATAPAC   SUBROUTINES NEEDED--NONE.
C     FORTRAN LIBRARY SUBROUTINES NEEDED--SQRT.
C     MODE OF INTERNAL OPERATIONS--SINGLE PRECISION.
C     LANGUAGE--ANSI FORTRAN. 
C     REFERENCES--HAHN AND MEEKER (1991), "STATISTICAL INTERVALS: A
C                 GUIDE FOR PRACTIONERS", WILEY, PP. 61-65.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     ORIGINAL VERSION--MARCH     2013. 
C     UPDATED         --JUNE      2014. SUPPORT FOR LOGNORMAL
C                                       PREDICTION INTERVALS
C     UPDATED         --JUNE      2014. SUPPORT FOR BOX-COX
C                                       PREDICTION INTERVALS
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION ALOWLM(*)
      DIMENSION AUPPLM(*)
      DIMENSION ALPHA(*)
C
      REAL R2S90(7,10)
      REAL R2S95(7,10)
      REAL R2S99(7,10)
      REAL R1S90(7,10)
      REAL R1S95(7,10)
      REAL R1S99(7,10)
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICASA2
      CHARACTER*4 ICASA3
      CHARACTER*4 ICASA4
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      DATA ((R2S90(I,J),J=1,10),I=1,7)/
     1 2.631,3.329,3.742,4.032,4.255,4.435,4.585,4.713,4.826,4.925,
     1 2.335,2.909,3.246,3.483,3.665,3.812,3.936,4.041,4.134,4.216,
     1 2.177,2.685,2.982,3.190,3.350,3.480,3.589,3.682,3.764,3.836,
     1 2.077,2.546,2.818,3.008,3.155,3.273,3.373,3.458,3.533,3.599,
     1 2.010,2.452,2.706,2.884,3.021,3.132,3.225,3.305,3.375,3.437,
     1 1.960,2.383,2.625,2.794,2.924,3.029,3.118,3.193,3.259,3.318,
     1 1.923,2.331,2.564,2.726,2.851,2.951,3.036,3.108,3.172,3.228/
C
      DATA ((R2S95(I,J),J=1,10),I=1,7)/
     1 3.558,4.412,4.923,5.285,5.564,5.789,5.978,6.140,6.282,6.407,
     1 3.041,3.697,4.087,4.364,4.577,4.751,4.896,5.021,5.131,5.229,
     1 2.777,3.333,3.662,3.896,4.076,4.223,4.346,4.452,4.545,4.628,
     1 2.616,3.114,3.407,3.614,3.774,3.905,4.014,4.108,4.191,4.265,
     1 2.508,2.968,3.236,3.426,3.573,3.692,3.792,3.879,3.954,4.022,
     1 2.431,2.863,3.115,3.292,3.429,3.540,3.634,3.714,3.785,3.848,
     1 2.373,2.785,3.024,3.192,3.321,3.426,3.515,3.591,3.658,3.717/
C
      DATA ((R2S99(I,J),J=1,10),I=1,7)/
     1 6.530,7.942,8.800,9.411,9.884,10.268,10.590,10.867,11.110,11.325,
     1 5.044,5.972,6.536,6.940,7.253,7.509,7.725,7.911,8.074,8.219,
     1 4.355,5.071,5.503,5.814,6.055,6.253,6.420,6.564,6.690,6.803,
     1 3.963,4.562,4.922,5.181,5.382,5.546,5.685,5.806,5.912,6.006,
     1 3.712,4.238,4.552,4.778,4.953,5.097,5.218,5.323,5.416,5.499,
     1 3.537,4.014,4.297,4.500,4.657,4.787,4.896,4.990,5.074,5.148,
     1 3.408,3.850,4.111,4.297,4.442,4.560,4.660,4.747,4.824,4.892/
C
      DATA ((R1S90(I,J),J=1,10),I=1,7)/
     1 1.831,2.484,2.873,3.150,3.364,3.538,3.684,3.809,3.919,4.017,
     1 1.680,2.240,2.567,2.798,2.975,3.120,3.241,3.345,3.436,3.517,
     1 1.594,2.105,2.399,2.606,2.764,2.893,3.001,3.093,3.174,3.246,
     1 1.539,2.020,2.294,2.485,2.631,2.750,2.849,2.935,3.010,3.076,
     1 1.501,1.961,2.221,2.402,2.540,2.652,2.745,2.826,2.896,2.959,
     1 1.472,1.917,2.167,2.341,2.473,2.580,2.669,2.746,2.813,2.873,
     1 1.451,1.884,2.126,2.294,2.422,2.525,2.611,2.685,2.750,2.807/
C
      DATA ((R1S95(I,J),J=1,10),I=1,7)/
     1 2.631,3.401,3.871,4.209,4.472,4.686,4.867,5.023,5.160,5.282,
     1 2.335,2.952,3.320,3.583,3.788,3.955,4.095,4.216,4.323,4.418,
     1 2.177,2.715,3.033,3.259,3.433,3.576,3.696,3.799,3.890,3.971,
     1 2.077,2.570,2.857,3.060,3.217,3.345,3.452,3.545,3.627,3.699,
     1 2.010,2.471,2.738,2.926,3.071,3.189,3.288,3.374,3.449,3.516,
     1 1.960,2.400,2.652,2.830,2.966,3.077,3.170,3.250,3.321,3.384,
     1 1.923,2.346,2.587,2.757,2.887,2.992,3.081,3.157,3.224,3.284/
C
      DATA ((R1S99(I,J),J=1,10),I=1,7)/
     1 5.077,6.305,7.073,7.632,8.070,8.430,8.734,8.996,9.228,9.434,
     1 4.105,4.943,5.459,5.833,6.126,6.367,6.571,6.748,6.904,7.043,
     1 3.635,4.298,4.701,4.993,5.221,5.409,5.567,5.705,5.827,5.935,
     1 3.360,3.926,4.267,4.513,4.705,4.862,4.996,5.111,5.213,5.305,
     1 3.180,3.685,3.987,4.203,4.372,4.511,4.628,4.730,4.819,4.900,
     1 3.053,3.517,3.792,3.988,4.141,4.267,4.373,4.465,4.546,4.619,
     1 2.959,3.393,3.648,3.830,3.972,4.087,4.185,4.270,4.345,4.412/
C
      ISUBN1='PRL3'
      ISUBN2='    '
      IWRITE='OFF'
      IERROR='NO'
C
      N1INDX=0
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRL3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,51)
   51   FORMAT('**** AT THE BEGINNING OF DPPRL3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,ICASAN,ICASA2,ICASA3,ICASA4
   52   FORMAT('IBUGA3,ISUBRO,ICASAN,ICASA2,ICASA3,ICASA4 = ',
     1         5(A4,2X),A4)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,53)N1,N2,NALPHA,YMEAN,YSD,ALPHA(1)
   53   FORMAT('N1,N2,NALPHA,YMEAN,YSD,ALPHA(1) = ',3I8,3G15.7)
        CALL DPWRST('XXX','WRIT')
        IF(ICASA3.EQ.'RAW')THEN
          DO56I=1,N1
            WRITE(ICOUT,57)I,Y1(I)
   57       FORMAT('I,Y1(I) = ',I8,G15.7)
            CALL DPWRST('XXX','WRIT')
   56     CONTINUE
        ENDIF
        DO76I=1,NALPHA
          WRITE(ICOUT,77)I,ALPHA(I)
   77     FORMAT('I,ALPHA(I) = ',I8,G15.7)
          CALL DPWRST('XXX','WRIT')
   76   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 11--                             **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      ISTEPN='11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'PRL3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N1.LT.4)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR: PREDICTION LIMITS--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,102)
  102   FORMAT('      THE NUMBER OF ORIGINAL OBSERVATIONS  IS LESS ',
     1         'THAN FOUR.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,103)N1
  103   FORMAT('      SAMPLE SIZE = ',I8)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ELSEIF(N2.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,112)
  112   FORMAT('      THE NUMBER OF NEW OBSERVATIONS  IS LESS ',
     1         'THAN ONE.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,103)N2
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ********************************************
C               **  STEP 21--                             **
C               **  CARRY OUT CALCULATIONS FOR PREDICTION **
C               **  LIMITS.                               **
C               ********************************************
C
      ISTEPN='21'
      IF(IBUGA3.EQ.'ON'.AND.ISUBRO.EQ.'PRL3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     ICASAN:  LIMI     => PREDICTION LIMIT FOR MEAN
C              BOUN     => PREDICTION BOUND
C              SDLI     => PREDICTION LIMIT FOR SD
C     ICASA2:  LOWE     => LOWER LIMIT
C              UPPE     => UPPER LIMIT
C     ICASA3:  RAW      => RAW DATA IN Y1
C              SUMM     => SUMMARY DATA IN YMEAN AND YSD
C     ICASA4:  ONES     => ONE-SIDED LIMIT
C              TWOS     => TWO-SIDED LIMIT
C
C     COMPUTE MEAN AND STANDARD DEVIATION
C
      DO210I=1,NALPHA
        ALOWLM(I)=CPUMIN
        AUPPLM(I)=CPUMIN
  210 CONTINUE
C
      IF(ICASA3.EQ.'RAW')THEN
        CALL MEAN(Y1,N1,IWRITE,YMEAN,IBUGA3,IERROR)
        CALL SD(Y1,N1,IWRITE,YSD,IBUGA3,IERROR)
      ENDIF
C
      IF(YSD.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,212)
  212   FORMAT('      THE STANDARD DEVIATION OF THE ORIGINAL ',
     1         'OBSERVATIONS IS NON-POSITIVE.')
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      ANU=REAL(N1 - 1)
      AN1=REAL(N1)
      AN2=REAL(N2)
C
      IF(ICASAN.EQ.'LIMI')THEN
        AFACT=SQRT((1.0/AN1) + (1.0/AN2))
        IF(ICASA2.EQ.'LOWE')THEN
          IF(ICASA4.EQ.'ONES')THEN
            DO260I=1,NALPHA
              ALPHAT=ALPHA(I)
              IF(ALPHAT.GE.1.0 .AND. ALPHAT.LT.100.0)ALPHAT=ALPHAT/100.
              IF(ALPHAT.LE.0.0 .OR. ALPHAT.GE.1.0)GOTO8000
              IF(ALPHAT.GT.0.5)ALPHAT=1.0 - ALPHAT
              CALL TPPF(ALPHAT,ANU,PPF)
              ALOWLM(I)=YMEAN - ABS(PPF)*AFACT*YSD
              AUPPLM(I)=YMEAN + ABS(PPF)*AFACT*YSD
  260       CONTINUE
          ELSEIF(ICASA4.EQ.'TWOS')THEN
            DO265I=1,NALPHA
              ALPHAT=ALPHA(I)
              IF(ALPHAT.GE.1.0 .AND. ALPHAT.LT.100.0)ALPHAT=ALPHAT/100.
              IF(ALPHAT.LE.0.0 .OR. ALPHAT.GE.1.0)GOTO8000
              IF(ALPHAT.GT.0.5)ALPHAT=1.0 - ALPHAT
              ALPHAT=ALPHAT/2.0
              CALL TPPF(ALPHAT,ANU,PPF)
              ALOWLM(I)=YMEAN - ABS(PPF)*AFACT*YSD
              AUPPLM(I)=YMEAN + ABS(PPF)*AFACT*YSD
  265       CONTINUE
          ENDIF
        ELSEIF(ICASA2.EQ.'UPPE')THEN
          IF(ICASA4.EQ.'ONES')THEN
            DO270I=1,NALPHA
              ALPHAT=ALPHA(I)
              IF(ALPHAT.GE.1.0 .AND. ALPHAT.LT.100.0)ALPHAT=ALPHAT/100.
              IF(ALPHAT.LE.0.0 .OR. ALPHAT.GE.1.0)GOTO8000
              IF(ALPHAT.GT.0.5)ALPHAT=1.0 - ALPHAT
              CALL TPPF(ALPHAT,ANU,PPF)
              ALOWLM(I)=YMEAN - ABS(PPF)*AFACT*YSD
              AUPPLM(I)=YMEAN + ABS(PPF)*AFACT*YSD
  270       CONTINUE
          ELSEIF(ICASA4.EQ.'TWOS')THEN
            DO275I=1,NALPHA
              ALPHAT=ALPHA(I)
              IF(ALPHAT.GE.1.0 .AND. ALPHAT.LT.100.0)ALPHAT=ALPHAT/100.
              IF(ALPHAT.LE.0.0 .OR. ALPHAT.GE.1.0)GOTO8000
              IF(ALPHAT.GT.0.5)ALPHAT=1.0 - ALPHAT
              ALPHAT=ALPHAT/2.0
              CALL TPPF(ALPHAT,ANU,PPF)
              ALOWLM(I)=YMEAN - ABS(PPF)*AFACT*YSD
              AUPPLM(I)=YMEAN + ABS(PPF)*AFACT*YSD
  275       CONTINUE
          ENDIF
        ENDIF
      ELSEIF(ICASAN.EQ.'BOUN')THEN
        AFACT=SQRT(1.0 + (1.0/AN1))
        IF(N1.GE.4 .AND. N1.LE.10 .AND. N2.LE.10)THEN
          IFLAGT=1
          N1INDX=N1-3
        ELSE
          IFLAGT=0
        ENDIF
        EPS=0.0001
        IF(ICASA2.EQ.'LOWE')THEN
          IF(ICASA4.EQ.'ONES')THEN
            DO360I=1,NALPHA
              ALPHAT=ALPHA(I)
              IF(ALPHAT.GE.1.0 .AND. ALPHAT.LT.100.0)ALPHAT=ALPHAT/100.
              IF(ALPHAT.LE.0.0 .OR. ALPHAT.GE.1.0)GOTO8000
              IF(ALPHAT.GT.0.5)ALPHAT=1.0 - ALPHAT
              IF(ABS(ALPHAT-0.10).LE.EPS .AND. IFLAGT.EQ.1)THEN
                PPF=R1S90(N1INDX,N2)
              ELSEIF(ABS(ALPHAT-0.05).LE.EPS .AND. IFLAGT.EQ.1)THEN
                PPF=R1S95(N1INDX,N2)
              ELSEIF(ABS(ALPHAT-0.01).LE.EPS .AND. IFLAGT.EQ.1)THEN
                PPF=R1S99(N1INDX,N2)
              ELSE
                ALPHAT=ALPHAT/AN2
                CALL TPPF(ALPHAT,ANU,PPF)
                PPF=AFACT*ABS(PPF)
              ENDIF
              ALOWLM(I)=YMEAN - PPF*YSD
  360       CONTINUE
          ELSEIF(ICASA4.EQ.'TWOS')THEN
            DO365I=1,NALPHA
              ALPHAT=ALPHA(I)
              IF(ALPHAT.GE.1.0 .AND. ALPHAT.LT.100.0)ALPHAT=ALPHAT/100.
              IF(ALPHAT.LE.0.0 .OR. ALPHAT.GE.1.0)GOTO8000
              IF(ALPHAT.GT.0.5)ALPHAT=1.0 - ALPHAT
              IF(ABS(ALPHAT-0.10).LE.EPS .AND. IFLAGT.EQ.1)THEN
                PPF=R2S90(N1INDX,N2)
              ELSEIF(ABS(ALPHAT-0.05).LE.EPS .AND. IFLAGT.EQ.1)THEN
                PPF=R2S95(N1INDX,N2)
              ELSEIF(ABS(ALPHAT-0.01).LE.EPS .AND. IFLAGT.EQ.1)THEN
                PPF=R2S99(N1INDX,N2)
              ELSE
                ALPHAT=ALPHAT/(2.0*AN2)
                CALL TPPF(ALPHAT,ANU,PPF)
                PPF=AFACT*ABS(PPF)
              ENDIF
              ALOWLM(I)=YMEAN - PPF*YSD
              AUPPLM(I)=YMEAN + PPF*YSD
  365       CONTINUE
          ENDIF
        ELSEIF(ICASA2.EQ.'UPPE')THEN
          IF(ICASA4.EQ.'ONES')THEN
            DO370I=1,NALPHA
              ALPHAT=ALPHA(I)
              IF(ALPHAT.GE.1.0 .AND. ALPHAT.LT.100.0)ALPHAT=ALPHAT/100.
              IF(ALPHAT.LE.0.0 .OR. ALPHAT.GE.1.0)GOTO8000
              IF(ALPHAT.GT.0.5)ALPHAT=1.0 - ALPHAT
              IF(ABS(ALPHAT-0.10).LE.EPS .AND. IFLAGT.EQ.1)THEN
                PPF=R1S90(N1INDX,N2)
              ELSEIF(ABS(ALPHAT-0.05).LE.EPS .AND. IFLAGT.EQ.1)THEN
                PPF=R1S95(N1INDX,N2)
              ELSEIF(ABS(ALPHAT-0.01).LE.EPS .AND. IFLAGT.EQ.1)THEN
                PPF=R1S99(N1INDX,N2)
              ELSE
                ALPHAT=ALPHAT/AN2
                CALL TPPF(ALPHAT,ANU,PPF)
                PPF=AFACT*ABS(PPF)
              ENDIF
              AUPPLM(I)=YMEAN + PPF*YSD
  370       CONTINUE
          ELSEIF(ICASA4.EQ.'TWOS')THEN
            DO375I=1,NALPHA
              ALPHAT=ALPHA(I)
              IF(ALPHAT.GE.1.0 .AND. ALPHAT.LT.100.0)ALPHAT=ALPHAT/100.
              IF(ALPHAT.LE.0.0 .OR. ALPHAT.GE.1.0)GOTO8000
              IF(ALPHAT.GT.0.5)ALPHAT=1.0 - ALPHAT
              IF(ABS(ALPHAT-0.10).LE.EPS .AND. IFLAGT.EQ.1)THEN
                PPF=R2S90(N1INDX,N2)
              ELSEIF(ABS(ALPHAT-0.05).LE.EPS .AND. IFLAGT.EQ.1)THEN
                PPF=R2S95(N1INDX,N2)
              ELSEIF(ABS(ALPHAT-0.01).LE.EPS .AND. IFLAGT.EQ.1)THEN
                PPF=R2S99(N1INDX,N2)
              ELSE
                ALPHAT=ALPHAT/(2.0*AN2)
                CALL TPPF(ALPHAT,ANU,PPF)
                PPF=AFACT*ABS(PPF)
              ENDIF
              ALOWLM(I)=YMEAN - PPF*YSD
              AUPPLM(I)=YMEAN + PPF*YSD
  375       CONTINUE
          ENDIF
        ENDIF
      ELSEIF(ICASAN.EQ.'SDLI')THEN
        NU1=N1-1
        NU2=N2-1
        IF(ICASA2.EQ.'LOWE')THEN
          IF(ICASA4.EQ.'ONES')THEN
            DO460I=1,NALPHA
              ALPHAT=ALPHA(I)
              IF(ALPHAT.GE.1.0 .AND. ALPHAT.LT.100.0)ALPHAT=ALPHAT/100.
              IF(ALPHAT.LE.0.0 .OR. ALPHAT.GE.1.0)GOTO8000
              IF(ALPHAT.LT.0.5)ALPHAT=1.0 - ALPHAT
              CALL FPPF(ALPHAT,NU1,NU2,PPF)
              ALOWLM(I)=YSD*SQRT(1.0/PPF)
              CALL FPPF(ALPHAT,NU2,NU1,PPF)
              AUPPLM(I)=YSD*SQRT(PPF)
  460       CONTINUE
          ELSEIF(ICASA4.EQ.'TWOS')THEN
            DO465I=1,NALPHA
              ALPHAT=ALPHA(I)
              IF(ALPHAT.GE.1.0 .AND. ALPHAT.LT.100.0)ALPHAT=ALPHAT/100.
              IF(ALPHAT.LE.0.0 .OR. ALPHAT.GE.1.0)GOTO8000
              IF(ALPHAT.GT.0.5)ALPHAT=1.0 - ALPHAT
              ALPHAT=1.0 - (ALPHAT/2.0)
              CALL FPPF(ALPHAT,NU1,NU2,PPF)
              ALOWLM(I)=YSD*SQRT(1.0/PPF)
              CALL FPPF(ALPHAT,NU2,NU1,PPF)
              AUPPLM(I)=YSD*SQRT(PPF)
  465       CONTINUE
          ENDIF
        ELSEIF(ICASA2.EQ.'UPPE')THEN
          IF(ICASA4.EQ.'ONES')THEN
            DO470I=1,NALPHA
              ALPHAT=ALPHA(I)
              IF(ALPHAT.GE.1.0 .AND. ALPHAT.LT.100.0)ALPHAT=ALPHAT/100.
              IF(ALPHAT.LE.0.0 .OR. ALPHAT.GE.1.0)GOTO8000
              IF(ALPHAT.LT.0.5)ALPHAT=1.0 - ALPHAT
              CALL FPPF(ALPHAT,NU1,NU2,PPF)
              ALOWLM(I)=YSD*SQRT(1.0/PPF)
              CALL FPPF(ALPHAT,NU2,NU1,PPF)
              AUPPLM(I)=YSD*SQRT(PPF)
  470       CONTINUE
          ELSEIF(ICASA4.EQ.'TWOS')THEN
            DO475I=1,NALPHA
              ALPHAT=ALPHA(I)
              IF(ALPHAT.GE.1.0 .AND. ALPHAT.LT.100.0)ALPHAT=ALPHAT/100.
              IF(ALPHAT.LE.0.0 .OR. ALPHAT.GE.1.0)GOTO8000
              IF(ALPHAT.GT.0.5)ALPHAT=1.0 - ALPHAT
              ALPHAT=1.0 - (ALPHAT/2.0)
              CALL FPPF(ALPHAT,NU1,NU2,PPF)
              ALOWLM(I)=YSD*SQRT(1.0/PPF)
              CALL FPPF(ALPHAT,NU2,NU1,PPF)
              AUPPLM(I)=YSD*SQRT(PPF)
  475       CONTINUE
          ENDIF
        ENDIF
      ENDIF
      GOTO9000
C
 8000 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,101)
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,8001)I
 8001 FORMAT('      ROW ',I8,' OF ALPHA VALUES IS OUT OF RANGE.')
      CALL DPWRST('XXX','WRIT')
      WRITE(ICOUT,8003)ALPHA(I)
 8003 FORMAT('      THE VALUE OF ALPHA IS ',G15.7)
      CALL DPWRST('XXX','WRIT')
      IERROR='YES'
      GOTO9000
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'PRL3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9051)
 9051   FORMAT('**** AT THE END OF DPPRL3--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9052)YMEAN,YSD,PPF,AFACT
 9052   FORMAT('YMEAN,YSD,PPF,AFACT = ',4G15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9061)ALPHA(NALPHA),ALPHAT,ANU,PPF
 9061   FORMAT('ALPHA(NALPHA),ALPHAT,ANU,PPF = ',4G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END 
