      SUBROUTINE DPLAB(IANS,IANSLC,IWIDTH,IHARG,IHARG2,NUMARG,
     1                 IX1LTE,NCX1LA,IX1AUT,
     1                 IX2LTE,NCX2LA,IX2AUT,
     1                 IX3LTE,NCX3LA,IX3AUT,
     1                 IY1LTE,NCY1LA,IY1AUT,
     1                 IY2LTE,NCY2LA,IY2AUT,
     1                 IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--EXTRACT THE STRING TO BE USED AS ONE
C              ON THE 5 LABELS AVAILABLE AROUND A PLOT--
C                 1 TO THE LEFT  OF THE LEFT  VERTICAL FRAME LINE;
C                 1 TO THE RIGHT OF THE RIGHT VERTICAL FRAME LINE;
C                 3 BELOW THE BOTTOM HORIZONTAL FRAME LINE.
C     INPUT  ARGUMENTS--IANS   (A  CHARACTER VECTOR)
C                     --IWIDTH
C                     --IHARG  (A  CHARACTER VECTOR)
C                     --IHARG2  (A  CHARACTER VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--ILX1TE (A CHARACTER ARRAY
C                       CONTAINING THE FIRST  HORIZONTAL LABEL).
C                     --NCX1LA (AN INTEGER VARIABLE
C                       CONTAINING THE NUMBER OF CHARACTERS IN ILX1TE).
C                     --ILX2TE (A CHARACTER ARRAY
C                       CONTAINING THE SECOND HORIZONTAL LABEL).
C                     --NCX2LA (AN INTEGER VARIABLE
C                       CONTAINING THE NUMBER OF CHARACTERS IN ILX2TE).
C                     --ILX3TE (A CHARACTER ARRAY
C                       CONTAINING THE THIRD HORIZONTAL LABEL).
C                     --NCX3LA (AN INTEGER VARIABLE
C                       CONTAINING THE NUMBER OF CHARACTERS IN ILX3TE).
C                     --ILY1TE (A CHARACTER ARRAY
C                       CONTAINING THE FIRST VERTICAL LABEL).
C                     --NCY1LA (AN INTEGER VARIABLE
C                       CONTAINING THE NUMBER OF CHARACTERS IN ILY1TE).
C                     --ILY2TE (A CHARACTER ARRAY
C                       CONTAINING THE SECOND VERTICAL LABEL).
C                     --NCY2LA (AN INTEGER VARIABLE
C                       CONTAINING THE NUMBER OF CHARACTERS IN ILY2TE).
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--JANUARY    1978.
C     UPDATED         --JUNE      1978.
C     UPDATED         --MARCH     1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --AUGUST    1992. ADD SWITCHES FOR AUTOMATIC
C     UPDATED         --SEPTEMBER 1993. ALLOW LOWER CASE
C     UPDATED         --SEPTEMBER 1993. ACTIVATE   LABEL AUTOMATIC
C     UPDATED         --APRIL     2017. IN FEEDBACK MESSAGE, CHECK
C                                       FOR MAXIMUM STRING LENGTH
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IANS
CCCCC THE FOLLOWING LINE WAS CHANGED     SEPTEMBER 1993
CCCCC TO ALLOW FOR LOWER CASE            SEPTEMBER 1993
      CHARACTER*4 IANSLC
      CHARACTER*4 IHARG
CCCCC THE FOLLOWING LINE WAS ADDED AUGUST 1992
      CHARACTER*4 IHARG2
C
      CHARACTER*4 IX1LTE
      CHARACTER*4 IX2LTE
      CHARACTER*4 IX3LTE
      CHARACTER*4 IY1LTE
      CHARACTER*4 IY2LTE
C
CCCCC FOLLOWING LINES ADDED AUGUST 1992.
      CHARACTER*4 IX1AUT
      CHARACTER*4 IX2AUT
      CHARACTER*4 IX3AUT
      CHARACTER*4 IY1AUT
      CHARACTER*4 IY2AUT
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ILABT
C
C---------------------------------------------------------------------
C
      DIMENSION IANS(*)
CCCCC THE FOLLOWING LINE WAS CHANGED     SEPTEMBER 1993
CCCCC TO ALLOW FOR LOWER CASE            SEPTEMBER 1993
      DIMENSION IANSLC(*)
      DIMENSION IHARG(*)
CCCCC THE FOLLOWING LINE WAS ADDED AUGUST 1992
      DIMENSION IHARG2(*)
C
      DIMENSION IX1LTE(*)
      DIMENSION IX2LTE(*)
      DIMENSION IX3LTE(*)
      DIMENSION IY1LTE(*)
      DIMENSION IY2LTE(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(IBUGP2.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('AT THE BEGINNING OF DPLAB--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)NCX1LA,NCX2LA,NCX3LA,NCY1LA,NCY2LA
   53   FORMAT('NCX1LA,NCX2LA,NCX3LA,NCY1LA,NCY2LA = ',5I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,61)(IX1LTE(I),I=1,MIN(NCX1LA,100))
   61   FORMAT('(IX1LTE(I),I=1,NCX1LA) = ',100A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,62)(IX2LTE(I),I=1,MIN(NCX2LA,100))
   62   FORMAT('(IX2LTE(I),I=1,NCX2LA) = ',100A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,63)(IX3LTE(I),I=1,MIN(NCX3LA,100))
   63   FORMAT('(IX3LTE(I),I=1,NCX3LA) = ',100A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,64)(IY1LTE(I),I=1,MIN(NCY1LA,100))
   64   FORMAT('(IY1LTE(I),I=1,NCY1LA) = ',100A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,65)(IY2LTE(I),I=1,MIN(NCY2LA,100))
   65   FORMAT('(IY2LTE(I),I=1,NCY2LA) = ',100A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************************
C               **  STEP 1--                               **
C               **  DETERMINE THE COMMAND                  **
C               **  (       YLABEL = Y1LABEL, Y2LABEL,     **
C               **  XLABEL = X1LABEL, X2LABEL, X3LABEL)    **
C               **  AND DEFINE THE START POSITION (ISTART) **
C               **  FOR THE STRING.                        **
C               *********************************************
C
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'COLO')GOTO9000
      IF(NUMARG.EQ.2.AND.IHARG(1).EQ.'COLO')GOTO9000
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'SIZE')GOTO9000
      IF(NUMARG.EQ.2.AND.IHARG(1).EQ.'SIZE')GOTO9000
C
      DO1000I=1,IWIDTH
        I2=I
        IP1=I+1
        IP2=I+2
        IP3=I+3
        IP4=I+4
        IP5=I+5
        IP6=I+6
        IF(IANS(I).EQ.'Y'.AND.IANS(IP1).EQ.'L'.AND.
     1     IANS(IP2).EQ.'A'.AND.IANS(IP3).EQ.'B'.AND.
     1     IANS(IP4).EQ.'E'.AND.IANS(IP5).EQ.'L'.AND.IANS(IP6).EQ.' ')
     1     THEN
             ISTART=I2+7
             ILABT='Y'
             GOTO300
        ELSEIF(IANS(I).EQ.'Y'.AND.IANS(IP1).EQ.'1'.AND.
     1     IANS(IP2).EQ.'L'.AND.IANS(IP3).EQ.'A'.AND.
     1     IANS(IP4).EQ.'B'.AND.IANS(IP5).EQ.'E'.AND.IANS(IP6).EQ.'L')
     1     THEN
             ISTART=I2+8
             ILABT='Y1'
             GOTO300
        ELSEIF(IANS(I).EQ.'Y'.AND.IANS(IP1).EQ.'2'.AND.
     1     IANS(IP2).EQ.'L'.AND.IANS(IP3).EQ.'A'.AND.
     1     IANS(IP4).EQ.'B'.AND.IANS(IP5).EQ.'E'.AND.IANS(IP6).EQ.'L')
     1     THEN
             ISTART=I2+8
             ILABT='Y2'
             GOTO300
        ELSEIF(IANS(I).EQ.'X'.AND.IANS(IP1).EQ.'L'.AND.
     1     IANS(IP2).EQ.'A'.AND.IANS(IP3).EQ.'B'.AND.
     1     IANS(IP4).EQ.'E'.AND.IANS(IP5).EQ.'L'.AND.IANS(IP6).EQ.' ')
     1     THEN
             ISTART=I2+7
             ILABT='X1'
             GOTO300
        ELSEIF(IANS(I).EQ.'X'.AND.IANS(IP1).EQ.'1'.AND.
     1     IANS(IP2).EQ.'L'.AND.IANS(IP3).EQ.'A'.AND.
     1     IANS(IP4).EQ.'B'.AND.IANS(IP5).EQ.'E'.AND.IANS(IP6).EQ.'L')
     1     THEN
             ISTART=I2+8
             ILABT='X1'
             GOTO300
        ELSEIF(IANS(I).EQ.'X'.AND.IANS(IP1).EQ.'2'.AND.
     1     IANS(IP2).EQ.'L'.AND.IANS(IP3).EQ.'A'.AND.
     1     IANS(IP4).EQ.'B'.AND.IANS(IP5).EQ.'E'.AND.IANS(IP6).EQ.'L')
     1     THEN
             ISTART=I2+8
             ILABT='X2'
             GOTO300
        ELSEIF(IANS(I).EQ.'X'.AND.IANS(IP1).EQ.'3'.AND.
     1     IANS(IP2).EQ.'L'.AND.IANS(IP3).EQ.'A'.AND.
     1     IANS(IP4).EQ.'B'.AND.IANS(IP5).EQ.'E'.AND.IANS(IP6).EQ.'L')
     1     THEN
             ISTART=I2+8
             ILABT='X3'
             GOTO300
C
        ELSEIF(IANS(I).EQ.'L'.AND.IANS(IP1).EQ.'A'.AND.
     1     IANS(IP2).EQ.'B'.AND.IANS(IP3).EQ.'E'.AND.
     1     IANS(IP4).EQ.'L'.AND.IANS(IP5).EQ.' ')
     1     THEN
             ISTART=I2+6
             ILABT='ALL'
             GOTO300
        ELSEIF(IANS(I).EQ.'L'.AND.IANS(IP1).EQ.'A'.AND.
     1     IANS(IP2).EQ.'B'.AND.IANS(IP3).EQ.'E'.AND.
     1     IANS(IP4).EQ.'L'.AND.IANS(IP5).EQ.'S')
     1     THEN
             ISTART=I2+7
             ILABT='ALL'
             GOTO300
        ENDIF
C
 1000 CONTINUE
      WRITE(ICOUT,1001)
 1001 FORMAT('***** ERROR IN DPLAB--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1002)
 1002 FORMAT('      NO MATCH FOR COMMAND.')
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
C
C               ********************************************************
C               **  STEP 3--                                          **
C               **  DEFINE THE STOP POSITION (ISTOP) FOR THE STRING.  **
C               ********************************************************
C
  300 CONTINUE
      ISTOP=0
      IF(ISTART.GT.IWIDTH)GOTO329
      DO320I=ISTART,IWIDTH
        IREV=IWIDTH-I+ISTART
        IF(IANS(IREV).NE.' ')THEN
           ISTOP=IREV
           GOTO329
        ENDIF
  320 CONTINUE
  329 CONTINUE
C
C               *****************************************
C               **  STEP 4--                           **
C               **  COPY OVER THE STRING OF INTEREST.  **
C               *****************************************
C
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'ON')GOTO359
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'OFF')GOTO359
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'DEFA')GOTO359
      IF(NUMARG.EQ.0)GOTO359
C
      IF(ISTART.GT.ISTOP)GOTO359
      IF(ISTOP.EQ.0)GOTO359
      J=0
      DO350I=ISTART,ISTOP
        J=J+1
C
CCCCC   THE FOLLOWING LINES WERE CHANGED   SEPTEMBER 1993
CCCCC   TO ALLOW FOR LOWER CASE            SEPTEMBER 1993
CCCCC   IF(ILABT.EQ.'Y1')IY1LTE(J)=IANS(I)
CCCCC   IF(ILABT.EQ.'Y2')IY2LTE(J)=IANS(I)
CCCCC   IF(ILABT.EQ.'X1')IX1LTE(J)=IANS(I)
CCCCC   IF(ILABT.EQ.'X2')IX2LTE(J)=IANS(I)
CCCCC   IF(ILABT.EQ.'X3')IX3LTE(J)=IANS(I)
CCCCC   IF(ILABT.EQ.'Y')IY1LTE(J)=IANS(I)
CCCCC   IF(ILABT.EQ.'Y')IY2LTE(J)=IANS(I)
CCCCC   IF(ILABT.EQ.'ALL')IY1LTE(J)=IANS(I)
CCCCC   IF(ILABT.EQ.'ALL')IY2LTE(J)=IANS(I)
CCCCC   IF(ILABT.EQ.'ALL')IX1LTE(J)=IANS(I)
CCCCC   IF(ILABT.EQ.'ALL')IX2LTE(J)=IANS(I)
CCCCC   IF(ILABT.EQ.'ALL')IX3LTE(J)=IANS(I)
C
        IF(ILABT.EQ.'Y1')IY1LTE(J)=IANSLC(I)
        IF(ILABT.EQ.'Y2')IY2LTE(J)=IANSLC(I)
        IF(ILABT.EQ.'X1')IX1LTE(J)=IANSLC(I)
        IF(ILABT.EQ.'X2')IX2LTE(J)=IANSLC(I)
        IF(ILABT.EQ.'X3')IX3LTE(J)=IANSLC(I)
        IF(ILABT.EQ.'Y')IY1LTE(J)=IANSLC(I)
        IF(ILABT.EQ.'Y')IY2LTE(J)=IANSLC(I)
        IF(ILABT.EQ.'ALL')IY1LTE(J)=IANSLC(I)
        IF(ILABT.EQ.'ALL')IY2LTE(J)=IANSLC(I)
        IF(ILABT.EQ.'ALL')IX1LTE(J)=IANSLC(I)
        IF(ILABT.EQ.'ALL')IX2LTE(J)=IANSLC(I)
        IF(ILABT.EQ.'ALL')IX3LTE(J)=IANSLC(I)
C
  350 CONTINUE
C
      IF(ILABT.EQ.'Y1')NCY1LA=J
      IF(ILABT.EQ.'Y2')NCY2LA=J
      IF(ILABT.EQ.'X1')NCX1LA=J
      IF(ILABT.EQ.'X2')NCX2LA=J
      IF(ILABT.EQ.'X3')NCX3LA=J
      IF(ILABT.EQ.'Y')NCY1LA=J
      IF(ILABT.EQ.'Y')NCY2LA=J
      IF(ILABT.EQ.'ALL')NCY1LA=J
      IF(ILABT.EQ.'ALL')NCY2LA=J
      IF(ILABT.EQ.'ALL')NCX1LA=J
      IF(ILABT.EQ.'ALL')NCX2LA=J
      IF(ILABT.EQ.'ALL')NCX3LA=J
C
      GOTO800
  359 CONTINUE
C
C               ************************************
C               **  STEP 5--                      **
C               **  TREAT THE EMPTY-STRING CASE.  **
C               ************************************
C
      IF(ILABT.EQ.'Y1')NCY1LA=0
      IF(ILABT.EQ.'Y2')NCY2LA=0
      IF(ILABT.EQ.'X1')NCX1LA=0
      IF(ILABT.EQ.'X2')NCX2LA=0
      IF(ILABT.EQ.'X3')NCX3LA=0
      IF(ILABT.EQ.'Y')NCY1LA=0
      IF(ILABT.EQ.'Y')NCY2LA=0
      IF(ILABT.EQ.'ALL')NCY1LA=0
      IF(ILABT.EQ.'ALL')NCY2LA=0
      IF(ILABT.EQ.'ALL')NCX1LA=0
      IF(ILABT.EQ.'ALL')NCX2LA=0
      IF(ILABT.EQ.'ALL')NCX3LA=0
      GOTO800
C
C               ***************************
C               **  STEP 6--             **
C               **  PRINT OUT A MESSAGE  **
C               ***************************
C
  800 CONTINUE
      IF(ILABT.EQ.'Y1')THEN
        IFOUND='YES'
        IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'AUTO'.AND.
     1     IHARG2(1).EQ.'MATI')THEN
          IY1AUT='ON'
        ELSE
           IY1AUT='OFF'
        ENDIF
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,811)
  811     FORMAT('THE LEFT   VERTICAL AXIS LABEL HAS JUST BEEN ',
     1           'SET TO')
          CALL DPWRST('XXX','BUG ')
          IF(NCY1LA.EQ.0)THEN
             WRITE(ICOUT,999)
             CALL DPWRST('XXX','BUG ')
          ELSE
            WRITE(ICOUT,812)(IY1LTE(I),I=1,MIN(119,NCY1LA))
  812       FORMAT(11X,119A1)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ELSEIF(ILABT.EQ.'Y2')THEN
        IFOUND='YES'
        IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'AUTO'.AND.
     1     IHARG2(1).EQ.'MATI')THEN
          IY2AUT='ON'
        ELSE
          IY2AUT='OFF'
        ENDIF
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,821)
  821     FORMAT('THE RIGHT  VERTICAL AXIS LABEL HAS JUST BEEN ',
     1           'SET TO')
          CALL DPWRST('XXX','BUG ')
          IF(NCY2LA.EQ.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ELSE
            WRITE(ICOUT,812)(IY2LTE(I),I=1,MIN(119,NCY2LA))
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ELSEIF(ILABT.EQ.'X1')THEN
        IFOUND='YES'
        IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'AUTO'.AND.
     1     IHARG2(1).EQ.'MATI')THEN
          IX1AUT='ON'
        ELSE
          IX1AUT='OFF'
        ENDIF
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,831)
  831     FORMAT('THE FIRST  HORIZONTAL AXIS LABEL HAS JUST BEEN ',
     1           'SET TO')
          CALL DPWRST('XXX','BUG ')
          IF(NCX1LA.EQ.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ELSE
            WRITE(ICOUT,812)(IX1LTE(I),I=1,MIN(119,NCX1LA))
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ELSEIF(ILABT.EQ.'X2')THEN
        IFOUND='YES'
        IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'AUTO'.AND.
     1     IHARG2(1).EQ.'MATI')THEN
          IX2AUT='ON'
        ELSE
          IX2AUT='OFF'
        ENDIF
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,841)
  841     FORMAT('THE SECOND HORIZONTAL AXIS LABEL HAS JUST BEEN ',
     1           'SET TO')
          CALL DPWRST('XXX','BUG ')
          IF(NCX2LA.EQ.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ELSE
            WRITE(ICOUT,812)(IX2LTE(I),I=1,MIN(119,NCX2LA))
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ELSEIF(ILABT.EQ.'X3')THEN
        IFOUND='YES'
        IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'AUTO'.AND.
     1     IHARG2(1).EQ.'MATI')THEN
          IX3AUT='ON'
        ELSE
          IX3AUT='OFF'
        ENDIF
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,851)
  851     FORMAT('THE THIRD  HORIZONTAL AXIS LABEL HAS JUST BEEN ',
     1           'SET TO')
          CALL DPWRST('XXX','BUG ')
          IF(NCX3LA.EQ.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ELSE
            WRITE(ICOUT,812)(IX3LTE(I),I=1,MIN(119,NCX3LA))
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ELSEIF(ILABT.EQ.'Y')THEN
        IFOUND='YES'
        IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'AUTO'.AND.
     1     IHARG2(1).EQ.'MATI')THEN
          IY1AUT='ON'
          IY2AUT='ON'
        ELSE
          IY1AUT='OFF'
          IY2AUT='OFF'
        ENDIF
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,861)
  861     FORMAT('THE LEFT AND RIGHT VERTICAL AXIS LABELS ',
     1           'HAVE JUST BEEN SET TO')
          CALL DPWRST('XXX','BUG ')
          IF(NCY1LA.EQ.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ELSE
            WRITE(ICOUT,812)(IY1LTE(I),I=1,MIN(119,NCY1LA))
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ELSEIF(ILABT.EQ.'ALL')THEN
        IFOUND='YES'
        IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'AUTO'.AND.
     1     IHARG2(1).EQ.'MATI')THEN
          IY1AUT='ON'
          IY2AUT='ON'
          IX1AUT='ON'
          IX2AUT='ON'
          IX3AUT='ON'
        ELSE
          IY1AUT='OFF'
          IY2AUT='OFF'
          IX1AUT='OFF'
          IX2AUT='OFF'
          IX3AUT='OFF'
        ENDIF
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,871)
  871     FORMAT('ALL 5 LABELS (THE 2 VERTICAL AND THE 3 BOTTOM ',
     1           'HORIZONTAL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,872)
  872     FORMAT('HAVE JUST BEEN SET TO')
          CALL DPWRST('XXX','BUG ')
          IF(NCY1LA.EQ.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
          ELSE
            WRITE(ICOUT,812)(IY1LTE(I),I=1,MIN(119,NCY1LA))
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ENDIF
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT      **
C               ****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('AT THE END       OF DPLAB--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NCX1LA,NCX2LA,NCX3LA,NCY1LA,NCY2LA
 9013   FORMAT('NCX1LA,NCX2LA,NCX3LA,NCY1LA,NCY2LA = ',5I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9021)(IX1LTE(I),I=1,NCX1LA)
 9021   FORMAT('(IX1LTE(I),I=1,NCX1LA) = ',100A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9022)(IX2LTE(I),I=1,NCX2LA)
 9022   FORMAT('(IX2LTE(I),I=1,NCX2LA) = ',100A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9023)(IX3LTE(I),I=1,NCX3LA)
 9023   FORMAT('(IX3LTE(I),I=1,NCX3LA) = ',100A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9024)(IY1LTE(I),I=1,NCY1LA)
 9024   FORMAT('(IY1LTE(I),I=1,NCY1LA) = ',100A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9025)(IY2LTE(I),I=1,NCY2LA)
 9025   FORMAT('(IY2LTE(I),I=1,NCY2LA) = ',100A1)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLAAN(ICOM,IHARG,IARGT,ARG,NUMARG,
     1PDEFAN,
     1PX1LAN,PX2LAN,PX3LAN,PY1LAN,PY2LAN,
     1IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LABEL ANGLES
C              FOR ANY OF THE 5 LABELS.
C              THE LABEL ANGLE SWITCHES FOR THE LABELS
C              ARE CONTAINED IN THE VARIABLES--
C                    PX1LAN,PX2LAN,PX3LAN,PY1LAN,PY2LAN
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A  HOLLERITH VECTOR)
C                     --ARG    (A  FLOATING POINT VECTOR)
C                     --NUMARG
C                     --PDEFAN (DEFAULT ANGLE)
C     OUTPUT ARGUMENTS--PX1LAN,
C                       PX2LAN,
C                       PX3LAN,
C                       PY1LAN,
C                       PY2LAN
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/11
C     ORIGINAL VERSION--NOVEMBER  1999.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)GOTO1900
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'ANGL')GOTO1090
      GOTO1900
 1090 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE FIRST  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'XLAB')GOTO1100
      IF(ICOM.EQ.'X1LA')GOTO1100
      GOTO1199
C
 1100 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'ANGL')GOTO1150
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1160
      IERROR='YES'
      GOTO9000
C
 1150 CONTINUE
      HOLD1=PDEFAN
      GOTO1180
C
 1160 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      PX1LAN=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE LABEL ANGLE (FOR THE FIRST  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)HOLD1
 1182 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1900
C
 1199 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE SECOND HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X2LA')GOTO1200
      GOTO1299
C
 1200 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1250
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1250
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1250
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1250
      IF(IHARG(NUMARG).EQ.'ANGL')GOTO1250
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1260
      IERROR='YES'
      GOTO9000
C
 1250 CONTINUE
      HOLD1=PDEFAN
      GOTO1280
C
 1260 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1280
C
 1280 CONTINUE
      IFOUND='YES'
      PX2LAN=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1289
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1281)
 1281 FORMAT('THE LABEL ANGLE (FOR THE SECOND HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1282)HOLD1
 1282 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1289 CONTINUE
      GOTO1900
C
 1299 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE THIRD  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X3LA')GOTO1300
      GOTO1399
C
 1300 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1350
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1350
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1350
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1350
      IF(IHARG(NUMARG).EQ.'ANGL')GOTO1350
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1360
      IERROR='YES'
      GOTO9000
C
 1350 CONTINUE
      HOLD1=PDEFAN
      GOTO1380
C
 1360 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1380
C
 1380 CONTINUE
      IFOUND='YES'
      PX3LAN=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1389
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1381)
 1381 FORMAT('THE LABEL ANGLE (FOR THE THIRD  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1382)HOLD1
 1382 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1389 CONTINUE
      GOTO1900
C
 1399 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE LEFT   VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y1LA')GOTO1400
      GOTO1499
C
 1400 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1450
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1450
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1450
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1450
      IF(IHARG(NUMARG).EQ.'ANGL')GOTO1450
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1460
      IERROR='YES'
      GOTO9000
C
 1450 CONTINUE
      HOLD1=90.0
      GOTO1480
C
 1460 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1480
C
 1480 CONTINUE
      IFOUND='YES'
      PY1LAN=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1489
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1481)
 1481 FORMAT('THE LABEL ANGLE (FOR THE LEFT   VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1482)HOLD1
 1482 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1489 CONTINUE
      GOTO1900
C
 1499 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y2LA')GOTO1500
      GOTO1599
C
 1500 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1550
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1550
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1550
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1550
      IF(IHARG(NUMARG).EQ.'ANGL')GOTO1550
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1560
      IERROR='YES'
      GOTO9000
C
 1550 CONTINUE
      HOLD1=90.0
      GOTO1580
C
 1560 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1580
C
 1580 CONTINUE
      IFOUND='YES'
      PY2LAN=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1589
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1581)
 1581 FORMAT('THE LABEL ANGLE (FOR THE RIGHT  VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1582)HOLD1
 1582 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1589 CONTINUE
      GOTO1900
C
 1599 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  BOTH VERTICAL AXIS LABELS ARE TO BE CHANGED             **
C               **************************************************************
C
      IF(ICOM.EQ.'YLAB')GOTO1600
      GOTO1699
C
 1600 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1650
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1650
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1650
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1650
      IF(IHARG(NUMARG).EQ.'ANGL')GOTO1650
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1660
      IERROR='YES'
      GOTO9000
C
 1650 CONTINUE
      HOLD1=90.0
      GOTO1680
C
 1660 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1680
C
 1680 CONTINUE
      IFOUND='YES'
      PY1LAN=HOLD1
      PY2LAN=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1689
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1681)
 1681 FORMAT('THE LABEL ANGLE (FOR THE LEFT AND RIGHT VERTICAL ',
     1'LABELS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1682)HOLD1
 1682 FORMAT('HAVE JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1689 CONTINUE
      GOTO1900
C
 1699 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY ALL  5 LABELS ARE                   TO BE CHANGED  **
C               **************************************************************
C               **************************************************************
C
      IF(ICOM.EQ.'LABE')GOTO1700
      IF(ICOM.EQ.'XYLA')GOTO1700
      IF(ICOM.EQ.'YXLA')GOTO1700
      GOTO1799
C
 1700 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1750
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1750
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1750
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1750
      IF(IHARG(NUMARG).EQ.'ANGL')GOTO1750
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1760
      IERROR='YES'
      GOTO9000
C
 1750 CONTINUE
      HOLD1=PDEFAN
      HOLD2=90.0
      GOTO1780
C
 1760 CONTINUE
      HOLD1=ARG(NUMARG)
      HOLD2=ARG(NUMARG)
      GOTO1780
C
 1780 CONTINUE
      IFOUND='YES'
      PX1LAN=HOLD1
      PX2LAN=HOLD1
      PX3LAN=HOLD1
      PY1LAN=HOLD2
      PY2LAN=HOLD2
C
      IF(IFEEDB.EQ.'OFF')GOTO1789
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1781)
 1781 FORMAT('THE LABEL ANGLE FOR ALL 3 HORIZONTAL LABELS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1782)HOLD1
 1782 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1786)
 1786 FORMAT('THE LABEL ANGLE FOR BOTH VERTICAL LABELS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1787)HOLD2
 1787 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1789 CONTINUE
      GOTO1900
C
 1799 CONTINUE
C
 1900 CONTINUE
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPLACA(ICOM,IHARG,NUMARG,
     1IDEFCA,
     1IX1LCA,IX2LCA,IX3LCA,IY1LCA,IY2LCA,
     1IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LABEL CASE SWITCHES
C              FOR ANY OF THE 5 LABELS.
C              SUCH LABEL CASE SWITCHES DEFINE THE CASE
C              FOR EACH OF THE 5 LABELS.
C              THE CONTENTS OF A LABEL CASE SWITCH ARE
C              A CASE.
C              THE LABEL CASE SWITCHES FOR THE 5 LABELS
C              ARE CONTAINED IN IX1LCA,IX2LCA,IX3LCA,IY1LCA,IY2LCA.
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFCA
C     OUTPUT ARGUMENTS--IX1LCA (A HOLLERITH VARIABLE
C                       DENOTING THE CASE OF THE FIRST HORIZ. LABEL
C                     --IX2LCA (A HOLLERITH VARIABLE
C                       DENOTING THE CASE OF THE SECOND HORIZ. LABEL
C                     --IX3LCA (A HOLLERITH VARIABLE
C                       DENOTING THE CASE OF THE THIRD HORIZ. LABEL
C                     --IY1LCA (A HOLLERITH VARIABLE
C                       DENOTING THE CASE OF THE FIRST VERT. LABEL
C                     --IY2LCA (A HOLLERITH VARIABLE
C                       DENOTING THE CASE OF THE SECOND VERT. LABEL
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--OCTOBER   1980.
C     UPDATED         --MARCH     1981.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
C
      CHARACTER*4 IDEFCA
C
      CHARACTER*4 IX1LCA
      CHARACTER*4 IX2LCA
      CHARACTER*4 IX3LCA
      CHARACTER*4 IY1LCA
      CHARACTER*4 IY2LCA
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)GOTO1900
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'CASE')GOTO1090
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'MARK'.AND.
     1IHARG(2).EQ.'CASE')GOTO1090
      GOTO1900
 1090 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE FIRST  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'XLAB')GOTO1100
      IF(ICOM.EQ.'X1LA')GOTO1100
      GOTO1199
C
 1100 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'CASE')GOTO1150
      GOTO1160
C
 1150 CONTINUE
      IHOLD=IDEFCA
      GOTO1180
C
 1160 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      IX1LCA=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE LABEL CASE (FOR THE FIRST  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)IHOLD
 1182 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1900
C
 1199 CONTINUE
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE SECOND HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X2LA')GOTO1200
      GOTO1299
C
 1200 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1250
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1250
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1250
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1250
      IF(IHARG(NUMARG).EQ.'CASE')GOTO1250
      GOTO1260
C
 1250 CONTINUE
      IHOLD=IDEFCA
      GOTO1280
C
 1260 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1280
C
 1280 CONTINUE
      IFOUND='YES'
      IX2LCA=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1289
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1281)
 1281 FORMAT('THE LABEL CASE (FOR THE SECOND HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1282)IHOLD
 1282 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1289 CONTINUE
      GOTO1900
C
 1299 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE THIRD  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X3LA')GOTO1300
      GOTO1399
C
 1300 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1350
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1350
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1350
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1350
      IF(IHARG(NUMARG).EQ.'CASE')GOTO1350
      GOTO1360
C
 1350 CONTINUE
      IHOLD=IDEFCA
      GOTO1380
C
 1360 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1380
C
 1380 CONTINUE
      IFOUND='YES'
      IX3LCA=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1389
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1381)
 1381 FORMAT('THE LABEL CASE (FOR THE THIRD  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1382)IHOLD
 1382 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1389 CONTINUE
      GOTO1900
C
 1399 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE LEFT   VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y1LA')GOTO1400
      GOTO1499
C
 1400 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1450
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1450
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1450
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1450
      IF(IHARG(NUMARG).EQ.'CASE')GOTO1450
      GOTO1460
C
 1450 CONTINUE
      IHOLD=IDEFCA
      GOTO1480
C
 1460 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1480
C
 1480 CONTINUE
      IFOUND='YES'
      IY1LCA=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1489
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1481)
 1481 FORMAT('THE LABEL CASE (FOR THE LEFT   VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1482)IHOLD
 1482 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1489 CONTINUE
      GOTO1900
C
 1499 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y2LA')GOTO1500
      GOTO1599
C
 1500 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1550
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1550
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1550
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1550
      IF(IHARG(NUMARG).EQ.'CASE')GOTO1550
      GOTO1560
C
 1550 CONTINUE
      IHOLD=IDEFCA
      GOTO1580
C
 1560 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1580
C
 1580 CONTINUE
      IFOUND='YES'
      IY2LCA=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1589
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1581)
 1581 FORMAT('THE LABEL CASE (FOR THE RIGHT  VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1582)IHOLD
 1582 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1589 CONTINUE
      GOTO1900
C
 1599 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  BOTH LEFT AND RIGHT VERTICAL LABELS ARE TO BE CHANGED   **
C               **************************************************************
C
      IF(ICOM.EQ.'YLAB')GOTO1600
      GOTO1699
C
 1600 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1650
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1650
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1650
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1650
      IF(IHARG(NUMARG).EQ.'CASE')GOTO1650
      GOTO1660
C
 1650 CONTINUE
      IHOLD=IDEFCA
      GOTO1680
C
 1660 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1680
C
 1680 CONTINUE
      IFOUND='YES'
      IY1LCA=IHOLD
      IY2LCA=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1689
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1681)
 1681 FORMAT('THE LABEL CASE (FOR THE LEFT AND RIGHT VERTICAL ',
     1'LABELS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1682)IHOLD
 1682 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1689 CONTINUE
      GOTO1900
C
 1699 CONTINUE
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY ALL  5 LABELS ARE                   TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'LABE')GOTO1700
      IF(ICOM.EQ.'XYLA')GOTO1700
      IF(ICOM.EQ.'YXLA')GOTO1700
      GOTO1799
C
 1700 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1750
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1750
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1750
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1750
      IF(IHARG(NUMARG).EQ.'CASE')GOTO1750
      GOTO1760
C
 1750 CONTINUE
      IHOLD=IDEFCA
      GOTO1780
C
 1760 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1780
C
 1780 CONTINUE
      IFOUND='YES'
      IY1LCA=IHOLD
      IY2LCA=IHOLD
      IX1LCA=IHOLD
      IX2LCA=IHOLD
      IX3LCA=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1789
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1781)
 1781 FORMAT('THE LABEL CASE (FOR ALL 5 ',
     1'LABELS--3 HORIZONTAL AND 2 VERTICAL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1782)IHOLD
 1782 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1789 CONTINUE
      GOTO1900
C
 1799 CONTINUE
C
 1900 CONTINUE
      RETURN
      END
      SUBROUTINE DPLACL(ICOM,IARG,IHARG,NUMARG,IDEFCO,
     1                  IX1LCO,IX2LCO,IX3LCO,IY1LCO,IY2LCO,
     1                  IX1LC2,IX2LC2,IX3LC2,IY1LC2,IY2LC2,IRGBMX,
     1                  IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LABEL COLOR SWITCHES
C              FOR ANY OF THE 5 LABELS.
C              SUCH LABEL COLOR SWITCHES DEFINE THE COLOR
C              FOR EACH OF THE 5 LABELS.
C              THE CONTENTS OF A LABEL COLOR SWITCH ARE
C              A COLOR.
C              THE LABEL COLOR SWITCHES FOR THE 5 LABELS
C              ARE CONTAINED IN IX1LCO,IX2LCO,IX3LCO,IY1LCO,IY2LCO.
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFCO
C     OUTPUT ARGUMENTS--IX1LCO (A HOLLERITH VARIABLE
C                       DENOTING THE COLOR OF THE FIRST HORIZ. LABEL
C                     --IX2LCO (A HOLLERITH VARIABLE
C                       DENOTING THE COLOR OF THE SECOND HORIZ. LABEL
C                     --IX3LCO (A HOLLERITH VARIABLE
C                       DENOTING THE COLOR OF THE THIRD HORIZ. LABEL
C                     --IY1LCO (A HOLLERITH VARIABLE
C                       DENOTING THE COLOR OF THE FIRST VERT. LABEL
C                     --IY2LCO (A HOLLERITH VARIABLE
C                       DENOTING THE COLOR OF THE SECOND VERT. LABEL
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--OCTOBER   1980.
C     UPDATED         --MARCH     1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --OCTOBER   2020.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
      CHARACTER*4 IDEFCO
      CHARACTER*4 IX1LCO
      CHARACTER*4 IX2LCO
      CHARACTER*4 IX3LCO
      CHARACTER*4 IY1LCO
      CHARACTER*4 IY2LCO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARG(*)
      DIMENSION IX1LC2(*)
      DIMENSION IX2LC2(*)
      DIMENSION IX3LC2(*)
      DIMENSION IY1LC2(*)
      DIMENSION IY2LC2(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      IHOLD=IDEFCO
C
      IF(NUMARG.LE.0)GOTO9000
      IF(IHARG(1).EQ.'RGB ' .AND. IHARG(2).EQ.'COLO')GOTO2000
      IF(IHARG(1).EQ.'MARK' .AND. IHARG(2).EQ.'RGB ' .AND.
     1   IHARG(3).EQ.'COLO')GOTO2000
C
      IF((NUMARG.GE.1.AND.IHARG(1).EQ.'COLO') .OR.
     1   (NUMARG.GE.2.AND.IHARG(1).EQ.'MARK'.AND.
     1    IHARG(2).EQ.'COLO'))GOTO1090
C
      GOTO9000
C
 1090 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE FIRST  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'XLAB' .OR. ICOM.EQ.'X1LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          IHOLD=IDEFCO
        ELSE
          IHOLD=IHARG(NUMARG)
        ENDIF
C
        IFOUND='YES'
        IX1LCO=IHOLD
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1181)
 1181     FORMAT('THE LABEL COLOR (FOR THE FIRST  HORIZONTAL LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)IHOLD
 1182     FORMAT('HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE SECOND HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'X2LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          IHOLD=IDEFCO
        ELSE
          IHOLD=IHARG(NUMARG)
        ENDIF
C
        IFOUND='YES'
        IX2LCO=IHOLD
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1281)
 1281     FORMAT('THE LABEL COLOR (FOR THE SECOND HORIZONTAL LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1282)IHOLD
 1282     FORMAT('HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE THIRD  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'X3LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          IHOLD=IDEFCO
        ELSE
          IHOLD=IHARG(NUMARG)
        ENDIF
C
        IFOUND='YES'
        IX3LCO=IHOLD
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1381)
 1381     FORMAT('THE LABEL COLOR (FOR THE THIRD  HORIZONTAL LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1382)IHOLD
 1382     FORMAT('HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE LEFT   VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'Y1LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          IHOLD=IDEFCO
        ELSE
          IHOLD=IHARG(NUMARG)
        ENDIF
C
        IFOUND='YES'
        IY1LCO=IHOLD
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1481)
 1481     FORMAT('THE LABEL COLOR (FOR THE LEFT   VERTICAL   LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1482)IHOLD
 1482     FORMAT('HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'Y2LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          IHOLD=IDEFCO
        ELSE
          IHOLD=IHARG(NUMARG)
        ENDIF
C
        IFOUND='YES'
        IY2LCO=IHOLD
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1581)
 1581     FORMAT('THE LABEL COLOR (FOR THE RIGHT  VERTICAL   LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1582)IHOLD
 1582     FORMAT('HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  BOTH LEFT AND RIGHT VERTICAL LABELS ARE TO BE CHANGED   **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'YLAB')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          IHOLD=IDEFCO
        ELSE
          IHOLD=IHARG(NUMARG)
        ENDIF
C
        IFOUND='YES'
        IY1LCO=IHOLD
        IY2LCO=IHOLD
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1681)
 1681     FORMAT('THE LABEL COLOR (FOR THE LEFT AND RIGHT VERTICAL ',
     1           'LABELS)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1682)IHOLD
 1682     FORMAT('HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY ALL  5 LABELS ARE                   TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'LABE' .OR. ICOM.EQ.'XYLA' .OR.
     1       ICOM.EQ.'YXLA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          IHOLD=IDEFCO
        ELSE
          IHOLD=IHARG(NUMARG)
        ENDIF
C
        IFOUND='YES'
        IY1LCO=IHOLD
        IY2LCO=IHOLD
        IX1LCO=IHOLD
        IX2LCO=IHOLD
        IX3LCO=IHOLD
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1781)
 1781     FORMAT('THE LABEL COLOR (FOR ALL 5 LABELS--3 HORIZONTAL ',
     1           'AND 2 VERTICAL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1782)IHOLD
 1782     FORMAT('HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
      ENDIF
      GOTO9000
C
 2000 CONTINUE
      JHOLD1=-1
      JHOLD2=-1
      JHOLD3=-1
C
      IF((NUMARG.GE.2 .AND. IHARG(1).EQ.'RGB ' .AND.
     1    IHARG(2).EQ.'COLO') .OR.
     1   (NUMARG.GE.3 .AND. IHARG(1).EQ.'MARK'.AND.
     1    IHARG(2).EQ.'RGB ' .AND. IHARG(3).EQ.'COLO'))GOTO2090
C
      GOTO9000
C
 2090 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE FIRST  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'XLAB' .OR. ICOM.EQ.'X1LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          JHOLD1=-1
          JHOLD2=-1
          JHOLD3=-1
        ELSE
          JHOLD1=IARG(NUMARG-2)
          JHOLD2=IARG(NUMARG-1)
          JHOLD3=IARG(NUMARG)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
        ENDIF
C
        IFOUND='YES'
        IX1LC2(1)=JHOLD1
        IX1LC2(2)=JHOLD2
        IX1LC2(3)=JHOLD3
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2181)
 2181     FORMAT('THE LABEL RGB COLOR (FOR THE FIRST  HORIZONTAL ',
     1           'LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2182)JHOLD1,JHOLD2,JHOLD3
 2182     FORMAT('HAS JUST BEEN SET TO ',3I5)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE SECOND HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'X2LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          JHOLD1=-1
          JHOLD2=-1
          JHOLD3=-1
        ELSE
          JHOLD1=IARG(NUMARG-2)
          JHOLD2=IARG(NUMARG-1)
          JHOLD3=IARG(NUMARG)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
        ENDIF
C
        IFOUND='YES'
        IX2LC2(1)=JHOLD1
        IX2LC2(2)=JHOLD2
        IX2LC2(3)=JHOLD3
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2281)
 2281     FORMAT('THE LABEL RGB COLOR (FOR THE SECOND HORIZONTAL ',
     1           'LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2282)JHOLD1,JHOLD2,JHOLD3
 2282     FORMAT('HAS JUST BEEN SET TO ',3I5)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE THIRD  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'X3LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          JHOLD1=-1
          JHOLD2=-1
          JHOLD3=-1
        ELSE
          JHOLD1=IARG(NUMARG-2)
          JHOLD2=IARG(NUMARG-1)
          JHOLD3=IARG(NUMARG)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
        ENDIF
C
        IFOUND='YES'
        IX3LC2(1)=JHOLD1
        IX3LC2(2)=JHOLD2
        IX3LC2(3)=JHOLD3
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2381)
 2381     FORMAT('THE RGB LABEL COLOR (FOR THE THIRD  HORIZONTAL ',
     1           'LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2382)IHOLD
 2382     FORMAT('HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE LEFT   VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'Y1LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          JHOLD1=-1
          JHOLD2=-1
          JHOLD3=-1
        ELSE
          JHOLD1=IARG(NUMARG-2)
          JHOLD2=IARG(NUMARG-1)
          JHOLD3=IARG(NUMARG)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
        ENDIF
C
        IFOUND='YES'
        IY1LC2(1)=JHOLD1
        IY1LC2(2)=JHOLD2
        IY1LC2(3)=JHOLD3
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2481)
 2481     FORMAT('THE LABEL COLOR (FOR THE LEFT   VERTICAL   LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2482)IHOLD
 2482     FORMAT('HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'Y2LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          JHOLD1=-1
          JHOLD2=-1
          JHOLD3=-1
        ELSE
          JHOLD1=IARG(NUMARG-2)
          JHOLD2=IARG(NUMARG-1)
          JHOLD3=IARG(NUMARG)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
        ENDIF
C
        IFOUND='YES'
        IY2LC2(1)=JHOLD1
        IY2LC2(2)=JHOLD2
        IY2LC2(3)=JHOLD3
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2581)
 2581     FORMAT('THE LABEL COLOR (FOR THE RIGHT  VERTICAL  ',
     1           'LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2582)JHOLD1,JHOLD2,JHOLD3
 2582     FORMAT('HAS JUST BEEN SET TO ',3I5)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  BOTH LEFT AND RIGHT VERTICAL LABELS ARE TO BE CHANGED   **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'YLAB')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          JHOLD1=-1
          JHOLD2=-1
          JHOLD3=-1
        ELSE
          JHOLD1=IARG(NUMARG-2)
          JHOLD2=IARG(NUMARG-1)
          JHOLD3=IARG(NUMARG)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
        ENDIF
C
        IY1LCO=IHOLD
        IY2LCO=IHOLD
        IY1LC2(1)=JHOLD1
        IY1LC2(2)=JHOLD2
        IY1LC2(3)=JHOLD3
        IY2LC2(1)=JHOLD1
        IY2LC2(2)=JHOLD2
        IY2LC2(3)=JHOLD3
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2681)
 2681     FORMAT('THE LABEL RGB COLOR (FOR THE LEFT AND RIGHT ',
     1           'VERTICAL LABELS)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2682)JHOLD1,JHOLD2,JHOLD3
 2682     FORMAT('HAS JUST BEEN SET TO ',3I5)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY ALL  5 LABELS ARE                   TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'LABE' .OR. ICOM.EQ.'XYLA' .OR.
     1       ICOM.EQ.'YXLA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'COLO')THEN
          JHOLD1=-1
          JHOLD2=-1
          JHOLD3=-1
        ELSE
          JHOLD1=IARG(NUMARG-2)
          JHOLD2=IARG(NUMARG-1)
          JHOLD3=IARG(NUMARG)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
        ENDIF
C
        IFOUND='YES'
        IX1LC2(1)=JHOLD1
        IX1LC2(2)=JHOLD2
        IX1LC2(3)=JHOLD3
        IX2LC2(1)=JHOLD1
        IX2LC2(2)=JHOLD2
        IX2LC2(3)=JHOLD3
        IX3LC2(1)=JHOLD1
        IX3LC2(2)=JHOLD2
        IX3LC2(3)=JHOLD3
        IY1LC2(1)=JHOLD1
        IY1LC2(2)=JHOLD2
        IY1LC2(3)=JHOLD3
        IY2LC2(1)=JHOLD1
        IY2LC2(2)=JHOLD2
        IY2LC2(3)=JHOLD3
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2781)
 2781     FORMAT('THE LABEL RGB COLOR (FOR ALL 5 LABELS--3 HORIZONTAL ',
     1           'AND 2 VERTICAL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2782)JHOLD1,JHOLD2,JHOLD3
 2782     FORMAT('HAS JUST BEEN SET TO ',3I5)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
      ENDIF
      GOTO9000
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPLACO(ICOM,IHARG,IARGT,ARG,NUMARG,
     1                  PX1LXC,PX1LYC,PX2LXC,PX2LYC,PX3LXC,PX3LYC,
     1                  PY1LXC,PY1LYC,PY2LXC,PY2LYC,
     1                  IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LABEL COORDINATES FOR ANY OF THE 5 LABELS.
C              THE LABEL COORDINATE SWITCHES FOR THE LABELS
C              ARE CONTAINED IN THE VARIABLES--
C                    PX1LXC,PX1LYC,PX2LXC,PX2LYC,PX3LXC,PX3LYC,
C                    PY1LXC,PY1LYC,PY2LXC,PY2LYC,
C              THIS COMMAND IS PRIMARILY USED IN CERTAIN MACROS BY THE
C              DATAPLOT DEVELOPERS, BUT IT CAN BE USED GENERALLY.  BY
C              DEFAULT, AXIS LABELS ARE CENTER JUSTIFIED AT THE
C              MID-POINT OF THE FRAME CORNER COORDINATES.  JUSTIFICATION
C              (CENTER, LEFT, RIGHT) IS RELATIVE TO THAT POINT.  THE
C              MOST COMMON USAGE OF THIS COMMAND WOULD BE LEFT
C              JUSTIFICATION NEAR THE LEFT (BOTTOM) FRAME POINT OR
C              RIGHT JUSTIFICATION NEAR THE RIGHT (TOP) FRAME POINT.
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A  HOLLERITH VECTOR)
C                     --ARG    (A  FLOATING POINT VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--PX1LXC,PX1LYC,PX2LXC,PX2LYC,PX3LXC,PX3LYC,
C                       PY1LXC,PY1LYC,PY2LXC,PY2LYC,
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2018/10
C     ORIGINAL VERSION--OCTOBER   2018.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'COOR')GOTO1090
      GOTO9000
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE FIRST  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
 1090 CONTINUE
C
      IF(ICOM.EQ.'XLAB' .OR. ICOM.EQ.'X1LA')THEN
        IF(NUMARG.EQ.1)THEN
          PX1LXC=CPUMIN
          PX1LYC=CPUMIN
        ELSEIF(NUMARG.GE.2)THEN
          IF(IHARG(2).EQ.'ON'   .OR. IHARG(2).EQ.'OFF'  .OR.
     1       IHARG(2).EQ.'AUTO' .OR. IHARG(2).EQ.'DEFA')THEN
            PX1LXC=CPUMIN
          ELSEIF(IARGT(2).EQ.'NUMB')THEN
            PX1LXC=ARG(2)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IF(NUMARG.GE.3)THEN
          IF(IHARG(3).EQ.'ON'   .OR. IHARG(3).EQ.'OFF'  .OR.
     1       IHARG(3).EQ.'AUTO' .OR. IHARG(3).EQ.'DEFA')THEN
            PX1LYC=CPUMIN
          ELSEIF(IARGT(3).EQ.'NUMB')THEN
            PX1LYC=ARG(3)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IFOUND='YES'
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1181)
 1181     FORMAT('THE LABEL COORDINATES (FOR THE FIRST  ',
     1           'HORIZONTAL LABEL) ARE:')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)PX1LXC
 1182     FORMAT('     X COORDINATE: ',G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1183)PX1LYC
 1183     FORMAT('     Y COORDINATE: ',G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE SECOND HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'X2LA')THEN
        IF(NUMARG.EQ.1)THEN
          PX2LXC=CPUMIN
          PX2LYC=CPUMIN
        ELSEIF(NUMARG.GE.2)THEN
          IF(IHARG(2).EQ.'ON'   .OR. IHARG(2).EQ.'OFF'  .OR.
     1       IHARG(2).EQ.'AUTO' .OR. IHARG(2).EQ.'DEFA')THEN
            PX2LXC=CPUMIN
          ELSEIF(IARGT(2).EQ.'NUMB')THEN
            PX2LXC=ARG(2)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IF(NUMARG.GE.3)THEN
          IF(IHARG(3).EQ.'ON'   .OR. IHARG(3).EQ.'OFF'  .OR.
     1       IHARG(3).EQ.'AUTO' .OR. IHARG(3).EQ.'DEFA')THEN
            PX2LYC=CPUMIN
          ELSEIF(IARGT(3).EQ.'NUMB')THEN
            PX2LYC=ARG(3)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IFOUND='YES'
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1281)
 1281     FORMAT('THE LABEL COORDINATES (FOR THE SECOND ',
     1           'HORIZONTAL LABEL) ARE:')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)PX2LXC
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1183)PX2LYC
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE THIRD  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'X3LA')THEN
        IF(NUMARG.EQ.1)THEN
          PX3LXC=CPUMIN
          PX3LYC=CPUMIN
        ELSEIF(NUMARG.GE.2)THEN
          IF(IHARG(2).EQ.'ON'   .OR. IHARG(2).EQ.'OFF'  .OR.
     1       IHARG(2).EQ.'AUTO' .OR. IHARG(2).EQ.'DEFA')THEN
            PX3LXC=CPUMIN
          ELSEIF(IARGT(2).EQ.'NUMB')THEN
            PX3LXC=ARG(2)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IF(NUMARG.GE.3)THEN
          IF(IHARG(3).EQ.'ON'   .OR. IHARG(3).EQ.'OFF'  .OR.
     1       IHARG(3).EQ.'AUTO' .OR. IHARG(3).EQ.'DEFA')THEN
            PX3LYC=CPUMIN
          ELSEIF(IARGT(3).EQ.'NUMB')THEN
            PX3LYC=ARG(3)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IFOUND='YES'
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1381)
 1381     FORMAT('THE LABEL COORDINATES (FOR THE THIRD  ',
     1           'HORIZONTAL LABEL) ARE:')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)PX3LXC
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1183)PX3LYC
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE LEFT   VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'Y1LA')THEN
        IF(NUMARG.EQ.1)THEN
          PY1LXC=CPUMIN
          PY1LYC=CPUMIN
        ELSEIF(NUMARG.GE.2)THEN
          IF(IHARG(2).EQ.'ON'   .OR. IHARG(2).EQ.'OFF'  .OR.
     1       IHARG(2).EQ.'AUTO' .OR. IHARG(2).EQ.'DEFA')THEN
            PY1LXC=CPUMIN
          ELSEIF(IARGT(2).EQ.'NUMB')THEN
            PY1LXC=ARG(2)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IF(NUMARG.GE.3)THEN
          IF(IHARG(3).EQ.'ON'   .OR. IHARG(3).EQ.'OFF'  .OR.
     1       IHARG(3).EQ.'AUTO' .OR. IHARG(3).EQ.'DEFA')THEN
            PY1LYC=CPUMIN
          ELSEIF(IARGT(3).EQ.'NUMB')THEN
            PY1LYC=ARG(3)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IFOUND='YES'
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1481)
 1481     FORMAT('THE LABEL COORDINATES (FOR THE LEFT   ',
     1           'VERTICAL LABEL) ARE:')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)PY1LXC
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1183)PY1LYC
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'Y2LA')THEN
        IF(NUMARG.EQ.1)THEN
          PY2LXC=CPUMIN
          PY2LYC=CPUMIN
        ELSEIF(NUMARG.GE.2)THEN
          IF(IHARG(2).EQ.'ON'   .OR. IHARG(2).EQ.'OFF'  .OR.
     1       IHARG(2).EQ.'AUTO' .OR. IHARG(2).EQ.'DEFA')THEN
            PY2LXC=CPUMIN
          ELSEIF(IARGT(2).EQ.'NUMB')THEN
            PY2LXC=ARG(2)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IF(NUMARG.GE.3)THEN
          IF(IHARG(3).EQ.'ON'   .OR. IHARG(3).EQ.'OFF'  .OR.
     1       IHARG(3).EQ.'AUTO' .OR. IHARG(3).EQ.'DEFA')THEN
            PY2LYC=CPUMIN
          ELSEIF(IARGT(3).EQ.'NUMB')THEN
            PY2LYC=ARG(3)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IFOUND='YES'
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1581)
 1581     FORMAT('THE LABEL COORDINATES (FOR THE RIGHT  ',
     1           'VERTICAL LABEL) ARE:')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)PY2LXC
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1183)PY2LYC
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  BOTH VERTICAL AXIS LABELS ARE TO BE CHANGED             **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'YLAB')THEN
        IF(NUMARG.EQ.1)THEN
          PY1LXC=CPUMIN
          PY1LYC=CPUMIN
          PY2LXC=CPUMIN
          PY2LYC=CPUMIN
        ELSEIF(NUMARG.GE.2)THEN
          IF(IHARG(2).EQ.'ON'   .OR. IHARG(2).EQ.'OFF'  .OR.
     1       IHARG(2).EQ.'AUTO' .OR. IHARG(2).EQ.'DEFA')THEN
            PY1LXC=CPUMIN
            PY2LXC=CPUMIN
          ELSEIF(IARGT(2).EQ.'NUMB')THEN
            PY1LXC=ARG(2)
            PY2LXC=ARG(2)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IF(NUMARG.GE.3)THEN
          IF(IHARG(3).EQ.'ON'   .OR. IHARG(3).EQ.'OFF'  .OR.
     1       IHARG(3).EQ.'AUTO' .OR. IHARG(3).EQ.'DEFA')THEN
            PY1LYC=CPUMIN
            PY2LYC=CPUMIN
          ELSEIF(IARGT(3).EQ.'NUMB')THEN
            PY1LYC=ARG(3)
            PY2LYC=ARG(3)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IFOUND='YES'
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1681)
 1681     FORMAT('THE LABEL COORDINATES (FOR THE BOTH   ',
     1           'VERTICAL LABELS) ARE:')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)PY1LXC
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1183)PY1LYC
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY ALL  5 LABELS ARE                   TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'LABE' .OR. ICOM.EQ.'XYLA' .OR.
     1       ICOM.EQ.'YXLA')THEN
        IF(NUMARG.EQ.1)THEN
          PX1LXC=CPUMIN
          PX1LYC=CPUMIN
          PX2LXC=CPUMIN
          PX2LYC=CPUMIN
          PX3LXC=CPUMIN
          PX3LYC=CPUMIN
          PY1LXC=CPUMIN
          PY1LYC=CPUMIN
          PY2LXC=CPUMIN
          PY2LYC=CPUMIN
        ELSEIF(NUMARG.GE.2)THEN
          IF(IHARG(2).EQ.'ON'   .OR. IHARG(2).EQ.'OFF'  .OR.
     1       IHARG(2).EQ.'AUTO' .OR. IHARG(2).EQ.'DEFA')THEN
            PX1LXC=CPUMIN
            PX1LYC=CPUMIN
            PX2LXC=CPUMIN
            PX2LYC=CPUMIN
            PX3LXC=CPUMIN
            PX3LYC=CPUMIN
            PY1LXC=CPUMIN
            PY1LYC=CPUMIN
            PY2LXC=CPUMIN
            PY2LYC=CPUMIN
          ELSEIF(IARGT(2).EQ.'NUMB')THEN
            PX1LXC=ARG(2)
            PX2LXC=ARG(2)
            PX3LXC=ARG(2)
            PY1LXC=ARG(2)
            PY2LXC=ARG(2)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IF(NUMARG.GE.3)THEN
          IF(IHARG(3).EQ.'ON'   .OR. IHARG(3).EQ.'OFF'  .OR.
     1       IHARG(3).EQ.'AUTO' .OR. IHARG(3).EQ.'DEFA')THEN
            PX1LYC=CPUMIN
            PX2LYC=CPUMIN
            PX3LYC=CPUMIN
            PY1LYC=CPUMIN
            PY2LYC=CPUMIN
          ELSEIF(IARGT(3).EQ.'NUMB')THEN
            PX1LYC=ARG(3)
            PX2LYC=ARG(3)
            PX3LYC=ARG(3)
            PY1LYC=ARG(3)
            PY2LYC=ARG(3)
          ELSE
            IERROR='YES'
            GOTO9000
          ENDIF
        ENDIF
C
        IFOUND='YES'
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1781)
 1781     FORMAT('THE LABEL COORDINATES FOR ALL LABELS--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1783)
 1783     FORMAT('(THREE HORIZONTAL AND TWO VERTICAL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)PX1LXC
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1183)PX1LYC
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
      ENDIF
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPLADI(ICOM,IHARG,NUMARG,
     1IDEFDI,
     1IX1LDI,IX2LDI,IX3LDI,IY1LDI,IY2LDI,
     1IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LABEL DIRECTION SWITCHES
C              FOR ANY OF THE 5 LABELS.
C              SUCH LABEL DIRECTION SWITCHES DEFINE THE
C              DIRECTION FOR EACH OF THE 5 LABELS.
C              THE CONTENTS OF A LABEL DIRECTION SWITCH ARE
C              A DIRECTION.
C              THE LABEL DIRECTION SWITCHES FOR THE 5 LABELS
C              ARE CONTAINED IN IX1LDI,IX2LDI,IX3LDI,IY1LDI,IY2LDI.
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFFO
C     OUTPUT ARGUMENTS--IX1LDI (A HOLLERITH VARIABLE
C                       DENOTING THE DIRECTION OF THE FIRST HORIZ. LABEL
C                     --IX2LDI (A HOLLERITH VARIABLE
C                       DENOTING THE DIRECTION OF THE SECOND HORIZ. LABEL
C                     --IX3LDI (A HOLLERITH VARIABLE
C                       DENOTING THE DIRECTION OF THE THIRD HORIZ. LABEL
C                     --IY1LDI (A HOLLERITH VARIABLE
C                       DENOTING THE DIRECTION OF THE FIRST VERT. LABEL
C                     --IY2LDI (A HOLLERITH VARIABLE
C                       DENOTING THE DIRECTION OF THE SECOND VERT. LABEL
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/10
C     ORIGINAL VERSION--OCTOBER   1999.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
C
      CHARACTER*4 IDEFDI
C
      CHARACTER*4 IX1LDI
      CHARACTER*4 IX2LDI
      CHARACTER*4 IX3LDI
      CHARACTER*4 IY1LDI
      CHARACTER*4 IY2LDI
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
      CHARACTER*4 IHOL2
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)GOTO1900
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'DIRE')GOTO1090
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'MARK'.AND.
     1IHARG(2).EQ.'DIRE')GOTO1090
      GOTO1900
 1090 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE FIRST  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'XLAB')GOTO1100
      IF(ICOM.EQ.'X1LA')GOTO1100
      GOTO1199
C
 1100 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'DIRE')GOTO1150
      GOTO1160
C
 1150 CONTINUE
      IHOLD=IDEFDI
      GOTO1180
C
 1160 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      IX1LDI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE LABEL DIRECTION (FOR THE FIRST  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)IHOLD
 1182 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1900
C
 1199 CONTINUE
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE SECOND HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X2LA')GOTO1200
      GOTO1299
C
 1200 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1250
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1250
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1250
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1250
      IF(IHARG(NUMARG).EQ.'DIRE')GOTO1250
      GOTO1260
C
 1250 CONTINUE
      IHOLD=IDEFDI
      GOTO1280
C
 1260 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1280
C
 1280 CONTINUE
      IFOUND='YES'
      IX2LDI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1289
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1281)
 1281 FORMAT('THE LABEL DIRECTION (FOR THE SECOND HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1282)IHOLD
 1282 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1289 CONTINUE
      GOTO1900
C
 1299 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE THIRD  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X3LA')GOTO1300
      GOTO1399
C
 1300 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1350
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1350
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1350
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1350
      IF(IHARG(NUMARG).EQ.'DIRE')GOTO1350
      GOTO1360
C
 1350 CONTINUE
      IHOLD=IDEFDI
      GOTO1380
C
 1360 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1380
C
 1380 CONTINUE
      IFOUND='YES'
      IX3LDI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1389
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1381)
 1381 FORMAT('THE LABEL DIRECTION (FOR THE THIRD  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1382)IHOLD
 1382 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1389 CONTINUE
      GOTO1900
C
 1399 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE LEFT   VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y1LA')GOTO1400
      GOTO1499
C
 1400 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1450
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1450
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1450
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1450
      IF(IHARG(NUMARG).EQ.'DIRE')GOTO1450
      GOTO1460
C
 1450 CONTINUE
      IHOLD='VERT'
      GOTO1480
C
 1460 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1480
C
 1480 CONTINUE
      IFOUND='YES'
      IY1LDI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1489
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1481)
 1481 FORMAT('THE LABEL DIRECTION (FOR THE LEFT   VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1482)IHOLD
 1482 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1489 CONTINUE
      GOTO1900
C
 1499 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y2LA')GOTO1500
      GOTO1599
C
 1500 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1550
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1550
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1550
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1550
      IF(IHARG(NUMARG).EQ.'DIRE')GOTO1550
      GOTO1560
C
 1550 CONTINUE
      IHOLD='VERT'
      GOTO1580
C
 1560 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1580
C
 1580 CONTINUE
      IFOUND='YES'
      IY2LDI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1589
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1581)
 1581 FORMAT('THE LABEL DIRECTION (FOR THE RIGHT  VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1582)IHOLD
 1582 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1589 CONTINUE
      GOTO1900
C
 1599 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  BOTH LEFT AND RIGHT VERTICAL LABELS ARE TO BE CHANGED   **
C               **************************************************************
C
      IF(ICOM.EQ.'YLAB')GOTO1600
      GOTO1699
C
 1600 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1650
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1650
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1650
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1650
      IF(IHARG(NUMARG).EQ.'DIRE')GOTO1650
      GOTO1660
C
 1650 CONTINUE
      IHOLD='VERT'
      GOTO1680
C
 1660 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1680
C
 1680 CONTINUE
      IFOUND='YES'
      IY1LDI=IHOLD
      IY2LDI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1689
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1681)
 1681 FORMAT('THE LABEL DIRECTION (FOR THE LEFT AND RIGHT  ',
     1'VERTICAL LABELS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1682)IHOLD
 1682 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1689 CONTINUE
      GOTO1900
C
 1699 CONTINUE
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY ALL  5 LABELS ARE                   TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'LABE')GOTO1700
      IF(ICOM.EQ.'XYLA')GOTO1700
      IF(ICOM.EQ.'YXLA')GOTO1700
      GOTO1799
C
 1700 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1750
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1750
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1750
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1750
      IF(IHARG(NUMARG).EQ.'DIRE')GOTO1750
      GOTO1760
C
 1750 CONTINUE
      IHOLD=IDEFDI
      IHOL2='VERT'
      GOTO1780
C
 1760 CONTINUE
      IHOLD=IHARG(NUMARG)
      IHOL2=IHOLD
      GOTO1780
C
 1780 CONTINUE
      IFOUND='YES'
      IY1LDI=IHOL2
      IY2LDI=IHOL2
      IX1LDI=IHOLD
      IX2LDI=IHOLD
      IX3LDI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1789
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1781)
 1781 FORMAT('THE LABEL DIRECTION FOR ALL 3 ',
     1'HORIZONTAL LABELS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1782)IHOLD
 1782 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1783)
 1783 FORMAT('THE LABEL DIRECTION FOR BOTH ',
     1'VERITCAL LABELS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1782)IHOL2
      CALL DPWRST('XXX','BUG ')
 1789 CONTINUE
      GOTO1900
C
 1799 CONTINUE
C
 1900 CONTINUE
      RETURN
      END
      SUBROUTINE DPLADS(ICOM,IHARG,ARG,NUMARG,
     1PDEFDS,
     1PX1LDS,PX2LDS,PX3LDS,PY1LDS,PY2LDS,
     1IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LABEL DISPLACEMENT SWITCHES
C              FOR ANY OF THE 5 LABELS.
C              SUCH LABEL DISPLACEMENT SWITCHES DEFINE THE DISPLACEMENT
C              FOR EACH OF THE 5 LABELS.
C              THE CONTENTS OF A LABEL DISPLACEMENT SWITCH ARE
C              A DISPLACEMENT.
C              THE LABEL DISPLACEMENT SWITCHES FOR THE 5 LABELS
C              ARE CONTAINED IN PX1LDS,PX2LDS,PX3LDS,PY1LDS,PY2LDS.
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --ARG    (A REAL VECTOR)
C                     --NUMARG
C                     --PDEFDS
C     OUTPUT ARGUMENTS--PX1LDS (A REAL VARIABLE
C                       DENOTING THE DISPLACEMENT OF THE FIRST HORIZ. LABEL
C                     --PX2LDS (A REAL VARIABLE
C                       DENOTING THE DISPLACEMENT OF THE SECOND HORIZ. LABEL
C                     --PX3LDS (A REAL VARIABLE
C                       DENOTING THE DISPLACEMENT OF THE THIRD HORIZ. LABEL
C                     --PY1LDS (A REAL VARIABLE
C                       DENOTING THE DISPLACEMENT OF THE FIRST VERT. LABEL
C                     --PY2LDS (A REAL VARIABLE
C                       DENOTING THE DISPLACEMENT OF THE SECOND VERT. LABEL
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--89/8
C     ORIGINAL VERSION--JULY      1989.
C     UPDATED         --MAY       1992.   FIX DEFAULT VALUES
C     UPDATED         --DECEMBER  1992.   FIX MESSAGE FOR DEFAULT VALUE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION ARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)GOTO1900
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'DISP')GOTO1090
CCCCC LABEL OFFSET NOW REFERS TO HORIZONTAL POSITIONING.
CCCCC IF(NUMARG.GE.1.AND.IHARG(1).EQ.'OFFS')GOTO1090
      GOTO1900
 1090 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE FIRST  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'XLAB')GOTO1100
      IF(ICOM.EQ.'X1LA')GOTO1100
      GOTO1199
C
 1100 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'DISP')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1150
      GOTO1160
C
 1150 CONTINUE
CCCCC THE FOLLOWING LINE WAS FIXED MAY 1992 (JJF)
CCCCC PHOLD=PDEFDS
      PHOLD=2.0+2.0*PDEFDS
      GOTO1180
C
 1160 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      PX1LDS=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE LABEL DISPLACEMENT (FOR THE FIRST  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)PHOLD
 1182 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1900
C
 1199 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE SECOND HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X2LA')GOTO1200
      GOTO1299
C
 1200 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1250
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1250
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1250
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1250
      IF(IHARG(NUMARG).EQ.'DISP')GOTO1250
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1250
      GOTO1260
C
 1250 CONTINUE
CCCCC THE FOLLOWING LINE WAS FIXED MAY 1992 (JJF)
CCCCC PHOLD=PDEFDS
      PHOLD=2.0+3.0*PDEFDS
      GOTO1280
C
 1260 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1280
C
 1280 CONTINUE
      IFOUND='YES'
      PX2LDS=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1289
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1281)
 1281 FORMAT('THE LABEL DISPLACEMENT (FOR THE SECOND HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1282)PHOLD
 1282 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1289 CONTINUE
      GOTO1900
C
 1299 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE THIRD  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X3LA')GOTO1300
      GOTO1399
C
 1300 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1350
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1350
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1350
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1350
      IF(IHARG(NUMARG).EQ.'DISP')GOTO1350
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1350
      GOTO1360
C
 1350 CONTINUE
CCCCC THE FOLLOWING LINE WAS FIXED MAY 1992 (JJF)
CCCCC PHOLD=PDEFDS
      PHOLD=2.0+4.0*PDEFDS
      GOTO1380
C
 1360 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1380
C
 1380 CONTINUE
      IFOUND='YES'
      PX3LDS=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1389
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1381)
 1381 FORMAT('THE LABEL DISPLACEMENT (FOR THE THIRD  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1382)PHOLD
 1382 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1389 CONTINUE
      GOTO1900
C
 1399 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE LEFT   VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y1LA')GOTO1400
      GOTO1499
C
 1400 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1450
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1450
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1450
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1450
      IF(IHARG(NUMARG).EQ.'DISP')GOTO1450
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1450
      GOTO1460
C
 1450 CONTINUE
CCCCC THE FOLLOWING LINE WAS FIXED MAY 1992 (JJF)
CCCCC PHOLD=PDEFDS
      PHOLD=2.0+2.0*PDEFDS
      GOTO1480
C
 1460 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1480
C
 1480 CONTINUE
      IFOUND='YES'
      PY1LDS=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1489
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1481)
 1481 FORMAT('THE LABEL DISPLACEMENT (FOR THE LEFT   VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1482)PHOLD
 1482 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1489 CONTINUE
      GOTO1900
C
 1499 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y2LA')GOTO1500
      GOTO1599
C
 1500 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1550
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1550
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1550
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1550
      IF(IHARG(NUMARG).EQ.'DISP')GOTO1550
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1550
      GOTO1560
C
 1550 CONTINUE
CCCCC THE FOLLOWING LINE WAS FIXED MAY 1992 (JJF)
CCCCC PHOLD=PDEFDS
      PHOLD=2.0+2.0*PDEFDS
      GOTO1580
C
 1560 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1580
C
 1580 CONTINUE
      IFOUND='YES'
      PY2LDS=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1589
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1581)
 1581 FORMAT('THE LABEL DISPLACEMENT (FOR THE RIGHT  VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1582)PHOLD
 1582 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1589 CONTINUE
      GOTO1900
C
 1599 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  BOTH LEFT AND RIGHT VERTICAL LABELS ARE TO BE CHANGED   **
C               **************************************************************
C
      IF(ICOM.EQ.'YLAB')GOTO1600
      GOTO1699
C
 1600 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1650
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1650
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1650
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1650
      IF(IHARG(NUMARG).EQ.'DISP')GOTO1650
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1650
      GOTO1660
C
 1650 CONTINUE
CCCCC THE FOLLOWING LINE WAS FIXED MAY 1992 (JJF)
CCCCC PHOLD=PDEFDS
      PHOLD=2.0+2.0*PDEFDS
      GOTO1680
C
 1660 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1680
C
 1680 CONTINUE
      IFOUND='YES'
      PY1LDS=PHOLD
      PY2LDS=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1689
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1681)
 1681 FORMAT('THE LABEL DISPLACEMENT (FOR THE LEFT AND RIGHT ',
     1'VERTICAL LABELS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1682)PHOLD
 1682 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1689 CONTINUE
      GOTO1900
C
 1699 CONTINUE
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **        ALL  5 LABELS ARE                   TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'LABE')GOTO1700
      IF(ICOM.EQ.'XYLA')GOTO1700
      IF(ICOM.EQ.'YXLA')GOTO1700
      GOTO1799
C
 1700 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1750
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1750
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1750
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1750
      IF(IHARG(NUMARG).EQ.'DISP')GOTO1750
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1750
      GOTO1760
C
 1750 CONTINUE
CCCCC THE FOLLOWING LINE WAS FIXED MAY 1992 (JJF)
CCCCC PHOLD=PDEFDS
      PX1LDS=2.0+2.0*PDEFDS
      PX2LDS=2.0+3.0*PDEFDS
      PX3LDS=2.0+4.0*PDEFDS
      PY1LDS=2.0+2.0*PDEFDS
      PY2LDS=2.0+2.0*PDEFDS
      GOTO1780
C
 1760 CONTINUE
      PHOLD=ARG(NUMARG)
CCCCC THE FOLLOWING 5 LINES WERE ADDED MAY 1992 (JJF)
      PX1LDS=PHOLD
      PX2LDS=PHOLD
      PX3LDS=PHOLD
      PY1LDS=PHOLD
      PY2LDS=PHOLD
      GOTO1780
C
 1780 CONTINUE
      IFOUND='YES'
CCCCC THE FOLLOWING 5 LINES WERE COMMENTED OUT MAY 1992 (JJF)
CCCCC PY1LDS=PHOLD
CCCCC PY2LDS=PHOLD
CCCCC PX1LDS=PHOLD
CCCCC PX2LDS=PHOLD
CCCCC PX3LDS=PHOLD
C
CCCCC DECEMBER 1992.  FIX MESSAGE.
CCCCC IF(IFEEDB.EQ.'OFF')GOTO1789
      IF(IFEEDB.EQ.'OFF')GOTO1798
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1781)
C1781 FORMAT('THE LABEL DISPLACEMENT (FOR ALL 5 ',
CCCCC1'LABELS--3 HORIZONTAL AND 2 VERTICAL)')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1782)PHOLD
C1782 FORMAT('HAS JUST BEEN SET TO ',E15.7)
CCCCC CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1781)
 1781 FORMAT('THE LABEL DISPLACEMENT (FOR THE FIRST HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1782)PX1LDS
 1782 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1783)
 1783 FORMAT('THE LABEL DISPLACEMENT (FOR THE SECOND HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1784)PX2LDS
 1784 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1786)
 1786 FORMAT('THE LABEL DISPLACEMENT (FOR THE THIRD HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1787)PX3LDS
 1787 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1796)
 1796 FORMAT('THE LABEL DISPLACEMENT (FOR THE LEFT AND RIGHT ',
     1'VERTICAL LABELS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1797)PY1LDS
 1797 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1798 CONTINUE
CCCCC END CHANGE
C1789 CONTINUE
      GOTO1900
C
 1799 CONTINUE
C
 1900 CONTINUE
      RETURN
      END
      SUBROUTINE DPLAFI(ICOM,IHARG,NUMARG,
     1IDEFFI,
     1IX1LFI,IX2LFI,IX3LFI,IY1LFI,IY2LFI,
     1IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LABEL FILL SWITCHES
C              FOR ANY OF THE 5 LABELS.
C              SUCH LABEL FILL SWITCHES DEFINE THE FILL
C              FOR EACH OF THE 5 LABELS.
C              THE CONTENTS OF A LABEL FILL SWITCH ARE
C              A FILL.
C              THE LABEL FILL SWITCHES FOR THE 5 LABELS
C              ARE CONTAINED IN IX1LFI,IX2LFI,IX3LFI,IY1LFI,IY2LFI.
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFFI
C     OUTPUT ARGUMENTS--IX1LFI (A HOLLERITH VARIABLE
C                       DENOTING THE FILL OF THE FIRST HORIZ. LABEL
C                     --IX2LFI (A HOLLERITH VARIABLE
C                       DENOTING THE FILL OF THE SECOND HORIZ. LABEL
C                     --IX3LFI (A HOLLERITH VARIABLE
C                       DENOTING THE FILL OF THE THIRD HORIZ. LABEL
C                     --IY1LFI (A HOLLERITH VARIABLE
C                       DENOTING THE FILL OF THE FIRST VERT. LABEL
C                     --IY2LFI (A HOLLERITH VARIABLE
C                       DENOTING THE FILL OF THE SECOND VERT. LABEL
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--OCTOBER   1980.
C     UPDATED         --MARCH     1981.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
C
      CHARACTER*4 IDEFFI
C
      CHARACTER*4 IX1LFI
      CHARACTER*4 IX2LFI
      CHARACTER*4 IX3LFI
      CHARACTER*4 IY1LFI
      CHARACTER*4 IY2LFI
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)GOTO1900
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'FILL')GOTO1090
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'MARK'.AND.
     1IHARG(2).EQ.'FILL')GOTO1090
      GOTO1900
 1090 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE FIRST  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'XLAB')GOTO1100
      IF(ICOM.EQ.'X1LA')GOTO1100
      GOTO1199
C
 1100 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1140
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'FILL')GOTO1150
      GOTO1160
C
 1140 CONTINUE
      IHOLD='SOLI'
      GOTO1180
C
 1150 CONTINUE
      IHOLD=IDEFFI
      GOTO1180
C
 1160 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      IX1LFI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE LABEL FILL (FOR THE FIRST  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)IHOLD
 1182 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1900
C
 1199 CONTINUE
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE SECOND HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X2LA')GOTO1200
      GOTO1299
C
 1200 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1240
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1250
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1250
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1250
      IF(IHARG(NUMARG).EQ.'FILL')GOTO1250
      GOTO1260
C
 1240 CONTINUE
      IHOLD='SOLI'
      GOTO1280
C
 1250 CONTINUE
      IHOLD=IDEFFI
      GOTO1280
C
 1260 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1280
C
 1280 CONTINUE
      IFOUND='YES'
      IX2LFI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1289
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1281)
 1281 FORMAT('THE LABEL FILL (FOR THE SECOND HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1282)IHOLD
 1282 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1289 CONTINUE
      GOTO1900
C
 1299 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE THIRD  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X3LA')GOTO1300
      GOTO1399
C
 1300 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1340
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1350
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1350
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1350
      IF(IHARG(NUMARG).EQ.'FILL')GOTO1350
      GOTO1360
C
 1340 CONTINUE
      IHOLD='SOLI'
      GOTO1380
C
 1350 CONTINUE
      IHOLD=IDEFFI
      GOTO1380
C
 1360 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1380
C
 1380 CONTINUE
      IFOUND='YES'
      IX3LFI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1389
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1381)
 1381 FORMAT('THE LABEL FILL (FOR THE THIRD  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1382)IHOLD
 1382 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1389 CONTINUE
      GOTO1900
C
 1399 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE LEFT   VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y1LA')GOTO1400
      GOTO1499
C
 1400 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1440
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1450
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1450
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1450
      IF(IHARG(NUMARG).EQ.'FILL')GOTO1450
      GOTO1460
C
 1440 CONTINUE
      IHOLD='SOLI'
      GOTO1480
C
 1450 CONTINUE
      IHOLD=IDEFFI
      GOTO1480
C
 1460 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1480
C
 1480 CONTINUE
      IFOUND='YES'
      IY1LFI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1489
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1481)
 1481 FORMAT('THE LABEL FILL (FOR THE LEFT   VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1482)IHOLD
 1482 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1489 CONTINUE
      GOTO1900
C
 1499 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y2LA')GOTO1500
      GOTO1599
C
 1500 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1540
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1550
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1550
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1550
      IF(IHARG(NUMARG).EQ.'FILL')GOTO1550
      GOTO1560
C
 1540 CONTINUE
      IHOLD='SOLI'
      GOTO1580
C
 1550 CONTINUE
      IHOLD=IDEFFI
      GOTO1580
C
 1560 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1580
C
 1580 CONTINUE
      IFOUND='YES'
      IY2LFI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1589
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1581)
 1581 FORMAT('THE LABEL FILL (FOR THE RIGHT  VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1582)IHOLD
 1582 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1589 CONTINUE
      GOTO1900
C
 1599 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  BOTH LEFT AND RIGHT VERTICAL LABELS ARE TO BE CHANGED   **
C               **************************************************************
C
      IF(ICOM.EQ.'YLAB')GOTO1600
      GOTO1699
C
 1600 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1640
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1650
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1650
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1650
      IF(IHARG(NUMARG).EQ.'FILL')GOTO1650
      GOTO1660
C
 1640 CONTINUE
      IHOLD='SOLI'
      GOTO1680
C
 1650 CONTINUE
      IHOLD=IDEFFI
      GOTO1680
C
 1660 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1680
C
 1680 CONTINUE
      IFOUND='YES'
      IY1LFI=IHOLD
      IY2LFI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1689
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1681)
 1681 FORMAT('THE LABEL FILL (FOR THE LEFT AND RIGHT VERTICAL ',
     1'LABELS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1682)IHOLD
 1682 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1689 CONTINUE
      GOTO1900
C
 1699 CONTINUE
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY ALL  5 LABELS ARE                   TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'LABE')GOTO1700
      IF(ICOM.EQ.'XYLA')GOTO1700
      IF(ICOM.EQ.'YXLA')GOTO1700
      GOTO1799
C
 1700 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1740
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1750
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1750
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1750
      IF(IHARG(NUMARG).EQ.'FILL')GOTO1750
      GOTO1760
C
 1740 CONTINUE
      IHOLD='SOLI'
      GOTO1780
C
 1750 CONTINUE
      IHOLD=IDEFFI
      GOTO1780
C
 1760 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1780
C
 1780 CONTINUE
      IFOUND='YES'
      IY1LFI=IHOLD
      IY2LFI=IHOLD
      IX1LFI=IHOLD
      IX2LFI=IHOLD
      IX3LFI=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1789
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1781)
 1781 FORMAT('THE LABEL FILL (FOR ALL 5 ',
     1'LABELS--3 HORIZONTAL AND 2 VERTICAL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1782)IHOLD
 1782 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1789 CONTINUE
      GOTO1900
C
 1799 CONTINUE
C
 1900 CONTINUE
      RETURN
      END
      SUBROUTINE DPLAFO(ICOM,IHARG,NUMARG,IDEFFO,
     1                  IX1LFO,IX2LFO,IX3LFO,IY1LFO,IY2LFO,
     1                  IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LABEL FONT SWITCHES FOR ANY OF THE 5 LABELS.
C              SUCH LABEL FONT SWITCHES DEFINE THE FONT FOR EACH OF
C              THE 5 LABELS.  THE CONTENTS OF A LABEL FONT SWITCH ARE
C              A FONT.  THE LABEL FONT SWITCHES FOR THE 5 LABELS
C              ARE CONTAINED IN IX1LFO,IX2LFO,IX3LJU,IY1LFO,IY2LJU.
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFFO
C     OUTPUT ARGUMENTS--IX1LFO (A HOLLERITH VARIABLE
C                       DENOTING THE FONT OF THE FIRST HORIZ. LABEL
C                     --IX2LFO (A HOLLERITH VARIABLE
C                       DENOTING THE FONT OF THE SECOND HORIZ. LABEL
C                     --IX3LJU (A HOLLERITH VARIABLE
C                       DENOTING THE FONT OF THE THIRD HORIZ. LABEL
C                     --IY1LFO (A HOLLERITH VARIABLE
C                       DENOTING THE FONT OF THE FIRST VERT. LABEL
C                     --IY2LJU (A HOLLERITH VARIABLE
C                       DENOTING THE FONT OF THE SECOND VERT. LABEL
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--FEBRUARY  1989.
C     UPDATED         --JULY      2021. "HARDWARE" AS SYNONYM FOR
C                                       "TEKTRONIX
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
C
      CHARACTER*4 IDEFFO
C
      CHARACTER*4 IX1LFO
      CHARACTER*4 IX2LFO
      CHARACTER*4 IX3LFO
      CHARACTER*4 IY1LFO
      CHARACTER*4 IY2LFO
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)GOTO1900
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'FONT')GOTO1090
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'MARK'.AND.
     1IHARG(2).EQ.'FONT')GOTO1090
      GOTO1900
C
 1090 CONTINUE
C
C               ********************************************
C               **  TREAT THE CASE WHEN ONLY THE FIRST    **
C               **  HORIZONTAL LABEL IS TO BE CHANGED     **
C               ********************************************
C
      IF(ICOM.EQ.'XLAB' .OR. ICOM.EQ.'X1LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'FONT')THEN
          IHOLD=IDEFFO
          GOTO1180
        ELSE
          IHOLD=IHARG(NUMARG)
          GOTO1180
        ENDIF
      ELSE
        GOTO1199
      ENDIF
C
 1180 CONTINUE
      IFOUND='YES'
      IX1LFO=IHOLD
      IF(IX1LFO.EQ.'HARD')IX1LFO='TEKT'
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1181)
 1181   FORMAT('THE LABEL FONT (FOR THE FIRST  HORIZONTAL LABEL)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1182)IX1LFO
 1182   FORMAT('HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO1900
C
 1199 CONTINUE
C               **********************************************
C               **  TREAT THE CASE WHEN ONLY THE SECOND     **
C               **  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **********************************************
C
      IF(ICOM.EQ.'X2LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'FONT')THEN
          IHOLD=IDEFFO
          GOTO1280
        ELSE
          IHOLD=IHARG(NUMARG)
          GOTO1280
        ENDIF
      ELSE
        GOTO1299
      ENDIF
C
 1280 CONTINUE
      IFOUND='YES'
      IX2LFO=IHOLD
      IF(IX2LFO.EQ.'HARD')IX2LFO='TEKT'
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1281)
 1281   FORMAT('THE LABEL FONT (FOR THE SECOND HORIZONTAL LABEL)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1282)IX2LFO
 1282   FORMAT('HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO1900
C
 1299 CONTINUE
C
C               **********************************************
C               **  TREAT THE CASE WHEN ONLY THE THIRD      **
C               **  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **********************************************
C
      IF(ICOM.EQ.'X3LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'FONT')THEN
          IHOLD=IDEFFO
          GOTO1380
        ELSE
          IHOLD=IHARG(NUMARG)
          GOTO1380
        ENDIF
      ELSE
        GOTO1399
      ENDIF
C
 1380 CONTINUE
      IFOUND='YES'
      IX3LFO=IHOLD
      IF(IX3LFO.EQ.'HARD')IX3LFO='TEKT'
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1381)
 1381   FORMAT('THE LABEL FONT (FOR THE THIRD  HORIZONTAL LABEL)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1382)IX3LFO
 1382   FORMAT('HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO1900
C
 1399 CONTINUE
C
C               **********************************************
C               **  TREAT THE CASE WHEN ONLY THE LEFT       **
C               **  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **********************************************
C
      IF(ICOM.EQ.'Y1LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'FONT')THEN
          IHOLD=IDEFFO
          GOTO1480
        ELSE
          IHOLD=IHARG(NUMARG)
          GOTO1480
        ENDIF
      ELSE
        GOTO1499
      ENDIF
C
 1480 CONTINUE
      IFOUND='YES'
      IY1LFO=IHOLD
      IF(IY1LFO.EQ.'HARD')IY1LFO='TEKT'
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1481)
 1481   FORMAT('THE LABEL FONT (FOR THE LEFT   VERTICAL   LABEL)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1482)IY1LFO
 1482   FORMAT('HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO1900
C
 1499 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN ONLY THE                   **
C               **  RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               *****************************************************
C
      IF(ICOM.EQ.'Y2LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'FONT')THEN
          IHOLD=IDEFFO
          GOTO1580
        ELSE
          IHOLD=IHARG(NUMARG)
          GOTO1580
        ENDIF
      ELSE
        GOTO1599
      ENDIF
C
 1580 CONTINUE
      IFOUND='YES'
      IY2LFO=IHOLD
      IF(IY2LFO.EQ.'HARD')IY2LFO='TEKT'
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1581)
 1581   FORMAT('THE LABEL FONT (FOR THE RIGHT  VERTICAL   LABEL)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1582)IY2LFO
 1582   FORMAT('HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO1900
C
 1599 CONTINUE
C
C               *******************************************************
C               **  TREAT THE CASE WHEN BOTH                         **
C               **  LEFT AND RIGHT VERTICAL LABELS ARE TO BE CHANGED **
C               *******************************************************
C
      IF(ICOM.EQ.'YLAB')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'FONT')THEN
          IHOLD=IDEFFO
          GOTO1680
        ELSE
          IHOLD=IHARG(NUMARG)
          GOTO1680
        ENDIF
      ELSE
        GOTO1699
      ENDIF
C
 1680 CONTINUE
      IFOUND='YES'
      IF(IHOLD.EQ.'HARD')IHOLD='TEKT'
      IY1LFO=IHOLD
      IY2LFO=IHOLD
      IF(IY1LFO.EQ.'HARD')IY1LFO='TEKT'
      IF(IY2LFO.EQ.'HARD')IY2LFO='TEKT'
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1681)
 1681   FORMAT('THE LABEL FONT (FOR THE LEFT AND RIGHT VERTICAL ',
     1         'LABELS)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1682)IHOLD
 1682   FORMAT('HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO1900
C
 1699 CONTINUE
C               **********************************************
C               **  TREAT THE CASE WHEN ALL  5 LABELS ARE   **
C               **  TO BE CHANGED                           **
C               **********************************************
C
      IF(ICOM.EQ.'LABE' .OR. ICOM.EQ.'XYLA' .OR.
     1   ICOM.EQ.'YXLA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'FONT')THEN
          IHOLD=IDEFFO
          GOTO1780
        ELSE
          IHOLD=IHARG(NUMARG)
          GOTO1780
        ENDIF
      ELSE
        GOTO1799
      ENDIF
C
 1780 CONTINUE
      IFOUND='YES'
      IF(IHOLD.EQ.'HARD')IHOLD='TEKT'
      IY1LFO=IHOLD
      IY2LFO=IHOLD
      IX1LFO=IHOLD
      IX2LFO=IHOLD
      IX3LFO=IHOLD
      IF(IY1LFO.EQ.'HARD')IY1LFO='TEKT'
      IF(IY2LFO.EQ.'HARD')IY2LFO='TEKT'
      IF(IX1LFO.EQ.'HARD')IX1LFO='TEKT'
      IF(IX2LFO.EQ.'HARD')IX2LFO='TEKT'
      IF(IX3LFO.EQ.'HARD')IX3LFO='TEKT'
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1781)
 1781   FORMAT('THE LABEL FONT (FOR ALL 5 LABELS--3 HORIZONTAL AND ',
     1         '2 VERTICAL)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1782)IHOLD
 1782   FORMAT('HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO1900
C
 1799 CONTINUE
C
 1900 CONTINUE
      RETURN
      END
      SUBROUTINE DPLAG(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                 IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--GENERATE THE FOLLOWING PLOT--
C              A LAG PLOT;
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--APRIL     1978.
C     UPDATED         --JUNE      1978.
C     UPDATED         --JULY      1978.
C     UPDATED         --OCTOBER   1978.
C     UPDATED         --APRIL     1979.
C     UPDATED         --JANUARY   1981.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --JUNE      1990. TEMPORARY ARRAYS TO GARBAGE COMMON
C     UPDATED         --AUGUST    1993. FIX FORMAT STATEMENT
C     UPDATED         --MAY       2011. USE DPPARS, DPPAR3
C     UPDATED         --MAY       2011. SUPPORT FOR "HIGHLIGHTED" OPTION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ICASE
      CHARACTER*4 IHIGH
      PARAMETER (MAXSPN=10)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
      CHARACTER*40 INAME
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION Y2(MAXOBV)
      DIMENSION XHIGH(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y2(1))
      EQUIVALENCE (GARBAG(IGARB3),XHIGH(1))
      EQUIVALENCE (GARBAG(IGARB4),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB5),TEMP2(1))
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPLA'
      ISUBN2='G   '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C               *******************************
C               **  TREAT THE LAG PLOT CASE  **
C               *******************************
C
      IF(IBUGG2.EQ.'ON' .OR. ISUBRO.EQ.'PLAG')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLAG--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASPL,IAND1,IAND2
   52   FORMAT('ICASPL,IAND1,IAND2 = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGG2,IBUGG3,IBUGQ,ISUBRO
   53   FORMAT('IBUGG2,IBUGG3,IBUGQ,ISUBRO = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLAG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IHIGH='OFF'
      IF(ICOM.EQ.'LAG'.AND.IARGT(1).EQ.'NUMB'.AND.
     1  IHARG(2).EQ.'PLOT')THEN
        LAG=IARG(1)
        ILASTC=2
      ELSEIF(ICOM.EQ.'LAG'.AND.IHARG(1).EQ.'PLOT')THEN
        LAG=1
        ILASTC=1
      ELSEIF(ICOM.EQ.'LAG'.AND.IARGT(1).EQ.'NUMB'.AND.
     1  (IHARG(2).EQ.'HIGH'.OR.IHARG(2).EQ.'SUBS').AND.
     1  IHARG(3).EQ.'PLOT')THEN
        LAG=IARG(1)
        ILASTC=3
        IHIGH='ON'
      ELSEIF((ICOM.EQ.'HIGH'.OR.ICOM.EQ.'SUBS').AND.
     1  IHARG(1).EQ.'LAG '.AND.IARGT(2).EQ.'NUMB'.AND.
     1  IHARG(3).EQ.'PLOT')THEN
        LAG=IARG(2)
        ILASTC=3
        IHIGH='ON'
      ELSEIF(ICOM.EQ.'LAG'.AND.
     1  (IHARG(1).EQ.'HIGH'.OR.IHARG(1).EQ.'SUBS').AND.
     1  IHARG(2).EQ.'PLOT')THEN
        LAG=1
        ILASTC=2
        IHIGH='ON'
      ELSEIF((ICOM.EQ.'HIGH'.OR.ICOM.EQ.'SUBS').AND.
     1  IHARG(1).EQ.'LAG '.AND.IHARG(2).EQ.'PLOT')THEN
        LAG=1
        ILASTC=2
        IHIGH='ON'
      ELSE
        IFOUND='NO'
        GOTO9000
      ENDIF
C
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      IFOUND='YES'
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLAG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='LAG PLOT'
      MINNA=1
      MAXNA=100
      MINN2=1
      IFLAGE=1
      IFLAGM=1
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=1
      MAXNVA=2
      IF(IHIGH.EQ.'ON')THEN
        MINNVA=2
        MAXNVA=3
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLAG')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      DO290I=1,NRIGHT(1)
        Y2(I)=1.0
        XHIGH(I)=1.0
  290 CONTINUE
      ICOL=1
      CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Y1,Y2,XHIGH,NS,NLOCA2,NLOCA3,ICASE,
     1            IBUGG3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IHIGH.EQ.'ON' .AND. NUMVAR.EQ.2)THEN
        DO299I=1,NS
          XHIGH(I)=Y2(I)
          Y2(I)=1.0
  299   CONTINUE
      ENDIF
      IF(IHIGH.EQ.'OFF')THEN
        IF(NUMVAR.EQ.1)ICASPL='LAG1'
        IF(NUMVAR.EQ.2)ICASPL='LAG2'
      ELSE
        IF(NUMVAR.EQ.2)ICASPL='LAG1'
        IF(NUMVAR.EQ.3)ICASPL='LAG2'
      ENDIF
C
C               *******************************************************
C               **  STEP 9--                                          *
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS VARIABLES   *
C               **  (Y(.) AND X(.), RESPECTIVELY) FOR THE PLOT.       *
C               **  FORM THE CURVE DESIGNATION VARIABLE D(.)  .       *
C               **  THIS WILL BE BOTH ONES FOR BOTH CASES             *
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).     *
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).     *
C               *******************************************************
C
      ISTEPN='9'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'PLAG')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPLAG2(Y1,Y2,XHIGH,NS,ICASPL,IHIGH,LAG,
     1            TEMP1,TEMP2,
     1            Y,X,D,NPLOTP,NPLOTV,
     1            IBUGG3,ISUBRO,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON' .AND. ISUBRO.EQ.'PLAG')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLAG--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR,ICASPL
 9012   FORMAT('IFOUND,IERROR,ICASPL = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,LAG
 9013   FORMAT('NPLOTV,NPLOTP,NS,LAG = ',4I8)
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.GT.0)THEN
          DO9015I=1,NPLOTP
            WRITE(ICOUT,9016)I,Y(I),X(I),D(I)
 9016       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9015     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLAG2(Y1,Y2,XHIGH,N,ICASPL,IHIGH,LAG,
     1                  TEMP1,TEMP2,
     1                  Y,X,D,NPLOTP,NPLOTV,
     1                  IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--GENERATE A PAIR OF COORDINATE VECTORS
C              THAT WILL DEFINE
C                   1) A 1-VARIABLE LAG PLOT
C                   2) A 2-VARIABLE LAG PLOT
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--APRIL     1978.
C     UPDATED         --MAY       1978.
C     UPDATED         --JUNE      1978.
C     UPDATED         --OCTOBER   1978.
C     UPDATED         --MARCH     1979.
C     UPDATED         --APRIL     1979.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --JANUARY   2009. SWITCH ORDER OF AXES.
C     UPDATED         --MAY       2011. HIGHLIGHT OPTION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IHIGH
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IWRITE
C
C---------------------------------------------------------------------
C
      DIMENSION Y1(*)
      DIMENSION Y2(*)
      DIMENSION XHIGH(*)
      DIMENSION Y(*)
      DIMENSION X(*)
      DIMENSION D(*)
      DIMENSION TEMP1(*)
      DIMENSION TEMP2(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLA'
      ISUBN2='G2  '
      IERROR='NO'
C
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'LAG2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,70)
   70   FORMAT('***** AT THE BEGINNING OF DPLAG2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)N,LAG,ICASPL
   71   FORMAT('N,LAG,ICASPL = ',2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO73I=1,N
          WRITE(ICOUT,74)I,Y1(I),Y2(I),XHIGH(I)
   74     FORMAT('I,Y1(I),Y2(I),XHIGH(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
   73   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN LAG PLOT--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 2;')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ********************************************************
C               **  STEP 2--                                          **
C               **  CHECK THAT THE SPECIFIED LAG IS                   **
C               **  STRICTLY SMALLER THAN THE NUMBER OF OBSERVATIONS  **
C               ********************************************************
C
      LAG2=LAG
      IF(LAG.LT.0)LAG2=-LAG
C
      IF(LAG2.GE.N)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,112)
  112   FORMAT('      THE SPECIFIED LAG EXCEEDS THE NUMBER OF ',
     1         'OBSERVATIONS')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,114)LAG
  114   FORMAT('      THE SPECIFIED LAG            = ',I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,115)N
  115   FORMAT('      THE NUMBER OF OBSERVATIONS N = ',I8)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(IHIGH.EQ.'ON')THEN
        IWRITE='OFF'
        CALL CODE(XHIGH,N,IWRITE,TEMP1,TEMP2,N,IBUGG3,IERROR)
        DO150I=1,N
          XHIGH(I)=TEMP1(I)
  150   CONTINUE
      ENDIF
C
C               **************************************
C               **  STEP 3--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **  AND DETERMINE PLOT COORDINATES  **
C               **************************************
C
      IF(ICASPL.EQ.'LAG1')THEN
C
C               ************************************
C               **  STEP 4.1--                    **
C               **  FORM THE 1-VARIABLE LAG PLOT  **
C               ************************************
C
        IMIN=1
        IMAX=N-LAG2
        IF(LAG.LT.0)IMIN=1+LAG2
        IF(LAG.LT.0)IMAX=N
        J=0
        IF(IHIGH.EQ.'OFF')THEN
          DO1110I=IMIN,IMAX
            J=J+1
            IPLAG=I+LAG
            X(J)=Y1(I)
            Y(J)=Y1(IPLAG)
            D(J)=1.0
 1110     CONTINUE
        ELSE
          DO1120I=IMIN,IMAX
            J=J+1
            IPLAG=I+LAG
            X(J)=Y1(I)
            Y(J)=Y1(IPLAG)
CCCCC       IF(XHIGH(I).LE.0.5)THEN
CCCCC         D(J)=1.0
CCCCC       ELSE
CCCCC         D(J)=2.0
CCCCC       ENDIF
            D(J)=XHIGH(I)
 1120     CONTINUE
        ENDIF
        NPLOTP=J
        NPLOTV=2
      ELSEIF(ICASPL.EQ.'LAG2')THEN
C
C               ************************************
C               **  STEP 4.2--                    **
C               **  FORM THE 2-VARIABLE LAG PLOT  **
C               ************************************
C
        IMIN=1
        IMAX=N-LAG2
        IF(LAG.LT.0)IMIN=1+LAG2
        IF(LAG.LT.0)IMAX=N
        J=0
        IF(IHIGH.EQ.'OFF')THEN
          DO1210I=IMIN,IMAX
            J=J+1
            IPLAG=I+LAG
            X(J)=Y1(I)
            Y(J)=Y2(IPLAG)
            D(J)=1.0
 1210     CONTINUE
        ELSE
          DO1220I=IMIN,IMAX
            J=J+1
            IPLAG=I+LAG
            X(J)=Y1(I)
            Y(J)=Y2(IPLAG)
            D(J)=XHIGH(I)
CCCCC       IF(XHIGH(I).LE.0.5)THEN
CCCCC         D(J)=1.0
CCCCC       ELSE
CCCCC         D(J)=2.0
CCCCC       ENDIF
 1220     CONTINUE
        ENDIF
        NPLOTP=J
        NPLOTV=2
      ELSE
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1012)
 1012   FORMAT('      ICASPL SHOULD BE EITHER  LAG1   OR  LAG2, ',
     1         'BUT IS NEITHER.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1014)ICASPL
 1014   FORMAT('      ICASPL = ',A4)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C
C               ******************
C               **   STEP 90--  **
C               **   EXIT       **
C               ******************
C
 9000 CONTINUE
      IF(IBUGG3.EQ.'ON' .OR. ISUBRO.EQ.'LAG2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLAG2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,IERROR,LAG,N,NPLOTP
 9012   FORMAT('ICASPL,IERROR,LAG,N,NPLOTP = ',2(A4,2X),3I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NPLOTP
          WRITE(ICOUT,9016)I,Y(I),X(I),D(I)
 9016     FORMAT('I,Y(I),X(I),D(I) = ',I8,2G15.7,F9.2)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLAJU(ICOM,IHARG,NUMARG,
     1                  IDEFJU,
     1                  IX1LJU,IX2LJU,IX3LJU,IY1LJU,IY2LJU,
     1                  IBUGPC,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LABEL JUSTIFICATION SWITCHES
C              FOR ANY OF THE 5 LABELS.
C              SUCH LABEL JUSTIFICATION SWITCHES DEFINE THE
C              JUSTIFICATION FOR EACH OF THE 5 LABELS.
C              THE CONTENTS OF A LABEL JUSTIFICATION SWITCH ARE
C              A JUSTIFICATION.
C              THE LABEL JUSTIFICATION SWITCHES FOR THE 5 LABELS
C              ARE CONTAINED IN IX1LJU,IX2LJU,IX3LJU,IY1LJU,IY2LJU.
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFFO
C     OUTPUT ARGUMENTS--IX1LJU (A HOLLERITH VARIABLE
C                       DENOTING THE JUSTIFICATION OF THE FIRST HORIZ. LABEL
C                     --IX2LJU (A HOLLERITH VARIABLE
C                       DENOTING THE JUSTIFICATION OF THE SECOND HORIZ. LABEL
C                     --IX3LJU (A HOLLERITH VARIABLE
C                       DENOTING THE JUSTIFICATION OF THE THIRD HORIZ. LABEL
C                     --IY1LJU (A HOLLERITH VARIABLE
C                       DENOTING THE JUSTIFICATION OF THE FIRST VERT. LABEL
C                     --IY2LJU (A HOLLERITH VARIABLE
C                       DENOTING THE JUSTIFICATION OF THE SECOND VERT. LABEL
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/10
C     ORIGINAL VERSION--OCTOBER   1999.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
      CHARACTER*4 IDEFJU
      CHARACTER*4 IBUGPC
C
      CHARACTER*4 IX1LJU
      CHARACTER*4 IX2LJU
      CHARACTER*4 IX3LJU
      CHARACTER*4 IY1LJU
      CHARACTER*4 IY2LJU
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
      CHARACTER*4 IHOL2
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(IBUGPC.EQ.'ON')THEN
        WRITE(ICOUT,11)
   11   FORMAT('AT THE BEGINNING OF DPLAJU')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,13)IDEFJU
   13   FORMAT('IDEFJU = ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NUMARG.LE.0)GOTO1900
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'JUST')GOTO1090
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'MARK'.AND.
     1IHARG(2).EQ.'JUST')GOTO1090
      GOTO1900
 1090 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE FIRST  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'XLAB')GOTO1100
      IF(ICOM.EQ.'X1LA')GOTO1100
      GOTO1199
C
 1100 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'JUST')GOTO1150
      GOTO1160
C
 1150 CONTINUE
      IHOLD='CEBO'
      GOTO1180
C
 1160 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      IX1LJU=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE LABEL JUSTIFICATION (FOR THE FIRST  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)IHOLD
 1182 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1900
C
 1199 CONTINUE
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE SECOND HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X2LA')GOTO1200
      GOTO1299
C
 1200 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1250
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1250
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1250
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1250
      IF(IHARG(NUMARG).EQ.'JUST')GOTO1250
      GOTO1260
C
 1250 CONTINUE
      IHOLD='CEBO'
      GOTO1280
C
 1260 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1280
C
 1280 CONTINUE
      IFOUND='YES'
      IX2LJU=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1289
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1281)
 1281 FORMAT('THE LABEL JUSTIFICATION (FOR THE SECOND HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1282)IHOLD
 1282 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1289 CONTINUE
      GOTO1900
C
 1299 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE THIRD  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X3LA')GOTO1300
      GOTO1399
C
 1300 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1350
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1350
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1350
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1350
      IF(IHARG(NUMARG).EQ.'JUST')GOTO1350
      GOTO1360
C
 1350 CONTINUE
      IHOLD='CEBO'
      GOTO1380
C
 1360 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1380
C
 1380 CONTINUE
      IFOUND='YES'
      IX3LJU=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1389
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1381)
 1381 FORMAT('THE LABEL JUSTIFICATION (FOR THE THIRD  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1382)IHOLD
 1382 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1389 CONTINUE
      GOTO1900
C
 1399 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE LEFT   VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y1LA')GOTO1400
      GOTO1499
C
 1400 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1450
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1450
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1450
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1450
      IF(IHARG(NUMARG).EQ.'JUST')GOTO1450
      GOTO1460
C
 1450 CONTINUE
      IHOLD='CECE'
      GOTO1480
C
 1460 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1480
C
 1480 CONTINUE
      IFOUND='YES'
      IY1LJU=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1489
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1481)
 1481 FORMAT('THE LABEL JUSTIFICATION (FOR THE LEFT   VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1482)IHOLD
 1482 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1489 CONTINUE
      GOTO1900
C
 1499 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y2LA')GOTO1500
      GOTO1599
C
 1500 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1550
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1550
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1550
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1550
      IF(IHARG(NUMARG).EQ.'JUST')GOTO1550
      GOTO1560
C
 1550 CONTINUE
      IHOLD='CECE'
      GOTO1580
C
 1560 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1580
C
 1580 CONTINUE
      IFOUND='YES'
      IY2LJU=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1589
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1581)
 1581 FORMAT('THE LABEL JUSTIFICATION (FOR THE RIGHT  VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1582)IHOLD
 1582 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1589 CONTINUE
      GOTO1900
C
 1599 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  BOTH LEFT AND RIGHT VERTICAL LABELS ARE TO BE CHANGED   **
C               **************************************************************
C
      IF(ICOM.EQ.'YLAB')GOTO1600
      GOTO1699
C
 1600 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1650
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1650
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1650
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1650
      IF(IHARG(NUMARG).EQ.'JUST')GOTO1650
      GOTO1660
C
 1650 CONTINUE
      IHOLD='CECE'
      GOTO1680
C
 1660 CONTINUE
      IHOLD=IHARG(NUMARG)
      GOTO1680
C
 1680 CONTINUE
      IFOUND='YES'
      IY1LJU=IHOLD
      IY2LJU=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1689
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1681)
 1681 FORMAT('THE LABEL JUSTIFICATION (FOR THE LEFT AND RIGHT  ',
     1'VERTICAL LABELS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1682)IHOLD
 1682 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1689 CONTINUE
      GOTO1900
C
 1699 CONTINUE
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY ALL  5 LABELS ARE                   TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'LABE')GOTO1700
      IF(ICOM.EQ.'XYLA')GOTO1700
      IF(ICOM.EQ.'YXLA')GOTO1700
      GOTO1799
C
 1700 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1750
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1750
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1750
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1750
      IF(IHARG(NUMARG).EQ.'JUST')GOTO1750
      GOTO1760
C
 1750 CONTINUE
      IHOLD='CEBO'
      IHOL2='CECE'
      GOTO1780
C
 1760 CONTINUE
      IHOLD=IHARG(NUMARG)
      IHOL2=IHOLD
      GOTO1780
C
 1780 CONTINUE
      IFOUND='YES'
      IY1LJU=IHOL2
      IY2LJU=IHOL2
      IX1LJU=IHOLD
      IX2LJU=IHOLD
      IX3LJU=IHOLD
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1781)
 1781   FORMAT('THE LABEL JUSTIFICATION FOR ALL 3 ',
     1         'HORIZONTAL LABELS)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1782)IHOLD
 1782   FORMAT('HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1783)
 1783   FORMAT('THE LABEL JUSTIFICATION FOR BOTH ',
     1         'VERITCAL LABELS)')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1782)IHOL2
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO1900
C
 1799 CONTINUE
C
 1900 CONTINUE
      RETURN
      END
      SUBROUTINE DPLAOF(ICOM,IHARG,IARGT,ARG,NUMARG,
     1PDEFOF,
     1PX1LOF,PX2LOF,PX3LOF,PY1LOF,PY2LOF,
     1IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LABEL OFFSETS
C              FOR ANY OF THE 5 LABELS.
C              THE LABEL OFFSET SWITCHES FOR THE LABELS
C              ARE CONTAINED IN THE VARIABLES--
C                    PX1LOF,PX2LOF,PX3LOF,PY1LOF,PY2LOF
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A  HOLLERITH VECTOR)
C                     --ARG    (A  FLOATING POINT VECTOR)
C                     --NUMARG
C                     --PDEFOF (DEFAULT OFFSET)
C     OUTPUT ARGUMENTS--
C                           PX1LOF,
C                           PX2LOF,
C                           PX3LOF,
C                           PY1LOF,
C                           PY2LOF
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/10
C     ORIGINAL VERSION--OCTOBER   1999.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)GOTO1900
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'OFFS')GOTO1090
      GOTO1900
 1090 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE FIRST  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X1LA')GOTO1100
      GOTO1199
C
 1100 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1150
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1160
      IERROR='YES'
      GOTO9000
C
 1150 CONTINUE
      HOLD1=PDEFOF
      GOTO1180
C
 1160 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      PX1LOF=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE LABEL OFFSET (FOR THE FIRST  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)HOLD1
 1182 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1900
C
 1199 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE SECOND HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X2LA')GOTO1200
      GOTO1299
C
 1200 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1250
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1250
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1250
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1250
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1250
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1260
      IERROR='YES'
      GOTO9000
C
 1250 CONTINUE
      HOLD1=PDEFOF
      GOTO1280
C
 1260 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1280
C
 1280 CONTINUE
      IFOUND='YES'
      PX2LOF=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1289
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1281)
 1281 FORMAT('THE LABEL OFFSET (FOR THE SECOND HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1282)HOLD1
 1282 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1289 CONTINUE
      GOTO1900
C
 1299 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE THIRD  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X3LA')GOTO1300
      GOTO1399
C
 1300 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1350
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1350
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1350
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1350
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1350
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1360
      IERROR='YES'
      GOTO9000
C
 1350 CONTINUE
      HOLD1=PDEFOF
      GOTO1380
C
 1360 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1380
C
 1380 CONTINUE
      IFOUND='YES'
      PX3LOF=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1389
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1381)
 1381 FORMAT('THE LABEL OFFSET (FOR THE THIRD  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1382)HOLD1
 1382 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1389 CONTINUE
      GOTO1900
C
 1399 CONTINUE
C
C               *****************************************************
C               **  TREAT THE CASE WHEN ALL 3                      **
C               **  HORIZONTAL AXIS LABELS ARE TO BE CHANGED       **
C               *****************************************************
C
      IF(ICOM.EQ.'XLAB')GOTO2600
      GOTO2699
C
 2600 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO2650
      IF(IHARG(NUMARG).EQ.'OFF')GOTO2650
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO2650
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO2650
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO2650
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO2660
      IERROR='YES'
      GOTO9000
C
 2650 CONTINUE
      HOLD1=PDEFOF
      GOTO2680
C
 2660 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO2680
C
 2680 CONTINUE
      IFOUND='YES'
      PX1LOF=HOLD1
      PX2LOF=HOLD1
      PX3LOF=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO2689
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2681)
 2681 FORMAT('THE LABEL OFFSET (FOR ALL 3 HORIZONTAL AXIS LABELS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2682)HOLD1
 2682 FORMAT('HAVE JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 2689 CONTINUE
      GOTO1900
C
 2699 CONTINUE
C
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE LEFT   VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y1LA')GOTO1400
      GOTO1499
C
 1400 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1450
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1450
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1450
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1450
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1450
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1460
      IERROR='YES'
      GOTO9000
C
 1450 CONTINUE
      HOLD1=PDEFOF
      GOTO1480
C
 1460 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1480
C
 1480 CONTINUE
      IFOUND='YES'
      PY1LOF=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1489
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1481)
 1481 FORMAT('THE LABEL OFFSET (FOR THE LEFT   VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1482)HOLD1
 1482 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1489 CONTINUE
      GOTO1900
C
 1499 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y2LA')GOTO1500
      GOTO1599
C
 1500 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1550
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1550
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1550
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1550
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1550
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1560
      IERROR='YES'
      GOTO9000
C
 1550 CONTINUE
      HOLD1=PDEFOF
      GOTO1580
C
 1560 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1580
C
 1580 CONTINUE
      IFOUND='YES'
      PY2LOF=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1589
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1581)
 1581 FORMAT('THE LABEL OFFSET (FOR THE RIGHT  VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1582)HOLD1
 1582 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1589 CONTINUE
      GOTO1900
C
 1599 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  BOTH VERTICAL AXIS LABELS ARE TO BE CHANGED             **
C               **************************************************************
C
      IF(ICOM.EQ.'YLAB')GOTO1600
      GOTO1699
C
 1600 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1650
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1650
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1650
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1650
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1650
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1660
      IERROR='YES'
      GOTO9000
C
 1650 CONTINUE
      HOLD1=PDEFOF
      GOTO1680
C
 1660 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1680
C
 1680 CONTINUE
      IFOUND='YES'
      PY1LOF=HOLD1
      PY2LOF=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1689
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1681)
 1681 FORMAT('THE LABEL OFFSET (FOR THE LEFT AND RIGHT VERTICAL ',
     1'LABELS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1682)HOLD1
 1682 FORMAT('HAVE JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1689 CONTINUE
      GOTO1900
C
 1699 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY ALL  5 LABELS ARE                   TO BE CHANGED  **
C               **************************************************************
C               **************************************************************
C
      IF(ICOM.EQ.'LABE')GOTO1700
      IF(ICOM.EQ.'XYLA')GOTO1700
      IF(ICOM.EQ.'YXLA')GOTO1700
      GOTO1799
C
 1700 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1750
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1750
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1750
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1750
      IF(IHARG(NUMARG).EQ.'OFFS')GOTO1750
      IF(IARGT(NUMARG).EQ.'NUMB')GOTO1760
      IERROR='YES'
      GOTO9000
C
 1750 CONTINUE
      HOLD1=PDEFOF
      GOTO1780
C
 1760 CONTINUE
      HOLD1=ARG(NUMARG)
      GOTO1780
C
 1780 CONTINUE
      IFOUND='YES'
      PX1LOF=HOLD1
      PX2LOF=HOLD1
      PX3LOF=HOLD1
      PY1LOF=HOLD1
      PY2LOF=HOLD1
C
      IF(IFEEDB.EQ.'OFF')GOTO1789
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1781)
 1781 FORMAT('THE LABEL OFFSET (FOR ALL 5 ',
     1'LABELS--3 HORIZONTAL AND 2 VERTICAL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1782)HOLD1
 1782 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1789 CONTINUE
      GOTO1900
C
 1799 CONTINUE
C
 1900 CONTINUE
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPLARG(X,N,NMAX,XOUT,NOUT,ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--THIS SUBROUTINE RETURNS THE "NMAX" LARGEST ELEMENTS
C              OF THE DATA IN THE INPUT VECTOR X.
C     INPUT  ARGUMENTS--X      = THE SINGLE PRECISION VECTOR OF
C                                (UNSORTED OR SORTED) OBSERVATIONS.
C                     --N      = THE INTEGER NUMBER OF OBSERVATIONS
C                                IN THE VECTOR X.
C                     --NMAX   = THE NUMBER OF ELEMENTS TO RETURN
C     OUTPUT ARGUMENTS--XOUT   = THE SINGLE PRECISION VECTOR TO
C                                CONTAIN THE LARGEST VALUES
C     OUTPUT--THE NMAX LARGEST VALUES IN X.
C     RESTRICTIONS--THERE IS NO RESTRICTION ON THE MAXIMUM VALUE
C                   OF N FOR THIS SUBROUTINE.
C     OTHER DATAPAC   SUBROUTINES NEEDED--SORT.
C     FORTRAN LIBRARY SUBROUTINES NEEDED--NONE.
C     MODE OF INTERNAL OPERATIONS--SINGLE PRECISION.
C     LANGUAGE--ANSI FORTRAN (1977)
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2018.10
C     ORIGINAL VERSION--OCTOBER   2018.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      DIMENSION X(*)
      DIMENSION XOUT(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLA'
      ISUBN2='RG  '
      IERROR='NO'
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LARG')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLARG--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA3,ISUBRO,N
   52   FORMAT('IBUGA3,ISUBRO,N = ',2(A4,2X),I10)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,56)I,X(I)
   56     FORMAT('I,X(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
C               ***************************
C               **  FIND LARGEST VALUES  **
C               ***************************
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LT.1)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,111)
  111   FORMAT('***** ERROR IN DPLARG--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,112)
  112   FORMAT('      THE INPUT NUMBER OF OBSERVATIONS IN THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,113)
  113   FORMAT('      IN THE RESPONSE VARIABLE MUST BE 1 OR LARGER.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,116)
  116   FORMAT('      SUCH WAS NOT THE CASE HERE.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,117)N
  117   FORMAT('      THE NUMBER OF OBSERVATIONS = ',I8,'.')
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
C               ***********************************
C               **  STEP 2--                     **
C               **  SORT THE DATA AND EXTRACT    **
C               **  THE LARGEST                  **
C               ***********************************
C
      CALL SORT(X,N,X)
      NSTRT=N-NMAX+1
      IF(NSTRT.LT.1)NSTRT=1
      NOUT=0
      DO200I=NSTRT,N
        NOUT=NOUT+1
        XOUT(NOUT)=X(I)
  200 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LARG')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLARG--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR,NOUT
 9012   FORMAT('IERROR,NOUT = ',A4,2X,I10)
        CALL DPWRST('XXX','BUG ')
        IF(NOUT.GE.1)THEN
          DO9014I=1,NOUT
            WRITE(ICOUT,9015)I,XOUT(I)
 9015       FORMAT('I,XOUT(I) = ',I10,2X,G15.7)
            CALL DPWRST('XXX','BUG ')
 9014     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLASZ(ICOM,IHARG,IARGT,ARG,NUMARG,
     1                  PDEFHE,PDEFWI,
     1                  PX1LHE,PX1LWI,PX1LVG,PX1LHG,
     1                  PX2LHE,PX2LWI,PX2LVG,PX2LHG,
     1                  PX3LHE,PX3LWI,PX3LVG,PX3LHG,
     1                  PY1LHE,PY1LWI,PY1LVG,PY1LHG,
     1                  PY2LHE,PY2LWI,PY2LVG,PY2LHG,
     1                  IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LABEL SIZES
C              FOR ANY OF THE 5 LABELS.
C              THE LABEL SIZE SWITCHES FOR THE LABELS
C              ARE CONTAINED IN THE VARIABLES--
C                    PX1LHE,PX1LWI,PX1LVG,PX1LHG,
C                    PX2LHE,PX2LWI,PX2LVG,PX2LHG,
C                    PX3LHE,PX3LWI,PX3LVG,PX3LHG,
C                    PY1LHE,PY1LWI,PY1LVG,PY1LHG,
C                    PY2LHE,PY2LWI,PY2LVG,PY2LHG,
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A  HOLLERITH VECTOR)
C                     --ARG    (A  FLOATING POINT VECTOR)
C                     --NUMARG
C                     --PDEFHE
C     OUTPUT ARGUMENTS--
C                           PX1LHE,PX1LWI,PX1LVG,PX1LHG,
C                           PX2LHE,PX2LWI,PX2LVG,PX2LHG,
C                           PX3LHE,PX3LWI,PX3LVG,PX3LHG,
C                           PY1LHE,PY1LWI,PY1LVG,PY1LHG,
C                           PY2LHE,PY2LWI,PY2LVG,PY2LHG,
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--OCTOBER   1980.
C     UPDATED         --MARCH     1981.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)GOTO1900
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'SIZE')GOTO1090
      GOTO1900
 1090 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE FIRST  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'XLAB' .OR. ICOM.EQ.'X1LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'SIZE')THEN
          HOLD1=PDEFHE
          HOLD2=PDEFWI
        ELSEIF(IARGT(NUMARG).EQ.'NUMB')THEN
          HOLD1=ARG(NUMARG)
          HOLD2=HOLD1*0.5
        ELSE
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IFOUND='YES'
        PX1LHE=HOLD1
        PX1LWI=HOLD2
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1181)
 1181     FORMAT('THE LABEL SIZE (FOR THE FIRST  HORIZONTAL LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)HOLD1
 1182     FORMAT('HAS JUST BEEN SET TO ',E15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO1900
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE SECOND HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'X2LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'SIZE')THEN
          HOLD1=PDEFHE
          HOLD2=PDEFWI
        ELSEIF(IARGT(NUMARG).EQ.'NUMB')THEN
          HOLD1=ARG(NUMARG)
          HOLD2=HOLD1*0.5
        ELSE
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IFOUND='YES'
        PX2LHE=HOLD1
        PX2LWI=HOLD2
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1281)
 1281     FORMAT('THE LABEL SIZE (FOR THE SECOND HORIZONTAL LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)HOLD1
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO1900
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE THIRD  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'X3LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'SIZE')THEN
          HOLD1=PDEFHE
          HOLD2=PDEFWI
        ELSEIF(IARGT(NUMARG).EQ.'NUMB')THEN
          HOLD1=ARG(NUMARG)
          HOLD2=HOLD1*0.5
        ELSE
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IFOUND='YES'
        PX3LHE=HOLD1
        PX3LWI=HOLD2
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1381)
 1381     FORMAT('THE LABEL SIZE (FOR THE THIRD  HORIZONTAL LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)HOLD1
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO1900
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE LEFT   VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'Y1LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'SIZE')THEN
          HOLD1=PDEFHE
          HOLD2=PDEFWI
        ELSEIF(IARGT(NUMARG).EQ.'NUMB')THEN
          HOLD1=ARG(NUMARG)
          HOLD2=HOLD1*0.5
        ELSE
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IFOUND='YES'
        PY1LHE=HOLD1
        PY1LWI=HOLD2
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1481)
 1481     FORMAT('THE LABEL SIZE (FOR THE LEFT   VERTICAL   LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)HOLD1
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO1900
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'Y2LA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'SIZE')THEN
          HOLD1=PDEFHE
          HOLD2=PDEFWI
        ELSEIF(IARGT(NUMARG).EQ.'NUMB')THEN
          HOLD1=ARG(NUMARG)
          HOLD2=HOLD1*0.5
        ELSE
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IFOUND='YES'
        PY2LHE=HOLD1
        PY2LWI=HOLD2
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1581)
 1581     FORMAT('THE LABEL SIZE (FOR THE RIGHT  VERTICAL   LABEL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)HOLD1
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO1900
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  BOTH VERTICAL AXIS LABELS ARE TO BE CHANGED             **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'YLAB')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'SIZE')THEN
          HOLD1=PDEFHE
          HOLD2=PDEFWI
        ELSEIF(IARGT(NUMARG).EQ.'NUMB')THEN
          HOLD1=ARG(NUMARG)
          HOLD2=HOLD1*0.5
        ELSE
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IFOUND='YES'
        PY1LHE=HOLD1
        PY2LHE=HOLD1
        PY1LWI=HOLD2
        PY2LWI=HOLD2
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1681)
 1681     FORMAT('THE LABEL SIZE (FOR THE LEFT AND RIGHT VERTICAL ',
     1           'LABELS)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)HOLD1
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO1900
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY ALL  5 LABELS ARE                   TO BE CHANGED  **
C               **************************************************************
C
      ELSEIF(ICOM.EQ.'LABE' .OR. ICOM.EQ.'XYLA' .OR.
     1       ICOM.EQ.'YXLA')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF'  .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA' .OR.
     1     IHARG(NUMARG).EQ.'SIZE')THEN
          HOLD1=PDEFHE
          HOLD2=PDEFWI
        ELSEIF(IARGT(NUMARG).EQ.'NUMB')THEN
          HOLD1=ARG(NUMARG)
          HOLD2=HOLD1*0.5
        ELSE
          IERROR='YES'
          GOTO9000
        ENDIF
C
        IFOUND='YES'
        PY1LHE=HOLD1
        PY2LHE=HOLD1
        PX1LHE=HOLD1
        PX2LHE=HOLD1
        PX3LHE=HOLD1
        PY1LWI=HOLD2
        PY2LWI=HOLD2
        PX1LWI=HOLD2
        PX2LWI=HOLD2
        PX3LWI=HOLD2
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1781)
 1781     FORMAT('THE LABEL SIZE (FOR ALL 5 LABELS--3 HORIZONTAL ',
     1           'AND 2 VERTICAL)')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1182)HOLD1
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO1900
C
      ENDIF
C
 1900 CONTINUE
C
      PX1LVG=PX1LHE*0.375
      PX2LVG=PX2LHE*0.375
      PX3LVG=PX3LHE*0.375
      PY1LVG=PY1LHE*0.375
      PY2LVG=PY2LHE*0.375
C
      PX1LHG=PX1LHE*0.125
      PX2LHG=PX2LHE*0.125
      PX3LHG=PX3LHE*0.125
      PY1LHG=PY1LHE*0.125
      PY2LHG=PY2LHE*0.125
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPLAT1(IHEAD,NHEAD,CAPTN,NCAP,IFLAG1)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS USED TO INITIATE
C              THE LATEX OUTPUT AND STARTS THE FIRST TABLE.
C              THE ONLY OPTIONAL ELEMENT IS THE CAPTION.
C     INPUT  ARGUMENTS--IHEAD  = THE CHARACTER STRING CONTAINING
C                                THE TEXT FOR THE HEADER
C                     --NHEAD  = THE INTEGER NUMBER THAT SPECIFIES
C                                THE NUMBER OF CHARACTERS IN THE
C                                HEADER.
C                     --CAPTN  = THE CHARACTER STRING CONTAINING
C                                THE CAPTION.
C                     --NCAP   = THE INTEGER NUMBER THAT SPECIFIES
C                                THE NUMBER OF CHARACTERS IN THE
C                                CAPTION.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2005/2
C     ORIGINAL VERSION--FEBRUARY  2005.
C     UPDATED         --AUGUST    2014. ADD [hbtp]
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*(*) CAPTN
      CHARACTER*(*) IHEAD
C
      LOGICAL IFLAG1
C
      CHARACTER*1  IBASLC
      CHARACTER*10 IFORMT
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C  STEP 1: END ASIS MODE AND WRITE A HEADER
C
      CALL DPCONA(92,IBASLC)
  999 FORMAT(1X)
 8003 FORMAT(A1,'begin{table}[hbtp]')
 8007 FORMAT('$ ',A1,1X,A1,' $ ',A1,A1,' ')
 8009 FORMAT(A1,'begin{center}')
 8013 FORMAT(A1,'end{center}')
C
      IF(IFLAG1)THEN
        WRITE(ICOUT,8003)IBASLC
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      IF(NHEAD.GE.1)THEN
        WRITE(ICOUT,8009)IBASLC
        CALL DPWRST('XXX','WRIT')
        IFORMT=' '
        IFORMT(1:5)='(A  )'
        WRITE(IFORMT(3:4),'(I2)')NHEAD
        WRITE(ICOUT,8005)IBASLC
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,IFORMT)IHEAD(1:NHEAD)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8006)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8013)IBASLC
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
C  STEP 2: START TABLE AND DEFINE A CAPTION
C
 8005 FORMAT('{',A1,'bf ')
 8006 FORMAT(' }')
 8011 FORMAT('{',A1,'bf ')
C8015 FORMAT('} ',A1,A1)
C
      IF(NCAP.GT.0)THEN
        WRITE(ICOUT,8009)IBASLC
        CALL DPWRST('XXX','WRIT')
        IFORMT=' '
        IF(NCAP.LE.99)THEN
          IFORMT(1:5)='(A  )'
          WRITE(IFORMT(3:4),'(I2)')NCAP
        ELSE
          IFORMT(1:6)='(A   )'
          WRITE(IFORMT(3:5),'(I3)')NCAP
        ENDIF
        WRITE(ICOUT,8011)IBASLC
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,IFORMT)CAPTN(1:NCAP)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8006)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8007)IBASLC,IBASLC,IBASLC,IBASLC
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8007)IBASLC,IBASLC,IBASLC,IBASLC
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8013)IBASLC
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLATZ(IFLAG1,IFLAG2,IFLAG3,NHEAD)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS USED TO CLOSE THE
C              CURRENT TABLE AND TERMINATE THE LATEX OUTPUT.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2005/2
C     ORIGINAL VERSION--FEBRUARY  2005.
C     UPDATED         --AUGUST    2014. RESIZE OPTION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      LOGICAL IFLAG1
      LOGICAL IFLAG2
      LOGICAL IFLAG3
C
      CHARACTER*1 IBASLC
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOBE.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C  STEP 1: END THE CURRENT TABLE
C
      IF(ISUBG4.EQ.'ON')THEN
        WRITE(ICOUT,11)NHEAD,IFLAG1,IFLAG2,IFLAG3
   11   FORMAT('DPLATZ: NHEAD,IFLAG1,IFLAG2,IFLAG3 = ',I5,3L5)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
  999 FORMAT(1X)
 8091 FORMAT(A1,'end{tabular}')
 8096 FORMAT('}')
 8092 FORMAT(A1,'end{center}')
 8093 FORMAT(A1,'end{table}')
      CALL DPCONA(92,IBASLC)
      IF(IFLAG1)THEN
        WRITE(ICOUT,8091)IBASLC
        CALL DPWRST('XXX','WRIT')
        IF(ILATRS.EQ.'ON')THEN
          WRITE(ICOUT,8096)
          CALL DPWRST('XXX','WRIT')
        ENDIF
        WRITE(ICOUT,8092)IBASLC
        CALL DPWRST('XXX','WRIT')
      ENDIF
      IF(IFLAG3)THEN
        WRITE(ICOUT,8093)IBASLC
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
C  STEP 2: RESET "ASIS" MODE
C
 8099 FORMAT(A1,'begin{verbatim}')
      IF(IFLAG2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8099)IBASLC
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLAT4(IVALUE,NCHAR,NHEAD,IFLAG1,IFLAG2,IFLAG3)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS USED TO GENERATE
C              A HEADER ROW FOR A TABLE.  YOU CAN ALSO OPTIONALLY
C              ADD A RULE LINE BEFORE OR AFTER THE HEADER.
C
C     INPUT  ARGUMENTS--IVALUE  = THE CHARACTER STRING ARRAY
C                                 CONTAINING THE TEXT FOR THE
C                                 HEADER VALUES.
C                     --NCHAR   = THE INTEGER ARRAY THAT SPECIFIES
C                                 THE NUMBER OF CHARACTERS IN THE
C                                 HEADER VALUES.
C                     --NHEAD   = THE INTEGER VALUE THAT SPECIFIES
C                                 THE NUMBER OF HEADER VALUES.
C                     --IFLAG1  = A LOGICAL VALUE THAT SPECIFIES
C                                 WHETHER A RULE LINE IS DRAWN BEFORE
C                                 THE HEADER.
C                     --IFLAG2  = A LOGICAL VALUE THAT SPECIFIES
C                                 WHETHER A RULE LINE IS DRAWN AFTER
C                                 THE HEADER.
C                     --IFLAG3  = A LOGICAL VALUE THAT SPECIFIES
C                                 WHETHER THE "CENTER" AND "TABULAR"
C                                 FIELDS ARE WRITTEN (SET TO FALSE FOR
C                                 SECOND AND GREATER LINES OF MULIT-LINE
C                                 HEADERS.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2005/2
C     ORIGINAL VERSION--FEBRUARY  2005.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*(*) IVALUE(NHEAD)
      INTEGER NCHAR(NHEAD)
C
      PARAMETER (MAXHED=1024)
      INTEGER IWIDTH(MAXHED)
      INTEGER NUMDIG(MAXHED)
      CHARACTER*8 ALIGN(MAXHED)
      CHARACTER*8 VALIGN(MAXHED)
      COMMON/HTML4/IWIDTH,NUMDIG,ALIGN,VALIGN
C
      INCLUDE 'DPCOST.INC'
C
      LOGICAL IFLAG1
      LOGICAL IFLAG2
      LOGICAL IFLAG3
C
      CHARACTER*1  IBASLC
      CHARACTER*1  IAMP
      CHARACTER*1  IQUOTE
      CHARACTER*20 IFORMT
      CHARACTER*132 ISTR
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
CC999 FORMAT(1X)
      CALL DPCONA(92,IBASLC)
      CALL DPCONA(39,IQUOTE)
      IAMP='&'
C
C  STEP 2: GENERATE THE HEADER ROW
C
 8020 FORMAT(A1,'begin{center}')
 8022 FORMAT(A1,'resizebox{',A1,'linewidth}{!} {')
C8021 FORMAT(A1,'begin{tabular}')
 8040 FORMAT(A1,'hline')
 8050 FORMAT(2X,A1,A1)
 8060 FORMAT(2X,A1)
      IF(NHEAD.GE.1)THEN
        IF(IFLAG3)THEN
          WRITE(ICOUT,8020)IBASLC
          CALL DPWRST('XXX','WRIT')
          IF(ILATRS.EQ.'ON')THEN
            WRITE(ICOUT,8022)IBASLC,IBASLC
            CALL DPWRST('XXX','WRIT')
          ENDIF
CCCCC     WRITE(ICOUT,8021)IBASLC
CCCCC     CALL DPWRST('XXX','WRIT')
          ISTR=' '
          ISTR(1:1)=IBASLC
          ISTR(2:16)='begin{tabular}{'
          ICNT=16
          DO8110I=1,NHEAD
            ICNT=ICNT+1
            ISTR(ICNT:ICNT)=ALIGN(I)(1:1)
 8110     CONTINUE
          ICNT=ICNT+1
          ISTR(ICNT:ICNT)='}'
          IFORMT='(A  )'
          WRITE(IFORMT(3:4),'(I2)')ICNT
          WRITE(ICOUT,IFORMT)ISTR(1:ICNT)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
        IF(IFLAG1)THEN
          WRITE(ICOUT,8040)IBASLC
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
        DO8120I=1,NHEAD
          IFORMT=' '
          IF(I.LT.NHEAD)THEN
            IF(NCHAR(I).LE.0)THEN
              WRITE(ICOUT,8060)IAMP
              CALL DPWRST('XXX','WRIT')
            ELSE
              IFORMT(1:11)='(A  ,1X,A1)'
              WRITE(IFORMT(3:4),'(I2)')NCHAR(I)
              WRITE(ICOUT,IFORMT)IVALUE(I)(1:NCHAR(I)),IAMP
              CALL DPWRST('XXX','WRIT')
            ENDIF
          ELSE
            IF(NCHAR(I).GT.0)THEN
              IFORMT(1:14)='(A  ,2X,A1,A1)'
              WRITE(IFORMT(3:4),'(I2)')NCHAR(I)
              WRITE(ICOUT,IFORMT)IVALUE(I)(1:NCHAR(I)),IBASLC,IBASLC
              CALL DPWRST('XXX','WRIT')
            ELSE
              WRITE(ICOUT,8050)IBASLC,IBASLC
              CALL DPWRST('XXX','WRIT')
            ENDIF
          ENDIF
 8120   CONTINUE
        IF(IFLAG2)THEN
          WRITE(ICOUT,8040)IBASLC
          CALL DPWRST('XXX','WRIT')
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLA4B(IVALUE,NCHAR,NHEAD,NCOLSP,IFLAG1,IFLAG2,IFLAG3)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS USED TO GENERATE
C              A HEADER ROW FOR A TABLE.  YOU CAN ALSO OPTIONALLY
C              ADD A RULE LINE BEFORE OR AFTER THE HEADER.
C
C              THIS IS A MODIFIED VERSION OF DPLAT4 THAT ADDS
C              AN ARGUMENT TO SPECIFY THE COLUMN SPAN FOR A GIVEN
C              COLUMN.
C
C     INPUT  ARGUMENTS--IVALUE  = THE CHARACTER STRING ARRAY
C                                 CONTAINING THE TEXT FOR THE
C                                 HEADER VALUES.
C                     --NCHAR   = THE INTEGER ARRAY THAT SPECIFIES
C                                 THE NUMBER OF CHARACTERS IN THE
C                                 HEADER VALUES.
C                     --NHEAD   = THE INTEGER VALUE THAT SPECIFIES
C                                 THE NUMBER OF HEADER VALUES.
C                     --NCOLSP  = THE INTEGER ARRAY THAT SPECIFIES
C                                 THE COLUMN SPAN FOR THE GIVEN COLUMN.
C                     --IFLAG1  = A LOGICAL VALUE THAT SPECIFIES
C                                 WHETHER A RULE LINE IS DRAWN BEFORE
C                                 THE HEADER.
C                     --IFLAG2  = A LOGICAL VALUE THAT SPECIFIES
C                                 WHETHER A RULE LINE IS DRAWN AFTER
C                                 THE HEADER.
C                     --IFLAG3  = A LOGICAL VALUE THAT SPECIFIES
C                                 WHETHER THE "CENTER" AND "TABULAR"
C                                 FIELDS ARE WRITTEN (SET TO FALSE FOR
C                                 SECOND AND GREATER LINES OF MULIT-LINE
C                                 HEADERS.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2011/1
C     ORIGINAL VERSION--JANUARY   2011.
C     UPDATED         --AUGUST    2014. RESIZE OPTION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*(*) IVALUE(NHEAD)
      INTEGER NCHAR(NHEAD)
      INTEGER NCOLSP(NHEAD)
C
      PARAMETER (MAXHED=1024)
      INTEGER IWIDTH(MAXHED)
      INTEGER NUMDIG(MAXHED)
      CHARACTER*8 ALIGN(MAXHED)
      CHARACTER*8 VALIGN(MAXHED)
      COMMON/HTML4/IWIDTH,NUMDIG,ALIGN,VALIGN
C
      INCLUDE 'DPCOST.INC'
C
      LOGICAL IFLAG1
      LOGICAL IFLAG2
      LOGICAL IFLAG3
C
      CHARACTER*1  IBASLC
      CHARACTER*1  IAMP
      CHARACTER*1  IQUOTE
      CHARACTER*20 IFORMT
      CHARACTER*132 ISTR
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
CC999 FORMAT(1X)
      CALL DPCONA(92,IBASLC)
      CALL DPCONA(39,IQUOTE)
      IAMP='&'
C
C  STEP 2: GENERATE THE HEADER ROW
C
 8020 FORMAT(A1,'begin{center}')
 8022 FORMAT(A1,'resizebox{',A1,'linewidth}{!} {')
C8021 FORMAT(A1,'begin{tabular}')
 8040 FORMAT(A1,'hline')
 8050 FORMAT(2X,A1,A1)
 8060 FORMAT(2X,A1)
      IF(NHEAD.GE.1)THEN
        IF(IFLAG3)THEN
          WRITE(ICOUT,8020)IBASLC
          CALL DPWRST('XXX','WRIT')
          IF(ILATRS.EQ.'ON')THEN
            WRITE(ICOUT,8022)IBASLC,IBASLC
            CALL DPWRST('XXX','WRIT')
          ENDIF
CCCCC     WRITE(ICOUT,8021)IBASLC
CCCCC     CALL DPWRST('XXX','WRIT')
          ISTR=' '
          ISTR(1:1)=IBASLC
          ISTR(2:16)='begin{tabular}{'
          ICNT=16
          DO8110I=1,NHEAD
            ICNT=ICNT+1
            ISTR(ICNT:ICNT)=ALIGN(I)(1:1)
 8110     CONTINUE
          ICNT=ICNT+1
          ISTR(ICNT:ICNT)='}'
          IFORMT='(A  )'
          WRITE(IFORMT(3:4),'(I2)')ICNT
          WRITE(ICOUT,IFORMT)ISTR(1:ICNT)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
        IF(IFLAG1)THEN
          WRITE(ICOUT,8040)IBASLC
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
        DO8120I=1,NHEAD
          IF(NCOLSP(I).LE.0)GOTO8120
          IFORMT=' '
          IF(NCOLSP(I).EQ.1)THEN
            IF(I.LT.NHEAD)THEN
              IF(NCHAR(I).LE.0)THEN
                WRITE(ICOUT,8060)IAMP
                CALL DPWRST('XXX','WRIT')
              ELSE
                IFORMT(1:11)='(A  ,1X,A1)'
                WRITE(IFORMT(3:4),'(I2)')NCHAR(I)
                WRITE(ICOUT,IFORMT)IVALUE(I)(1:NCHAR(I)),IAMP
                CALL DPWRST('XXX','WRIT')
              ENDIF
            ELSE
              IF(NCHAR(I).GT.0)THEN
                IFORMT(1:14)='(A  ,2X,A1,A1)'
                WRITE(IFORMT(3:4),'(I2)')NCHAR(I)
                WRITE(ICOUT,IFORMT)IVALUE(I)(1:NCHAR(I)),IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSE
                WRITE(ICOUT,8050)IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ENDIF
            ENDIF
          ELSE
            NCOL=NCOLSP(I)
            WRITE(ICOUT,8070)IBASLC,NCOL
 8070       FORMAT(A1,'multicolumn{',I2,'}{c}{')
            CALL DPWRST('XXX','WRIT')
            IF(I+NCOL-1.LT.NHEAD)THEN
              IF(NCHAR(I).LE.0)THEN
                WRITE(ICOUT,8071)IAMP
 8071           FORMAT(2X,'} ',A1)
                CALL DPWRST('XXX','WRIT')
              ELSE
                IFORMT(1:14)='(A  ,A2,1X,A1)'
                WRITE(IFORMT(3:4),'(I2)')NCHAR(I)
                WRITE(ICOUT,IFORMT)IVALUE(I)(1:NCHAR(I)),'} ',IAMP
                CALL DPWRST('XXX','WRIT')
              ENDIF
            ELSE
              IF(NCHAR(I).GT.0)THEN
                IFORMT(1:17)='(A  ,A2,2X,A1,A1)'
                WRITE(IFORMT(3:4),'(I2)')NCHAR(I)
                WRITE(ICOUT,IFORMT)IVALUE(I)(1:NCHAR(I)),'} ',
     1                             IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSE
                WRITE(ICOUT,8050)IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ENDIF
            ENDIF
          ENDIF
 8120   CONTINUE
        IF(IFLAG2)THEN
          WRITE(ICOUT,8040)IBASLC
          CALL DPWRST('XXX','WRIT')
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLAT5(IVALUE,NCHAR,AVALUE,NHEAD,IFLAG1)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS USED TO GENERATE
C              A DATA ROW FOR A TABLE.  THE FIRST FIELD CAN
C              BE A TEXT VALUE (FOR A ROW LABEL).
C
C     INPUT  ARGUMENTS--IVALUE  = THE CHARACTER STRING CONTAINING
C                                 THE TEXT FOR THE FIRST COLUMN.
C                     --NCHAR   = THE INTEGER ARRAY THAT SPECIFIES
C                                 THE NUMBER OF CHARACTERS IN THE
C                                 FIRST TEXT FIELD.
C                     --AVALUE  = A REAL ARRAY CONTAINING THE DATA
C                                 TO BE GENERATED.
C                     --NHEAD   = THE INTEGER VALUE THAT SPECIFIES
C                                 THE NUMBER OF NUMERIC VALUES.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2005/2
C     ORIGINAL VERSION--FEBRUARY  2005.
C     UPDATED         --APRIL     2009. ADDITIONAL FORMATTING OPTIONS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*(*) IVALUE
      REAL AVALUE(*)
      INTEGER NCHAR
C
      LOGICAL IFLAG1
C
      PARAMETER (MAXHED=1024)
      INTEGER IWIDTH(MAXHED)
      INTEGER NUMDIG(MAXHED)
      CHARACTER*8 ALIGN(MAXHED)
      CHARACTER*8 VALIGN(MAXHED)
      COMMON/HTML4/IWIDTH,NUMDIG,ALIGN,VALIGN
C
      CHARACTER*20 IFORMT
      CHARACTER*1  IBASLC
      CHARACTER*1  IAMP
      CHARACTER*1  ISPACE
      CHARACTER*1  ITEMP1
      CHARACTER*1  ITEMP2
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C  STEP 3: DEFINE A DATA ROW
C
      CALL DPCONA(92,IBASLC)
      IAMP='&'
      ISPACE=' '
C
C  STEP 1: FIRST COLUMN MAY BE A ROW LABEL
C
      IF(NCHAR.GT.0)THEN
        IFORMT=' '
        IFORMT(1:11)='(A  ,A1)'
        WRITE(IFORMT(3:4),'(I2)')NCHAR
        WRITE(ICOUT,IFORMT)IVALUE(1:NCHAR),IAMP
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
C     APRIL 2009: SUPPORT THE FOLLOWING FORMATTING OPTIONS
C
C                  NUMDIG(I) > 0          => Fyy.xx FORMAT
C                  NUMDIG(I) = 0          => I12 FORMAT
C                  NUMDIG(I) = -1         => BLANK
C                  NUMDIG(I) = -2         => G15.7
C                  NUMDIG(I) = -3 to -20  => Eyy.xx
C                  NUMDIG(I) = -99        => '**'
C
 8031 FORMAT(G15.7,2X,A1,A1)
 8033 FORMAT(I12,2X,A1,A1)
 8035 FORMAT(' ',2X,A1,A1)
 8037 FORMAT(' ** ',A1,A1)
C8231 FORMAT(2X,A1,A1)
 8040 FORMAT(A1,'hline')
      IF(NHEAD.GE.1)THEN
        DO100I=1,NHEAD
          IFORMT=' '
          IF(I.LT.NHEAD)THEN
            ITEMP1=IAMP
            ITEMP2=ISPACE
          ELSE
            ITEMP1=IBASLC
            ITEMP2=IBASLC
          ENDIF
          IF(NUMDIG(I).GT.0)THEN
            IXX=NUMDIG(I)
            IYY=IXX+10
            IFORMT(1:17)='(F  .  ,1X,A1,A1)'
            WRITE(IFORMT(3:4),'(I2)')IYY
            WRITE(IFORMT(6:7),'(I2)')IXX
            WRITE(ICOUT,IFORMT)AVALUE(I),ITEMP1,ITEMP2
            CALL DPWRST('XXX','WRIT')
          ELSEIF(NUMDIG(I).EQ.0)THEN
            IF(AVALUE(I).GE.0.0)THEN
              WRITE(ICOUT,8033)INT(AVALUE(I)+0.5),ITEMP1,ITEMP2
            ELSE
              WRITE(ICOUT,8033)INT(AVALUE(I)-0.5),ITEMP1,ITEMP2
            ENDIF
            CALL DPWRST('XXX','WRIT')
          ELSEIF(NUMDIG(I).EQ.-1)THEN
            WRITE(ICOUT,8035)ITEMP1,ITEMP2
            CALL DPWRST('XXX','WRIT')
          ELSEIF(NUMDIG(I).EQ.-99)THEN
            WRITE(ICOUT,8037)ITEMP1,ITEMP2
            CALL DPWRST('XXX','WRIT')
          ELSEIF(NUMDIG(I).EQ.-2)THEN
            WRITE(ICOUT,8031)AVALUE(I),ITEMP1,ITEMP2
            CALL DPWRST('XXX','WRIT')
          ELSEIF(NUMDIG(I).LT.-2 .AND. NUMDIG(I).GT.-20)THEN
            IXX=ABS(NUMDIG(I))
            IYY=IXX+8
            IFORMT(1:17)='(E  .  ,1X,A1,A1)'
            WRITE(IFORMT(3:4),'(I2)')IYY
            WRITE(IFORMT(6:7),'(I2)')IXX
            WRITE(ICOUT,IFORMT)AVALUE(I),ITEMP1,ITEMP2
            CALL DPWRST('XXX','WRIT')
          ELSE
            WRITE(ICOUT,8035)ITEMP1,ITEMP2
            CALL DPWRST('XXX','WRIT')
          ENDIF
  100   CONTINUE
C
        IF(IFLAG1)THEN
          WRITE(ICOUT,8040)IBASLC
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLAT6(IFLAG1,IFLAG2,IFLAG3)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS USED TO EITHER
C              INITIATE OR END A TABLE.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2005/2
C     ORIGINAL VERSION--FEBRUARY  2005.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
C---------------------------------------------------------------------
C
      LOGICAL IFLAG1
      LOGICAL IFLAG2
      LOGICAL IFLAG3
C
      CHARACTER*1 IBASLC
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C  FOLLOWING ADDS A RULE LINE
C
 8001 FORMAT(A1,'end{verbatim}')
 8020 FORMAT(A1,'begin{table}')
 8040 FORMAT(A1,'end{table}')
      CALL DPCONA(92,IBASLC)
C
      IF(IFLAG3)THEN
        WRITE(ICOUT,8001)IBASLC
        CALL DPWRST('XXX','WRIT')
      ENDIF
      IF(IFLAG1)THEN
        WRITE(ICOUT,8020)IBASLC
        CALL DPWRST('XXX','WRIT')
      ENDIF
      IF(IFLAG2)THEN
        WRITE(ICOUT,8040)IBASLC
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLAT7(IHEAD,NHEAD,AVAL,NUMDIG)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS USED TO WRITE A
C              A SINGLE LINE OF OUTPUT.
C     INPUT  ARGUMENTS--IHEAD  = THE CHARACTER STRING CONTAINING
C                                THE TEXT FOR THE LINE
C                     --NHEAD  = THE INTEGER NUMBER THAT SPECIFIES
C                                THE NUMBER OF CHARACTERS IN THE
C                                LINE.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2005/2
C     ORIGINAL VERSION--FEBRUARY  2005.
C     UPDATED         --DECEMBER  2014. SPECIFY NUMBER OF DIGITS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*(*) IHEAD
C
      CHARACTER*1  IBASLC
      CHARACTER*25 IFORMT
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C  STEP 1: END ASIS MODE AND WRITE A HEADER
C
CC999 FORMAT(1X)
      CALL DPCONA(92,IBASLC)
C
C  STEP 2: START TABLE AND DEFINE A CAPTION
C
 8005 FORMAT('{',A1,'bf ')
 8006 FORMAT(' }',2X,A1,A1)
C8007 FORMAT('{',A1,'bf ',A1,'space } ',A1,A1)
 8007 FORMAT('$ ',A1,' $ ',A1,A1)
C
      IF(NHEAD.GE.1)THEN
        IFORMT=' '
        IF(AVAL.NE.CPUMIN)THEN
          IF(NUMDIG.GT.0)THEN
            AVALT=RND(AVAL,NUMDIG)
            IXX=NUMDIG
            IYY=IXX+8
            IFORMT(1:15)='(A  ,2X,F  .  )'
            WRITE(IFORMT(10:11),'(I2)')IYY
            WRITE(IFORMT(13:14),'(I2)')IXX
            WRITE(IFORMT(3:4),'(I2)')NHEAD
            WRITE(ICOUT,8005)IBASLC
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,IFORMT)IHEAD(1:NHEAD),AVALT
            CALL DPWRST('XXX','WRIT')
          ELSEIF(NUMDIG.LT.0)THEN
            NUMDI2=-NUMDIG
            AVALT=RND(AVAL,NUMDI2)
            IXX=-NUMDIG
            IYY=IXX+8
            IFORMT(1:15)='(A  ,2X,E  .  )'
            WRITE(IFORMT(10:11),'(I2)')IYY
            WRITE(IFORMT(13:14),'(I2)')IXX
            WRITE(IFORMT(3:4),'(I2)')NHEAD
            WRITE(ICOUT,8005)IBASLC
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,IFORMT)IHEAD(1:NHEAD),AVALT
            CALL DPWRST('XXX','WRIT')
          ELSEIF(NUMDIG.EQ.0)THEN
            IF(AVAL.GE.0.0)THEN
              IVALT=INT(AVAL + 0.5)
            ELSE
              IVALT=INT(AVAL - 0.5)
            ENDIF
            IFORMT(1:23)='(A  ,2X,I10)'
            WRITE(IFORMT(3:4),'(I2)')NHEAD
            WRITE(ICOUT,8005)IBASLC
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,IFORMT)IHEAD(1:NHEAD),IVALT
            CALL DPWRST('XXX','WRIT')
          ENDIF
          WRITE(ICOUT,8006)IBASLC,IBASLC
          CALL DPWRST('XXX','WRIT')
        ELSE
          IF(NHEAD.EQ.1 .AND. IHEAD(1:1).EQ.' ')THEN
            WRITE(ICOUT,8007)IBASLC,IBASLC,IBASLC
            CALL DPWRST('XXX','WRIT')
          ELSE
            IFORMT(1:14)='(A  ,2X,A1,A1)'
            WRITE(IFORMT(3:4),'(I2)')NHEAD
            WRITE(ICOUT,8005)IBASLC
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,IFORMT)IHEAD(1:NHEAD)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,8006)IBASLC,IBASLC
            CALL DPWRST('XXX','WRIT')
          ENDIF
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLAT8(IHEAD,NHEAD,IFLAG1,IFLAG2)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS USED TO INITIATE
C              THE LATEX OUTPUT AND GENERATE AN OVERALL TITLE.
C     INPUT  ARGUMENTS--IHEAD  = THE CHARACTER STRING CONTAINING
C                                THE TEXT FOR THE HEADER
C                     --NHEAD  = THE INTEGER NUMBER THAT SPECIFIES
C                                THE NUMBER OF CHARACTERS IN THE
C                                HEADER.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2005/2
C     ORIGINAL VERSION--FEBRUARY  2005.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      LOGICAL IFLAG1
      LOGICAL IFLAG2
C
      CHARACTER*(*) IHEAD
C
      CHARACTER*1  IBASLC
      CHARACTER*10 IFORMT
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOBE.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C  STEP 1: END ASIS MODE AND WRITE A HEADER
C
      IF(ISUBG4.EQ.'ON')THEN
        WRITE(ICOUT,11)NHEAD,IFLAG1,IFLAG2
   11   FORMAT('DPLAT8: NHEAD,IFLAG1,IFLAG2 = ',I5,2L5)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      CALL DPCONA(92,IBASLC)
  999 FORMAT(1X)
 8001 FORMAT(A1,'end{verbatim}')
 8005 FORMAT('{',A1,'bf ')
 8006 FORMAT(' }')
 8007 FORMAT('$ ',A1,1X,A1,' $ ',A1,A1,' ')
 8009 FORMAT(A1,'begin{center}')
 8013 FORMAT(A1,'end{center}')
C8019 FORMAT(A1,'begin{verbatim}')
      IF(IFLAG1)THEN
        WRITE(ICOUT,8001)IBASLC
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      IF(NHEAD.GE.1)THEN
        WRITE(ICOUT,8009)IBASLC
        CALL DPWRST('XXX','WRIT')
        IFORMT=' '
        IFORMT(1:5)='(A  )'
        WRITE(IFORMT(3:4),'(I2)')NHEAD
        WRITE(ICOUT,8005)IBASLC
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,IFORMT)IHEAD(1:NHEAD)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8006)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8007)IBASLC,IBASLC,IBASLC,IBASLC
        CALL DPWRST('XXX','WRIT')
CCCCC   WRITE(ICOUT,8007)IBASLC,IBASLC,IBASLC,IBASLC
CCCCC   CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8013)IBASLC
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLAT9(IVALUE,NCHAR,AVALUE,NHEAD,IFLAG1,IVAL2,NCHAR2)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS USED TO GENERATE
C              A DATA ROW FOR A TABLE.  THE FIRST FIELD CAN
C              BE A TEXT VALUE (FOR A ROW LABEL).
C
C     INPUT  ARGUMENTS--IVALUE  = THE CHARACTER STRING CONTAINING
C                                 THE TEXT FOR THE FIRST COLUMN.
C                     --NCHAR   = THE INTEGER ARRAY THAT SPECIFIES
C                                 THE NUMBER OF CHARACTERS IN THE
C                                 FIRST TEXT FIELD.
C                     --AVALUE  = A REAL ARRAY CONTAINING THE DATA
C                                 TO BE GENERATED.
C                     --NHEAD   = THE INTEGER VALUE THAT SPECIFIES
C                                 THE NUMBER OF NUMERIC VALUES.
C                     --IVAL2   = THE CHARACTER STRING CONTAINING
C                                 THE TEXT FOR THE LAST COLUMN.
C                     --NCHAR   = THE INTEGER ARRAY THAT SPECIFIES
C                                 THE NUMBER OF CHARACTERS IN THE
C                                 LAST TEXT FIELD.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2006/11
C     ORIGINAL VERSION--NOVEMBER  2006.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*(*) IVALUE
      CHARACTER*(*) IVAL2
      REAL AVALUE(NHEAD)
      INTEGER NCHAR
      INTEGER NCHAR2
C
      LOGICAL IFLAG1
C
      PARAMETER (MAXHED=1024)
      INTEGER IWIDTH(MAXHED)
      INTEGER NUMDIG(MAXHED)
      CHARACTER*8 ALIGN(MAXHED)
      CHARACTER*8 VALIGN(MAXHED)
      COMMON/HTML4/IWIDTH,NUMDIG,ALIGN,VALIGN
C
      CHARACTER*20 IFORMT
      CHARACTER*1  IBASLC
      CHARACTER*1  IAMP
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C  STEP 3: DEFINE A DATA ROW
C
      CALL DPCONA(92,IBASLC)
      IAMP='&'
C
C  STEP 1: FIRST COLUMN MAY BE A ROW LABEL
C
      IF(NCHAR.GT.0)THEN
        IFORMT=' '
        IFORMT(1:11)='(A  ,A1)'
        WRITE(IFORMT(3:4),'(I2)')NCHAR
        WRITE(ICOUT,IFORMT)IVALUE(1:NCHAR),IAMP
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
 8031 FORMAT(G15.7,' & ')
 8033 FORMAT(I12,' & ')
 8035 FORMAT(' & ')
 8131 FORMAT(G15.7,2X,A1,A1)
 8231 FORMAT(2X,A1,A1)
 8133 FORMAT(I12,2X,A1,A1)
 8135 FORMAT(' ',2X,A1,A1)
 8235 FORMAT(' &  ')
 8040 FORMAT(A1,'hline')
      IF(NHEAD.GE.1)THEN
        DO100I=1,NHEAD
          IFORMT=' '
          IF(I.LE.NHEAD)THEN
            IF(NUMDIG(I).GT.0)THEN
              IFORMT(1:13)='(F15. ,1X,A1)'
              WRITE(IFORMT(6:6),'(I1)')MIN(NUMDIG(I),9)
              WRITE(ICOUT,IFORMT)AVALUE(I),IAMP
              CALL DPWRST('XXX','WRIT')
            ELSEIF(NUMDIG(I).EQ.0)THEN
              IF(AVALUE(I).GE.0.0)THEN
                WRITE(ICOUT,8033)INT(AVALUE(I)+0.5)
              ELSE
                WRITE(ICOUT,8033)INT(AVALUE(I)-0.5)
              ENDIF
              CALL DPWRST('XXX','WRIT')
            ELSEIF(NUMDIG(I).EQ.-1)THEN
              WRITE(ICOUT,8035)
              CALL DPWRST('XXX','WRIT')
            ELSEIF(NUMDIG(I).EQ.-2)THEN
              WRITE(ICOUT,8031)AVALUE(I)
              CALL DPWRST('XXX','WRIT')
            ELSE
              WRITE(ICOUT,8235)
              CALL DPWRST('XXX','WRIT')
            ENDIF
          ELSE
            IF(NUMDIG(I).GT.0)THEN
              IFORMT(1:16)='(F15. ,2X,A1,A1)'
              WRITE(IFORMT(6:6),'(I1)')MIN(NUMDIG(I),9)
              WRITE(ICOUT,IFORMT)AVALUE(I),IBASLC,IBASLC
              CALL DPWRST('XXX','WRIT')
            ELSEIF(NUMDIG(I).EQ.0)THEN
              WRITE(ICOUT,8133)INT(AVALUE(I)+0.5),IBASLC,IBASLC
              CALL DPWRST('XXX','WRIT')
            ELSEIF(NUMDIG(I).EQ.-1)THEN
              WRITE(ICOUT,8135)IBASLC,IBASLC
              CALL DPWRST('XXX','WRIT')
            ELSEIF(NUMDIG(I).EQ.-2)THEN
              WRITE(ICOUT,8131)AVALUE(I),IBASLC,IBASLC
              CALL DPWRST('XXX','WRIT')
            ELSE
              WRITE(ICOUT,8231)IBASLC,IBASLC
              CALL DPWRST('XXX','WRIT')
            ENDIF
          END IF
  100   CONTINUE
C
        IF(NCHAR2.GT.0)THEN
          IFORMT=' '
          IFORMT(1:11)='(A  ,A1,A1)'
          WRITE(IFORMT(3:4),'(I2)')NCHAR2
          WRITE(ICOUT,IFORMT)IVAL2(1:NCHAR2),IBASLC,IBASLC
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
        IF(IFLAG1)THEN
          WRITE(ICOUT,8040)IBASLC
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLATH(ICOM,IHARG,ARG,NUMARG,
     1PDEFTH,
     1PX1LTH,PX2LTH,PX3LTH,PY1LTH,PY2LTH,
     1IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LABEL THICKNESS SWITCHES
C              FOR ANY OF THE 5 LABELS.
C              SUCH LABEL THICKNESS SWITCHES DEFINE THE THICKNESS
C              FOR EACH OF THE 5 LABELS.
C              THE CONTENTS OF A LABEL THICKNESS SWITCH ARE
C              A THICKNESS.
C              THE LABEL THICKNESS SWITCHES FOR THE 5 LABELS
C              ARE CONTAINED IN PX1LTH,PX2LTH,PX3LTH,PY1LTH,PY2LTH.
C     INPUT  ARGUMENTS--ICOM
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --ARG    (A REAL VECTOR)
C                     --NUMARG
C                     --PDEFTH
C     OUTPUT ARGUMENTS--PX1LTH (A REAL VARIABLE
C                       DENOTING THE THICKNESS OF THE FIRST HORIZ. LABEL
C                     --PX2LTH (A REAL VARIABLE
C                       DENOTING THE THICKNESS OF THE SECOND HORIZ. LABEL
C                     --PX3LTH (A REAL VARIABLE
C                       DENOTING THE THICKNESS OF THE THIRD HORIZ. LABEL
C                     --PY1LTH (A REAL VARIABLE
C                       DENOTING THE THICKNESS OF THE FIRST VERT. LABEL
C                     --PY2LTH (A REAL VARIABLE
C                       DENOTING THE THICKNESS OF THE SECOND VERT. LABEL
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--89/2
C     ORIGINAL VERSION--JANUARY   1989.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION ARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.LE.0)GOTO1900
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'THIC')GOTO1090
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'MARK'.AND.
     1IHARG(2).EQ.'THIC')GOTO1090
      GOTO1900
 1090 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE FIRST  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'XLAB')GOTO1100
      IF(ICOM.EQ.'X1LA')GOTO1100
      GOTO1199
C
 1100 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1150
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1150
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1150
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1150
      IF(IHARG(NUMARG).EQ.'THIC')GOTO1150
      GOTO1160
C
 1150 CONTINUE
      PHOLD=PDEFTH
      GOTO1180
C
 1160 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      PX1LTH=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE LABEL THICKNESS (FOR THE FIRST  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)PHOLD
 1182 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1900
C
 1199 CONTINUE
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE SECOND HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X2LA')GOTO1200
      GOTO1299
C
 1200 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1250
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1250
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1250
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1250
      IF(IHARG(NUMARG).EQ.'THIC')GOTO1250
      GOTO1260
C
 1250 CONTINUE
      PHOLD=PDEFTH
      GOTO1280
C
 1260 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1280
C
 1280 CONTINUE
      IFOUND='YES'
      PX2LTH=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1289
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1281)
 1281 FORMAT('THE LABEL THICKNESS (FOR THE SECOND HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1282)PHOLD
 1282 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1289 CONTINUE
      GOTO1900
C
 1299 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE THIRD  HORIZONTAL LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'X3LA')GOTO1300
      GOTO1399
C
 1300 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1350
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1350
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1350
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1350
      IF(IHARG(NUMARG).EQ.'THIC')GOTO1350
      GOTO1360
C
 1350 CONTINUE
      PHOLD=PDEFTH
      GOTO1380
C
 1360 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1380
C
 1380 CONTINUE
      IFOUND='YES'
      PX3LTH=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1389
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1381)
 1381 FORMAT('THE LABEL THICKNESS (FOR THE THIRD  HORIZONTAL ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1382)PHOLD
 1382 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1389 CONTINUE
      GOTO1900
C
 1399 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE LEFT   VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y1LA')GOTO1400
      GOTO1499
C
 1400 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1450
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1450
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1450
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1450
      IF(IHARG(NUMARG).EQ.'THIC')GOTO1450
      GOTO1460
C
 1450 CONTINUE
      PHOLD=PDEFTH
      GOTO1480
C
 1460 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1480
C
 1480 CONTINUE
      IFOUND='YES'
      PY1LTH=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1489
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1481)
 1481 FORMAT('THE LABEL THICKNESS (FOR THE LEFT   VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1482)PHOLD
 1482 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1489 CONTINUE
      GOTO1900
C
 1499 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY THE RIGHT  VERTICAL   LABEL IS      TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'Y2LA')GOTO1500
      GOTO1599
C
 1500 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1550
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1550
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1550
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1550
      IF(IHARG(NUMARG).EQ.'THIC')GOTO1550
      GOTO1560
C
 1550 CONTINUE
      PHOLD=PDEFTH
      GOTO1580
C
 1560 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1580
C
 1580 CONTINUE
      IFOUND='YES'
      PY2LTH=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1589
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1581)
 1581 FORMAT('THE LABEL THICKNESS (FOR THE RIGHT  VERTICAL   ',
     1'LABEL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1582)PHOLD
 1582 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1589 CONTINUE
      GOTO1900
C
 1599 CONTINUE
C
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  BOTH LEFT AND RIGHT VERTICAL LABELS ARE TO BE CHANGED   **
C               **************************************************************
C
      IF(ICOM.EQ.'YLAB')GOTO1600
      GOTO1699
C
 1600 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1650
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1650
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1650
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1650
      IF(IHARG(NUMARG).EQ.'THIC')GOTO1650
      GOTO1660
C
 1650 CONTINUE
      PHOLD=PDEFTH
      GOTO1680
C
 1660 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1680
C
 1680 CONTINUE
      IFOUND='YES'
      PY1LTH=PHOLD
      PY2LTH=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1689
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1681)
 1681 FORMAT('THE LABEL THICKNESS (FOR THE LEFT AND RIGHT VERTICAL ',
     1'LABELS)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1682)PHOLD
 1682 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1689 CONTINUE
      GOTO1900
C
 1699 CONTINUE
C               **************************************************************
C               **  TREAT THE CASE WHEN                                     **
C               **  ONLY ALL  5 LABELS ARE                   TO BE CHANGED  **
C               **************************************************************
C
      IF(ICOM.EQ.'LABE')GOTO1700
      IF(ICOM.EQ.'XYLA')GOTO1700
      IF(ICOM.EQ.'YXLA')GOTO1700
      GOTO1799
C
 1700 CONTINUE
      IF(IHARG(NUMARG).EQ.'ON')GOTO1750
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1750
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1750
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1750
      IF(IHARG(NUMARG).EQ.'THIC')GOTO1750
      GOTO1760
C
 1750 CONTINUE
      PHOLD=PDEFTH
      GOTO1780
C
 1760 CONTINUE
      PHOLD=ARG(NUMARG)
      GOTO1780
C
 1780 CONTINUE
      IFOUND='YES'
      PY1LTH=PHOLD
      PY2LTH=PHOLD
      PX1LTH=PHOLD
      PX2LTH=PHOLD
      PX3LTH=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1789
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1781)
 1781 FORMAT('THE LABEL THICKNESS (FOR ALL 5 ',
     1'LABELS--3 HORIZONTAL AND 2 VERTICAL)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1782)PHOLD
 1782 FORMAT('HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1789 CONTINUE
      GOTO1900
C
 1799 CONTINUE
C
 1900 CONTINUE
      RETURN
      END
      SUBROUTINE DPLATT(IHARG,IARGT,ARG,NUMARG,
     1                  PXSTAR,PYSTAR,PXEND,PYEND,
     1                  ILINPA,ILINCO,ILINC2,MAXLNZ,PLINTH,
     1                  AREGBA,IREBLI,IREBCO,IREBC2,MAXRGZ,PREBTH,
     1                  IREFSW,IREFCO,IREFC2,
     1                  IREPTY,IREPLI,IREPCO,IREPC2,PREPTH,PREPSP,
     1                  PTEXHE,PTEXWI,PTEXVG,PTEXHG,
     1                  IGRASW,IDIASW,
     1                  PGRAXF,PGRAYF,PDIAXC,PDIAYC,PDIAX2,PDIAY2,
     1                  PDIAHE,PDIAWI,PDIAVG,PDIAHG,
     1                  NUMDEV,IDMANU,IDMODE,IDMOD2,IDMOD3,
     1                  IDPOWE,IDCONT,IDCOLO,IDNVPP,IDNHPP,IDUNIT,
     1                  IDNVOF,IDNHOF,IDFONT,UNITSW,PDSCAL,
     1                  IBACCO,IBACC2,
     1                  IBUGD2,IFOUND,IERROR)
C
C     PURPOSE--DRAW ONE OR MORE LATTICES (DEPENDING ON HOW MANY NUMBERS
C              ARE PROVIDED).  THE COORDINATES ARE IN STANDARDIZED UNITS
C              OF 0 TO 100.
C     NOTE--THE INPUT COORDINATES DEFINE THE VERTICES OF THE LOWER LEFT
C           CORNER OF THE LATTICE, THE X AND Y INCREMENTS OF THE LATTICE
C           AND THE UPPER RIGHT CORNER OF THE LATTICE.
C           LATTICE X1 Y1 XINC YINC X2 Y2
C     NOTE-THE USUAL INPUT NUMBER OF COORDINATES IS 3
C          AND THEREFORE THE USUAL INPUT NUMBER OF NUMBERS IS 2*3 = 6.
C     NOTE-- THE FOLLOWING GENERALIZATIONS AND COMMENTS NEED
C            CORRECTING 05/05/1987
C     NOTE--IF 4 NUMBERS ARE PROVIDED, THEN THE DRAWN LATTICE WILL GO
C           FROM THE LAST CURSOR POSITION (ASSUMED TO BE AT VERTEX 1)
C           THROUGH THE (X,Y) POINT (EITHER ABSOLUTE OR RELATIVE) AS
C           DEFINED BY THE FIRST AND SECOND NUMBERS (ASSUMED TO BE AT
C           VERTEX 2) TO THE (X,Y) POINT (EITHER ABSOLUTE OR RELATIVE)
C           AS DEFINED BY THE THIRD AND FOURTH NUMBERS (ASSUMED TO BE AT
C           VERTEX 3) AND CONTINUING BACK THE START POINT TO CLOSE THE
C           LATTICE.
C     NOTE--IF 6 NUMBERS ARE PROVIDED, THEN THE DRAWN LATTICE WILL GO
C           FROM THE ABSOLUTE (X,Y) POSITION AS RESULTING FORM THE FIRST
C           AND SECOND NUMBERS (ASSUMED TO BE AT VERTEX 1) THROUGH THE
C           (X,Y) POINT (EITHER ABSOLUTE OR RELATIVE) AS DEFINED BY THE
C           THIRD AND FOURTH NUMBERS (ASSUMED TO BE AT VERTEX 2) TO THE
C           (X,Y) POINT (EITHER ABSOLUTE OR RELATIVE) AS DEFINED BY THE
C           FIFTH AND SIXTH NUMBERS (ASSUMED TO BE AT VERTEX 3) AND
C           THEN CONTINUING BACK THE START POINT TO CLOSE THE LATTICE.
C     NOTE--AND SO FORTH FOR 10, 14, 18, ... NUMBERS.
C     INPUT  ARGUMENTS--IHARG
C                     --IARGT
C                     --ARG
C                     --NUMARG
C                     --PXSTAR
C                     --PYSTAR
C     OUTPUT ARGUMENTS--PXEND
C                     --PYEND
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--APRIL     1987.
C     UPDATED         --JANUARY   1989. CALL LIST FOR OFFSET VAR (ALAN)
C     UPDATED         --MARCH     1997. SUPPORT FOR DEVICE FONT (ALAN)
C     UPDATED         --JULY      1997. SUPPORT FOR "DATA" UNITS (ALAN)
C     UPDATED         --DECEMBER  2018. CHECK FOR DISCRETE, NULL, OR
C                                       NONE DEVICE
C     UPDATED         --DECEMBER  2018. SUPPORT FOR "DEVICE ... SCALE"
C                                       COMMAND
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLORS
C
C-----NON-COMMON VARIABLES-----------------------------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 ILINPA
      CHARACTER*4 ILINCO
C
      CHARACTER*4 IREBLI
      CHARACTER*4 IREBCO
      CHARACTER*4 IREFSW
      CHARACTER*4 IREFCO
      CHARACTER*4 IREPTY
      CHARACTER*4 IREPLI
      CHARACTER*4 IREPCO
C
      CHARACTER*4 IGRASW
      CHARACTER*4 IDIASW
C
      CHARACTER*4 IDMANU
      CHARACTER*4 IDMODE
      CHARACTER*4 IDMOD2
      CHARACTER*4 IDMOD3
      CHARACTER*4 IDPOWE
      CHARACTER*4 IDCONT
      CHARACTER*4 IDCOLO
CCCCC ADD FOLLOWING LINE MARCH 1997.
      CHARACTER*4 IDFONT
CCCCC ADD FOLLOWING LINE JULY 1997.
      CHARACTER*4 UNITSW
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IBUGD2
      CHARACTER*4 IERROR
      CHARACTER*4 ISUBRO
C
      CHARACTER*4 IFIG
      CHARACTER*4 IBELSW
      CHARACTER*4 IERASW
      CHARACTER*4 IBACCO
      CHARACTER*4 ICOPSW
      CHARACTER*4 ITYPEO
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
      DIMENSION ILINPA(*)
      DIMENSION ILINCO(*)
      DIMENSION ILINC2(MAXLNZ,3)
      DIMENSION PLINTH(*)
C
      DIMENSION AREGBA(*)
      DIMENSION IREBLI(*)
      DIMENSION IREBCO(*)
      DIMENSION IREBC2(MAXRGZ,3)
      DIMENSION PREBTH(*)
      DIMENSION IREFSW(*)
      DIMENSION IREFCO(*)
      DIMENSION IREFC2(MAXRGZ,3)
      DIMENSION IREPTY(*)
      DIMENSION IREPLI(*)
      DIMENSION IREPCO(*)
      DIMENSION IREPC2(MAXRGZ,3)
      DIMENSION PREPTH(*)
      DIMENSION PREPSP(*)
      DIMENSION PDSCAL(*)
C
      DIMENSION IDMANU(*)
      DIMENSION IDMODE(*)
      DIMENSION IDMOD2(*)
      DIMENSION IDMOD3(*)
      DIMENSION IDPOWE(*)
      DIMENSION IDCONT(*)
      DIMENSION IDCOLO(*)
CCCCC ADD FOLLOWING LINE MARCH 1997.
      DIMENSION IDFONT(*)
      DIMENSION IDNVPP(*)
      DIMENSION IDNHPP(*)
      DIMENSION IDUNIT(*)
C
      DIMENSION IDNVOF(*)
      DIMENSION IDNHOF(*)
      DIMENSION IBACC2(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOGR.INC'
      INCLUDE 'DPCOBE.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      IERRG4=IERROR
CCCCC IBUGG4=IBUGD2
CCCCC ISUBG4=ISUBRO
C
      ILOCFN=0
      NUMNUM=0
C
      X1=0.0
      Y1=0.0
      X2=0.0
      Y2=0.0
C
      IF(IBUGG4.EQ.'OFF'.AND.ISUBG4.NE.'LATT')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPLATT--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)NUMARG
   53 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO55I=1,NUMARG
      WRITE(ICOUT,56)I,IHARG(I),IARGT(I),ARG(I)
   56 FORMAT('I,IHARG(I),IARGT(I),ARG(I) = ',I8,2X,A4,2X,A4,E15.7)
      CALL DPWRST('XXX','BUG ')
   55 CONTINUE
      WRITE(ICOUT,57)PXSTAR,PYSTAR
   57 FORMAT('PXSTAR,PYSTAR = ',2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,58)PXEND,PYEND
   58 FORMAT('PXEND,PYEND = ',2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,61)ILINPA(1),ILINCO(1),PLINTH(1)
   61 FORMAT('ILINPA(1),ILINCO(1),PLINTH(1) = ',A4,2X,A4,E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)AREGBA(1)
   62 FORMAT('AREGBA(1) = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,63)IREBLI(1),IREBCO(1),PREBTH(1)
   63 FORMAT('IREBLI(1),IREBCO(1),PREBTH(1) = ',A4,2X,A4,E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,64)IREFSW(1),IREFCO(1)
   64 FORMAT('IREFSW(1),IREFCO(1) = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,65)IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1)
   65 FORMAT('IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1) = ',
     1A4,2X,A4,2X,A4,2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,69)PTEXHE,PTEXWI
   69 FORMAT('PTEXHE,PTEXWI= ',2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,70)PTEXVG,PTEXHG
   70 FORMAT('PTEXVG,PTEXHG= ',2E15.6)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,76)IGRASW,IDIASW
   76 FORMAT('IGRASW,IDIASW = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,77)PGRAXF,PGRAYF,PDIAXC,PDIAYC
   77 FORMAT('PGRAXF,PGRAYF,PDIAXC,PDIAYC = ',4E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,78)PDIAHE,PDIAWI,PDIAVG,PDIAHG
   78 FORMAT('PDIAHE,PDIAWI,PDIAVG,PDIAHG = ',4E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,80)NUMDEV
   80 FORMAT('NUMDEV= ',I8)
      CALL DPWRST('XXX','BUG ')
      DO81I=1,NUMDEV
      WRITE(ICOUT,82)IDMANU(I),IDMODE(I),IDMOD2(I),IDMOD3(I)
   82 FORMAT('IDMANU(I),IDMODE(I),IDMOD2(I),IDMOD3(I) = ',
     1A4,2X,A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,83)IDPOWE(I),IDCONT(I),IDCOLO(I)
   83 FORMAT('IDPOWE(I),IDCONT(I),IDCOLO(I) = ',
     1A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,84)IDNVPP(I),IDNHPP(I),IDUNIT(I)
   84 FORMAT('IDNVPP(I),IDNHPP(I),IDUNIT(I) = ',
     1I8,I8,I8)
      CALL DPWRST('XXX','BUG ')
   81 CONTINUE
      WRITE(ICOUT,87)IFOUND
   87 FORMAT('IFOUND= ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,88)IBUGG4,ISUBG4,IERRG4
   88 FORMAT('IBUGG4,ISUBG4,IERRG4 = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,89)IBUGD2,IERROR
   89 FORMAT('IBUGD2,IERROR= ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
   90 CONTINUE
C
      IFIG='LATT'
      NUMPT=3
      NUMPT2=2*NUMPT
C
C               ********************************
C               **  STEP 0--                  **
C               **  STEP THROUGH EACH DEVICE  **
C               ********************************
C
      IF(NUMDEV.LE.0)GOTO9000
      DO8000IDEVIC=1,NUMDEV
C
      IF(IDPOWE(IDEVIC).EQ.'OFF')GOTO8000
C
      IMANUF=IDMANU(IDEVIC)
      IMODEL=IDMODE(IDEVIC)
      IMODE2=IDMOD2(IDEVIC)
      IMODE3=IDMOD3(IDEVIC)
      IGCONT=IDCONT(IDEVIC)
      IGCOLO=IDCOLO(IDEVIC)
      IGFONT=IDFONT(IDEVIC)
      NUMVPP=IDNVPP(IDEVIC)
      NUMHPP=IDNHPP(IDEVIC)
      ANUMVP=NUMVPP
      ANUMHP=NUMHPP
      IOFFSV=IDNVOF(IDEVIC)
      IOFFSH=IDNHOF(IDEVIC)
      IGUNIT=IDUNIT(IDEVIC)
      PCHSCA=PDSCAL(IDEVIC)
C
C               ************************************
C               **  STEP 1--                      **
C               **  CARRY OUT OPENING OPERATIONS  **
C               **  ON THE GRAPHICS DEVICES       **
C               ************************************
C
      CALL DPOPDE
C
      IBELSW='OFF'
      NUMRIN=0
      IERASW='OFF'
      IBACCO='JUNK'
C
      CALL DPOPPL(IGRASW,IBELSW,NUMRIN,IERASW,IBACCO,IBACC2)
C
C               *****************************************
C               **  STEP 2--                           **
C               **  SEARCH FOR COMMAND SPECIFICATIONS  **
C               *****************************************
C
      IF(NUMARG.GE.2.AND.
     1IARGT(1).EQ.'NUMB'.AND.IARGT(2).EQ.'NUMB')
     1GOTO1111
      IF(NUMARG.GE.3.AND.IHARG(1).EQ.'ABSO'.AND.
     1IARGT(2).EQ.'NUMB'.AND.IARGT(3).EQ.'NUMB')
     1GOTO1112
      IF(NUMARG.GE.3.AND.IHARG(1).EQ.'RELA'.AND.
     1IARGT(2).EQ.'NUMB'.AND.IARGT(3).EQ.'NUMB')
     1GOTO1113
      GOTO1130
C
 1111 CONTINUE
      ITYPEO='ABSO'
      ILOCFN=1
      GOTO1119
C
 1112 CONTINUE
      ITYPEO='ABSO'
      ILOCFN=2
      GOTO1119
C
 1113 CONTINUE
      ITYPEO='RELA'
      ILOCFN=2
      GOTO1119
 1119 CONTINUE
C
      IF(ILOCFN.GT.NUMARG)GOTO1129
      DO1120I=ILOCFN,NUMARG
      IF(IARGT(I).EQ.'NUMB')GOTO1120
      GOTO1129
 1120 CONTINUE
      IFOUND='YES'
      GOTO1149
 1129 CONTINUE
      GOTO1130
C
 1130 CONTINUE
      IERRG4='YES'
      WRITE(ICOUT,1131)
 1131 FORMAT('***** ERROR IN DPLATT--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1132)
 1132 FORMAT('      ILLEGAL FORM FOR DRAW ',
     1'COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1134)
 1134 FORMAT('      TEST EXAMPLE TO DEMONSTRATE THE ',
     1'PROPER FORM--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1135)
 1135 FORMAT('      SUPPOSE IT IS DESIRED TO DRAW A LATTICE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1136)
 1136 FORMAT('      WITH VERTICES (20,20), (50,20), (35,40)')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('      THEN ALLOWABLE FORMS ARE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      LATTICE 20 20 50 20 35 40')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      LATTICE ABSOLUTE 20 20 50 20 35 40')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
 1149 CONTINUE
C
C               ****************************
C               **  STEP 3--              **
C               **  DRAW OUT THE LINE(S)  **
C               ****************************
C
      NUMNUM=NUMARG-ILOCFN+1
      IF(NUMNUM.LT.NUMPT2)GOTO1151
      GOTO1152
C
 1151 CONTINUE
      J=ILOCFN-1
      X1=PXSTAR
      Y1=PYSTAR
      GOTO1159
C
 1152 CONTINUE
      J=ILOCFN
      IF(J.GT.NUMARG)GOTO1190
      X1=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
      IF(UNITSW.EQ.'DATA')CALL DPCODS('X',X1,X1,IBUGD2,ISUBRO,IERROR)
      J=J+1
      IF(J.GT.NUMARG)GOTO1190
      Y1=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
      IF(UNITSW.EQ.'DATA')CALL DPCODS('Y',Y1,Y1,IBUGD2,ISUBRO,IERROR)
      GOTO1159
 1159 CONTINUE
C
 1160 CONTINUE
      J=J+1
      IF(J.GT.NUMARG)GOTO1190
      X2=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
      IF(UNITSW.EQ.'DATA')CALL DPCODS('X',X2,X2,IBUGD2,ISUBRO,IERROR)
      IF(ITYPEO.EQ.'RELA')X2=X1+X2
      J=J+1
      IF(J.GT.NUMARG)GOTO1190
      Y2=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
      IF(UNITSW.EQ.'DATA')CALL DPCODS('Y',Y2,Y2,IBUGD2,ISUBRO,IERROR)
      IF(ITYPEO.EQ.'RELA')Y2=Y1+Y2
C
      J=J+1
      IF(J.GT.NUMARG)GOTO1190
      X3=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
      IF(UNITSW.EQ.'DATA')CALL DPCODS('X',X3,X3,IBUGD2,ISUBRO,IERROR)
      IF(ITYPEO.EQ.'RELA')X3=X2+X3
      J=J+1
      IF(J.GT.NUMARG)GOTO1190
      Y3=ARG(J)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1997
      IF(UNITSW.EQ.'DATA')CALL DPCODS('Y',Y3,Y3,IBUGD2,ISUBRO,IERROR)
      IF(ITYPEO.EQ.'RELA')Y3=Y2+Y3
C
      CALL DPLAT2(X1,Y1,X2,Y2,X3,Y3,
     1            IFIG,
     1            ILINPA,ILINCO,ILINC2,MAXLNZ,PLINTH,
     1            AREGBA,IREBLI,IREBCO,IREBC2,MAXRGZ,PREBTH,
     1            IREFSW,IREFCO,IREFC2,
     1            IREPTY,IREPLI,IREPCO,IREPC2,PREPTH,PREPSP,
     1            PTEXHE,PTEXWI,PTEXVG,PTEXHG)
C
      X1=X3
      Y1=Y3
C
      GOTO1160
 1190 CONTINUE
C
      PXEND=X3
      PYEND=Y3
C
C               ************************************
C               **  STEP 4--                      **
C               **  CARRY OUT CLOSING OPERATIONS  **
C               **  ON THE GRAPHICS DEVICES       **
C               ************************************
C
      ICOPSW='OFF'
      NUMCOP=0
      CALL DPCLPL(ICOPSW,NUMCOP,
     1PGRAXF,PGRAYF,
     1IGRASW,PDIAXC,PDIAYC,PDIAX2,PDIAY2,
     1PDIAHE,PDIAWI,PDIAVG,PDIAHG)
C
      CALL DPCLDE
C
 8000 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG4.EQ.'OFF'.AND.ISUBG4.NE.'LATT')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPLATT--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)ILOCFN,NUMNUM
 9012 FORMAT('ILOCFN,NUMNUM = ',2I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)X1,Y1,X2,Y2,X3,Y3
 9013 FORMAT('X1,Y1,X2,Y2,X3,Y3 = ',6E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)PXSTAR,PYSTAR
 9015 FORMAT('PXSTAR,PYSTAR = ',2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9016)PXEND,PYEND
 9016 FORMAT('PXEND,PYEND = ',2E15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9017)IFIG
 9017 FORMAT('IFIG = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9027)IFOUND
 9027 FORMAT('IFOUND = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9028)IBUGG4,ISUBG4,IERRG4
 9028 FORMAT('IBUGG4,ISUBG4,IERRG4 = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9029)IBUGD2,IERROR
 9029 FORMAT('IBUGD2,IERROR = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPLATV(IHEAD,NHEAD,AVAL,NUMDIG)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS USED TO WRITE A
C              A SINGLE LINE OF OUTPUT.
C     INPUT  ARGUMENTS--IHEAD  = THE CHARACTER STRING CONTAINING
C                                THE TEXT FOR THE LINE
C                     --NHEAD  = THE INTEGER NUMBER THAT SPECIFIES
C                                THE NUMBER OF CHARACTERS IN THE
C                                LINE.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/4
C     ORIGINAL VERSION--APRIL     2009.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*(*) IHEAD
C
      CHARACTER*1  IBASLC
      CHARACTER*25 IFORMT
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C  STEP 1: END ASIS MODE AND WRITE A HEADER
C
CC999 FORMAT(1X)
      CALL DPCONA(92,IBASLC)
C
C  STEP 2: START TABLE AND DEFINE A CAPTION
C
 8005 FORMAT('{',A1,'bf ')
 8006 FORMAT(' }',2X,A1,A1)
C
      IF(NHEAD.GE.1)THEN
        IFORMT=' '
        IF(AVAL.NE.CPUMIN)THEN
          IXX=NUMDIG
          IYY=IXX+8
          IFORMT(1:24)='(A  ,2X,Gyy.xx,2X,A1,A1)'
          WRITE(IFORMT(3:4),'(I2)')NHEAD
          WRITE(IFORMT(10:11),'(I2)')IYY
          WRITE(IFORMT(13:14),'(I2)')IXX
          WRITE(ICOUT,8005)IBASLC
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,IFORMT)IHEAD(1:NHEAD),AVAL
          CALL DPWRST('XXX','WRIT')
        ELSE
          IFORMT(1:14)='(A  ,2X,A1,A1)'
          WRITE(IFORMT(3:4),'(I2)')NHEAD
          WRITE(ICOUT,8005)IBASLC
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,IFORMT)IHEAD(1:NHEAD)
          CALL DPWRST('XXX','WRIT')
        ENDIF
        WRITE(ICOUT,8006)IBASLC,IBASLC
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLATW(IVALUE,NCHAR,AVALUE,NHEAD,ITYPE,IFLAGA,IFLAGB)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS USED TO GENERATE
C              A DATA ROW FOR A TABLE WHERE THE FIELDS CAN BE A
C              MIX OF CHARACTER AND NUMERIC VALUES.
C
C     INPUT  ARGUMENTS--IVALUE  = AN ARRAY OF CHARACTER STRINGS.
C                     --NCHAR   = THE INTEGER ARRAY THAT SPECIFIES
C                                 THE NUMBER OF CHARACTERS IN THE
C                                 CHARACTER FIELDS.
C                     --AVALUE  = A REAL ARRAY CONTAINING THE DATA
C                                 TO BE GENERATED.
C                     --NHEAD   = THE INTEGER VALUE THAT SPECIFIES
C                                 THE NUMBER OF NUMERIC VALUES.
C                     --ITYPE   = A CHARACTER ARRAY THAT SPECIFIES
C                                 WHICH FIELDS ARE NUMERIC AND
C                                 WHICH ARE CHARACTER.
C                     --IFLAGA  = GENERATE A SEPARATOR LINE AFTER THE
C                                 CURRENT LINE.
C                     --IFLAGB  = GENERATE A SEPARATOR LINE BEFORE THE
C                                 CURRENT LINE.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/10
C     ORIGINAL VERSION--OCTOBER   2009.
C     UPDATED         --AUGUST    2015. EXPONENTIAL CASE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*(*) IVALUE(*)
      CHARACTER*4   ITYPE(*)
      REAL AVALUE(*)
      INTEGER NCHAR(*)
C
      LOGICAL IFLAGA
      LOGICAL IFLAGB
C
      PARAMETER (MAXHED=1024)
      INTEGER IWIDTH(MAXHED)
      INTEGER NUMDIG(MAXHED)
      CHARACTER*8 ALIGN(MAXHED)
      CHARACTER*8 VALIGN(MAXHED)
      COMMON/HTML4/IWIDTH,NUMDIG,ALIGN,VALIGN
C
      CHARACTER*20 IFORMT
      CHARACTER*1  IBASLC
      CHARACTER*1  IAMP
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C  STEP 3: DEFINE A DATA ROW
C
      CALL DPCONA(92,IBASLC)
      IAMP='&'
C
      IF(IFLAGB)THEN
        WRITE(ICOUT,8040)IBASLC
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
 8031 FORMAT(G15.7,' & ')
 8033 FORMAT(I12,' & ')
 8035 FORMAT(' & ')
 8131 FORMAT(G15.7,2X,A1,A1)
 8231 FORMAT(2X,A1,A1)
 8133 FORMAT(I12,2X,A1,A1)
 8135 FORMAT(' ',2X,A1,A1)
 8235 FORMAT(' &  ')
 8040 FORMAT(A1,'hline')
      IF(NHEAD.GE.1)THEN
        ICNT=0
        DO100I=1,NHEAD
          IF(ITYPE(I).EQ.'ALPH')THEN
            ICNT=ICNT+1
            IF(NCHAR(ICNT).GT.0)THEN
              IFORMT=' '
              IF(I.LT.NHEAD)THEN
                IFORMT(1:11)='(A  ,1X,A1)'
                WRITE(IFORMT(3:4),'(I2)')NCHAR(ICNT)
                WRITE(ICOUT,IFORMT)IVALUE(ICNT)(1:NCHAR(ICNT)),
     1                             IAMP
                CALL DPWRST('XXX','WRIT')
              ELSE
                IFORMT(1:14)='(A  ,1X,A1,A1)'
                WRITE(IFORMT(3:4),'(I2)')NCHAR(ICNT)
                WRITE(ICOUT,IFORMT)IVALUE(ICNT)(1:NCHAR(ICNT)),
     1                             IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ENDIF
            ELSE 
              WRITE(ICOUT,8035)
              CALL DPWRST('XXX','WRIT')
            ENDIF
          ELSE
            ICNT=ICNT+1
            IFORMT=' '
            IF(I.LT.NHEAD)THEN
              IF(NUMDIG(I).GT.0)THEN
                IFORMT(1:13)='(F15. ,1X,A1)'
                WRITE(IFORMT(6:6),'(I1)')MIN(NUMDIG(I),9)
                WRITE(ICOUT,IFORMT)AVALUE(ICNT),IAMP
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.0)THEN
                WRITE(ICOUT,8033)INT(AVALUE(ICNT)+0.5)
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.-1)THEN
                WRITE(ICOUT,8035)
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.-2)THEN
                WRITE(ICOUT,8031)AVALUE(ICNT)
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).LT.-2 .AND. NUMDIG(I).GT.-20)THEN
                IFORMT(1:13)='(E15. ,1X,A1)'
                IVALT=ABS(NUMDIG(I))
                IF(IVALT.GT.9)IVALT=9
                WRITE(IFORMT(6:6),'(I1)')IVALT
                WRITE(ICOUT,IFORMT)AVALUE(ICNT),IAMP
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.-99)THEN
                WRITE(ICOUT,'(A2,2X,A1)')'**',IAMP
                CALL DPWRST('XXX','WRIT')
              ELSE
                WRITE(ICOUT,8235)
                CALL DPWRST('XXX','WRIT')
              ENDIF
            ELSE
              IF(NUMDIG(I).GT.0)THEN
                IFORMT(1:16)='(F15. ,2X,A1,A1)'
                WRITE(IFORMT(6:6),'(I1)')MIN(NUMDIG(I),9)
                WRITE(ICOUT,IFORMT)AVALUE(ICNT),IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.0)THEN
                WRITE(ICOUT,8133)INT(AVALUE(ICNT)+0.5),IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.-1)THEN
                WRITE(ICOUT,8135)IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.-2)THEN
                WRITE(ICOUT,8131)AVALUE(ICNT),IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).LT.-2 .AND. NUMDIG(I).GT.-20)THEN
                IFORMT(1:16)='(E15. ,1X,A1,A1)'
                IVALT=ABS(NUMDIG(I))
                IF(IVALT.GT.9)IVALT=9
                WRITE(IFORMT(6:6),'(I1)')IVALT
                WRITE(ICOUT,IFORMT)AVALUE(ICNT),IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.-99)THEN
                WRITE(ICOUT,'(A2,2X,A1,A1)')'**',IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSE
                WRITE(ICOUT,8231)IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ENDIF
            END IF
          END IF
  100   CONTINUE
C
        IF(IFLAGA)THEN
          WRITE(ICOUT,8040)IBASLC
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLATX(IVALUE,NCHAR,AVALUE,NHEAD,ITYPE,IFLAGA,IFLAGB)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS USED TO GENERATE
C              A DATA ROW FOR A TABLE WHERE THE FIELDS CAN BE A
C              MIX OF CHARACTER AND NUMERIC VALUES.
C
C     INPUT  ARGUMENTS--IVALUE  = AN ARRAY OF CHARACTER STRINGS.
C                     --NCHAR   = THE INTEGER ARRAY THAT SPECIFIES
C                                 THE NUMBER OF CHARACTERS IN THE
C                                 CHARACTER FIELDS.
C                     --AVALUE  = A REAL ARRAY CONTAINING THE DATA
C                                 TO BE GENERATED.
C                     --NHEAD   = THE INTEGER VALUE THAT SPECIFIES
C                                 THE NUMBER OF NUMERIC VALUES.
C                     --ITYPE   = A CHARACTER ARRAY THAT SPECIFIES
C                                 WHICH FIELDS ARE NUMERIC AND
C                                 WHICH ARE CHARACTER.
C                     --IFLAGA  = GENERATE A SEPARATOR LINE AFTER THE
C                                 CURRENT LINE.
C                     --IFLAGB  = GENERATE A SEPARATOR LINE BEFORE THE
C                                 CURRENT LINE.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/10
C     ORIGINAL VERSION--OCTOBER   2008.
C     ORIGINAL VERSION--AUGUST    2015. EXPONENTIAL CASE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*(*) IVALUE(*)
      CHARACTER*4   ITYPE(*)
      REAL AVALUE(*)
      INTEGER NCHAR(*)
C
      LOGICAL IFLAGA
      LOGICAL IFLAGB
C
      PARAMETER (MAXHED=1024)
      INTEGER IWIDTH(MAXHED)
      INTEGER NUMDIG(MAXHED)
      CHARACTER*8 ALIGN(MAXHED)
      CHARACTER*8 VALIGN(MAXHED)
      COMMON/HTML4/IWIDTH,NUMDIG,ALIGN,VALIGN
C
      CHARACTER*20 IFORMT
      CHARACTER*1  IBASLC
      CHARACTER*1  IAMP
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C  STEP 3: DEFINE A DATA ROW
C
      CALL DPCONA(92,IBASLC)
      IAMP='&'
C
      IF(IFLAGB)THEN
        WRITE(ICOUT,8040)IBASLC
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
 8031 FORMAT(G15.7,' & ')
 8033 FORMAT(I12,' & ')
 8035 FORMAT(' & ')
 8131 FORMAT(G15.7,2X,A1,A1)
 8231 FORMAT(2X,A1,A1)
 8133 FORMAT(I12,2X,A1,A1)
 8135 FORMAT(' ',2X,A1,A1)
 8235 FORMAT(' &  ')
 8040 FORMAT(A1,'hline')
      IF(NHEAD.GE.1)THEN
        ICNTA=0
        ICNTN=0
        DO100I=1,NHEAD
          IF(ITYPE(I).EQ.'ALPH')THEN
            ICNTA=ICNTA+1
            IF(NCHAR(ICNTA).GT.0)THEN
              IFORMT=' '
              IF(I.LT.NHEAD)THEN
                IFORMT(1:11)='(A  ,1X,A1)'
                WRITE(IFORMT(3:4),'(I2)')NCHAR(ICNTA)
                WRITE(ICOUT,IFORMT)IVALUE(ICNTA)(1:NCHAR(ICNTA)),
     1                             IAMP
                CALL DPWRST('XXX','WRIT')
              ELSE
                IFORMT(1:14)='(A  ,1X,A1,A1)'
                WRITE(IFORMT(3:4),'(I2)')NCHAR(ICNTA)
                WRITE(ICOUT,IFORMT)IVALUE(ICNTA)(1:NCHAR(ICNTA)),
     1                             IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ENDIF
            ENDIF
          ELSE
            ICNTN=ICNTN+1
            IFORMT=' '
            IF(I.LT.NHEAD)THEN
              IF(NUMDIG(I).GT.0)THEN
                IFORMT(1:13)='(F15. ,1X,A1)'
                WRITE(IFORMT(6:6),'(I1)')MIN(NUMDIG(I),9)
                WRITE(ICOUT,IFORMT)AVALUE(ICNTN),IAMP
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.0)THEN
                WRITE(ICOUT,8033)INT(AVALUE(ICNTN)+0.5)
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.-1)THEN
                WRITE(ICOUT,8035)
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.-2)THEN
                WRITE(ICOUT,8031)AVALUE(ICNTN)
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).LT.-2 .AND. NUMDIG(I).GT.-20)THEN
                IFORMT(1:13)='(E15. ,1X,A1)'
                IVALT=ABS(NUMDIG(I))
                IF(IVALT.GT.9)IVALT=9
                WRITE(IFORMT(6:6),'(I1)')IVALT
                WRITE(ICOUT,IFORMT)AVALUE(ICNTN),IAMP
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.-99)THEN
                WRITE(ICOUT,'(A2,2X,A1)')'**',IAMP
                CALL DPWRST('XXX','WRIT')
              ELSE
                WRITE(ICOUT,8235)
                CALL DPWRST('XXX','WRIT')
              ENDIF
            ELSE
              IF(NUMDIG(I).GT.0)THEN
                IFORMT(1:16)='(F15. ,2X,A1,A1)'
                WRITE(IFORMT(6:6),'(I1)')MIN(NUMDIG(I),9)
                WRITE(ICOUT,IFORMT)AVALUE(ICNTN),IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.0)THEN
                WRITE(ICOUT,8133)INT(AVALUE(ICNTN)+0.5),IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.-1)THEN
                WRITE(ICOUT,8135)IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.-2)THEN
                WRITE(ICOUT,8131)AVALUE(ICNTN),IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).LT.-2 .AND. NUMDIG(I).GT.-20)THEN
                IFORMT(1:16)='(E15. ,1X,A1,A1)'
                IVALT=ABS(NUMDIG(I))
                IF(IVALT.GT.9)IVALT=9
                WRITE(IFORMT(6:6),'(I1)')IVALT
                WRITE(ICOUT,IFORMT)AVALUE(ICNTN),IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSEIF(NUMDIG(I).EQ.-99)THEN
                WRITE(ICOUT,'(A2,2X,A1,A1)')'**',IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ELSE
                WRITE(ICOUT,8231)IBASLC,IBASLC
                CALL DPWRST('XXX','WRIT')
              ENDIF
            END IF
          END IF
  100   CONTINUE
C
        IF(IFLAGA)THEN
          WRITE(ICOUT,8040)IBASLC
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLATY(NHEAD)
C
C     PURPOSE--THIS ROUTINE IS A UTILUTY ROUTINE FOR CREATING
C              LATEX OUTPUT.  THIS ROUTINE IS ESSENTIALLY
C              DPLAT4.  HOWEVER, WE DO NOT ACTUALLY PRINT
C              A ROW.  THIS IS USED WHEN WE BREAK A TABLE
C              OVER MULTIPLE PAGES AND WE SIMPLY WANT TO
C              RE-ESTABLISH THE PROPER NUMBER OF COLUMS
C              (I.E., WE ARE NOT RE-PRINTING THE TABLE HEADER).
C
C     INPUT  ARGUMENTS--NHEAD   = THE INTEGER VALUE THAT SPECIFIES
C                                 THE NUMBER OF HEADER VALUES.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/10
C     ORIGINAL VERSION--OCTOBER   2008.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      PARAMETER (MAXHED=1024)
      INTEGER IWIDTH(MAXHED)
      INTEGER NUMDIG(MAXHED)
      CHARACTER*8 ALIGN(MAXHED)
      CHARACTER*8 VALIGN(MAXHED)
      COMMON/HTML4/IWIDTH,NUMDIG,ALIGN,VALIGN
C
      CHARACTER*1  IBASLC
      CHARACTER*1  IAMP
      CHARACTER*1  IQUOTE
      CHARACTER*20 IFORMT
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
CC999 FORMAT(1X)
      CALL DPCONA(92,IBASLC)
      CALL DPCONA(39,IQUOTE)
      IAMP='&'
C
C  STEP 2: GENERATE THE HEADER ROW
C
 8020 FORMAT(A1,'begin{table}')
 8021 FORMAT(A1,'begin{center}')
 8022 FORMAT(A1,'begin{tabular}')
      IF(NHEAD.GE.1)THEN
        WRITE(ICOUT,8020)IBASLC
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8021)IBASLC
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8022)IBASLC
        CALL DPWRST('XXX','WRIT')
        IFORMT=' '
        IFORMT(1:3)='( {'
        IFORMT(2:2)=IQUOTE
        ICNT=3
        DO8110I=1,NHEAD
          ICNT=ICNT+1
          IFORMT(ICNT:ICNT)=ALIGN(I)(1:1)
 8110   CONTINUE
        IFORMT(ICNT+1:ICNT+3)='} )'
        IFORMT(ICNT+2:ICNT+2)=IQUOTE
        WRITE(ICOUT,IFORMT)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLAT2(X1,Y1,X2,Y2,X3,Y3,
     1                  IFIG,
     1                  ILINPA,ILINCO,ILINC2,MAXLN,PLINTH,
     1                  AREGBA,
     1                  IREBLI,IREBCO,IREBC2,MAXRG,PREBTH,
     1                  IREFSW,IREFCO,IREFC2,
     1                  IREPTY,IREPLI,IREPCO,IREPC2,PREPTH,PREPSP,
     1                  PTEXHE,PTEXWI,PTEXVG,PTEXHG)
C
C     PURPOSE--DRAW A LATTICE
C              WITH ONE CORNER AT (X1,Y1),
C              WITH GRID LINES SPACED AT DISTANCES OF X2 AND Y2,
C              AND WITH THE OPPOSING CORNER AT (X3,Y3).
C      NOTE--IF THE SPACING IS SET TO 0, THEN NO INTERMEDIATE
C            GRID LINES WILL RESULT.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--87/6
C     ORIGINAL VERSION--MAY       1987.
C     UPDATED         --JANUARY   1989. MODIFY CALLS TO DPDRPL (ALAN)
C     UPDATED         --JANUARY   1989. MODIFY CALL  TO DPFIRE (ALAN)
C     UPDATED         --OCTOBER   2020. SUPPORT RGB COLORS
C
C-----NON-COMMON VARIABLES-------------------------------------
C
      CHARACTER*4 IFIG
      CHARACTER*4 IPATT2
C
      CHARACTER*4 ILINPA
      CHARACTER*4 ILINCO
C
      CHARACTER*4 IREBLI
      CHARACTER*4 IREBCO
      CHARACTER*4 IREFSW
      CHARACTER*4 IREFCO
      CHARACTER*4 IREPTY
      CHARACTER*4 IREPLI
      CHARACTER*4 IREPCO
C
      CHARACTER*4 IPATT
      CHARACTER*4 ICOLF
      CHARACTER*4 ICOLP
      CHARACTER*4 ICOL
      CHARACTER*4 IFLAG
C
      DIMENSION PX(10)
      DIMENSION PY(10)
CCCCC DIMENSION PX3(10)
CCCCC DIMENSION PY3(10)
C
      DIMENSION ILINPA(*)
      DIMENSION ILINCO(*)
      DIMENSION ILINC2(MAXLN,3)
      DIMENSION PLINTH(*)
C
      DIMENSION AREGBA(*)
      DIMENSION IREBLI(*)
      DIMENSION IREBCO(*)
      DIMENSION IREBC2(MAXRG,3)
      DIMENSION PREBTH(*)
      DIMENSION IREFSW(*)
      DIMENSION IREFCO(*)
      DIMENSION IREFC2(MAXRG,3)
      DIMENSION IREPTY(*)
      DIMENSION IREPLI(*)
      DIMENSION IREPCO(*)
      DIMENSION IREPC2(MAXRG,3)
      DIMENSION PREPTH(*)
      DIMENSION PREPSP(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOGR.INC'
      INCLUDE 'DPCOBE.INC'
      INCLUDE 'DPCOP2.INC'
C
      PX31=(-999)
      PY31=(-999)
      PXINC=(-999)
      PYINC=(-999)
      PXCUT=(-999)
      PYCUT=(-999)
C
C-----START POINT-----------------------------------------------------
C
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'TRI2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLAT2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)X1,Y1,X2,Y2,X3,Y3
   53   FORMAT('X1,Y1,X2,Y2,X3,Y3 = ',6G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,61)ILINPA(1),ILINCO(1),PLINTH(1)
   61   FORMAT('ILINPA(1),ILINCO(1),PLINTH(1) = ',A4,2X,A4,G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,63)IREBLI(1),IREBCO(1),PREBTH(1),AREGBA(1)
   63   FORMAT('IREBLI(1),IREBCO(1),PREBTH(1),AREGBA(1) = ',
     1         3(A4,2X),2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,64)IREFSW(1),IREFCO(1)
   64   FORMAT('IREFSW(1),IREFCO(1) = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,65)IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1)
   65   FORMAT('IREPTY(1),IREPLI(1),IREPCO(1),PREPTH(1),PREPSP(1) = ',
     1         3(A4,2X),2G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,69)PTEXHE,PTEXWI,PTEXVG,PTEXHG
   69   FORMAT('PTEXHE,PTEXWI,PTEXVG,PTEXHG = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,79)IFIG,IBUGG4,ISUBG4,IERRG4
   79   FORMAT('IFIG,IBUGG4,ISUBG4,IERRG4 = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************
C               **  STEP 11--                  **
C               **  DETERMINE THE COORDINATES  **
C               **  AND                        **
C               **  FILL THE FIGURE            **
C               **  (IF CALLED FOR)            **
C               *********************************
C
      IF(IREFSW(1).EQ.'OFF')GOTO1190
C
      PX(1)=X1
      PY(1)=Y1
C
      PX(2)=X3
      PY(2)=Y1
C
      PX(3)=X3
      PY(3)=Y3
C
      PX(4)=X1
      PY(4)=Y3
C
      PX(5)=X1
      PY(5)=Y1
C
      NP=5
C
      IPATT=IREPTY(1)
      IPATT2='SOLI'
      PTHICK=PREPTH(1)
      PXGAP=PREPSP(1)
      PYGAP=PREPSP(1)
      ICOLF=IREFCO(1)
      ICOLFR=IREFC2(1,1)
      ICOLFG=IREFC2(1,2)
      ICOLFB=IREFC2(1,3)
      ICOLP=IREPCO(1)
      ICOLPR=IREPC2(1,1)
      ICOLPG=IREPC2(1,2)
      ICOLPB=IREPC2(1,3)
      ICOLBR=IREBC2(1,1)
      ICOLBG=IREBC2(1,2)
      ICOLBB=IREBC2(1,3)
      IFIG='BOX'
      CALL DPFIRE(PX,PY,NP,
     1            IFIG,IPATT,PTHICK,PXGAP,PYGAP,
     1            ICOLF,ICOLFR,ICOLFG,ICOLFB,
     1            ICOLP,ICOLPR,ICOLPG,ICOLPB,
     1            IPATT2)
      IFIG='LATT'
C
 1190 CONTINUE
C
C               *********************************
C               **  STEP 20--                  **
C               **  DETERMINE THE COORDINATES  **
C               **  FOR THE LATTICE            **
C               **  AND                        **
C               **  DRAW OUT THE FIGURE        **
C               *********************************
C
      IPATT=ILINPA(1)
      PTHICK=PLINTH(1)
      ICOL=ILINCO(1)
      ICOLR=ILINC2(1,1)
      ICOLG=ILINC2(1,2)
      ICOLB=ILINC2(1,3)
      NP=2
C
C               ***********************************
C               **  STEP 21--                    **
C               **  DRAW OUT THE VERTICAL LINES  **
C               ***********************************
C
      IF(X2.EQ.0.0)GOTO2100
      GOTO2200
C
 2100 CONTINUE
      PX(1)=X1
      PY(1)=Y1
      PX(2)=X1
      PY(2)=Y3
      IFLAG='ON'
      CALL DPDRPL(PX,PY,NP,
     1            IFIG,IPATT,PTHICK,
     1            ICOL,ICOLR,ICOLG,ICOLB,
     1            JPATT,JTHICK,PTHIC2,JCOL,IFLAG)
      PX(1)=X3
      PY(1)=Y1
      PX(2)=X3
      PY(2)=Y3
      CALL DPDRPL(PX,PY,NP,
     1            IFIG,IPATT,PTHICK,
     1            ICOL,ICOLR,ICOLG,ICOLB,
     1            JPATT,JTHICK,PTHIC2,JCOL,IFLAG)
      GOTO2900
C
 2200 CONTINUE
      PX31=X3-X1
      PXINC=X2
      IF(PX31.GT.0.0.AND.X2.LT.0.0)PXINC=(-X2)
      IF(PX31.LT.0.0.AND.X2.GT.0.0)PXINC=(-X2)
      IF(PX31.GT.0.0)PXCUT=X3+0.001
      IF(PX31.LT.0.0)PXCUT=X3-0.001
      NLOOP=INT(ABS(PX31/PXINC)+0.1)
      NLOOP=NLOOP+5
      DO2210I=1,NLOOP
        IM1=I-1
        AIM1=IM1
        PXNEW=X1+AIM1*PXINC
        PX(1)=PXNEW
        PY(1)=Y1
        PX(2)=PXNEW
        PY(2)=Y3
        IF(PX31.GT.0.0.AND.PXNEW.GT.PXCUT)GOTO2290
        IF(PX31.LT.0.0.AND.PXNEW.LT.PXCUT)GOTO2290
        IFLAG='ON'
        CALL DPDRPL(PX,PY,NP,
     1              IFIG,IPATT,PTHICK,
     1              ICOL,ICOLR,ICOLG,ICOLB,
     1              JPATT,JTHICK,PTHIC2,JCOL,IFLAG)
 2210 CONTINUE
 2290 CONTINUE
C
 2900 CONTINUE
C
C               *************************************
C               **  STEP 31--                      **
C               **  DRAW OUT THE HORIZONTAL LINES  **
C               *************************************
C
      IF(Y2.EQ.0.0)GOTO3100
      GOTO3200
C
 3100 CONTINUE
      PX(1)=X1
      PY(1)=Y1
      PX(2)=X3
      PY(2)=Y1
      IFLAG='ON'
      CALL DPDRPL(PX,PY,NP,
     1            IFIG,IPATT,PTHICK,
     1            ICOL,ICOLR,ICOLG,ICOLB,
     1            JPATT,JTHICK,PTHIC2,JCOL,IFLAG)
      PX(1)=X1
      PY(1)=Y3
      PX(2)=X3
      PY(2)=Y3
      CALL DPDRPL(PX,PY,NP,
     1            IFIG,IPATT,PTHICK,
     1            ICOL,ICOLR,ICOLG,ICOLB,
     1            JPATT,JTHICK,PTHIC2,JCOL,IFLAG)
      GOTO3900
C
 3200 CONTINUE
      PY31=Y3-Y1
      PYINC=Y2
      IF(PY31.GT.0.0.AND.Y2.LT.0.0)PYINC=(-Y2)
      IF(PY31.LT.0.0.AND.Y2.GT.0.0)PYINC=(-Y2)
      IF(PY31.GT.0.0)PYCUT=Y3+0.001
      IF(PY31.LT.0.0)PYCUT=Y3-0.001
      NLOOP=INT(ABS(PY31/PYINC)+0.1)
      NLOOP=NLOOP+5
      DO3210I=1,NLOOP
        IM1=I-1
        AIM1=IM1
        PYNEW=Y1+AIM1*PYINC
        PX(1)=X1
        PY(1)=PYNEW
        PX(2)=X3
        PY(2)=PYNEW
        IF(PY31.GT.0.0.AND.PYNEW.GT.PYCUT)GOTO3290
        IF(PY31.LT.0.0.AND.PYNEW.LT.PYCUT)GOTO3290
        IFLAG='ON'
        CALL DPDRPL(PX,PY,NP,
     1              IFIG,IPATT,PTHICK,
     1              ICOL,ICOLR,ICOLG,ICOLB,
     1              JPATT,JTHICK,PTHIC2,JCOL,IFLAG)
 3210 CONTINUE
 3290 CONTINUE
C
 3900 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGG4.EQ.'ON' .OR. ISUBG4.EQ.'LAT2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLAT2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)IERRG4,NP
 9013   FORMAT('IERRG4,NP = ',A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
        DO9015I=1,NP
          WRITE(ICOUT,9016)I,PX(I),PY(I)
 9016     FORMAT('I,PX(I),PY(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9015   CONTINUE
        WRITE(ICOUT,9018)PX31,PY31,PXINC,PYINC
 9018   FORMAT('PX31,PY31,PXINC,PYINC = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLEAN(IHARG,IARGT,IARG,ARG,NUMARG,PDEFAN,
     1MAXLEG,PLEGAN,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE ANGLE FOR A LEGEND.
C              THE ANGLE FOR LEGEND I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE REAL
C              VECTOR PLEGAN(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --ARG    (A REAL VECTOR)
C                     --NUMARG
C                     --PDEFAN
C                     --MAXLEG
C     OUTPUT ARGUMENTS--PLEGAN (A REAL VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              ANGLE FOR LEGEND I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--89/2
C     ORIGINAL VERSION--JANUARY   1989.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
C
      DIMENSION PLEGAN(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'ANGL')GOTO1110
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'ANGL')GOTO1140
      GOTO1199
C
 1110 CONTINUE
      IF(NUMARG.LE.1)GOTO1120
      IF(IHARG(2).EQ.'ON')GOTO1120
      IF(IHARG(2).EQ.'OFF')GOTO1120
      IF(IHARG(2).EQ.'AUTO')GOTO1120
      IF(IHARG(2).EQ.'DEFA')GOTO1120
      GOTO1125
C
 1120 CONTINUE
      PHOLD=PDEFAN
      GOTO1130
C
 1125 CONTINUE
      PHOLD=ARG(2)
      GOTO1130
C
 1130 CONTINUE
      IFOUND='YES'
      DO1135I=1,MAXLEG
      PLEGAN(I)=PHOLD
 1135 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1139
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1136)PLEGAN(I)
 1136 FORMAT('ALL LEGEND ANGLES HAVE JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1139 CONTINUE
      GOTO1199
C
 1140 CONTINUE
      IF(IARGT(1).EQ.'NUMB')GOTO1150
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('***** ERROR IN DPLEAN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      IN THE LEGEND ... ANGLE COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      THE LEGEND IS IDENTIFIED BY A NUMBER, AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1144)
 1144 FORMAT('      LEGEND 3 ANGLE 45 ')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1150 CONTINUE
      I=IARG(1)
      IF(1.LE.I.AND.I.LE.MAXLEG)GOTO1160
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1151)
 1151 FORMAT('***** ERROR IN DPLEAN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1152)
 1152 FORMAT('      IN THE LEGEND ... ANGLE COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1153)
 1153 FORMAT('      THE NUMBER OF LEGENDS MUST BE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1154)MAXLEG
 1154 FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1155)
 1155 FORMAT('      SUCH WAS NOT THE CASE HERE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1156)I
 1156 FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1'LEGEND.')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1160 CONTINUE
      IF(NUMARG.LE.2)GOTO1170
      IF(IHARG(3).EQ.'ON')GOTO1170
      IF(IHARG(3).EQ.'OFF')GOTO1170
      IF(IHARG(3).EQ.'AUTO')GOTO1170
      IF(IHARG(3).EQ.'DEFA')GOTO1170
      GOTO1175
C
 1170 CONTINUE
      PHOLD=PDEFAN
      GOTO1180
C
 1175 CONTINUE
      PHOLD=ARG(3)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      PLEGAN(I)=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1186)I,PLEGAN(I)
 1186 FORMAT('THE ANGLE FOR LEGEND ',I8,
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPLECA(IHARG,IARGT,IARG,NUMARG,IDEFCA,
     1MAXLEG,ILEGCA,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE CASE FOR A LEGEND.
C              THE CASE FOR LEGEND I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE HOLLERITH
C              VECTOR ILEGCA(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFCA
C                     --MAXLEG
C     OUTPUT ARGUMENTS--ILEGCA (A HOLLERITH VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              CASE FOR LEGEND I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--89/2
C     ORIGINAL VERSION--JANUARY   1989.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IDEFCA
      CHARACTER*4 ILEGCA
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
C
      DIMENSION ILEGCA(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'CASE')GOTO1110
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'CASE')GOTO1140
      GOTO1199
C
 1110 CONTINUE
      IF(NUMARG.LE.1)GOTO1120
      IF(IHARG(2).EQ.'ON')GOTO1120
      IF(IHARG(2).EQ.'OFF')GOTO1120
      IF(IHARG(2).EQ.'AUTO')GOTO1120
      IF(IHARG(2).EQ.'DEFA')GOTO1120
      GOTO1125
C
 1120 CONTINUE
      IHOLD=IDEFCA
      GOTO1130
C
 1125 CONTINUE
      IHOLD=IHARG(2)
      GOTO1130
C
 1130 CONTINUE
      IFOUND='YES'
      DO1135I=1,MAXLEG
      ILEGCA(I)=IHOLD
 1135 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1139
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1136)ILEGCA(I)
 1136 FORMAT('ALL LEGEND CASES HAVE JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1139 CONTINUE
      GOTO1199
C
 1140 CONTINUE
      IF(IARGT(1).EQ.'NUMB')GOTO1150
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('***** ERROR IN DPLECA--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      IN THE LEGEND ... CASE COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      THE LEGEND IS IDENTIFIED BY A NUMBER, AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1144)
 1144 FORMAT('      LEGEND 3 CASE UPPER')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1150 CONTINUE
      I=IARG(1)
      IF(1.LE.I.AND.I.LE.MAXLEG)GOTO1160
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1151)
 1151 FORMAT('***** ERROR IN DPLECA--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1152)
 1152 FORMAT('      IN THE LEGEND ... CASE COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1153)
 1153 FORMAT('      THE NUMBER OF LEGENDS MUST BE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1154)MAXLEG
 1154 FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1155)
 1155 FORMAT('      SUCH WAS NOT THE CASE HERE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1156)I
 1156 FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1'LEGEND.')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1160 CONTINUE
      IF(NUMARG.LE.2)GOTO1170
      IF(IHARG(3).EQ.'ON')GOTO1170
      IF(IHARG(3).EQ.'OFF')GOTO1170
      IF(IHARG(3).EQ.'AUTO')GOTO1170
      IF(IHARG(3).EQ.'DEFA')GOTO1170
      GOTO1175
C
 1170 CONTINUE
      IHOLD=IDEFCA
      GOTO1180
C
 1175 CONTINUE
      IHOLD=IHARG(3)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      ILEGCA(I)=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1186)I,ILEGCA(I)
 1186 FORMAT('THE CASE FOR LEGEND ',I8,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPLECL(IHARG,IHARG2,IARGT,IARG,ARG,NUMARG,
     1                  IDEFCO,MAXLEG,ILEGCO,ILEGC2,IRGBMX,
     1                  IBUGP2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE COLOR FOR A LEGEND.  THE COLOR FOR LEGEND I
C              WILL BE PLACED IN THE I-TH ELEMENT OF THE HOLLERITH
C              VECTOR ILEGCO(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFCO
C                     --MAXLEG
C     OUTPUT ARGUMENTS--ILEGCO (A HOLLERITH VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              COLOR FOR LEGEND I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--SEPTEMBER 1980.
C     UPDATED         --MAY       1982.
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLOR
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IDEFCO
      CHARACTER*4 IBUGP2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      CHARACTER*4 IHARG(*)
      CHARACTER*4 IHARG2(*)
      CHARACTER*4 IARGT(*)
      CHARACTER*4 ILEGCO(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
      DIMENSION ILEGC2(MAXLEG,3)
C
      CHARACTER*4 IHOLD
      CHARACTER*4 ICASCL
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ICASCL='STAN'
      ISUBN1='DPLE'
      ISUBN2='CL  '
      IHOLD='    '
      JHOLD1=-1
      JHOLD2=-1
      JHOLD3=-1
C
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'LECL')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLECL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGP2,ISUBRO,IFOUND,IERROR
   52   FORMAT('IBUGP2,ISUBRO,IFOUND,IERROR = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IDEBCO,MAXLEG,NUMLEG,NUMARG,IRGBMX
   53   FORMAT('IDEBCO,MAXLEG,NUMLEG,NUMARG,IRGBMX = ',A4,2X,4I8)
        CALL DPWRST('XXX','BUG ')
        DO65I=1,NUMARG
          WRITE(ICOUT,66)I,IARG(I),IHARG(I)
   66     FORMAT('I,IARG(I),IHARG(I) = ',2I8,2X,A4)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
        DO75I=1,10
          WRITE(ICOUT,76)I,ILEGCO(I),ILEGC2(I,1),ILEGC2(I,2),ILEGC2(I,3)
   76     FORMAT('I,ILEGCO(I),ILEGC2(I,1),ILEGC2(I,2),ILEGC2(I,3) = ',
     1           I8,2X,A4,2X,3I5)
          CALL DPWRST('XXX','BUG ')
   75   CONTINUE
      ENDIF
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'LECL')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.EQ.0)GOTO9000
      IF(IHARG(1).EQ.'RGB ' .AND. IHARG(2).EQ.'COLO')THEN
        ICASCL='RGB '
        ISHIFT=1
        CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGP2,IERROR)
      ELSEIF(IHARG(2).EQ.'RGB ' .AND. IHARG(3).EQ.'COLO')THEN
        ICASCL='RGB '
        DO45II=2,NUMARG-1
          IHARG(II)=IHARG(II+1)
          IHARG2(II)=IHARG2(II+1)
          IARGT(II)=IARGT(II+1)
          IARG(II)=IARG(II+1)
          ARG(II)=ARG(II+1)
  45    CONTINUE
        IHARG(NUMARG)=IHARG(II+1)
        IHARG2(NUMARG)=IHARG2(II+1)
        IARGT(NUMARG)=IARGT(II+1)
        IARG(NUMARG)=IARG(II+1)
        ARG(NUMARG)=ARG(II+1)
        NUMARG=NUMARG-1
      ENDIF
C
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'COLO')THEN
C
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'LECL')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IF(NUMARG.LE.1        .OR. IHARG(2).EQ.'ON'   .OR.
     1     IHARG(2).EQ.'OFF'  .OR. IHARG(2).EQ.'AUTO' .OR.
     1     IHARG(2).EQ.'DEFA')THEN
          IF(ICASCL.EQ.'RGB ')THEN
            JHOLD1=-1
            JHOLD2=-1
            JHOLD3=-1
          ELSE
            IHOLD=IDEFCO
          ENDIF
        ELSE
          IF(ICASCL.EQ.'RGB ')THEN
            IF(NUMARG.GE.4)THEN
              JHOLD1=IARG(2)
              JHOLD2=IARG(3)
              JHOLD3=IARG(4)
              IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
              IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
              IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
            ELSE
              JHOLD1=-1
              JHOLD2=-1
              JHOLD3=-1
            ENDIF
          ELSE
            IHOLD=IHARG(2)
          ENDIF
        ENDIF
C
        IFOUND='YES'
        IF(ICASCL.EQ.'RGB ')THEN
          DO1138I=1,MAXLEG
            ILEGC2(I,1)=JHOLD1
            ILEGC2(I,2)=JHOLD2
            ILEGC2(I,3)=JHOLD3
 1138     CONTINUE
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            I=1
            WRITE(ICOUT,1139)ILEGC2(I,1),ILEGC2(I,2),ILEGC2(I,3)
 1139       FORMAT('ALL LEGEND RGB COLORS HAVE JUST BEEN SET TO ',3I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ELSE
          DO1135I=1,MAXLEG
            ILEGCO(I)=IHOLD
 1135     CONTINUE
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            I=1
            WRITE(ICOUT,1136)ILEGCO(I)
 1136       FORMAT('ALL LEGEND COLORS HAVE JUST BEEN SET TO ',A4)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
        GOTO9000
C
      ELSEIF(NUMARG.GE.2.AND.IHARG(2).EQ.'COLO')THEN
C
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'LECL')
     1   CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IF(IARGT(1).NE.'NUMB')THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
 1141     FORMAT('***** ERROR IN LEGEND COLOR (DPLECL)--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
 1142     FORMAT('      IN THE LEGEND ... COLOR COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)
 1143     FORMAT('      THE LEGEND IS IDENTIFIED BY A NUMBER, AS IN--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1144)
 1144     FORMAT('      LEGEND 3 COLOR GREEN')
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
C
        I=IARG(1)
        IF(I.LT.1 .OR. I.GT.MAXLEG)THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1152)
 1152     FORMAT('      IN THE LEGEND ... COLOR COMMAND,THE NUMBER ',
     1           'OF LEGENDS')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1154)MAXLEG
 1154     FORMAT('      MUST BE BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1155)
 1155     FORMAT('      SUCH WAS NOT THE CASE HERE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1156)I
 1156     FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH LEGEND.')
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ENDIF
C
        IF(NUMARG.LE.2        .OR. IHARG(3).EQ.'ON'   .OR.
     1     IHARG(3).EQ.'OFF'  .OR. IHARG(3).EQ.'AUTO' .OR.
     1     IHARG(3).EQ.'DEFA')THEN
          IF(ICASCL.EQ.'RGB ')THEN
            JHOLD1=-1
            JHOLD2=-1
            JHOLD3=-1
          ELSE
            IHOLD=IDEFCO
          ENDIF
        ELSE
          IF(ICASCL.EQ.'RGB ')THEN
            JHOLD1=-1
            JHOLD2=-1
            JHOLD3=-1
            IF(NUMARG.GE.5)THEN
              JHOLD1=IARG(3)
              JHOLD2=IARG(4)
              JHOLD3=IARG(5)
              IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
              IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
              IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
            ENDIF
          ELSE
            IHOLD=IHARG(3)
          ENDIF
        ENDIF
C
        IFOUND='YES'
        IF(ICASCL.EQ.'RGB ')THEN
          ILEGC2(I,1)=JHOLD1
          ILEGC2(I,2)=JHOLD2
          ILEGC2(I,3)=JHOLD3
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1286)I,ILEGC2(I,1),ILEGC2(I,2),ILEGC2(I,3)
 1286       FORMAT('THE RGB COLOR FOR LEGEND ',I8,
     1             ' HAS JUST BEEN SET TO ',3I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ELSE
          ILEGCO(I)=IHOLD
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1186)I,ILEGCO(I)
 1186       FORMAT('THE COLOR FOR LEGEND ',I8,' HAS JUST BEEN SET TO ',
     1             A4)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ENDIF
C
 9000 CONTINUE
C
      IF(IBUGP2.EQ.'ON' .OR. ISUBRO.EQ.'LECL')THEN
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLECL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR,NUMLEG
 9012   FORMAT('IFOUND,IERROR,NUMLEG = ',2(A4,2X),I5)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)IHOLD,JHOLD1,JHOLD2,JHOLD3
 9014   FORMAT('IHOLD,JHOLD1,JHOLD2,JHOLD3 = ',A4,2X,3I5)
        CALL DPWRST('XXX','BUG ')
        DO9075I=1,10
          WRITE(ICOUT,76)I,ILEGCO(I),ILEGC2(I,1),ILEGC2(I,2),ILEGC2(I,3)
          CALL DPWRST('XXX','BUG ')
 9075   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLECO(IHARG,IHARG2,IARGT,IARG,ARG,NUMARG,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,IANS,IWIDTH,
     1MAXLEG,PLEGXC,PLEGYC,IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE (X,Y) COORDINATES FOR A LEGEND.
C              THE (X,Y) COORDINATES WILL BE PLACED IN THE
C              I-TH ELEMENT OF PLEGXC(.) AND PLEGYC(.) RESPECTIVELY.
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --ARG    (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --MAXLEG
C     OUTPUT ARGUMENTS--PLEGXC (A FLOATING POINT VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              X COORDINATE FOR LEGEND I.
C                     --PLEGYC (A FLOATING POINT VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              Y COORDINATE FOR LEGEND I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--SEPTEMBER 1980.
C     UPDATED         --MARCH     1981.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IHARG2
      CHARACTER*4 IARGT
      CHARACTER*4 IHNAME
      CHARACTER*4 IHNAM2
      CHARACTER*4 IUSE
      CHARACTER*4 IANS
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASE
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IHWORD
      CHARACTER*4 IHWOR2
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IHARG2(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
C
      DIMENSION IHNAME(*)
      DIMENSION IHNAM2(*)
      DIMENSION IUSE(*)
      DIMENSION IN(*)
      DIMENSION IVALUE(*)
      DIMENSION VALUE(*)
      DIMENSION IANS(*)
C
      DIMENSION PLEGXC(*)
      DIMENSION PLEGYC(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLE'
      ISUBN2='CO  '
      IFOUND='NO'
      IERROR='NO'
C
      HOLD1=0.0
      HOLD2=0.0
C
      IF(NUMARG.EQ.0)GOTO9000
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'COOR')GOTO1110
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'COOR')GOTO1140
      GOTO9000
C
 1110 CONTINUE
      IF(NUMARG.LE.1)GOTO1120
      IF(IHARG(2).EQ.'ON')GOTO1120
      IF(IHARG(2).EQ.'OFF')GOTO1120
      IF(IHARG(2).EQ.'AUTO')GOTO1120
      IF(IHARG(2).EQ.'DEFA')GOTO1120
      IF(NUMARG.GE.3)GOTO1125
C
      IERROR='YES'
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1111)
 1111 FORMAT('***** ERROR IN DPLECO--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1112)
 1112 FORMAT('      IN THE LEGEND ... COORDINATES COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1113)
 1113 FORMAT('      THE COORDINATES ARE SPECIFIED BY 2 NUMBERS, ',
     1'AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1114)
 1114 FORMAT('      LEGEND 3 COORDINATES 30 80')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
 1120 CONTINUE
      ICASE='AUTO'
      GOTO1130
C
 1125 CONTINUE
      ICASE='NORM'
      DO1126J=2,3
      IF(IARGT(J).EQ.'NUMB')GOTO1127
      GOTO1128
 1127 CONTINUE
      IF(J.EQ.2)HOLD1=ARG(J)
      IF(J.EQ.3)HOLD2=ARG(J)
      GOTO1126
 1128 CONTINUE
      IHWORD=IHARG(J)
      IHWOR2=IHARG2(J)
      IHWUSE='P'
      MESSAG='YES'
      CALL CHECKN(IHWORD,IHWOR2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IF(J.EQ.2)HOLD1=VALUE(ILOC)
      IF(J.EQ.3)HOLD2=VALUE(ILOC)
 1126 CONTINUE
      GOTO1130
C
 1130 CONTINUE
      IFOUND='YES'
      DO1131I=1,MAXLEG
      AI=I
      DEL=(AI-1.0)*4.0
      IF(ICASE.EQ.'AUTO')PLEGXC(I)=20.0
      IF(ICASE.EQ.'AUTO')PLEGYC(I)=84.0-DEL
      IF(ICASE.NE.'AUTO')PLEGXC(I)=HOLD1
      IF(ICASE.NE.'AUTO')PLEGYC(I)=HOLD2
 1131 CONTINUE
      IF(ICASE.EQ.'AUTO')GOTO1135
C
      IF(IFEEDB.EQ.'OFF')GOTO1134
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1132)
 1132 FORMAT('ALL LEGEND COORDINATES HAVE JUST BEEN SET TO--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1133)PLEGXC(I),PLEGYC(I)
 1133 FORMAT('    X = ',E15.7,'           Y = ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1134 CONTINUE
      GOTO9000
C
 1135 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1139
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1136)
 1136 FORMAT('ALL LEGEND COORDINATES HAVE BEEN AUTOMATICALLY SET ',
     1'AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      DO1137I=1,4
      WRITE(ICOUT,1186)I
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1133)PLEGXC(I),PLEGYC(I)
      CALL DPWRST('XXX','BUG ')
 1137 CONTINUE
      WRITE(ICOUT,1138)MAXLEG
 1138 FORMAT('    ... AND SO ON FOR ALL ',I8,' LEGENDS')
      CALL DPWRST('XXX','BUG ')
 1139 CONTINUE
      GOTO9000
C
 1140 CONTINUE
      IF(IARGT(1).EQ.'NUMB')GOTO1150
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('***** ERROR IN DPLECO--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      IN THE LEGEND ... COORDINATES COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      THE LEGEND IS IDENTIFIED BY A NUMBER, AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1144)
 1144 FORMAT('      LEGEND 3 COORDINATES 30 80')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
 1150 CONTINUE
      I=IARG(1)
      IF(1.LE.I.AND.I.LE.MAXLEG)GOTO1160
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1151)
 1151 FORMAT('***** ERROR IN DPLECO--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1152)
 1152 FORMAT('      IN THE LEGEND ... COORDINATES COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1153)
 1153 FORMAT('      THE NUMBER OF LEGENDS MUST BE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1154)MAXLEG
 1154 FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1155)
 1155 FORMAT('      SUCH WAS NOT THE CASE HERE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1156)I
 1156 FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1'LEGEND.')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
 1160 CONTINUE
      IF(NUMARG.LE.2)GOTO1170
      IF(IHARG(3).EQ.'ON')GOTO1170
      IF(IHARG(3).EQ.'OFF')GOTO1170
      IF(IHARG(3).EQ.'AUTO')GOTO1170
      IF(IHARG(3).EQ.'DEFA')GOTO1170
      IF(NUMARG.GE.4)GOTO1175
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1111)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1112)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1113)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1114)
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
 1170 CONTINUE
      AI=I
      DEL=(AI-1.0)*4.0
      HOLD1=20.0
      HOLD2=84.0-DEL
      GOTO1180
C
 1175 CONTINUE
      DO1176J=3,4
      IF(IARGT(J).EQ.'NUMB')GOTO1177
      GOTO1178
 1177 CONTINUE
      IF(J.EQ.3)HOLD1=ARG(J)
      IF(J.EQ.4)HOLD2=ARG(J)
      GOTO1176
 1178 CONTINUE
      IHWORD=IHARG(J)
      IHWOR2=IHARG2(J)
      IHWUSE='P'
      MESSAG='YES'
      CALL CHECKN(IHWORD,IHWOR2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOC,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      IF(J.EQ.3)HOLD1=VALUE(ILOC)
      IF(J.EQ.4)HOLD2=VALUE(ILOC)
 1176 CONTINUE
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      PLEGXC(I)=HOLD1
      PLEGYC(I)=HOLD2
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1186)I
 1186 FORMAT('THE COORDINATES FOR LEGEND ',I8,
     1' HAVE JUST BEEN SET TO--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1133)PLEGXC(I),PLEGYC(I)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPLECO--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IFOUND,IERROR
 9012 FORMAT('IFOUND,IERROR = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPLEDI(IHARG,IHARG2,IARGT,IARG,NUMARG,IDEFDI,
     1MAXLEG,ILEGDI,IFOUND,IERROR)
CCCCC THE FOLLOWING LINE WAS FIXED (SEE ABOVE) FEBRUARY 1992
CCCCC SUBROUTINE DPLEDI(IHARG,IARGT,IARG,NUMARG,IDEFDI,
C
C     PURPOSE--DEFINE THE DIRECTION FOR A LEGEND.
C              THE DIRECTION FOR LEGEND I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE HOLLERITH
C              VECTOR ILEGDI(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IHARG2 (A HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFDI
C                     --MAXLEG
C     OUTPUT ARGUMENTS--ILEGDI (A HOLLERITH VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              DIRECTION FOR LEGEND I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--89/2
C     ORIGINAL VERSION--JANUARY   1989.
C     UPDATED         --FEBRUARY  1992 FIX CONFLICT WITH LITERAL
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
CCCCC THE FOLLOWING LINE WAS ADDED FEBRUARY 1992
      CHARACTER*4 IHARG2
      CHARACTER*4 IARGT
      CHARACTER*4 IDEFDI
      CHARACTER*4 ILEGDI
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
CCCCC THE FOLLOWING LINE WAS ADDED FEBRAURY 1992
      DIMENSION IHARG2(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
C
      DIMENSION ILEGDI(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
CCCCC THE FOLLOWING LINE WAS FIXED FEBRUARY 1992
CCCCC IF(NUMARG.GE.1.AND.IHARG(1).EQ.'DIRE')GOTO1110
      IF(NUMARG.GE.1.AND.
     1   IHARG(1).EQ.'DIRE'.AND.IHARG2(1).EQ.'CTIO'.AND.
     1   NUMARG.EQ.2)GOTO1110
CCCCC THE FOLLOWING LINE WAS FIXED FEBRUARY 1992
CCCCC IF(NUMARG.GE.2.AND.IHARG(2).EQ.'DIRE')GOTO1140
      IF(NUMARG.GE.2.AND.
     1   IHARG(2).EQ.'DIRE'.AND.IHARG2(2).EQ.'CTIO'.AND.
     1   NUMARG.EQ.3)GOTO1140
      GOTO1199
C
 1110 CONTINUE
      IF(NUMARG.LE.1)GOTO1120
      IF(IHARG(2).EQ.'ON')GOTO1120
      IF(IHARG(2).EQ.'OFF')GOTO1120
      IF(IHARG(2).EQ.'AUTO')GOTO1120
      IF(IHARG(2).EQ.'DEFA')GOTO1120
      GOTO1125
C
 1120 CONTINUE
      IHOLD=IDEFDI
      GOTO1130
C
 1125 CONTINUE
      IHOLD=IHARG(2)
      GOTO1130
C
 1130 CONTINUE
      IFOUND='YES'
      DO1135I=1,MAXLEG
      ILEGDI(I)=IHOLD
 1135 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1139
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1136)ILEGDI(I)
 1136 FORMAT('ALL LEGEND DIRECTIONS HAVE JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1139 CONTINUE
      GOTO1199
C
 1140 CONTINUE
      IF(IARGT(1).EQ.'NUMB')GOTO1150
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('***** ERROR IN DPLEDI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      IN THE LEGEND ... DIRECTION COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      THE LEGEND IS IDENTIFIED BY A NUMBER, AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1144)
 1144 FORMAT('      LEGEND 3 DIRECTION HORIZONTAL')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1150 CONTINUE
      I=IARG(1)
      IF(1.LE.I.AND.I.LE.MAXLEG)GOTO1160
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1151)
 1151 FORMAT('***** ERROR IN DPLEDI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1152)
 1152 FORMAT('      IN THE LEGEND ... DIRECTION COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1153)
 1153 FORMAT('      THE NUMBER OF LEGENDS MUST BE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1154)MAXLEG
 1154 FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1155)
 1155 FORMAT('      SUCH WAS NOT THE CASE HERE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1156)I
 1156 FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1'LEGEND.')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1160 CONTINUE
      IF(NUMARG.LE.2)GOTO1170
      IF(IHARG(3).EQ.'ON')GOTO1170
      IF(IHARG(3).EQ.'OFF')GOTO1170
      IF(IHARG(3).EQ.'AUTO')GOTO1170
      IF(IHARG(3).EQ.'DEFA')GOTO1170
      GOTO1175
C
 1170 CONTINUE
      IHOLD=IDEFDI
      GOTO1180
C
 1175 CONTINUE
      IHOLD=IHARG(3)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      ILEGDI(I)=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1186)I,ILEGDI(I)
 1186 FORMAT('THE DIRECTION FOR LEGEND ',I8,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPLEFI(IHARG,IARGT,IARG,NUMARG,IDEFFI,
     1MAXLEG,ILEGFI,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE FILL FOR A LEGEND.
C              THE FILL FOR LEGEND I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE HOLLERITH
C              VECTOR ILEGFI(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFFI
C                     --MAXLEG
C     OUTPUT ARGUMENTS--ILEGFI (A HOLLERITH VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              FILL FOR LEGEND I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--89/2
C     ORIGINAL VERSION--JANUARY   1989.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IDEFFI
      CHARACTER*4 ILEGFI
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
C
      DIMENSION ILEGFI(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'FILL')GOTO1110
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'FILL')GOTO1140
      GOTO1199
C
 1110 CONTINUE
      IF(NUMARG.LE.1)GOTO1120
      IF(IHARG(2).EQ.'ON')GOTO1120
      IF(IHARG(2).EQ.'OFF')GOTO1120
      IF(IHARG(2).EQ.'AUTO')GOTO1120
      IF(IHARG(2).EQ.'DEFA')GOTO1120
      GOTO1125
C
 1120 CONTINUE
      IHOLD=IDEFFI
      GOTO1130
C
 1125 CONTINUE
      IHOLD=IHARG(2)
      GOTO1130
C
 1130 CONTINUE
      IFOUND='YES'
      DO1135I=1,MAXLEG
      ILEGFI(I)=IHOLD
 1135 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1139
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1136)ILEGFI(I)
 1136 FORMAT('ALL LEGEND FILLS HAVE JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1139 CONTINUE
      GOTO1199
C
 1140 CONTINUE
      IF(IARGT(1).EQ.'NUMB')GOTO1150
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('***** ERROR IN DPLEFI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      IN THE LEGEND ... FILL COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      THE LEGEND IS IDENTIFIED BY A NUMBER, AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1144)
 1144 FORMAT('      LEGEND 3 FILL ON')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1150 CONTINUE
      I=IARG(1)
      IF(1.LE.I.AND.I.LE.MAXLEG)GOTO1160
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1151)
 1151 FORMAT('***** ERROR IN DPLEFI--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1152)
 1152 FORMAT('      IN THE LEGEND ... FILL COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1153)
 1153 FORMAT('      THE NUMBER OF LEGENDS MUST BE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1154)MAXLEG
 1154 FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1155)
 1155 FORMAT('      SUCH WAS NOT THE CASE HERE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1156)I
 1156 FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1'LEGEND.')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1160 CONTINUE
      IF(NUMARG.LE.2)GOTO1170
      IF(IHARG(3).EQ.'ON')GOTO1170
      IF(IHARG(3).EQ.'OFF')GOTO1170
      IF(IHARG(3).EQ.'AUTO')GOTO1170
      IF(IHARG(3).EQ.'DEFA')GOTO1170
      GOTO1175
C
 1170 CONTINUE
      IHOLD=IDEFFI
      GOTO1180
C
 1175 CONTINUE
      IHOLD=IHARG(3)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      ILEGFI(I)=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1186)I,ILEGFI(I)
 1186 FORMAT('THE FILL FOR LEGEND ',I8,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPLEFO(IHARG,IARGT,IARG,NUMARG,IDEFFO,
     1                  MAXLEG,ILEGFO,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE FONT FOR A LEGEND.  THE FONT FOR LEGEND I WILL
C              BE PLACED IN THE I-TH ELEMENT OF THE HOLLERITH VECTOR
C              ILEGFO(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFFO
C                     --MAXLEG
C     OUTPUT ARGUMENTS--ILEGFO (A HOLLERITH VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              FONT FOR LEGEND I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--89/2
C     ORIGINAL VERSION--JANUARY   1989.
C     UPDATED         --JULY      2021. "HARDWARE" AS SYNONYM FOR
C                                       "TEKTRONIX
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IDEFFO
      CHARACTER*4 ILEGFO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
C
      DIMENSION ILEGFO(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOBE.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(ISUBG4.EQ.'PLEG')THEN
        WRITE(ICOUT,11)NUMARG,IHARG(1),IARG(1)
   11   FORMAT('DPLEG: NUMARG,IHARG(1),IARG(1) = ',I8,2X,A4,2X,I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'FONT')GOTO1110
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'FONT')GOTO1140
      GOTO1199
C
 1110 CONTINUE
      IF(NUMARG.LE.1)GOTO1120
      IF(IHARG(2).EQ.'ON')GOTO1120
      IF(IHARG(2).EQ.'OFF')GOTO1120
      IF(IHARG(2).EQ.'AUTO')GOTO1120
      IF(IHARG(2).EQ.'DEFA')GOTO1120
      GOTO1125
C
 1120 CONTINUE
      IHOLD=IDEFFO
      GOTO1130
C
 1125 CONTINUE
      IHOLD=IHARG(2)
      GOTO1130
C
 1130 CONTINUE
      IFOUND='YES'
      DO1135I=1,MAXLEG
        ILEGFO(I)=IHOLD
        IF(ILEGFO(I).EQ.'HARD')ILEGFO(I)='TEKT'
 1135 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        I=1
        WRITE(ICOUT,1136)ILEGFO(I)
 1136   FORMAT('ALL LEGEND FONTS HAVE JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO1199
C
 1140 CONTINUE
      IF(IARGT(1).NE.'NUMB')THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1141)
 1141   FORMAT('***** ERROR IN LEGEND (DPLEFO)--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1142)
 1142   FORMAT('      IN THE LEGEND ... FONT COMMAND,')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1143)
 1143   FORMAT('      THE LEGEND IS IDENTIFIED BY A NUMBER, AS IN--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1144)
 1144   FORMAT('      LEGEND 3 FONT SIMPLEX')
        CALL DPWRST('XXX','BUG ')
        GOTO1199
      ENDIF
C
      I=IARG(1)
      IF(I.LT.1 .OR. I.GT.MAXLEG)THEN
        IERROR='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1141)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1152)
 1152   FORMAT('      IN THE LEGEND ... FONT COMMAND, THE NUMBER OF')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1154)MAXLEG
 1154   FORMAT('      LEGENDS MUST BE BETWEEN 1 AND ',I8,
     1         ' (INCLUSIVELY);')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1155)
 1155   FORMAT('      SUCH WAS NOT THE CASE HERE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1156)I
 1156   FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH LEGEND.')
        CALL DPWRST('XXX','BUG ')
        GOTO1199
      ENDIF
C
      IF(NUMARG.LE.2        .OR. IHARG(3).EQ.'ON'   .OR.
     1   IHARG(3).EQ.'OFF'  .OR. IHARG(3).EQ.'AUTO' .OR.
     1   IHARG(3).EQ.'DEFA')THEN
        IHOLD=IDEFFO
        GOTO1180
      ELSE
        IHOLD=IHARG(3)
        GOTO1180
      ENDIF
C
 1180 CONTINUE
      IFOUND='YES'
      ILEGFO(I)=IHOLD
      IF(ILEGFO(I).EQ.'HARD')ILEGFO(I)='TEKT'
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1186)I,ILEGFO(I)
 1186   FORMAT('THE FONT FOR LEGEND ',I8,' HAS JUST BEEN SET TO ',A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPLEG(IHARG,IARG,ARG,IARGT,NUMARG,IANS,IANSLC,
     1                 IWIDTH,
     1                 ILEGNA,ILEGST,ILEGSP,NUMLEG,MAXLEG,
     1                 ILEGTE,NCLEG,MXCLEG,IFOUND,IERROR,IBUGP2)
C
C     PURPOSE--DETERMINE THE LEGEND.
C              CONVERT A STRING TO BE USED AS A LEGEND
C              ON A TEKTRONIX (OR EQUIVALENT) PLOT INTO THE PROPER FORM
C              (ASCII INTEGER REPRESENTATION) FOR USE
C              BY THE TEKTRONIX (OR EQUIVALENT) SOFTWARE.
C              ALSO SAVE THE ORIGINAL STRING FOR USE
C              ON PRINTER PLOTS.
C     OUTPUT ARGUMENTS--ILEGNA (A  CHARACTER VECTOR)
C                     --ILEGST (AN INTEGER VECTOR)
C                     --ILEGSP (AN INTEGER VECTOR)
C                     --ILEGTE (A  CHARACTER VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--MARCH     1979.
C     UPDATED         --JULY      1980.
C     UPDATED         --SEPTEMBER 1980.
C     UPDATED         --DECEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --SEPTEMBER 1993. ALLOW LOWER CASE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IANS
CCCCC THE FOLLOWING LINE WAS ADDED       SEPTEMBER 1993
CCCCC TO ALLOW FOR LOWER CASE            SEPTEMBER 1993
      CHARACTER*4 IANSLC
      CHARACTER*4 ILEGNA
      CHARACTER*4 ILEGTE
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
      CHARACTER*4 IBUGP2
C
      CHARACTER*4 ICASLE
      CHARACTER*4 ISTH
      CHARACTER*4 ILEGN2
C
C---------------------------------------------------------------------
C
      DIMENSION IANS(*)
CCCCC THE FOLLOWING LINE WAS ADDED SEPTEBMER 1993
CCCCC TO ALLOW FOR LOWER CASE      SEPTEMBER 1993
      DIMENSION IANSLC(*)
C
      DIMENSION IHARG(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
      DIMENSION IARGT(*)
C
      DIMENSION ILEGNA(*)
      DIMENSION ILEGST(*)
      DIMENSION ILEGSP(*)
C
      DIMENSION ILEGTE(*)
C
      DIMENSION ISTH(1000)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ILEGNU=(-999)
C
      IF(IBUGP2.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLEG--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)N2,NCLEG,MXCLEG
   52   FORMAT('N2,NCLEG,MXCLEG = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,55)(ILEGTE(I),I=1,MIN(100,NCLEG))
   55   FORMAT('ILEGTE(.) = ',100A1)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,56)NUMLEG,MAXLEG,ARG(1)
   56   FORMAT('NUMLEG,MAXLEG,ARG(1) = ',2I8,G15.7)
        CALL DPWRST('XXX','BUG ')
        DO60I=1,NUMLEG
          WRITE(ICOUT,61)I,ILEGNA(I),ILEGST(I),ILEGSP(I)
   61     FORMAT('I,ILEGNA(I),ILEGST(I),ILEGSP(I) = ',I4,3X,A4,2I8)
          CALL DPWRST('XXX','BUG ')
   60   CONTINUE
      ENDIF
C
      IF(NUMARG.EQ.0)GOTO105
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'COLO')GOTO9000
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'COOR')GOTO9000
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'SIZE')GOTO9000
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'HW')GOTO9000
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'COLO')GOTO9000
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'COOR')GOTO9000
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'SIZE')GOTO9000
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'HW')GOTO9000
      GOTO105
C
  105 CONTINUE
C
C               **********************************************************
C               **  STEP 1--                                            **
C               **  DETERMINE THE LOCATION OF THE WORD    LEGEND     .  **
C               **********************************************************
C
      ICASLE='1'
      IF(NUMARG.EQ.0)GOTO110
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'ON')GOTO110
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'OFF')GOTO110
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'AUTO')GOTO110
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'DEFA')GOTO110
      GOTO150
C
  110 CONTINUE
      ICASLE='ALL'
      NUMLEG=0
      DO120I=1,MAXLEG
      ILEGNA(I)=' '
      ILEGST(I)=0
      ILEGSP(I)=0
  120 CONTINUE
      NCLEG=0
      DO130I=1,MXCLEG
      ILEGTE(I)=' '
  130 CONTINUE
      GOTO800
C
  150 CONTINUE
      DO160I=1,IWIDTH
      I2=I
      IP1=I+1
      IP2=I+2
      IP3=I+3
      IP4=I+4
      IP5=I+5
      IF(IP5.GT.IWIDTH)GOTO169
      IF(IANS(I).EQ.'L'.AND.IANS(IP1).EQ.'E'
     1.AND.IANS(IP2).EQ.'G'.AND.IANS(IP3).EQ.'E'
     1.AND.IANS(IP4).EQ.'N'.AND.IANS(IP5).EQ.'D')
     1GOTO180
  160 CONTINUE
  169 CONTINUE
C
      WRITE(ICOUT,171)
  171 FORMAT('***** ERROR IN DPLEG--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,172)
  172 FORMAT('      THE WORD     LEGEND    NOT FOUND.')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
  180 CONTINUE
      ISTOPL=IP5
C
C               **********************************************
C               **  STEP 2--                                **
C               **  DETERMINE THE NAME ASSOCIATED WITH      **
C               **  THE LEGEND PRESENTLY BEING DEFINED.     **
C               **********************************************
C
      ISTART=ISTOPL+1
      IF(ISTART.GT.IWIDTH)GOTO209
      DO200I=ISTART,IWIDTH
      I2=I
      IF(IANS(I).NE.' ')GOTO220
  200 CONTINUE
  209 CONTINUE
C
      WRITE(ICOUT,211)
  211 FORMAT('***** ERROR IN DPLEG--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,212)
  212 FORMAT('      NO NAME (E.G., 1, 2, 3, ...) FOUND')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,213)
  213 FORMAT('      FOR THE CURRENT LEGEND BEING DEFINED.')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
  220 CONTINUE
      ISTARN=I2
C
      DO230I=ISTARN,IWIDTH
      I2=I
      IF(IANS(I).EQ.' ')GOTO240
  230 CONTINUE
      I2=I2+1
  240 CONTINUE
      ISTOPN=I2-1
C
CCCCC CALL DP1H4H(ISTARN,ISTOPN,IANS,
CCCCC1IWORD1,IWORD2,IWORD3,NUMWD,NUMCH,IBUGP2,IERROR)
C
      IF(IARGT(1).EQ.'NUMB')GOTO249
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,241)
  241 FORMAT('***** ERROR IN DPLEG--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,242)
  242 FORMAT('      IN THE LEGEND ... COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,243)
  243 FORMAT('      THE LEGEND MUST BE IDENTIFIED BY A NUMBER,' )
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,244)
  244 FORMAT('      AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,245)
  245 FORMAT('         LEGEND 2 CARBON DIOXIDE')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,246)
  246 FORMAT('      SUCH WAS NOT THE CASE HERE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,247)
  247 FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)WRITE(ICOUT,248)(IANS(I),I=1,IWIDTH)
  248 FORMAT(100A1)
      IF(IWIDTH.GE.1)CALL DPWRST('XXX','BUG ')
      GOTO9000
  249 CONTINUE
C
      ILEGN2=IHARG(1)
      ILEGNU=IARG(1)
      IF(1.LE.ILEGNU.AND.ILEGNU.LE.MAXLEG)GOTO259
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,251)
  251 FORMAT('***** ERROR IN DPLEG--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,252)
  252 FORMAT('      IN THE LEGEND ... COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,253)
  253 FORMAT('      THE NUMBER OF LEGENDS MUST BE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,254)MAXLEG
  254 FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,255)
  255 FORMAT('      SUCH WAS NOT THE CASE HERE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,256)I
  256 FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1'LEGEND.')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
  259 CONTINUE
C
C               *********************************************
C               **  STEP 3--                               **
C               **  DETERMINE THE START POSITION (ISTARS)  **
C               **  FOR THE LEGEND STRING.                 **
C               *********************************************
C
      ISTARS=ISTOPN+2
C
C               ********************************************
C               **  STEP 4--                              **
C               **  DETERMINE THE STOP POSITION (ISTOPS)  **
C               **  FOR THE LEGEND STRING.                **
C               ********************************************
C
      ISTOPS=IWIDTH
      IMIN=ISTARS
      IF(IMIN.GT.IWIDTH)GOTO490
      DO400I=IMIN,IWIDTH
      IREV=IWIDTH-I+IMIN
      IF(IANS(IREV).NE.' ')GOTO420
  400 CONTINUE
      GOTO490
  420 CONTINUE
      ISTOPS=IREV
  490 CONTINUE
C
C               ***********************************************
C               **  STEP 5- -                                **
C               **  COPY OVER THE STRING OF INTEREST.        **
C               **  CONVERT TO ASCII NUMERIC REPRESENTATION. **
C               ***********************************************
C
      IF(NUMARG.EQ.2.AND.IHARG(2).EQ.'ON')GOTO570
      IF(NUMARG.EQ.2.AND.IHARG(2).EQ.'OFF')GOTO570
      IF(NUMARG.EQ.2.AND.IHARG(2).EQ.'AUTO')GOTO570
      IF(NUMARG.EQ.2.AND.IHARG(2).EQ.'DEFA')GOTO570
      IF(NUMARG.EQ.1)GOTO570
      GOTO540
C
  540 CONTINUE
      J=0
      IF(ISTARS.GT.ISTOPS)GOTO570
      DO550I=ISTARS,ISTOPS
      J=J+1
CCCCC THE FOLLOWING LINE AS CHANGED      SEPTEMBER 1993
CCCCC TO ALLOW FOR LOWER CASE            SEPTEMBER 1993
CCCCC ISTH(J)=IANS(I)
      ISTH(J)=IANSLC(I)
  550 CONTINUE
      N2=J
      GOTO590
C
  570 CONTINUE
      J=1
      ISTH(1)=' '
      N2=J
      GOTO590
C
  590 CONTINUE
C
C               ****************************************************************
C               **  STEP 6--                                                   *
C               **  INSERT THE CHARACTER STRING IN LOCATIONS                   *
C               **  1 TO N2        OF ISTH(.) INTO THE                         *
C               **  PACKED  INTERNAL DATAPLOT TABLE ILEGTE(.).
C               **  UPDATE (IF NECESSARY) THE INTERNAL TABLES                  *
C               **  ILEGNA(.), ILEGST(.), AND ILEGSP(.).                       *
C               ****************************************************************
C
CCCCC MAY NEED TO ADD IANSLC TO THE ARG LIST BELOW???  SEPTEMBER 1993
      CALL DPINLE(ILEGN2,ISTH,N2,ILEGNA,ILEGST,ILEGSP,
     1NUMLEG,MAXLEG,ILEGTE,NCLEG,MXCLEG,IANS,IWIDTH,IBUGP2,
     1IERROR)
C
C               ***************************
C               **  STEP 7--             **
C               **  PRINT OUT A MESSAGE  **
C               ***************************
C
  800 CONTINUE
      IF(ICASLE.EQ.'ALL')GOTO820
C
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO819
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,811)ILEGNA(ILEGNU)
  811 FORMAT('LEGEND ',A4,' HAS JUST BEEN SET TO')
      CALL DPWRST('XXX','BUG ')
      IF(N2.EQ.0)WRITE(ICOUT,999)
      IF(N2.EQ.0)CALL DPWRST('XXX','BUG ')
      IF(N2.GE.1)WRITE(ICOUT,812)(ISTH(I),I=1,N2)
  812 FORMAT(12X,118A1)
      IF(N2.GE.1)CALL DPWRST('XXX','BUG ')
  819 CONTINUE
      GOTO9000
C
  820 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO829
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,821)
  821 FORMAT('ALL LEGENDS HAVE JUST BEEN SET TO')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
  829 CONTINUE
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPLEG--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)N2,NCLEG,MXCLEG
 9012 FORMAT('N2,NCLEG,MXCLEG = ',3I8)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)(ISTH(I),I=1,N2)
 9013 FORMAT('ISTH(.) = ',100A1)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)(ILEGTE(I),I=1,NCLEG)
 9015 FORMAT('ILEGTE(.) = ',100A1)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9017)ILEGNU,IARG(1),NUMLEG,MAXLEG
 9017 FORMAT('ILEGNU,IARG(1),NUMLEG,MAXLEG = ',4I8)
      CALL DPWRST('XXX','BUG ')
      DO9020I=1,NUMLEG
      WRITE(ICOUT,9021)I,ILEGNA(I),ILEGST(I),ILEGSP(I)
 9021 FORMAT('I,ILEGNA(I),ILEGST(I),ILEGSP(I) = ',I4,3X,A4,I8,I8)
      CALL DPWRST('XXX','BUG ')
 9020 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPLEHW(IHARG,IARGT,IARG,ARG,NUMARG,
     1PDEFHE,
     1MAXLEG,
     1PLEGHE,PLEGWI,PLEGVG,PLEGHG,
     1IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE HEIGHT AND WIDTH FOR A LEGEND.
C              THE HEIGHT FOR LEGEND I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE FLOATING POINT
C              VECTOR PLEGHE(.).
C              THE WIDTH FOR LEGEND I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE FLOATING POINT
C              VECTOR PLEGWI(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --ARG    (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --PDEFHE
C                     --MAXLEG
C     OUTPUT ARGUMENTS--PLEGHE (A FLOATING POINT VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              SIZE (= HEIGHT) FOR LEGEND I.
C                     --PLEGWI = LEGEND WIDTH
C                     --PLEGVG = LEGEND VERTICAL GAP
C                     --PLEHG = LEGEND GHORIZONTAL GAP
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--JUNE      1980.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
C
      DIMENSION PLEGHE(*)
      DIMENSION PLEGWI(*)
      DIMENSION PLEGVG(*)
      DIMENSION PLEGHG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'HW')GOTO1110
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'HW')GOTO1140
      GOTO1199
C
 1110 CONTINUE
      IF(NUMARG.LE.2)GOTO1120
      IF(IHARG(3).EQ.'ON')GOTO1120
      IF(IHARG(3).EQ.'OFF')GOTO1120
      IF(IHARG(3).EQ.'AUTO')GOTO1120
      IF(IHARG(3).EQ.'DEFA')GOTO1120
      IF(NUMARG.GE.3.AND.
     1IARGT(2).EQ.'NUMB'.AND.
     1IARGT(3).EQ.'NUMB')GOTO1125
C
      IERROR='YES'
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1111)
 1111 FORMAT('***** ERROR IN DPLEHW--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1112)
 1112 FORMAT('      IN THE LEGEND ... HW COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1113)
 1113 FORMAT('      THE HEIGHT & WIDTH IS SPECIFIED BY 2 NUMBERS, ',
     1'AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1114)
 1114 FORMAT('      LEGEND 3 HW 1.5 1')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1120 CONTINUE
      HOLD1=PDEFHE
      HOLD2=PDEFHE*0.5
      GOTO1130
C
 1125 CONTINUE
      HOLD1=ARG(2)
      HOLD2=ARG(3)
      GOTO1130
C
 1130 CONTINUE
      IFOUND='YES'
      DO1135I=1,MAXLEG
      PLEGHE(I)=HOLD1
      PLEGWI(I)=HOLD2
      PLEGVG(I)=PLEGHE(I)*0.375
      PLEGHG(I)=PLEGWI(I)*0.250
 1135 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1139
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1136)PLEGHE(I),PLEGWI(I)
 1136 FORMAT('ALL LEGEND HEIGHT & WIDTHS HAVE JUST BEEN SET TO ',
     12E15.7)
      CALL DPWRST('XXX','BUG ')
 1139 CONTINUE
      GOTO1199
C
 1140 CONTINUE
      IF(IARGT(1).EQ.'NUMB')GOTO1150
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('***** ERROR IN DPLEHW--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      IN THE LEGEND ... HW COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      THE LEGEND IS IDENTIFIED BY A NUMBER, AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1144)
 1144 FORMAT('      LEGEND 3 HW 1.5 1')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1150 CONTINUE
      I=IARG(1)
      IF(1.LE.I.AND.I.LE.MAXLEG)GOTO1160
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1151)
 1151 FORMAT('***** ERROR IN DPLEHW--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1152)
 1152 FORMAT('      IN THE LEGEND ... HW COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1153)
 1153 FORMAT('      THE NUMBER OF LEGENDS MUST BE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1154)MAXLEG
 1154 FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1155)
 1155 FORMAT('      SUCH WAS NOT THE CASE HERE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1156)I
 1156 FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1'LEGEND.')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1160 CONTINUE
      IF(NUMARG.LE.3)GOTO1170
      IF(IHARG(4).EQ.'ON')GOTO1170
      IF(IHARG(4).EQ.'OFF')GOTO1170
      IF(IHARG(4).EQ.'AUTO')GOTO1170
      IF(IHARG(4).EQ.'DEFA')GOTO1170
      IF(NUMARG.GE.4.AND.
     1IARGT(3).EQ.'NUMB'.AND.
     1IARGT(4).EQ.'NUMB')GOTO1175
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1111)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1112)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1113)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1114)
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1170 CONTINUE
      HOLD1=PDEFHE
      HOLD2=PDEFHE*0.5
      GOTO1180
C
 1175 CONTINUE
      HOLD1=ARG(3)
      HOLD2=ARG(4)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      PLEGHE(I)=HOLD1
      PLEGWI(I)=HOLD2
      PLEGVG(I)=PLEGHE(I)*0.375
      PLEGHG(I)=PLEGWI(I)*0.250
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1186)I,PLEGHE(I),PLEGWI(I)
 1186 FORMAT('THE HEIGHT & WIDTH FOR LEGEND ',I8,
     1' HAS JUST BEEN SET TO ',2E15.7)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPLEJU(IHARG,IARGT,IARG,NUMARG,IDEFJU,
     1MAXLEG,ILEGJU,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE JUSTIFICATION FOR A LEGEND.
C              THE JUSTIFICATION FOR LEGEND I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE HOLLERITH
C              VECTOR ILEGJU(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFJU
C                     --MAXLEG
C     OUTPUT ARGUMENTS--ILEGJU (A HOLLERITH VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              JUSTIFICATION FOR LEGEND I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--89/2
C     ORIGINAL VERSION--JANUARY   1989.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IDEFJU
      CHARACTER*4 ILEGJU
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
C
      DIMENSION ILEGJU(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'JUST')GOTO1110
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'JUST')GOTO1140
      GOTO1199
C
 1110 CONTINUE
      IF(NUMARG.LE.1)GOTO1120
      IF(IHARG(2).EQ.'ON')GOTO1120
      IF(IHARG(2).EQ.'OFF')GOTO1120
      IF(IHARG(2).EQ.'AUTO')GOTO1120
      IF(IHARG(2).EQ.'DEFA')GOTO1120
      GOTO1125
C
 1120 CONTINUE
      IHOLD=IDEFJU
      GOTO1130
C
 1125 CONTINUE
      IHOLD=IHARG(2)
      GOTO1130
C
 1130 CONTINUE
      IFOUND='YES'
      DO1135I=1,MAXLEG
      ILEGJU(I)=IHOLD
 1135 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1139
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1136)ILEGJU(I)
 1136 FORMAT('ALL LEGEND JUSTIFICATIONS HAVE JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1139 CONTINUE
      GOTO1199
C
 1140 CONTINUE
      IF(IARGT(1).EQ.'NUMB')GOTO1150
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('***** ERROR IN DPLEJU--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      IN THE LEGEND ... JUSTIFICATION COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      THE LEGEND IS IDENTIFIED BY A NUMBER, AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1144)
 1144 FORMAT('      LEGEND 3 JUSTIFICATION CENTER')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1150 CONTINUE
      I=IARG(1)
      IF(1.LE.I.AND.I.LE.MAXLEG)GOTO1160
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1151)
 1151 FORMAT('***** ERROR IN DPLEJU--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1152)
 1152 FORMAT('      IN THE LEGEND ... JUSTIFICATION COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1153)
 1153 FORMAT('      THE NUMBER OF LEGENDS MUST BE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1154)MAXLEG
 1154 FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1155)
 1155 FORMAT('      SUCH WAS NOT THE CASE HERE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1156)I
 1156 FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1'LEGEND.')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1160 CONTINUE
      IF(NUMARG.LE.2)GOTO1170
      IF(IHARG(3).EQ.'ON')GOTO1170
      IF(IHARG(3).EQ.'OFF')GOTO1170
      IF(IHARG(3).EQ.'AUTO')GOTO1170
      IF(IHARG(3).EQ.'DEFA')GOTO1170
      GOTO1175
C
 1170 CONTINUE
      IHOLD=IDEFJU
      GOTO1180
C
 1175 CONTINUE
      IHOLD=IHARG(3)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      ILEGJU(I)=IHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1186)I,ILEGJU(I)
 1186 FORMAT('THE JUSTIFICATION FOR LEGEND ',I8,
     1' HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPLEPL(NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2,
     1                  IBUGG2,IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--FORM A LEVEL PLOT.  THIS IS SIMILAR TO A CONTOUR
C              PLOT, EXCEPT THAT WE FILL REGIONS WITH A COLOR
C              (TYPICALLY GREY SCALE, BUT CAN ACTUALLY BE ANY
C              COLOR SCHEME SELECTED BY THE USER).
C     EXAMPLE--LEVEL PLOT Z X Y Z0
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/3
C     ORIGINAL VERSION--MARCH     2008.
C     UPDATED         --FEBRUARY  2011. USE DPPARS, DPPAR5
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IAND1
      CHARACTER*4 IAND2
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      CHARACTER*4 ICASE
      CHARACTER*40 INAME
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOCP.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
C
C---------------------------------------------------------------------
C
      DIMENSION Z(MAXOBV)
      DIMENSION XD(MAXOBV)
      DIMENSION YD(MAXOBV)
      DIMENSION Z0(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION XDIST(MAXOBV)
      DIMENSION YDIST(MAXOBV)
      INCLUDE 'DPCOZZ.INC'
      EQUIVALENCE (GARBAG(IGARB1),Z(1))
      EQUIVALENCE (GARBAG(IGARB2),XD(1))
      EQUIVALENCE (GARBAG(IGARB3),YD(1))
      EQUIVALENCE (GARBAG(IGARB4),Z0(1))
      EQUIVALENCE (GARBAG(IGARB5),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB6),XDIST(1))
      EQUIVALENCE (GARBAG(IGARB7),YDIST(1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLE'
      ISUBN2='PL  '
      IFOUND='NO'
      IERROR='NO'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LEPL')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLEPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASPL,IAND1,IAND2
   53   FORMAT('ICASPL,IAND1,IAND2 = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,56)MAXN,MAXNPP
   56   FORMAT('MAXN,MAXNPP = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,57)IFOUND,IERROR
   57   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***********************************
C               **  TREAT THE LEVEL PLOT CASE    **
C               ***********************************
C
      IFOUND='YES'
      ICASPL='LPLO'
C
C               ****************************************
C               **  STEP 2--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      ISTEPN='2'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LEPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='DISCRETE CONTOUR PLOT'
      MINNA=4
      MAXNA=100
      MINN2=2
      IFLAGE=99
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=4
      MAXNVA=4
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGG3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LEPL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I),IVARTY(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I),IVARTY(I) = ',I8,2X,A4,A4,2X,3I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               **********************************************
C               **  STEP 33--                               **
C               **  FORM THE SUBSETTED VARIABLES            **
C               **       Z(.)                              **
C               **       XD(.)                              **
C               **       YD(.)                              **
C               **  CONTAINING                              **
C               **       THE RESPONSE Z VARIABLE            **
C               **       THE HORIZONTAL AXIS VARIABLE       **
C               **       THE VERTICAL AXIS VARIABLE         **
C               **  RESPECTIVELY.                           **
C               **********************************************
C
      ISTEPN='33'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LEPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOL=1
      NUMVA2=3
      CALL DPPAR5(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Z,XD,YD,YD,YD,YD,YD,NS,
     1            IBUGG3,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               **********************************************
C               **  STEP 34--                               **
C               **  FORM THE FULL VARIABLE                  **
C               **       Y4(.)                              **
C               **  CONTAINING THE VALUES                   **
C               **  OF THE RESPONSE VARIABLE                **
C               **  WHERE IT IS DESIRED THAT                **
C               **  CONTOUR CURVES BE DETERMINED.           **
C               **********************************************
C
      ISTEPN='34'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LEPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOL=4
      NUMVA2=1
      NQ=NRIGHT(4)
      DO3410I=1,NQ
        ISUB(I)=1
 3410 CONTINUE
C
      CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1            INAME,IVARN1,IVARN2,IVARTY,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1            MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1            MAXCP4,MAXCP5,MAXCP6,
     1            V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1            Z0,Z0,Z0,N4,NLOCA2,NLOCA3,ICASE,
     1            IBUGG3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
C               ********************************************************
C               **  STEP 41--                                          *
C               **  FORM THE VERTICAL AND HORIZONTAL AXIS VARIABLES    *
C               **  (Y(.) AND X(.), RESPECTIVELY) FOR THE PLOT.        *
C               **  FORM THE CURVE DESIGNATION VARIABLE D(.)  .        *
C               **  THIS WILL BE BOTH ONES FOR BOTH CASES              *
C               **  DEFINE THE NUMBER OF PLOT POINTS    (NPLOTP).      *
C               **  DEFINE THE NUMBER OF PLOT VARIABLES (NPLOTV).      *
C               ********************************************************
C
      ISTEPN='41'
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LEPL')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPLEP2(Z,XD,YD,NS,Z0,N4,
     1            XDIST,YDIST,TEMP1,
     1            Y,X,D,DCOLOR,DFILL,NPLOTP,NPLOTV,
     1            IBUGG3,ISUBRO,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGG2.EQ.'ON'.OR.ISUBRO.EQ.'LEPL')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLEPL--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IFOUND,IERROR
 9012   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2
 9013   FORMAT('NPLOTV,NPLOTP,NS,ICASPL,IAND1,IAND2 = ',
     1         I8,I8,I8,2X,A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)ICASPL,MAXN
 9014   FORMAT('ICASPL,MAXN = ',A4,I8)
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.GE.1)THEN
          DO9020I=1,MIN(NPLOTP,200)
            WRITE(ICOUT,9021)I,Y(I),X(I),D(I)
 9021       FORMAT('I,Y(I),X(I),D(I) = ',I8,3F12.5)
            CALL DPWRST('XXX','BUG ')
 9020     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLEP2(Z,X,Y,N,Z0,NLEVEL,
     1XDIST,YDIST,TEMP1,
     1Y2,X2,D2,DCOLOR,DFILL,NPLOTP,NPLOTV,
     1IBUGG3,ISUBRO,IERROR)
C
C     PURPOSE--FORM A LEVEL PLOT.  THIS IS SIMILAR TO A CONTOUR
C              PLOT, EXCEPT THAT WE FILL REGIONS WITH A COLOR
C              (TYPICALLY GREY SCALE, BUT CAN ACTUALLY BE ANY
C              COLOR SCHEME SELECTED BY THE USER).
C     EXAMPLE--LEVEL PLOT Z X Y Z0
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2008/3
C     ORIGINAL VERSION--MARCH     2008.
C     PURPOSE--GENERATE A LEVEL PLOT
C     ORIGINAL VERSION--MARCH     2008.
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOCP.INC'
C
C---------------------------------------------------------------------
C
      CHARACTER*4 IBUGG3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IWRITE
C
      DIMENSION Z(*)
      DIMENSION X(*)
      DIMENSION Y(*)
      DIMENSION Z0(*)
      DIMENSION XDIST(*)
      DIMENSION YDIST(*)
      DIMENSION TEMP1(*)
      DIMENSION Y2(*)
      DIMENSION X2(*)
      DIMENSION D2(*)
      DIMENSION DCOLOR(*)
      DIMENSION DFILL(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'LEP2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLEP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGG3,ISUBRO
   52   FORMAT('IBUGG3,ISUBRO = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)N,NLEVEL
   53   FORMAT('N,NLEVEL = ',2I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,MIN(N,100)
          WRITE(ICOUT,56)I,X(I),Y(I),Z(I)
   56     FORMAT('I,X(I),Y(I),Z(I) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        DO60I=1,NLEVEL
          WRITE(ICOUT,61)I,Z0(I)
   61     FORMAT('I,Z0(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   60   CONTINUE
      ENDIF
C
C               *******************************************************
C               **  STEP 1--                                         **
C               **  COMPUTE DISTINCT VALUES FOR X AND Y.             **
C               *******************************************************
C
      ISTEPN='1'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'LEP2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IWRITE='OFF'
      CALL DISTIN(X,N,IWRITE,XDIST,NX,IBUGG3,IERROR)
      CALL SORT(XDIST,NX,XDIST)
      CALL DISTIN(Y,N,IWRITE,YDIST,NY,IBUGG3,IERROR)
      CALL SORT(YDIST,NY,YDIST)
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'LEP2')THEN
        DO155I=1,NX
          WRITE(ICOUT,156)I,XDIST(I)
  156     FORMAT('I,XDIST(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
  155   CONTINUE
        DO165I=1,NY
          WRITE(ICOUT,166)I,YDIST(I)
  166     FORMAT('I,YDIST(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
  165   CONTINUE
      ENDIF
C
C               *******************************************************
C               **  STEP 2--                                         **
C               **  LOOP THROUGH THE DISTINCT VALUES OF X AND Y      **
C               *******************************************************
C
      ISTEPN='2'
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'LEP2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICNT1=0
      ICNT2=0
      DO1000I=1,NX
C
        XTEMP=XDIST(I)
        IF(I.EQ.1)THEN
          XLOW=(XDIST(I+1) - XDIST(I))/2.0
          XHIGH=(XDIST(I+1) - XDIST(I))/2.0
        ELSEIF(I.EQ.NX)THEN
          XLOW=(XDIST(I) - XDIST(I-1))/2.0
          XHIGH=(XDIST(I) - XDIST(I-1))/2.0
        ELSE
          XLOW=(XDIST(I) - XDIST(I-1))/2.0
          XHIGH=(XDIST(I+1) - XDIST(I))/2.0
        ENDIF
        XLOW=ABS(XLOW)
        XHIGH=ABS(XHIGH)
C
        DO2000J=1,NY
          YTEMP=YDIST(J)
          IF(J.EQ.1)THEN
            YLOW=(YDIST(J+1) - YDIST(J))/2.0
            YHIGH=(YDIST(J+1) - YDIST(J))/2.0
          ELSEIF(J.EQ.NY)THEN
            YLOW=(YDIST(J) - YDIST(J-1))/2.0
            YHIGH=(YDIST(J) - YDIST(J-1))/2.0
          ELSE
            YLOW=(YDIST(J) - YDIST(J-1))/2.0
            YHIGH=(YDIST(J+1) - YDIST(J))/2.0
          ENDIF
          YLOW=ABS(YLOW)
          YHIGH=ABS(YHIGH)
C
          NK=0
          DO3000K=1,N
            IF(X(K).EQ.XTEMP .AND. Y(K).EQ.YTEMP)THEN
              NK=NK+1
              TEMP1(NK)=Z(K)
            ENDIF
 3000     CONTINUE
C
          IF(NK.GE.1)THEN
            CALL MEAN(TEMP1,NK,IWRITE,XMEAN,IBUGG3,IERROR)
            IF(XMEAN.LT.Z0(1))THEN
              ILEVEL=1
            ELSE
              DO3100K=1,NLEVEL-1
                IF(XMEAN.GE.Z0(K) .AND. XMEAN.LE.Z0(K+1))THEN
                  ILEVEL=K+1
                  GOTO3109
                ENDIF
 3100         CONTINUE
              ILEVEL=NLEVEL+1
 3109         CONTINUE
            ENDIF
C
            ICNT2=ICNT2+1
C
            ICNT1=ICNT1+1
            X2(ICNT1)=XDIST(I) - XLOW
            Y2(ICNT1)=YDIST(J) - YLOW
            D2(ICNT1)=REAL(ICNT2)
            DCOLOR(ICNT1)=REAL(ILEVEL)
            DFILL(ICNT1)=REAL(ILEVEL)
            ICNT1=ICNT1+1
            X2(ICNT1)=XDIST(I) + XHIGH
            Y2(ICNT1)=YDIST(J) - YLOW
            D2(ICNT1)=REAL(ICNT2)
            DCOLOR(ICNT1)=REAL(ILEVEL)
            DFILL(ICNT1)=REAL(ILEVEL)
            ICNT1=ICNT1+1
            X2(ICNT1)=XDIST(I) + XHIGH
            Y2(ICNT1)=YDIST(J) + YHIGH
            D2(ICNT1)=REAL(ICNT2)
            DCOLOR(ICNT1)=REAL(ILEVEL)
            DFILL(ICNT1)=REAL(ILEVEL)
            ICNT1=ICNT1+1
            X2(ICNT1)=XDIST(I) - XLOW
            Y2(ICNT1)=YDIST(J) + YHIGH
            D2(ICNT1)=REAL(ICNT2)
            DCOLOR(ICNT1)=REAL(ILEVEL)
            DFILL(ICNT1)=REAL(ILEVEL)
            ICNT1=ICNT1+1
            X2(ICNT1)=XDIST(I) - XLOW
            Y2(ICNT1)=YDIST(J) - YLOW
            D2(ICNT1)=REAL(ICNT2)
            DCOLOR(ICNT1)=REAL(ILEVEL)
            DFILL(ICNT1)=REAL(ILEVEL)
          ENDIF
C
 2000   CONTINUE
 1000 CONTINUE
C
      NPLOTP=ICNT1
      NPLOTV=2
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
      IF(IBUGG3.EQ.'ON'.OR.ISUBRO.EQ.'LEP2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLEP2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGG3,ISUBRO
 9012   FORMAT('IBUGG3,ISUBRO = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPLOTP,NPLOTV
 9013   FORMAT('NPLOTP,NPLOTV = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NPLOTP.GE.1)THEN
          DO9015I=1,MIN(200,NPLOTP)
            WRITE(ICOUT,9016)I,Y2(I),X2(I),D2(I),DCOLOR(I)
 9016       FORMAT('I,Y2(I),X2(I),D2(I),DCOLOR(I) = ',I8,4F10.5)
            CALL DPWRST('XXX','BUG ')
 9015     CONTINUE
        ENDIF
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLESZ(IHARG,IARGT,IARG,ARG,NUMARG,
     1PDEFHE,PDEFWI,
     1MAXLEG,
     1PLEGHE,PLEGWI,PLEGVG,PLEGHG,
     1IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE SIZE FOR A LEGEND.
C              THE SIZE FOR LEGEND I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE FLOATING POINT
C              VECTOR ILEGCO(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --ARG    (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --PDEFHE
C                     --PDEFWI
C                     --MAXLEG
C     OUTPUT ARGUMENTS--PLEGHE (A FLOATING POINT VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              SIZE (= HEIGHT) FOR LEGEND I.
C                     --PLEGWI = LEGEND WIDTH
C                     --PLEGVG = LEGEND VERTICAL GAP
C                     --PLEHG = LEGEND GHORIZONTAL GAP
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--SEPTEMBER 1980.
C     UPDATED         --MAY       1982.
C     UPDATED         --DECEMBER  1988.   DEFAULT WIDTH
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
C
      DIMENSION PLEGHE(*)
      DIMENSION PLEGWI(*)
      DIMENSION PLEGVG(*)
      DIMENSION PLEGHG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'SIZE')GOTO1110
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'HEIG')GOTO1110
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'SIZE')GOTO1140
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'HEIG')GOTO1140
      GOTO1199
C
 1110 CONTINUE
      IF(NUMARG.LE.1)GOTO1120
      IF(IHARG(2).EQ.'ON')GOTO1120
      IF(IHARG(2).EQ.'OFF')GOTO1120
      IF(IHARG(2).EQ.'AUTO')GOTO1120
      IF(IHARG(2).EQ.'DEFA')GOTO1120
      IF(NUMARG.GE.2.AND.
     1IARGT(2).EQ.'NUMB')GOTO1125
C
      IERROR='YES'
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1111)
 1111 FORMAT('***** ERROR IN DPLESZ--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1112)
 1112 FORMAT('      IN THE LEGEND ... SIZE COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1113)
 1113 FORMAT('      THE SIZE IS SPECIFIED BY 1 NUMBER, ',
     1'AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1114)
 1114 FORMAT('      LEGEND 3 SIZE 1.5')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1120 CONTINUE
      HOLD1=PDEFHE
      HOLD2=PDEFWI
      GOTO1130
C
 1125 CONTINUE
      HOLD1=ARG(2)
      HOLD2=HOLD1*0.5
      GOTO1130
C
 1130 CONTINUE
      IFOUND='YES'
      DO1135I=1,MAXLEG
      PLEGHE(I)=HOLD1
      PLEGWI(I)=HOLD2
      PLEGVG(I)=PLEGHE(I)*0.375
      PLEGHG(I)=PLEGHE(I)*0.125
 1135 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1139
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1136)PLEGHE(I)
 1136 FORMAT('ALL LEGEND SIZES HAVE JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1139 CONTINUE
      GOTO1199
C
 1140 CONTINUE
      IF(IARGT(1).EQ.'NUMB')GOTO1150
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('***** ERROR IN DPLESZ--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      IN THE LEGEND ... SIZE COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      THE LEGEND IS IDENTIFIED BY A NUMBER, AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1144)
 1144 FORMAT('      LEGEND 3 SIZE 1.5')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1150 CONTINUE
      I=IARG(1)
      IF(1.LE.I.AND.I.LE.MAXLEG)GOTO1160
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1151)
 1151 FORMAT('***** ERROR IN DPLESZ--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1152)
 1152 FORMAT('      IN THE LEGEND ... SIZE COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1153)
 1153 FORMAT('      THE NUMBER OF LEGENDS MUST BE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1154)MAXLEG
 1154 FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1155)
 1155 FORMAT('      SUCH WAS NOT THE CASE HERE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1156)I
 1156 FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1'LEGEND.')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1160 CONTINUE
      IF(NUMARG.LE.2)GOTO1170
      IF(IHARG(3).EQ.'ON')GOTO1170
      IF(IHARG(3).EQ.'OFF')GOTO1170
      IF(IHARG(3).EQ.'AUTO')GOTO1170
      IF(IHARG(3).EQ.'DEFA')GOTO1170
      IF(NUMARG.GE.3.AND.
     1IARGT(3).EQ.'NUMB')GOTO1175
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1111)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1112)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1113)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1114)
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1170 CONTINUE
      HOLD1=PDEFHE
      HOLD2=PDEFWI
      GOTO1180
C
 1175 CONTINUE
      HOLD1=ARG(3)
      HOLD2=HOLD1*0.5
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      PLEGHE(I)=HOLD1
      PLEGWI(I)=HOLD2
      PLEGVG(I)=PLEGHE(I)*0.375
      PLEGHG(I)=PLEGHE(I)*0.125
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1186)I,PLEGHE(I)
 1186 FORMAT('THE SIZE FOR LEGEND ',I8,
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPLET(IANGLU,ISEED,IBUGA2,IBUGA3,IBUGCO,IBUGEV,IBUGQ,
     1                 TEMP,TEMP2,XTEMP1,XTEMP2,MAXNXT,
CCCCC                  AUGUST 1995.  ADD IFTORD
CCCCC                  JUNE 2015.    ADD IFORSW
CCCCC1                 IFTEXP,
     1                 IFTEXP,IFTORD,IFORSW,
CCCCC                  ADD FOLLOWING LINE.  FEBRUARY 1994.
CCCCC                  ADD OPTACC.          JUNE 1994.
CCCCC                  ADD IOPTME,IOPTHE,   FEBRUARY 1995.
     1                 ROOTAC,OPTACC,IOPTME,IOPTHE,
     1                 ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT THE LET COMMAND.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--NOVEMBER  1977.
C     UPDATED         --OCTOBER   1978.
C     UPDATED         --NOVEMBER  1978.
C     UPDATED         --JANUARY   1979.
C     UPDATED         --FEBRUARY  1979.
C     UPDATED         --JUNE      1979.
C     UPDATED         --JULY      1979.
C     UPDATED         --SEPTEMBER 1980.
C     UPDATED         --JUNE      1981.
C     UPDATED         --JULY      1981.
C     UPDATED         --SEPTEMBER 1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --JUNE      1986.
C     UPDATED         --NOVEMBER  1986.
C     UPDATED         --APRIL     1987.
C     UPDATED         --JUNE      1987. EXP DESIGN
C     UPDATED         --SEPTEMBER 1987. PRIME NUMBERS
C     UPDATED         --AUGUST    1988. PRINCIPLE COMPONENTS
C     UPDATED         --SEPTEMBER 1987. FIBONNACCI NUMBERS
C     UPDATED         --DECEMBER  1988. ELIM. SHORT VERS. OF SEQUENCE
C     UPDATED         --DECEMBER  1988. SHORTEN: LET Y = SEQU 1 1 N
C     UPDATED         --JANUARY   1989. CHECK FOR ARITHMETIC OPERATORS
C     UPDATED         --JANUARY   1989. (SIMULATED) EXPERIMENT
C     UPDATED         --APRIL     1989. LOGISTIC SEQUENCE
C     UPDATED         --APRIL     1989. CANTOR SET
C     UPDATED         --OCTOBER   1991. NORMAL ORD. STAT. MED.
C     UPDATED         --MAY       1993. EV1, EV2, WEIB. ORD. STAT. MED.
C     UPDATED         --JULY      1993. BUG FIX FOR SING VALUE DECOMP
C     UPDATED         --SEPTEMBER 1993. ADD ISUBRO TO CALL TO DPRK
C     UPDATED         --FEBRUARY  1994. LET A = (TAGUCHI) SN- COMMAND
C     UPDATED         --FEBRUARY  1994. LET A = (TAGUCHI) SN+ COMMAND
C     UPDATED         --FEBRUARY  1994. ROOTAC ARGUMENT
C     UPDATED         --JUNE      1994. ADD OPTIMIZATION COMMAND
C     UPDATED         --FEBRUARY  1995. ADD ARGUMENTS TO OPTIMIZATION
C     UPDATED         --SEPTEMBER 1997. BERNOULI NUMBERS
C     UPDATED         --SEPTEMBER 1997. EULER NUMBERS
C     UPDATED         --JULY      2002. ARGUMENT LIST FOR DPSTAC
C     UPDATED         --APRIL     2003. ARGUMENT LIST FOR DPSTAC,
C                                       ADDITIONAL SCRATCH ARRAYS
C     UPDATED         --JANUARY   2004. NUMERICAL DERIVATIVE
C     UPDATED         --JANUARY   2004. CHARACTER CODE
C     UPDATED         --JANUARY   2004. ALPHABETIC CHARACTER CODE
C     UPDATED         --JANUARY   2004. GROUP LABEL
C     UPDATED         --JANUARY   2004. ROW LABEL
C     UPDATED         --NOVEMBER  2007. DOUBLE PRECISION ARRAYS FOR
C                                       CMPSTA
C     UPDATED         --AUGUST    2008. MERGE
C     UPDATED         --NOVEMBER  2008. STRING LENGTH
C     UPDATED         --NOVEMBER  2008. STRING INDEX
C     UPDATED         --NOVEMBER  2008. STRING MERGE
C     UPDATED         --NOVEMBER  2008. STRING REPLACE
C     UPDATED         --NOVEMBER  2008. STRING EDIT
C     UPDATED         --NOVEMBER  2008. SUBSTRING
C     UPDATED         --NOVEMBER  2008. ICHAR
C     UPDATED         --NOVEMBER  2008. CHARACTER
C     UPDATED         --NOVEMBER  2008. UPPER CASE
C     UPDATED         --NOVEMBER  2008. LOWER CASE
C     UPDATED         --SEPTEMBER 2009. CALL LIST TO CKRAND, DPRAND
C     UPDATED         --JUNE      2010. CALL LIST TO DPSTAC
C     UPDATED         --OCTOBER   2010. STRING WORD
C     UPDATED         --OCTOBER   2010. NUMBER OF WORDS
C     UPDATED         --OCTOBER   2011. GROUP LABEL TO STRINGS
C     UPDATED         --OCTOBER   2011. CHARACTER CODE STRINGS
C     UPDATED         --AUGUST    2012. SEVERAL ENHANCEMENTS TO THE
C                                       LET ROWLABEL ... COMMAND
C     UPDATED         --JUNE      2013. CALL LIST TO DPINTE
C     UPDATED         --AUGUST    2014. LET PLOT .... =
C     UPDATED         --MARCH     2015. CHECK NAMES
C     UPDATED         --MARCH     2015. CHECK EQUAL LENGTH
C     UPDATED         --MARCH     2015. STRING REMOVE SPACES
C     UPDATED         --MARCH     2015. CHECK TYPE
C     UPDATED         --MARCH     2015. DIGITS TO STRING
C     UPDATED         --JUNE      2015. IFORSW TO ARGUMENT LIST
C     UPDATED         --JUNE      2015. LET ... = NUMBER TO STRING
C     UPDATED         --SEPTEMBER 2015. CALL LIST TO SEVERAL ROUTINES
C                                       TO SUPPORT FUNCTION BLOCKS
C     UPDATED         --DECEMBER  2015. LET ... = EXECUTE ...
C     UPDATED         --DECEMBER  2015. LET ... = INQUIRE ...
C     UPDATED         --FEBRUARY  2016. NAME CONFLICTS FOR SEQUENCE
C     UPDATED         --JANUARY   2017. BLANK STRING
C     UPDATED         --FEBRUARY  2018. STRING COMBINE
C     UPDATED         --MARCH     2018. STRING COMPARE AND REPLACE
C     UPDATED         --JULY      2018. REFERENCE CHARACTER CODE
C     UPDATED         --SEPTEMBER 2018. STRING HAMMING DISTANCE
C     UPDATED         --SEPTEMBER 2018. STRING SPLIT
C     UPDATED         --SEPTEMBER 2018. STRING REMOVE PUNCTUATION
C     UPDATED         --SEPTEMBER 2018. STRING REMOVE WHITESPACE
C     UPDATED         --SEPTEMBER 2018. STRING FIND AS ALIAS FOR
C                                              STRING INDEX
C     UPDATED         --SEPTEMBER 2018. STRING RIGHT INDEX
C                                       (OR: STRING RIGHT FIND)
C     UPDATED         --OCTOBER   2018. STRING DELETE
C     UPDATED         --JANUARY   2019. STRING CONTAIN
C     UPDATED         --JANUARY   2019. STRING JUSTIFY
C     UPDATED         --FEBRUARY  2019. SWAP CASE
C     UPDATED         --FEBRUARY  2019. STRING SUBSET COUNT
C     UPDATED         --FEBRUARY  2019. STRING EXPAND WHITESPACE
C     UPDATED         --JUNE      2019. CODECH, CODEC2, CODEC3,
C                                       DPRK,
C                                       DPDERV, DPGENS, DPWEAR:
C                                       MOVE DIMENSIONING OF SCRATCH
C                                       ARRAYS TO DPLET
C     UPDATED         --JULY      2019. ADD ISUBRO TO CALL LIST FOR
C                                       DPGENS, DPWEAR
C     UPDATED         --SEPTEMBER 2019. STRING VARIABLE
C     UPDATED         --NOVEMBER  2020. STRING VARIABLE
C     UPDATED         --AUGUST    2021. CALL LIST TO CKSTAT AND DPSTAC
C     UPDATED         --AUGUST    2021. STRING REPEAT
C     UPDATED         --MARCH     2022. NORMAL ORDER STATISTIC MEAN
C     UPDATED         --MARCH     2022. NORMAL ORDER STATISTIC SD
C     UPDATED         --MARCH     2022. EXPONENTIAL ORDER STATISTIC
C                                       MEDIAN
C     UPDATED         --MARCH     2022. EXPONENTIAL ORDER STATISTIC MEAN
C     UPDATED         --MARCH     2022. EXPONENTIAL ORDER STATISTIC SD
C     UPDATED         --MARCH     2022. UNIFORM ORDER STATISTIC MEAN
C     UPDATED         --MARCH     2022. UNIFORM ORDER STATISTIC SD
C     UPDATED         --MARCH     2022. LOGISTIC ORDER STATISTIC
C                                       MEDIAN
C     UPDATED         --AUGUST    2023. CALL LIST TO CKSTAT, CKMATH
C     UPDATED         --AUGUST    2023. CALL LIST TO DPSTAC, DPMATC,
C                                                    DPMAT2
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IANGLU
      CHARACTER*4 IFTEXP
      CHARACTER*4 IFTORD
      CHARACTER*4 IFORSW
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGCO
      CHARACTER*4 IBUGEV
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASLE
      CHARACTER*4 ITYPEL
      CHARACTER*4 IFOUNZ(30)
      CHARACTER*4 ITYPE(30)
      CHARACTER*4 IHOL(30)
      CHARACTER*4 IHOL2(30)
      CHARACTER*4 IERRO1(30)
      CHARACTER*4 ITYPEH
      CHARACTER*4 IW21HO
      CHARACTER*4 IW22HO
      CHARACTER*4 IA
      CHARACTER*4 IPARN
      CHARACTER*4 IPARN2
      CHARACTER*4 IFOUNR
      CHARACTER*4 IFOUN7
      CHARACTER*4 IFOUN8
      CHARACTER*4 ICASL7
      CHARACTER*4 ICASS7
      CHARACTER*4 ISTARA
      CHARACTER*4 ICASL8
      CHARACTER*4 ICASRA
      CHARACTER*4 ITYW1L
      CHARACTER*4 ICAT1L
      CHARACTER*4 INLI1L
      CHARACTER*4 ITYW2L
      CHARACTER*4 ITYW1R
      CHARACTER*4 ICAT1R
      CHARACTER*4 INLI1R
      CHARACTER*4 ITYW2R
C
      CHARACTER*4 IHAR14
      CHARACTER*4 IHAR15
      CHARACTER*4 ICASEZ
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IMSUBC
      CHARACTER*4 IOPTME
      CHARACTER*4 IOPTHE
      CHARACTER*4 ICASAR
      CHARACTER*4 IWRITE
      CHARACTER*4 IWRIT2
C
C---------------------------------------------------------------------
C
      DIMENSION TEMP(*)
      DIMENSION TEMP2(*)
      DIMENSION XTEMP1(*)
      DIMENSION XTEMP2(*)
C
      DIMENSION IBEGIN(30)
      DIMENSION IEND(30)
      DIMENSION INT1(30)
      DIMENSION FLOAT1(30)
C
CCCCC DIMENSION ITYPEH(225)
CCCCC DIMENSION IW21HO(225)
CCCCC DIMENSION IW22HO(225)
CCCCC DIMENSION W2HOLD(225)
      DIMENSION ITYPEH(1000)
      DIMENSION IW21HO(1000)
      DIMENSION IW22HO(1000)
      DIMENSION W2HOLD(1000)
C
C     NOTE--THE DIMENSION OF IA SHOULD BE THE SAME AS
C           THE DIMENSION OF IB IN SUBROUTINE COMPIM
C           (THE DIMENSION OF IB IS 1000 (JULY 1986))
C     NOTE--IF MAKE DIMENSION ADJUSTMENTS HERE IN DPLET,
C           THEN ALSO MAKE DIMENSION ADJUSTMENTS IN
C           DPLETF, DPFIT, DPPREF, DPPLOT,
C           COMPIM, AND COMPID.
C
CCCCC DIMENSION IA(225)
      DIMENSION IA(1000)
      DIMENSION PARAM(100)
      DIMENSION IPARN(100)
      DIMENSION IPARN2(100)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
C
      INCLUDE 'DPCOZI.INC'
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZD.INC'
C
      DIMENSION XTEMP3(MAXOBV)
      DIMENSION XTEMP4(MAXOBV)
      DIMENSION XTEMP5(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      INTEGER ITEMP1(MAXOBV)
      INTEGER ITEMP2(MAXOBV)
      INTEGER ITEMP3(MAXOBV)
      INTEGER ITEMP4(MAXOBV)
      INTEGER ITEMP5(MAXOBV)
      INTEGER ITEMP6(MAXOBV)
      EQUIVALENCE (IGARBG(IIGAR1),ITEMP1(1))
      EQUIVALENCE (IGARBG(IIGAR2),ITEMP2(1))
      EQUIVALENCE (IGARBG(IIGAR3),ITEMP3(1))
      EQUIVALENCE (IGARBG(IIGAR4),ITEMP4(1))
      EQUIVALENCE (IGARBG(IIGAR5),ITEMP5(1))
      EQUIVALENCE (IGARBG(IIGAR6),ITEMP6(1))
      EQUIVALENCE (GARBAG(IGARB1),XTEMP3(1))
      EQUIVALENCE (GARBAG(IGARB2),TEMP3(1))
      EQUIVALENCE (GARBAG(IGARB3),XTEMP4(1))
      EQUIVALENCE (GARBAG(IGARB4),XTEMP5(1))
C
      DOUBLE PRECISION DTEMP1(MAXOBV)
      DOUBLE PRECISION DTEMP2(MAXOBV)
      DOUBLE PRECISION DTEMP3(MAXOBV)
      EQUIVALENCE (DGARBG(IDGAR1),DTEMP1(1))
      EQUIVALENCE (DGARBG(IDGAR2),DTEMP2(1))
      EQUIVALENCE (DGARBG(IDGAR3),DTEMP3(1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLE'
      ISUBN2='T   '
      IERROR='NO'
      ICASLE='UNKN'
      IMSUBC='UNKN'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C     ***** THE FOLLOWING 6 LINES INSERTED AUGUST 1983 *****
CCCCC DO40I=1,225
      DO40I=1,1000
      ITYPEH(I)='    '
      IW21HO(I)='    '
      IW22HO(I)='    '
      W2HOLD(I)=0.0
   40 CONTINUE
C
C               **************************
C               **  TREAT THE LET CASE  **
C               **************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PLET')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLET--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IANGLU,IFTEXP,ISEED,MAXNXT
   52   FORMAT('IANGLU,IFTEXP,ISEED,MAXNXT = ',2(A4,2X),2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGA2,IBUGA3,IBUGCO,IBUGEV,IBUGQ
   53   FORMAT('IBUGA2,IBUGA3,IBUGCO,IBUGEV,IBUGQ = ',4(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************
C               **  STEP 1--                   **
C               **  CHECK THE INPUT ARGUMENTS  **
C               *********************************
C
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'=   ')GOTO1019
      IF(NUMARG.GE.3.AND.IHARG(3).EQ.'=   ')GOTO1019
CCCCC JULY 1993.  FOLLOWING LINE FOR SINGULAR VALUE DECOMPOSITION
      IF(NUMARG.GE.4.AND.IHARG(4).EQ.'=   ')GOTO1019
CCCCC SEPTEMBER 2008.  FOLLOWING LINES FOR MERGE COMMAND
      DO1003I=1,NUMARG
        IF(IHARG(I).EQ.'=   ')GOTO1019
 1003 CONTINUE
C
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1011)
 1011 FORMAT('***** ERROR IN DPLET--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1012)
 1012 FORMAT('      IMPROPER FORM FOR THE    LET   COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1013)
 1013 FORMAT('      NO EQUAL SIGN FOUND AFTER THE ',
     1       'VARIABLE/PARAMETER NAME.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1014)
 1014 FORMAT('      THE ENTERED COMMAND LINE IS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,1015)(IANS(I),I=1,MIN(120,IWIDTH))
 1015   FORMAT('      ',120A1)
        CALL DPWRST('XXX','BUG ')
      ELSE
        WRITE(ICOUT,1016)
 1016   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO9000
 1019 CONTINUE
C
CCCCC IF(NUMARG.GE.3)GOTO1029
      IF(NUMARG.GE.3.AND.IHARG(2).EQ.'=   ')GOTO1029
      IF(NUMARG.GE.4.AND.IHARG(3).EQ.'=   ')GOTO1029
CCCCC JULY 1993.  FOLLOWING LINE FOR SINGULAR VALUE DECOMPOSITION
      IF(NUMARG.GE.5.AND.IHARG(4).EQ.'=   ')GOTO1029
      IF(NUMARG.GE.6.AND.IHARG(NUMARG).NE.'=   ')GOTO1029
C
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1011)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1022)
 1022 FORMAT('      IMPROPER FORM FOR THE    LET   ',
     1'COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1023)
 1023 FORMAT('      NOTHING FOUND TO THE RIGHT OF THE EQUAL SIGN')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1014)
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,1015)(IANS(I),I=1,MIN(120,IWIDTH))
        CALL DPWRST('XXX','BUG ')
      ELSE
        WRITE(ICOUT,1016)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO9000
 1029 CONTINUE
C
C               **************************************
C               **  STEP 2--                        **
C               **  TREAT THE VARIOUS LET SUBCASES  **
C               **************************************
C
C               *********************************************
C               **  STEP 2.0--                             **
C               **  TREAT THE EXPERIMENT DESIGN            **
C               **  GENERATION SUBCASE                     **
C               *********************************************
C
CCCCC IF(IHARG(NUMARG).EQ.'DESI'.AND.IHARG2(NUMARG).EQ.'GN')GOTO1010
CCCCC GOTO1090
C
C1010 CONTINUE
CCCCC ICASLE='DESI'
CCCCC CALL DPDESI(IBUGA3,IBUGQ,IFOUND,IERROR)
CCCCC GOTO9000
C
C1090 CONTINUE
C
C               *********************************************
C               **  STEP 2.11--                            **
C               **  TREAT THE SEQUENCE GENERATION SUBCASE  **
C               *********************************************
C
      ISTEPN='2.11'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     2016/02: CHECK FOR NAME CONFLICTS
C     2021/05: MODIFY TO MINIMIZE POSSIBILITY OF NON-CONFLICTS
C              APPEARING TO BE CONFLICTS
C
      IF(NUMARG.GE.4.AND.IHARG(3).EQ.'SEQU')THEN
        IF(IHARG2(3).EQ.'TIAL')GOTO1190
        IF(IHARG2(3)(1:1).EQ.'T')GOTO1190
        IF(IHARG(4).EQ.'DIFF')GOTO1190
        IF(IHARG(4).EQ.'PROD')GOTO1190
        IF(IHARG(4).EQ.'SUM ')GOTO1190
        IF(IHARG(4).EQ.'MEAN')GOTO1190
        IF(IHARG(4).EQ.'AVER')GOTO1190
        IF(IHARG(4).EQ.'MIN ')GOTO1190
        IF(IHARG(4).EQ.'MAX ')GOTO1190
        IF(IHARG(4).EQ.'MINI' .AND. IHARG2(4).EQ.'MUM ')GOTO1190
        IF(IHARG(4).EQ.'MAXI' .AND. IHARG2(4).EQ.'MUM ')GOTO1190
      ENDIF
      IF(IHARG(3).EQ.'SEQU'.AND.IHARG2(3).EQ.'ENCE')GOTO1130
CCCCC THE FOLLOWING LINE WAS ADDED           (DECEMBER 1988)
CCCCC SO NEED NOT SPELL OUT    SEQUENCE     FULLY. (DECEMBER 1988)
      IF(IHARG(3).EQ.'SEQU')GOTO1130
CCCCC THE BRANCH POINT OF THE FOLLOWING LINE (DECEMBER)
CCCCC WAS CHANGED FROM 1130 TO 1110 (DECEMBER 1988)
CCCCC TO ELIMINATE THE CONFLICT OF FUNCTION EVALUATION VERSUS (DECEMBER 1988)
CCCCC SEQUENCE GENERATION.  FOR EXAMPLE, (DECEMBER 1988)
CCCCC LET X = 1 +1 +5 YIELDING A NUMBER (1+1+5=7) (DECEMBER 1988)
CCCCC OR YIELDING A SEQUENCE 1, 2, 3, 4, 5 (DECEMBER 1988)
      IF(NUMARG.GE.5.AND.IHARG(2).EQ.'='.AND.
     1IARGT(3).EQ.'NUMB'.AND.IARGT(4).EQ.'NUMB'.AND.
     1IARGT(5).EQ.'NUMB')GOTO1110
      GOTO1190
C
 1110 CONTINUE
CCCCC WRITE(ICOUT,999)
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1111)
C1111 FORMAT('***** CAUTION FROM SUBROUTINE DPLET--')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1112)
C1112 FORMAT('      DUE TO CONFLICTS WITH OTHER FORMS OF THE')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1113)
C1113 FORMAT('      LET COMMAND, THE 3-ARGUMENT SHORT-CUT')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1114)
C1114 FORMAT('      SYNTAX THAT YOU USED TO GENERATE A SEQUENCE')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1115)
C1115 FORMAT('      IS NOW (JANUARY 1989) ILLEGAL.')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1116)
C1116 FORMAT('      THE OPERATION WILL BE CARRIED OUT,')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1117)
C1117 FORMAT('      BUT IN THE FUTURE, PLEASE USE THE')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1118)
C1118 FORMAT('      FULL SYNTAX WHICH CONTAINS THE WORD')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1119)
C1119 FORMAT('      SEQUENCE   EXPLICITLY.')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1120)
C1120 FORMAT('      FOR EXAMPLE, REPLACE  LET X = 1 1 10')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,1121)
C1121 FORMAT('                   BY       LET X = SEQUENCE 1 1 10')
CCCCC CALL DPWRST('XXX','BUG ')
C
      IHAR14=IHARG(4)
      IHAR15=IHARG(5)
      IF((IHAR14(1:1).EQ.'+'.OR.IHAR14(1:1).EQ.'-').AND.
     1(IHAR15(1:1).EQ.'+'.OR.IHAR15(1:1).EQ.'-'))GOTO1190
      GOTO1130
C
 1130 CONTINUE
      ICASLE='SEQU'
      CALL DPSEQU(IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IFOUND.EQ.'YES')GOTO9000
      GOTO9000
C
 1190 CONTINUE
C
C               ********************************************
C               **  STEP 2.12--                           **
C               **  TREAT THE PATTERN GENERATION SUBCASE  **
C               ********************************************
C
      ISTEPN='2.12'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF((IHARG(3).EQ.'PATT'.AND.IHARG2(3).EQ.'ERN ') .OR.
     1   (IHARG(3).EQ.'DATA'.AND.IHARG2(3).EQ.'    '))THEN
        IF(IHARG(1).EQ.'PLOT' .AND.
     1    (IHARG(2).EQ.'CHAR' .OR. IHARG(2).EQ.'LINE' .OR.
     1    IHARG(2).EQ.'SPIK' .OR. IHARG(2).EQ.'REGI' .OR.
     1    IHARG(2).EQ.'BAR'))GOTO1290
        ICASLE='PATT'
        CALL DPPAT(IBUGA3,ISUBRO,IBUGQ,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
        IF(IFOUND.EQ.'YES')GOTO9000
      ENDIF
C
 1290 CONTINUE
C
C               **************************************************
C               **  STEP 2.13--                                 **
C               **  TREAT THE RANDOM NUMBER GENERATION SUBCASE  **
C               **  (AND THE RANDOM PERMUTATION SUBCASE)        **
C               **  (AND THE BOOTSTRAP INDEX SUBCASE == THE     **
C               **  DISCRETE UNIFORM RANDOM NUMBER SUBCASE)     **
C               **************************************************
C
      ISTEPN='2.13'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL CKRAND(ICASRA,ILOCNU,NUMSHA,
     1            SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1            SHAPE5,SHAPE6,SHAPE7,
     1            IBUGA3,ISUBRO,IFOUNR,IERROR)
      IF(IFOUNR.EQ.'YES')THEN
        ICASLE='RAND'
        CALL DPRAND(ICASRA,ISEED,ILOCNU,NUMSHA,
     1              SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1              SHAPE5,SHAPE6,SHAPE7,
     1              IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
        GOTO9000
      ENDIF
C
C               *******************************
C               **  STEP 2.14--              **
C               **  TREAT THE ROOTS SUBCASE  **
C               *******************************
C
      ISTEPN='2.14'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IHARG(3).EQ.'ROOT'.AND.IHARG2(3).EQ.'S   ')GOTO1400
      IF(IHARG(3).EQ.'ROOT'.AND.IHARG2(3).EQ.'    ')GOTO1400
      IF(IHARG(3).EQ.'ZERO'.AND.IHARG2(3).EQ.'S   ')GOTO1400
      IF(IHARG(3).EQ.'ZERO'.AND.IHARG2(3).EQ.'    ')GOTO1400
      IF(IHARG(3).EQ.'SOLV'.AND.IHARG2(3).EQ.'E   ')GOTO1400
      GOTO1490
C
 1400 CONTINUE
      IF(IHARG(4).EQ.'MEAN' .AND. IHARG(5).EQ.'SQUA')GOTO1490
      ICASLE='ROOT'
      IFOUND='YES'
      CALL DPROOT(ITYPEH,IW21HO,IW22HO,W2HOLD,NWHOLD,
     1            PARAM,IPARN,IPARN2,
     1            ROOTAC,IFTEXP,IFTORD,IFORSW,IANGLU,
     1            ISUBRO,IBUGA3,IBUGCO,IBUGEV,IBUGQ,IERROR)
      GOTO9000
C
 1490 CONTINUE
C
C               ************************************
C               **  STEP 2.15--                   **
C               **  TREAT THE DERIVATIVE SUBCASE  **
C               ************************************
C
      ISTEPN='2.15'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IHARG(3).EQ.'DERI'.AND.IHARG2(3).EQ.'VATI')GOTO1500
      GOTO1590
C
 1500 CONTINUE
      ICASLE='DERI'
      IFOUND='YES'
      ITYPEL='V'
      CALL DPDERV(ITYPEH,IW21HO,IW22HO,W2HOLD,NWHOLD,
     1            IA,PARAM,IPARN,IPARN2,
     1            IFOUNZ,IBEGIN,IEND,ITYPE,IHOL,IHOL2,
     1            INT1,FLOAT1,IERRO1,
     1            NUMCL,NUMPL,NUMAOL,ITYW1L,ICAT1L,INLI1L,ITYW2L,
     1            NUMCR,NUMPR,NUMAOR,ITYW1R,ICAT1R,INLI1R,ITYW2R,
     1            IANGLU,TEMP3,
     1            IBUGA3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,IFOUND,IERROR)
      GOTO9000
C
 1590 CONTINUE
C
C               **********************************
C               **  STEP 2.16--                 **
C               **  TREAT THE INTEGRAL SUBCASE  **
C               **********************************
C
      ISTEPN='2.16'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IHARG(3).EQ.'INTE'.AND.IHARG2(3).EQ.'GRAL')THEN
        DO1620I=1,NUMARG
          IF(IHARG(I).EQ.'WRT ')THEN
            ICASLE='INTE'
            IFOUND='YES'
            ITYPEL='V'
            CALL DPINTE(ITYPEH,IW21HO,IW22HO,W2HOLD,NWHOLD,
     1                  PARAM,IPARN,IPARN2,TEMP,ITEMP1,
     1                  IANGLU,IFTEXP,IFTORD,IFORSW,
     1                  IBUGA3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,IERROR)
             GOTO9000
          ENDIF
 1620   CONTINUE
      ENDIF
C
C               **********************************************
C               **  STEP 2.16B--                            **
C               **  TREAT THE NUMERICAL DERIVATIVE SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'NUME'.AND.IHARG(4).EQ.'DERI')THEN
        ICASLE='NDER'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPNDER(ITYPEH,IW21HO,IW22HO,W2HOLD,NWHOLD,
     1              IA,PARAM,IPARN,IPARN2,
     1              IANGLU,IFTEXP,IFTORD,IFORSW,
     1              IBUGA3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,IERROR)
        GOTO9000
      ENDIF
C
C
C               *************************************************
C               **  STEP 2.17--                                **
C               **  TREAT THE RUNGE-KUTTA (DIFF. EQ.) SUBCASE  **
C               *************************************************
C
      ISTEPN='2.17'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.4.AND.
     1IHARG(3).EQ.'RUNG'.AND.IHARG(4).EQ.'KUTT')GOTO1700
      IF(NUMARG.GE.5.AND.
     1IHARG(4).EQ.'RUNG'.AND.IHARG(5).EQ.'KUTT')GOTO1700
      GOTO1790
C
 1700 CONTINUE
      ICASLE='RUNG'
      IFOUND='YES'
      ITYPEL='V'
      CALL DPRK(ITYPEH,IW21HO,IW22HO,W2HOLD,NWHOLD,
     1          PARAM,IPARN,IPARN2,IANGLU,
     1          TEMP,TEMP2,XTEMP1,
     1          IBUGA3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,IERROR)
      GOTO9000
C
 1790 CONTINUE
C
CCCCC FOLLOWING SECTION ADDED JUNE 1994.
C               **************************************
C               **  STEP 2.18--                     **
C               **  TREAT THE OPTIMIZATION SUBCASE  **
C               **************************************
C
      ISTEPN='2.18'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IHARG(3).EQ.'OPTI')THEN
        ICASLE='OPTI'
        IFOUND='YES'
        CALL DPOPT(ITYPEH,IW21HO,IW22HO,W2HOLD,NWHOLD,
     1             IA,PARAM,IPARN,IPARN2,
     1             OPTACC,IOPTME,IOPTHE,
     1             IFTEXP,IFTORD,IFORSW,IANGLU,
     1             ISUBRO,IBUGA3,IBUGCO,IBUGEV,IBUGQ,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19A--                            **
C               **  TREAT THE EXECUTE              SUBCASE  **
C               **********************************************
C
      ISTEPN='219A'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IHARG(2).EQ.'=   '.AND.IHARG(3).EQ.'EXEC')THEN
        ICASLE='EXEC'
        IFOUND='YES'
        ITYPEL='V'
        NVAL=0
        CALL DPEXFI(XTEMP1,NVAL,IBUGA3,ISUBRO,IFOUND,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19B--                            **
C               **  TREAT THE INQUIRE              SUBCASE  **
C               **********************************************
C
      ISTEPN='219B'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IHARG(2).EQ.'=   '.AND.IHARG(3).EQ.'INQU')THEN
        ICASLE='INFI'
        IFOUND='YES'
        ITYPEL='P'
        NVAL=0
        CALL DPINQU(IBUGA3,ISUBRO,IFOUND,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19B--                            **
C               **  TREAT THE CLOSE                SUBCASE  **
C               **********************************************
C
      ISTEPN='219B'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IHARG(2).EQ.'=   '.AND.IHARG(3).EQ.'CLOS')THEN
        ICASLE='CLOS'
        IFOUND='YES'
        ITYPEL='P'
        NVAL=0
        CALL DPCLOS(IBUGA3,ISUBRO,IFOUND,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19B-                             **
C               **  TREAT THE LET PLOT ... =  CASE          **
C               **********************************************
C
      ISTEPN='219B'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IHARG(1).EQ.'PLOT' .AND.
     1  (IHARG(2).EQ.'CHAR' .OR. IHARG(2).EQ.'LINE' .OR.
     1   IHARG(2).EQ.'SPIK' .OR. IHARG(2).EQ.'REGI' .OR.
     1   IHARG(2).EQ.'BAR'))THEN
        ICASLE='PCON'
        ITYPEL='V'
        CALL DPSEPC(ITEMP1,IFOUND,ISUBRO,IBUGA3,IERROR)
        IF(IFOUND.EQ.'YES')GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19A-                             **
C               **  TREAT THE CHARACTER CODE STRING SUBCASE **
C               **********************************************
C
      IF(IHARG(3).EQ.'CHAR'.AND.IHARG(4).EQ.'CODE'.AND.
     1   IHARG(5).EQ.'STRI')THEN
        ICASLE='SCOD'
        IFOUND='YES'
        ITYPEL='V'
        CALL CODEST(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19--                             **
C               **  TREAT THE CHARACTER CODE       SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'CHAR'.AND.IHARG(4).EQ.'CODE')THEN
        ICASLE='CCOD'
        IFOUND='YES'
        ITYPEL='V'
        IWRIT2='ON  '
        CALL CODECH(XTEMP3,IWRIT2,IBUGA3,ISUBRO,IERROR)
        GOTO9000
      ENDIF
C
C               **************************************************
C               **  STEP 2.19B-                                 **
C               **  TREAT THE ALPHABETIC CHARACTER CODE SUBCASE **
C               **************************************************
C
      IF(IHARG(3).EQ.'ALPH'.AND.IHARG(4).EQ.'CHAR'.AND.
     1   IHARG(5).EQ.'CODE')THEN
        ICASLE='CCO2'
        IFOUND='YES'
        ITYPEL='V'
        IWRIT2='ON'
        CALL CODEC2(TEMP3,XTEMP3,ITEMP1,IWRIT2,IBUGA3,ISUBRO,IERROR)
        GOTO9000
      ENDIF
C
C               **************************************************
C               **  STEP 2.19C-                                 **
C               **  TREAT THE REFERENCE CHARACTER CODE SUBCASE  **
C               **************************************************
C
      IF(IHARG(3).EQ.'REFE'.AND.IHARG(4).EQ.'CHAR'.AND.
     1   IHARG(5).EQ.'CODE')THEN
        ICASLE='CCO3'
        IFOUND='YES'
        ITYPEL='V'
        IWRIT2='ON'
        CALL CODEC3(XTEMP3,IWRIT2,IBUGA3,ISUBRO,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19C--                            **
C               **  TREAT THE ROW   LABEL          SUBCASE  **
C               **********************************************
C
      IF(NUMARG.GE.3.AND.
     1  IHARG(1).EQ.'ROWL'.AND.IHARG2(1).EQ.'ABEL'.AND.
     1  IHARG(2).EQ.'=   ')THEN
        IF(IHARG(3).EQ.'STRI' .AND. IHARG(4).EQ.'TO  ' .AND.
     1     IHARG(5).EQ.'ROWL')THEN
          ICASLE='SRLA'
          IFOUND='YES'
          ITYPEL='V'
          IWRITE='ON  '
          IINDX=5
          CALL DPRWLA(IA,IPARN,IPARN2,IWRITE,IINDX,
     1                IBUGA3,ISUBRO,IERROR)
          GOTO9000
        ELSEIF(IHARG(3).EQ.'STRI' .AND. IHARG(4).EQ.'TO  ' .AND.
     1     IHARG(5).EQ.'ROW ' .AND. IHARG(6).EQ.'LABE')THEN
          ICASLE='SRLA'
          IFOUND='YES'
          ITYPEL='V'
          IWRITE='ON  '
          IINDX=6
          CALL DPRWLA(IA,IPARN,IPARN2,IWRITE,IINDX,
     1                IBUGA3,ISUBRO,IERROR)
          GOTO9000
        ELSEIF(IHARG(3).EQ.'SHIF' .AND. IHARG(4).EQ.'LEFT')THEN
          CALL DPRWSH(IBUGA3,ISUBRO,IERROR)
          IFOUND='YES'
          ICASLE='RLAS'
          ITYPEL='V'
          GOTO9000
        ELSEIF(IHARG(3).EQ.'SHIF' .AND. IHARG(4).EQ.'RIGH')THEN
          CALL DPRWSH(IBUGA3,ISUBRO,IERROR)
          IFOUND='YES'
          ICASLE='RLAS'
          ITYPEL='V'
          GOTO9000
        ELSEIF(NUMARG.EQ.3 .AND. IHARG(3).EQ.'DELE')THEN
          DO1895I=1,MAXOBV
            IROWLB(I)=' '
 1895     CONTINUE
          IFOUND='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1897)
 1897     FORMAT('THE ROW LABELS HAVE BEEN CLEARED.')
          CALL DPWRST('XXX','BUG ')
          GOTO9000
        ELSE
          ICASLE='RLAB'
          IFOUND='YES'
          ITYPEL='V'
          IWRIT2='ON'
          CALL DPROLA(IWRIT2,IBUGA3,ISUBRO,IERROR)
          GOTO9000
        ENDIF
      ELSEIF(NUMARG.GE.4.AND.
     1  IHARG(1).EQ.'ROWL'.AND.IHARG2(1).EQ.'ABEL'.AND.
     1  IHARG(3).EQ.'=   ')THEN
          CALL DPRWL2(IBUGA3,ISUBRO,IERROR)
          IFOUND='YES'
          ICASLE='RLA2'
          ITYPEL='V'
          GOTO9000
      ENDIF
C
C               **************************************************
C               **  STEP 2.19S-                                 **
C               **  TREAT THE GROUP LABEL TO STRINGS   SUBCASE  **
C               **************************************************
C
      IF(IHARG(3).EQ.'GROU'.AND.IHARG(4).EQ.'LABE')THEN
        IF(IHARG(5).EQ.'TO  '.AND.IHARG(6).EQ.'STRI')THEN
          ICASLE='STGL'
          IFOUND='YES'
          ITYPEL='F'
          CALL DPSTGL(ISUBRO,IBUGA3,IERROR)
          GOTO9000
        ENDIF
      ENDIF
C
C               **********************************************
C               **  STEP 2.19D--                            **
C               **  TREAT THE GROUP LABEL          SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'GROU'.AND.IHARG(4).EQ.'LABE')THEN
        ICASLE='GLAB'
        IFOUND='YES'
        ITYPEL='V'
        IWRITE='ON  '
        CALL DPGROL(IWRITE,IBUGA3,ISUBRO,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19E-                             **
C               **  TREAT THE STRING LENGTH        SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'STRI'.AND.IHARG(4).EQ.'LENG')THEN
        ICASLE='STLN'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPSTLN(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19F-                             **
C               **  TREAT THE STRING INDEX         SUBCASE  **
C               **********************************************
C
C     2018/09: STRING FIND AS ALIAS
C     2018/09: STRING RIGHT INDEX SEARCHES STRING FROM RIGHT TO LEFT
C
      IF(IHARG(4).EQ.'STRI' .AND.
     1  (IHARG(5).EQ.'INDE' .OR. IHARG(5).EQ.'FIND'))THEN
        ICASLE='STIN'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPSTIN(ICASLE,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ELSEIF(IHARG(4).EQ.'STRI' .AND. IHARG(5).EQ.'RIGH' .AND.
     1  (IHARG(6).EQ.'INDE' .OR. IHARG(6).EQ.'FIND'))THEN
        ICASLE='STIR'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPSTIN(ICASLE,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19G-                             **
C               **  TREAT THE STRING SUBSTRING     SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'SUBS'.AND.IHARG2(3).EQ.'TRIN')THEN
        ICASLE='STSB'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTSB(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19H-                             **
C               **  TREAT THE STRING MERGE         SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'STRI'.AND.IHARG(4).EQ.'MERG')THEN
        ICASLE='STMR'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTMR(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19I-                             **
C               **  TREAT THE STRING REPLACE       SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'STRI'.AND.IHARG(4).EQ.'REPL')THEN
        ICASLE='STRP'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTRP(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19J-                             **
C               **  TREAT THE STRING EDIT          SUBCASE  **
C               **********************************************
C
C     2015/02: ADD A "GLOBAL" VARIANT
C
      IF(IHARG(3).EQ.'STRI'.AND.IHARG(4).EQ.'EDIT')THEN
        ICASLE='STED'
        IFOUND='YES'
        ITYPEL='F'
        IFLAGG=0
        CALL DPSTED(IFLAGG,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ELSEIF(IHARG(3).EQ.'STRI'.AND.IHARG(4).EQ.'GLOB'.AND.
     1       IHARG(5).EQ.'EDIT')THEN
        ICASLE='STED'
        IFOUND='YES'
        ITYPEL='F'
        IFLAGG=1
        CALL DPSTED(IFLAGG,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19K-                             **
C               **  TREAT THE STRING CONCATENATE   SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'STRI'.AND.IHARG(4).EQ.'CONC')THEN
        ICASLE='STCN'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTCN(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19L-                             **
C               **  TREAT THE CHARACTER            SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'CHAR'.AND.IHARG2(3).EQ.'ACTE')THEN
        ICASLE='STCH'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTCH(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19M-                             **
C               **  TREAT THE ICHAR                SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'ICHA')THEN
        ICASLE='ICHA'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPICHA(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19N-                             **
C               **  TREAT THE UPPER CASE           SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'UPPE'.AND.IHARG(4).EQ.'CASE')THEN
        ICASLE='STUC'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTUC(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19O-                             **
C               **  TREAT THE LOWER CASE           SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'LOWE'.AND.IHARG(4).EQ.'CASE')THEN
        ICASLE='STLC'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTLC(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19P-                             **
C               **  TREAT THE STRING WORD          SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'STRI'.AND.IHARG(4).EQ.'WORD')THEN
        ICASLE='STWD'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTWD(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19Q-                             **
C               **  TREAT THE NUMBER OF WORDS      SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'NUMB'.AND.IHARG(4).EQ.'OF  '.AND.
     1   IHARG(5).EQ.'WORD')THEN
        ICASLE='STNW'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPSTNW(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19R-                             **
C               **  TREAT THE STRING COMPARISON    SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'STRI'.AND.IHARG(4).EQ.'COMP')THEN
        IF(IHARG(5).NE.'AND '.OR.IHARG(6).NE.'REPL')THEN
          ICASLE='STCM'
          IFOUND='YES'
          ITYPEL='P'
          CALL DPSTCM(ISUBRO,IBUGA3,IERROR)
          GOTO9000
        ENDIF
      ENDIF
C
C               **************************************************
C               **  STEP 2.19S-                                 **
C               **  TREAT THE STRING HAMMING DISTANCE  SUBCASE  **
C               **************************************************
C
      IF(IHARG(3).EQ.'STRI'.AND.IHARG(4).EQ.'HAMM'.AND.
     1   IHARG(5).EQ.'DIST')THEN
        ICASLE='STHD'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPSTHD(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19S-                             **
C               **  TREAT THE CONFOUND             SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'=   '.AND.IHARG(4).EQ.'CONF' .AND.
     1   IHARG2(4).EQ.'OUND')THEN
        ICASLE='CONF'
        IFOUND='YES'
        ITYPEL='F'
        CALL CONFOU(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19T--                            **
C               **  TREAT THE MERGE COMMAND                 **
C               **********************************************
C
C     2010/12: CHECK FOR CONFLICT WITH MERGE LIBRARY FUNCTION
C
      IF(NUMARG.GE.2)THEN
        DO1990I=1,NUMARG-1
          IF(IHARG(I).EQ.'=' .AND. IHARG(I+1).EQ.'MERG')THEN
            IF(IHARG2(I+1)(1:2).NE.'E(')THEN
              IF(IHARG2(I+1)(1:3).NE.'E3(')THEN
                CALL DPMERG(IBUGA2,IBUGA3,ISUBRO,IFOUND,IERROR)
                IFOUND='YES'
                GOTO9000
              ENDIF
            ENDIF
          ENDIF
 1990   CONTINUE
      ENDIF
C
C               **********************************************
C               **  STEP 2.19U-                             **
C               **  TREAT THE TYPE                 SUBCASE  **
C               **********************************************
C
      IF(NUMARG.EQ.4 .AND. IHARG(3).EQ.'TYPE')THEN
        ICASLE='TYPE'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPNATY(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19V-                             **
C               **  TREAT THE CHECK NAMES          SUBCASE  **
C               **********************************************
C
      IF(NUMARG.GE.4 .AND. IHARG(3).EQ.'CHEC' .AND.
     1   IHARG(4).EQ.'NAME')THEN
        ICASLE='CNAM'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPSTCK(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19V-                             **
C               **  TREAT THE CHECK EQUAL LENGTH   SUBCASE  **
C               **********************************************
C
      IF(NUMARG.GE.5 .AND. IHARG(3).EQ.'CHEC' .AND.
     1   IHARG(4).EQ.'EQUA' .AND. IHARG(5).EQ.'LENG')THEN
        ICASLE='CLEN'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPCKEL(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19W-                             **
C               **  TREAT THE STRING REMOVE SPACES  SUBCASE **
C               **********************************************
C
C     2018/09: ADD "STRING REMOVE PUNCTUATION" AS A VARIATION
C              OF THIS COMMAND
C     2018/09: ADD "STRING REMOVE WHITESPACE" AS A VARIATION
C              OF THIS COMMAND
C
      IF(NUMARG.GE.5 .AND. IHARG(3).EQ.'STRI' .AND.
     1   IHARG(4).EQ.'REMO' .AND. IHARG(5).EQ.'SPAC')THEN
        ICASLE='RSPA'
        IFOUND='YES'
        ITYPEL='F'
        ICASEZ='ALL'
        CALL DPSTSP(ICASEZ,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ELSEIF(NUMARG.GE.6 .AND. IHARG(3).EQ.'STRI' .AND.
     1   IHARG(4).EQ.'REMO' .AND. IHARG(5).EQ.'LEAD' .AND.
     1   IHARG(6).EQ.'SPAC')THEN
        ICASLE='RSPA'
        IFOUND='YES'
        ITYPEL='F'
        ICASEZ='LEAD'
        CALL DPSTSP(ICASEZ,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ELSEIF(NUMARG.GE.6 .AND. IHARG(3).EQ.'STRI' .AND.
     1   IHARG(4).EQ.'REMO' .AND. IHARG(5).EQ.'TRAI' .AND.
     1   IHARG(6).EQ.'SPAC')THEN
        ICASLE='RSPA'
        IFOUND='YES'
        ITYPEL='F'
        ICASEZ='TRAI'
        CALL DPSTSP(ICASEZ,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ELSEIF(NUMARG.GE.5 .AND. IHARG(3).EQ.'STRI' .AND.
     1   IHARG(4).EQ.'REMO' .AND. IHARG(5).EQ.'PUNC')THEN
        ICASLE='RSPA'
        IFOUND='YES'
        ITYPEL='F'
        ICASEZ='RPUN'
        CALL DPSTSP(ICASEZ,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ELSEIF(NUMARG.GE.5 .AND. IHARG(3).EQ.'STRI' .AND.
     1   IHARG(4).EQ.'REMO' .AND. IHARG(5).EQ.'WHIT')THEN
        ICASLE='RSPA'
        IFOUND='YES'
        ITYPEL='F'
        ICASEZ='RWHI'
        CALL DPSTSP(ICASEZ,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ELSEIF(NUMARG.GE.5 .AND. IHARG(3).EQ.'STRI' .AND.
     1   IHARG(4).EQ.'EXPA' .AND. IHARG(5).EQ.'WHIT')THEN
        ICASLE='RSPA'
        IFOUND='YES'
        ITYPEL='F'
        ICASEZ='EWHI'
        CALL DPSTSP(ICASEZ,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19X-                             **
C               **  TREAT THE CHECK TYPE           SUBCASE  **
C               **********************************************
C
      IF(NUMARG.GE.4 .AND. IHARG(3).EQ.'CHEC' .AND.
     1   IHARG(4).EQ.'TYPE')THEN
        ICASEZ='UNKN'
        IF(IHARG(5).EQ.'VARI')ICASEZ='VARI'
        IF(IHARG(5).EQ.'VECT')ICASEZ='VARI'
        IF(IHARG(5).EQ.'COLU')ICASEZ='VARI'
        IF(IHARG(5).EQ.'STRI')ICASEZ='STRI'
        IF(IHARG(5).EQ.'FUNC')ICASEZ='STRI'
        IF(IHARG(5).EQ.'PARA')ICASEZ='PARA'
        IF(IHARG(5).EQ.'MATR')ICASEZ='MATR'
        IF(IHARG(5).EQ.'NUMB')ICASEZ='NUMB'
        ICASLE='CNAM'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPSTCT(ICASEZ,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19Y-                             **
C               **  TREAT THE DIGITS TO STRING     SUBCASE  **
C               **********************************************
C
      IF(NUMARG.GE.5 .AND. IHARG(3).EQ.'DIGI' .AND.
     1   IHARG(4).EQ.'TO  ' .AND. IHARG(5).EQ.'STRI')THEN
        ICASLE='DSTR'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTVS(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19Z-                             **
C               **  TREAT THE NUMBER TO STRING     SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'NUMB' .AND. IHARG(4).EQ.'TO  ' .AND.
     1   IHARG(5).EQ.'STRI')THEN
        ICASLE='NUST'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPNUST(IFORSW,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ELSEIF(IHARG(1).EQ.'STRI' .AND. IHARG(4).EQ.'NUMB' .AND.
     1       IHARG(5).EQ.'TO  ' .AND. IHARG(6).EQ.'STRI')THEN
        ICASLE='NUST'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPNUST(IFORSW,ISUBRO,IBUGA3,IERROR)
      ENDIF
C
C               **********************************************
C               **  STEP 2.19AA-                            **
C               **  TREAT THE BLANK STRING         SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'BLAN'.AND.IHARG(4).EQ.'STRI')THEN
        ICASLE='STRB'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTRB(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19BB--                           **
C               **  TREAT THE STRING COMBINE       SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'STRI'.AND.IHARG(4).EQ.'COMB')THEN
        ICASLE='STCB'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTCB(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               *****************************************************
C               **  STEP 2.19CC--                                  **
C               **  TREAT THE STRING COMPARE AND REPLACE  SUBCASE  **
C               *****************************************************
C
      IF(IHARG(3).EQ.'STRI' .AND. IHARG(4).EQ.'COMP' .AND.
     1   IHARG(5).EQ.'AND ' .AND. IHARG(6).EQ.'REPL')THEN
        ICASLE='SCAR'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTCR(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               *****************************************************
C               **  STEP 2.19DD--                                  **
C               **  TREAT THE STRING INTERACTION                   **
C               *****************************************************
C
      IF(IHARG(3).EQ.'STRI' .AND. IHARG(4).EQ.'INTE')THEN
        ICASLE='STIP'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTIP(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               *****************************************************
C               **  STEP 2.19EE--                                  **
C               **  TREAT THE STRING SPLIT                         **
C               *****************************************************
C
      IF(IHARG(3).EQ.'STRI' .AND. IHARG(4).EQ.'SPLI')THEN
        ICASLE='STSP'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSSPL(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19FF--                           **
C               **  TREAT THE STRING STARTS WITH            **
C               **            STRING ENDS   WITH   SUBCASES **
C               **********************************************
C
      IF(IHARG(3).EQ.'STRI' .AND. IHARG(4).EQ.'STAR' .AND.
     1   IHARG(5).EQ.'WITH')THEN
        ICASLE='STSW'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPSTSW(ICASLE,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ELSEIF(IHARG(3).EQ.'STRI' .AND. IHARG(4).EQ.'ENDS' .AND.
     1       IHARG(5).EQ.'WITH')THEN
        ICASLE='STEW'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPSTSW(ICASLE,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19GG--                           **
C               **  TREAT THE STRING DELETE   CASE          **
C               **********************************************
C
      IF(IHARG(3).EQ.'STRI' .AND. IHARG(4).EQ.'DELE')THEN
        ICASLE='STDE'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTDE(ICASLE,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19HH--                           **
C               **  TREAT THE STRING CONTAINS               **
C               **********************************************
C
      IF(IHARG(3).EQ.'STRI' .AND. IHARG(4).EQ.'CONT')THEN
        ICASLE='STCO'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPSTCO(ICASLE,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               ***************************************************
C               **  STEP 2.19II--                                **
C               **  TREAT THE STRING <LEFT/CENTER/RIGHT> JUSTIFY **
C               ***************************************************
C
      IF(IHARG(3).EQ.'STRI' .AND. IHARG(5).EQ.'JUST')THEN
        ICASEZ='LEFT'
        IF(IHARG(4).EQ.'LEFT')ICASEZ='LEFT'
        IF(IHARG(4).EQ.'CENT')ICASEZ='CENT'
        IF(IHARG(4).EQ.'RIGH')ICASEZ='RIGH'
        ICASLE='STJU'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTJU(ICASEZ,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19JJ--                           **
C               **  TREAT THE SWAP  CASE           SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'SWAP'.AND.IHARG(4).EQ.'CASE')THEN
        ICASLE='STSC'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTSC(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19KK--                           **
C               **  TREAT THE STRING SUBSET COUNT           **
C               **********************************************
C
      IF(IHARG(3).EQ.'STRI' .AND. IHARG(4).EQ.'SUBS' .AND.
     1   IHARG(5).EQ.'COUN')THEN
        ICASLE='STNS'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPSTNS(ICASLE,ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19LL--                           **
C               **  TREAT THE STRING VARIABLE DELETE        **
C               **  TREAT THE STRING VARIABLE         CASES **
C               **********************************************
C
      IF((IHARG(3).EQ.'STRI' .OR. IHARG(3).EQ.'CHAR') .AND.
     1    IHARG(4).EQ.'VARI')THEN
        IF(IHARG(5).EQ.'DELE')THEN
        ELSE
          ICASLE='STVA'
          IFOUND='YES'
          ITYPEL='F'
          CALL DPSTVA(ISUBRO,IBUGA3,IERROR)
          GOTO9000
        ENDIF
      ENDIF
C
C               **********************************************
C               **  STEP 2.19MM--                           **
C               **  TREAT THE IS NUMBER            SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'IS  ' .AND. IHARG(4).EQ.'NUMB')THEN
        ICASLE='ISNU'
        IFOUND='YES'
        ITYPEL='P'
        CALL DPISNU(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.19NN--                           **
C               **  TREAT THE STRING REPEAT        SUBCASE  **
C               **********************************************
C
      IF(IHARG(3).EQ.'STRI' .AND. IHARG(4).EQ.'REPE')THEN
        ICASLE='STRE'
        IFOUND='YES'
        ITYPEL='F'
        CALL DPSTRS(ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
C               **********************************************
C               **  STEP 2.20--                             **
C               **  TREAT THE MATH CALCULATIONS SUBCASE     **
C               **   (INPUT = A VECTOR; OUTPUT = A VECTOR)  **
C               **********************************************
C
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PLET')THEN
        WRITE(ICOUT,2001)
 2001   FORMAT('BEFORE CALL CKMATH')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      CALL CKMATH(IBUGA3,ISUBRO,IFOUN7,ICASL7,ICASS7,ISTANR,ISTARA,
     1            IMSUBC,ILOCV)
      IF(IFOUN7.EQ.'YES'.AND.ICASL7.NE.'UNKN'.AND.
     1ILOCV.GE.1)GOTO2000
      GOTO2090
C
 2000 CONTINUE
      ICASLE='MANI'
CCCCC AUGUST 1995.  ADD IFTORD ARGUMENT
CCCCC OCTOBER 1998.  BREAK DPMATC INTO 2 ROUTINES (STARTING TO
CCCCC CHOKE SOME COMPILERS)
CCCCC MAY 2002.  ADD ISEED TO DPMAT2 CASE
CCCCC CALL DPMATC(ICASL7,ILOCV,IFTEXP,
      IFOUND='NO'
      CALL DPMATC(ICASL7,ICASS7,ISTANR,ISTARA,ILOCV,IFTEXP,IFTORD,ISEED,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IFOUND.EQ.'YES')GOTO9000
      CALL DPMAT2(ICASL7,ICASS7,ISTARA,ILOCV,ISEED,IMSUBC,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      GOTO9000
C
 2090 CONTINUE
C
CCCCC THE FOLLOWING SECTION WAS REWRITTEN    OCTOBER 1991
C               *********************************************
C               **  STEP 2.21--                            **
C               **  TREAT THE ORDER STATISTIC MEDIAN G     **
C               **  GENERATION SUBCASE                     **
C               **        UNIFORM DISTRIBUTION             **
C               **        NORMAL DISTRIBUTION              **
C               **        HALFNORMAL DISTRIBUTION          **
C               **        EV1 (GUMBEL) DISTRIBUTION        **
C               **        EV2 (FRECHET) DISTRIBUTION       **
C               **        WEIBULL  DISTRIBUTION            **
C               *********************************************
C
      ISTEPN='2.21'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.6.AND.
     1   IHARG(3).EQ.'UNIF'.AND.IHARG(4).EQ.'ORDE'.AND.
     1   IHARG(5).EQ.'STAT'.AND.IHARG(6).EQ.'MEDI')THEN
        ICASLE='UOSM'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'NORM'.AND.IHARG(4).EQ.'ORDE'.AND.
     1       IHARG(5).EQ.'STAT'.AND.IHARG(6).EQ.'MEDI')THEN
        ICASLE='NOSM'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'HALF'.AND.IHARG(4).EQ.'ORDE'.AND.
     1       IHARG(5).EQ.'STAT'.AND.IHARG(6).EQ.'MEDI')THEN
        ICASLE='HOSM'
      ELSEIF(NUMARG.GE.7.AND.
     1       IHARG(3).EQ.'HALF'.AND.IHARG(4).EQ.'NORM'.AND.
     1       IHARG(5).EQ.'ORDE'.AND.IHARG(6).EQ.'STAT'.AND.
     1       IHARG(7).EQ.'MEDI')THEN
        ICASLE='HOSM'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'EV1'.AND.IHARG(4).EQ.'ORDE'.AND.
     1       IHARG(5).EQ.'STAT'.AND.IHARG(6).EQ.'MEDI')THEN
        ICASLE='E1OM'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'GUMB'.AND.IHARG(4).EQ.'ORDE'.AND.
     1       IHARG(5).EQ.'STAT'.AND.IHARG(6).EQ.'MEDI')THEN
        ICASLE='E1OM'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'EV2'.AND.IHARG(4).EQ.'ORDE'.AND.
     1       IHARG(5).EQ.'STAT'.AND.IHARG(6).EQ.'MEDI')THEN
        ICASLE='E2OM'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'FREC'.AND.IHARG(4).EQ.'ORDE'.AND.
     1       IHARG(5).EQ.'STAT'.AND.IHARG(6).EQ.'MEDI')THEN
        ICASLE='E2OM'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'WEIB'.AND.IHARG(4).EQ.'ORDE'.AND.
     1       IHARG(5).EQ.'STAT'.AND.IHARG(6).EQ.'MEDI')THEN
        ICASLE='WOSM'
C
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'EXPO'.AND.IHARG(4).EQ.'ORDE'.AND.
     1       IHARG(5).EQ.'STAT'.AND.IHARG(6).EQ.'MEDI')THEN
        ICASLE='EXPM'
C
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'LOGI'.AND.IHARG(4).EQ.'ORDE'.AND.
     1       IHARG(5).EQ.'STAT'.AND.IHARG(6).EQ.'MEDI')THEN
        ICASLE='LOSM'
      ELSE
        GOTO2190
      ENDIF
C
      CALL DPOSM(ICASLE,IBUGA3,IBUGQ,IFOUND,IERROR)
      GOTO9000
C
 2190 CONTINUE
C
C               *********************************************
C               **  STEP 2.22--                            **
C               **  TREAT THE ORDER STATISTIC MEAN/SD      **
C               **  GENERATION SUBCASE                     **
C               **        UNIFORM DISTRIBUTION             **
C               **        NORMAL DISTRIBUTION              **
C               **        EXPONENTIAL  DISTRIBUTION        **
C               **        LOGISTIC     DISTRIBUTION        **
C               *********************************************
C
      ISTEPN='2.22'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.6.AND.
     1   IHARG(3).EQ.'UNIF' .AND. IHARG(4).EQ.'ORDE' .AND.
     1   IHARG(5).EQ.'STAT' .AND. IHARG(6).EQ.'MEAN')THEN
        ICASLE='UOSM'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'UNIF' .AND. IHARG(4).EQ.'ORDE' .AND.
     1       IHARG(5).EQ.'STAT' .AND. IHARG(6).EQ.'SD  ')THEN
        ICASLE='UOSS'
      ELSEIF(NUMARG.GE.7.AND.
     1       IHARG(3).EQ.'UNIF' .AND. IHARG(4).EQ.'ORDE' .AND.
     1       IHARG(5).EQ.'STAT' .AND. IHARG(6).EQ.'STAN' .AND.
     1       IHARG(7).EQ.'DEVI')THEN
        ICASLE='UOSS'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'NORM' .AND. IHARG(4).EQ.'ORDE' .AND.
     1       IHARG(5).EQ.'STAT' .AND. IHARG(6).EQ.'MEAN')THEN
        ICASLE='NOSM'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'NORM' .AND. IHARG(4).EQ.'ORDE' .AND.
     1       IHARG(5).EQ.'STAT' .AND. IHARG(6).EQ.'SD  ')THEN
        ICASLE='NOSS'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'EXPO' .AND. IHARG(4).EQ.'ORDE' .AND.
     1       IHARG(5).EQ.'STAT' .AND. IHARG(6).EQ.'MEAN')THEN
        ICASLE='EOSM'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'EXPO' .AND. IHARG(4).EQ.'ORDE' .AND.
     1       IHARG(5).EQ.'STAT' .AND. IHARG(6).EQ.'SD  ')THEN
        ICASLE='EOSS'
      ELSEIF(NUMARG.GE.7.AND.
     1       IHARG(3).EQ.'EXPO' .AND. IHARG(4).EQ.'ORDE' .AND.
     1       IHARG(5).EQ.'STAT' .AND. IHARG(6).EQ.'STAN' .AND.
     1       IHARG(7).EQ.'DEVI')THEN
        ICASLE='EOSS'
      ELSEIF(NUMARG.GE.4.AND.
     1       IHARG(3).EQ.'EXPO' .AND. IHARG(4).EQ.'SCOR')THEN
        ICASLE='SSCO'
      ELSEIF(NUMARG.GE.4.AND.
     1       IHARG(3).EQ.'SAVA' .AND. IHARG(4).EQ.'SCOR')THEN
        ICASLE='SSCO'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'LOGI' .AND. IHARG(4).EQ.'ORDE' .AND.
     1       IHARG(5).EQ.'STAT' .AND. IHARG(6).EQ.'MEAN')THEN
        ICASLE='LOSM'
      ELSEIF(NUMARG.GE.6.AND.
     1       IHARG(3).EQ.'LOGI' .AND. IHARG(4).EQ.'ORDE' .AND.
     1       IHARG(5).EQ.'STAT' .AND. IHARG(6).EQ.'SD  ')THEN
        ICASLE='LOSS'
      ELSEIF(NUMARG.GE.7.AND.
     1       IHARG(3).EQ.'LOGI' .AND. IHARG(4).EQ.'ORDE' .AND.
     1       IHARG(5).EQ.'STAT' .AND. IHARG(6).EQ.'STAN' .AND.
     1       IHARG(7).EQ.'DEVI')THEN
        ICASLE='LOSS'
      ELSE
        GOTO2290
      ENDIF
C
      CALL DPOSME(ICASLE,ISUBRO,IBUGA3,IBUGQ,IFOUND,IERROR)
      GOTO9000
C
 2290 CONTINUE
C
C               *****************************************************
C               **  STEP 2.24--                                    **
C               **  TREAT THE WEIBULL ADJUSTED RANKS SUBCASE  ZZ   **
C               *****************************************************
C
      ISTEPN='2.24'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.5.AND.
     1   IHARG(3).EQ.'WEIB'.AND.IHARG(4).EQ.'ADJU'.AND.
     1   IHARG(5).EQ.'RANK')THEN
        ICASLE='WEAR'
        CALL DPWEAR(TEMP3,XTEMP3,IBUGA3,IBUGQ,IFOUND,IERROR)
        GOTO9000
      ENDIF
C
C               *************************************************
C               **  STEP 2.25--                                **
C               **  TREAT THE PRIME NUMBER GENERATION SUBCASE  **
C               *************************************************
C
      ISTEPN='2.25'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.4.AND.
     1   IHARG(3).EQ.'PRIM'.AND.IHARG(4).EQ.'NUMB')THEN
        ICASLE='PRIM'
        CALL DPGENS(ICASLE,TEMP3,DTEMP1,ISUBRO,IBUGA3,IBUGQ,
     1              IFOUND,IERROR)
        GOTO9000
      ENDIF
C
C               ******************************************************
C               **  STEP 2.26--                                     **
C               **  TREAT THE FIBONNACCI NUMBER GENERATION SUBCASE  **
C               ******************************************************
C
      ISTEPN='2.26'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.4.AND.IHARG(3).EQ.'FIBO'.AND.
     1  (IHARG(4).EQ.'NUMB'.OR.IHARG(4).EQ.'SEQU'))THEN
        ICASLE='FIBO'
        CALL DPGENS(ICASLE,TEMP3,DTEMP1,ISUBRO,IBUGA3,IBUGQ,
     1              IFOUND,IERROR)
        GOTO9000
      ENDIF
C
CCCCC THE FOLLOWING LOGISTIC SECTION WAS ADDED APRIL 1989
C               ******************************************************
C               **  STEP 2.27--                                     **
C               **  TREAT THE LOGISTIC SEQUENCE GENERATION SUBCASE  **
C               ******************************************************
C
      ISTEPN='2.27'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.4.AND.IHARG(3).EQ.'LOGI'.AND.
     1  (IHARG(4).EQ.'NUMB'.OR.IHARG(4).EQ.'SEQU'.OR.
     1   IHARG(4).EQ.'SET '))THEN
        ICASLE='LOGI'
        CALL DPGENS(ICASLE,TEMP3,DTEMP1,ISUBRO,IBUGA3,IBUGQ,
     1              IFOUND,IERROR)
        GOTO9000
      ENDIF
C
CCCCC THE FOLLOWING CANTOR SET SECTION WAS ADDED APRIL 1989
CCCCC NOTE THAT SOME SUCCEEDING SECTIONS WERE RENUMBERED APRIL 1989
C               ******************************************************
C               **  STEP 2.28--                                     **
C               **  TREAT THE CANTOR SET GENERATION SUBCASE         **
C               ******************************************************
C
      ISTEPN='2.28'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.4.AND.IHARG(3).EQ.'CANT'.AND.
     1  (IHARG(4).EQ.'NUMB'.OR.IHARG(4).EQ.'SEQU'.OR.
     1   IHARG(4).EQ.'SET '))THEN
        ICASLE='CANT'
        CALL DPGENS(ICASLE,TEMP3,DTEMP1,ISUBRO,IBUGA3,IBUGQ,
     1              IFOUND,IERROR)
        GOTO9000
      ENDIF
C
C               ******************************************************
C               **  STEP 2.29--                                     **
C               **  TREAT THE BERNOULLI  NUMBER GENERATION SUBCASE  **
C               ******************************************************
C
      ISTEPN='2.29'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.4.AND.IHARG(3).EQ.'BERN'.AND.
     1  (IHARG(4).EQ.'NUMB'.OR.IHARG(4).EQ.'SEQU'))THEN
        ICASLE='BERN'
        CALL DPGENS(ICASLE,TEMP3,DTEMP1,ISUBRO,IBUGA3,IBUGQ,
     1              IFOUND,IERROR)
        GOTO9000
      ENDIF
C
C
C               ******************************************************
C               **  STEP 2.30--                                     **
C               **  TREAT THE EULER      NUMBER GENERATION SUBCASE  **
C               ******************************************************
C
      ISTEPN='2.30'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.4.AND.IHARG(3).EQ.'EULE'.AND.
     1  (IHARG(4).EQ.'NUMB'.OR.IHARG(4).EQ.'SEQU'))THEN
        ICASLE='EULE'
        CALL DPGENS(ICASLE,TEMP3,DTEMP1,ISUBRO,IBUGA3,IBUGQ,
     1              IFOUND,IERROR)
        GOTO9000
      ENDIF
C
C
C               **************************************************
C               **  STEP 2.41--                                 **
C               **  TREAT THE STATISTICAL CALCULATIONS SUBCASE  **
C               **  (INPUT = A VECTOR; OUTPUT = A PARAMETER)    **
C               **************************************************
C
      ISTEPN='2.41'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DPTYP2(IANS,IWIDTH,IHNAME,IHNAM2,NUMNAM,MAXNAM,IBUGA3,
     1           IUSE,IVALUE,VALUE,IN,
     1           IFOUNZ,IBEGIN,IEND,
     1           ITYPE,IHOL,IHOL2,INT1,FLOAT1,IERRO1,
     1           NUMCL,NUMPL,NUMAOL,ITYW1L,ICAT1L,INLI1L,ITYW2L,
     1           NUMCR,NUMPR,NUMAOR,ITYW1R,ICAT1R,INLI1R,ITYW2R)
C
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PLET')THEN
        WRITE(ICOUT,3091)
 3091   FORMAT('BEFORE CALL CKARIT')
        CALL DPWRST('XXX','BUG ')
      ENDIF
CCCCC THE FOLLOWING 2 LINES WERE ADDED JANUARY 1988
      CALL CKARIT(IFOUNZ,IBEGIN,IANS,IWIDTH,ICASAR,IBUGA3,ISUBRO)
CCCCC THE FOLLOWING 10 LINES WERE ADDED                 FEBRUARY 1994
CCCCC TO ALLOW DETECTION OF THE                         FEBRUARY 1994
CCCCC    LET A = (TAGUCHI) SN- Y COMMAND      AND THE   FEBRUARY 1994
CCCCC    LET A = (TAGUCHI) SN+ Y COMMAND                FEBRUARY 1994
C
      IF(NUMARG.GE.3)THEN
         IF(IHARG(3).EQ.'SN- ')GOTO4000
         IF(IHARG(3).EQ.'SN+ ')GOTO4000
      ENDIF
      IF(NUMARG.GE.4)THEN
         IF(IHARG(3).EQ.'TAGU')THEN
            IF(IHARG(4).EQ.'SN- ')GOTO4000
            IF(IHARG(4).EQ.'SN+ ')GOTO4000
         ENDIF
      ENDIF
      IF(NUMARG.GE.6)THEN
         IF(IHARG(3).EQ.'CHI '.AND.IHARG(4).EQ.'SQUA'.AND.
     1      IHARG(5).EQ.'SD  '.AND.IHARG(6).EQ.'TEST')GOTO4000
      ENDIF
      IF(NUMARG.GE.6)THEN
         IF(IHARG(3).EQ.'ONE '.AND.IHARG(4).EQ.'SAMP'.AND.
     1      IHARG(5).EQ.'T   '.AND.IHARG(6).EQ.'TEST')GOTO4000
      ENDIF
      IF(NUMARG.GE.7)THEN
         IF(IHARG(3).EQ.'CHI '.AND.IHARG(4).EQ.'SQUA'.AND.
     1      IHARG(5).EQ.'STAN'.AND.IHARG(6).EQ.'DEVI'.AND.
     1      IHARG(7).EQ.'TEST')GOTO4000
      ENDIF
CCCCC THE FOLLOWING SECTION  WAS  ADDED                 MARCH    2003
CCCCC TO ALLOW DETECTION OF THE HODGES-LEHMAN AND
CCCCC DIFFERENCE OF HODGES-LEHMAN
C
      IF(NUMARG.GE.4)THEN
         IF(IHARG(3).EQ.'HODG'.AND.IHARG(4).EQ.'LEHM')GOTO4000
      ENDIF
      IF(NUMARG.GE.6)THEN
         IF(IHARG(5).EQ.'HODG'.AND.IHARG(6).EQ.'LEHM')GOTO4000
      ENDIF
C
      IF(ICASAR.EQ.'YES')GOTO4190
C
CCCCC THE FOLLOWING LINE WAS ADDED     FEBRUARY 1994
 4000 CONTINUE
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PLET')THEN
        WRITE(ICOUT,4001)
 4001   FORMAT('BEFORE CALL CKSTAT')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      CALL CKSTAT(IBUGA3,IFOUN8,ICASL8,ILOCV,ISTANR,ISTARA)
      IF(IFOUN8.EQ.'YES'.AND.ICASL8.NE.'UNKN'.AND.
     1   ILOCV.GE.1)THEN
        ICASLE='STAT'
        CALL DPSTAC(ICASL8,ILOCV,ISTANR,ISTARA,
     1              IFOUNZ,IBEGIN,IEND,ITYPE,IHOL,IHOL2,
     1              INT1,FLOAT1,IERRO1,
     1              TEMP,TEMP2,TEMP3,XTEMP1,XTEMP2,XTEMP3,
     1              XTEMP4,XTEMP5,MAXNXT,
CCCCC               JULY 2002.  ADD FOLLOWING FOR HODGES-LEHMAN
     1              ISEED,ITEMP1,ITEMP2,ITEMP3,ITEMP4,ITEMP5,ITEMP6,
     1              DTEMP1,DTEMP2,DTEMP3,
     1              IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
        GOTO9000
      ENDIF
C
 4190 CONTINUE
C
C               ***************************************
C               **  STEP 2.42--                      **
C               **  TREAT THE INTERPOLATION SUBCASE  **
C               ***************************************
C
      ISTEPN='2.42'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IHARG(3).EQ.'INTE'.AND.IHARG2(3).EQ.'RPOL')GOTO4210
      GOTO4290
C
 4210 CONTINUE
      DO4220I=1,NUMARG
      IF(IHARG(I).EQ.'WRT ')GOTO4200
 4220 CONTINUE
      GOTO4290
C
 4200 CONTINUE
      ICASLE='INTR'
      IFOUND='YES'
      ITYPEL='V'
CCCCC CALL DPINTR(ITYPEH,IW21HO,IW22HO,W2HOLD,NWHOLD,
CCCCC1IA,PARAM,IPARN,IPARN2,
CCCCC1IANGLU,IBUGA3,IBUGQ,IBUGCO,IBUGEV,IERROR)
      GOTO9000
C
 4290 CONTINUE
C
C               ******************************************************
C               **  STEP 2.43--                                     **
C               **  TREAT THE (SIMULATED) EXPERIMENT SUBCASE        **
C               ******************************************************
C
      IF(NUMARG.GE.3.AND.IHARG(3).EQ.'EXPE')GOTO4310
      GOTO4390
C
 4310 CONTINUE
CCCCC ICASLE='EXPE'
CCCCC CALL DPEXPE(ICASEX,ITEXEX,IPAGEX,ISEED,
CCCCC1IBUGA3,IBUGQ,IFOUND,IERROR)
CCCCC GOTO9000
C
 4390 CONTINUE
C
C               *********************************************
C               **  STEP 2.50--                            **
C               **  TREAT THE FUNCTION EVALUATION SUBCASE  **
C               *********************************************
C
      ISTEPN='2.50'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'PLET')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASLE='FUNC'
      CALL DPFUEV(ITYPEH,IW21HO,IW22HO,W2HOLD,NWHOLD,
     1            IA,PARAM,IPARN,IPARN2,
     1            IFOUNZ,IBEGIN,IEND,ITYPE,IHOL,IHOL2,INT1,
     1            FLOAT1,IERRO1,
     1            NUMCL,NUMPL,NUMAOL,ITYW1L,ICAT1L,INLI1L,ITYW2L,
     1            NUMCR,NUMPR,NUMAOR,ITYW1R,ICAT1R,INLI1R,ITYW2R,
     1            IANGLU,
     1            IBUGA3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,IFOUND,IERROR)
      GOTO9000
C
C               *********************************
C               **  STEP 80--                  **
C               **  GENERATE AN ERROR MESSAGE  **
C               **  (IF NECESSARY)             **
C               *********************************
C
C8000 CONTINUE
CCCCC IERROR='YES'
CCCCC WRITE(ICOUT,999)
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,8071)
C8071 FORMAT('***** ERROR IN DPLET--')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,8072)
C8072 FORMAT('      IMPROPER FORM FOR THE    LET   ',
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC1'COMMAND')
CCCCC WRITE(ICOUT,8073)
C8073 FORMAT('      IMPROPER SYNTAX')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,8074)ICASLE
C8074 FORMAT('      ICASLE = ',A4)
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,8075)
C8075 FORMAT('      THE ENTERED COMMAND LINE IS AS FOLLOWS--')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC IF(IWIDTH.GE.1)WRITE(ICOUT,8076)(IANS(I),I=1,IWIDTH)
C8076 FORMAT('      ',120A1)
CCCCC IF(IWIDTH.GE.1)CALL DPWRST('XXX','BUG ')
CCCCC IF(IWIDTH.LE.0)WRITE(ICOUT,8077)
C8077 FORMAT(1X)
CCCCC IF(IWIDTH.LE.0)CALL DPWRST('XXX','BUG ')
CCCCC GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'PLET')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLET--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IANGLU,IFTEXP,ISEED
 9012   FORMAT('IANGLU,IFTEXP,ISEED = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)ICASLE,IMSUBC,IFOUND,IERROR
 9016   FORMAT('ICASLE,IMSUBC,IFOUND,IERROR = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLETE(IANS,IWIDTH)
C
C     PURPOSE--GENERATE AN ERROR MESSAGE
C              IN CONNECTION WITH THE LET COMMAND.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--SEPTEMBER 1980.
C     UPDATED         --SEPTEMBER 1981.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IANS
C
C---------------------------------------------------------------------
C
      DIMENSION IANS(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,101)
  101 FORMAT('***** ERROR (FROM DPLETE) IN DPTYP2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,102)
  102 FORMAT('      ILLEGAL OR UNKNOWN SYNTAX FOR THE LET COMMAND')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,103)(IANS(I),I=1,MIN(80,IWIDTH))
  103 FORMAT('      COMMAND LINE--',80A1)
      CALL DPWRST('XXX','BUG ')
C
      RETURN
      END
      SUBROUTINE DPLETF(IANGLU,IBUGA2,IBUGA3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,
     1                  ISFLAG,IFOUND,IERROR)
C
C     PURPOSE--CARRY OUT THE LET FUNCTION COMMAND.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--NOVEMBER  1977.
C     UPDATED         --OCTOBER   1978.
C     UPDATED         --NOVEMBER  1978.
C     UPDATED         --JANUARY   1979.
C     UPDATED         --FEBRUARY  1979.
C     UPDATED         --JUNE      1979.
C     UPDATED         --JULY      1979.
C     UPDATED         --SEPTEMBER 1980.
C     UPDATED         --JUNE      1981.
C     UPDATED         --JULY      1981.
C     UPDATED         --SEPTEMBER 1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --APRIL     1996.  PRESERVE CASE FOR LET STRING
C     UPDATED         --AUGUST    2005.  CODE FOR LET FUNCTION ... = DERIVATIVE
C                                        WAS NOT BEING RECOGNIZED
C     UPDATED         --JUNE      2019.  DPDERV:
C                                        MOVE DIMENSIONING OF REAL,
C                                        INTEGER SCRATCH ARRAYS TO DPLET
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IANGLU
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGCO
      CHARACTER*4 IBUGEV
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ICASLF
C
      CHARACTER*4 IFOUNZ
      CHARACTER*4 ITYPE
      CHARACTER*4 IHOL
      CHARACTER*4 IHOL2
      CHARACTER*4 IERRO1
      CHARACTER*4 ITYPEH
      CHARACTER*4 IW21HO
      CHARACTER*4 IW22HO
      CHARACTER*4 IA
      CHARACTER*4 IPARN
      CHARACTER*4 IPARN2
      CHARACTER*4 ITYW1L
      CHARACTER*4 ICAT1L
      CHARACTER*4 INLI1L
      CHARACTER*4 ITYW2L
      CHARACTER*4 ITYW1R
      CHARACTER*4 ICAT1R
      CHARACTER*4 INLI1R
      CHARACTER*4 ITYW2R
C
      CHARACTER*4 ITYPEL
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
CCCCC APRIL 1996.  ADD FOLLOWING LINE
      CHARACTER*10 ISFLAG
      CHARACTER*4 ISTEPN
C
      DIMENSION IFOUNZ(30)
      DIMENSION IBEGIN(30)
      DIMENSION IEND(30)
      DIMENSION ITYPE(30)
      DIMENSION IHOL(30)
      DIMENSION IHOL2(30)
      DIMENSION INT1(30)
      DIMENSION FLOAT1(30)
      DIMENSION IERRO1(30)
C
CCCCC DIMENSION ITYPEH(225)
CCCCC DIMENSION IW21HO(225)
CCCCC DIMENSION IW22HO(225)
CCCCC DIMENSION W2HOLD(225)
      DIMENSION ITYPEH(1000)
      DIMENSION IW21HO(1000)
      DIMENSION IW22HO(1000)
      DIMENSION W2HOLD(1000)
C
C     NOTE--THE DIMENSION OF IA SHOULD BE THE SAME AS
C           THE DIMENSION OF IB IN SUBROUTINE COMPIM
C           (THE DIMENSION OF IB IS 1000 (JULY 1986)).
C
CCCCC DIMENSION IA(225)
      DIMENSION IA(1000)
      DIMENSION PARAM(100)
      DIMENSION IPARN(100)
      DIMENSION IPARN2(100)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOZZ.INC'
C
      DIMENSION TEMP1(MAXOBV)
      EQUIVALENCE (GARBAG(1),TEMP1(1))
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLE'
      ISUBN2='TF  '
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      IERROR='NO'
C
      ICASLF='UNKN'
C
C     ***** THE FOLLOWING 6 LINES INSERTED AUGUST 1983 *****
CCCCC DO40I=1,225
      DO40I=1,1000
      ITYPEH(I)='    '
      IW21HO(I)='    '
      IW22HO(I)='    '
      W2HOLD(I)=0.0
   40 CONTINUE
C
C               ***********************************
C               **  TREAT THE LET FUNCTION CASE  **
C               ***********************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LETF')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLETF--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3
   52   FORMAT('IBUGA2,IBUGA3 = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************
C               **  STEP 1--                   **
C               **  CHECK THE INPUT ARGUMENTS  **
C               *********************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LETF')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.3.AND.IHARG(3).EQ.'=   '.AND.
     1IHARG2(3).EQ.'    ')GOTO1119
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1111)
 1111 FORMAT('***** ERROR IN DPLETF--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1112)
 1112 FORMAT('      IMPROPER FORM FOR THE    LET FUNCTION   ',
     1'COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1113)
 1113 FORMAT('      NO EQUAL SIGN FOUND AFTER THE FUNCTION NAME')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1114)
 1114 FORMAT('      THE ENTERED COMMAND LINE IS AS FOLLOWS--')
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)THEN
        WRITE(ICOUT,1115)(IANS(I),I=1,MIN(120,IWIDTH))
 1115   FORMAT('      ',120A1)
        CALL DPWRST('XXX','BUG ')
      ELSEIF(IWIDTH.LE.0)THEN
        WRITE(ICOUT,1116)
 1116   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IERROR='YES'
      GOTO9000
 1119 CONTINUE
C
C     2018/08: IF WE HAVE
CV
C                LET STRING S = 
C
C              RETURN A STRING WITH A SINGLE SPACE RATHER
C              THAN AN ERROR.
C
      IF(NUMARG.LE.3)THEN
CCCCC   WRITE(ICOUT,999)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   WRITE(ICOUT,1111)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   WRITE(ICOUT,1112)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   WRITE(ICOUT,1123)
C1123   FORMAT('      NOTHING FOUND TO THE RIGHT OF THE EQUAL SIGN')
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   WRITE(ICOUT,1114)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   IF(IWIDTH.GE.1)THEN
CCCCC     WRITE(ICOUT,1115)(IANS(I),I=1,MIN(120,IWIDTH))
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC   ELSEIF(IWIDTH.LE.0)THEN
CCCCC     WRITE(ICOUT,1116)
CCCCC     CALL DPWRST('XXX','BUG ')
CCCCC   ENDIF
CCCCC   IERROR='YES'
CCCCC   GOTO9000
        NUMARG=NUMARG+1
        IHARG(NUMARG)='SP()'
        IANSLC(IWIDTH+1)=' '
        IANSLC(IWIDTH+2)='S'
        IANSLC(IWIDTH+3)='P'
        IANSLC(IWIDTH+4)='('
        IANSLC(IWIDTH+5)=')'
        IANS(IWIDTH+1)=' '
        IANS(IWIDTH+2)='S'
        IANS(IWIDTH+3)='P'
        IANS(IWIDTH+4)='('
        IANS(IWIDTH+5)=')'
        IWIDTH=IWIDTH+5
      ENDIF
C
C               *****************************************
C               **  STEP 2--                           **
C               **  BRANCH TO THE APPROPRIATE SUBCASE  **
C               *****************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LETF')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
CCCCC FEBRUARY 2003: CHECK WHETHER FUNCTION OR STRING IS
CCCCC BEING CALLED FOR.
CCCCC AUGUST 2005: CHECK FOR 'FUNC' SHOULD BE IN IHARG(1), NOT
CCCCC              NOT IHARG(2)
C
      IF(IHARG(4).EQ.'DERI'.AND.IHARG2(4).EQ.'VATI')THEN
        IF(IHARG(1).EQ.'FUNC')GOTO1140
      ELSEIF(IHARG(4).EQ.'DIFF'.AND.IHARG2(4).EQ.'EREN')THEN
        IF(IHARG(1).EQ.'FUNC')GOTO1140
      ELSEIF(IHARG(4).EQ.'PART'.AND.IHARG2(4).EQ.'IAL ')THEN
        IF(IHARG(1).EQ.'FUNC')GOTO1140
      ENDIF
C
      GOTO1130
C
C               *********************************************
C               **  STEP 3.1--                             **
C               **  TREAT THE FUNCTION DEFINITION SUBCASE  **
C               *********************************************
C
 1130 CONTINUE
C
      ISTEPN='3.1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LETF')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IFOUND='YES'
      ICASLF='DEFI'
CCCCC APRIL 1996.  ADD ISFLAG ARGUMENT
CCCCC CALL DPFUNC(IBUGA3,IERROR)
      CALL DPFUNC(IBUGA3,ISUBRO,IERROR,ISFLAG)
      GOTO9000
C
C               *********************************************
C               **  STEP 3.2--                             **
C               **  TREAT THE ANALYTIC DERIVATIVE SUBCASE  **
C               *********************************************
C
 1140 CONTINUE
C
      ISTEPN='3.2'
      IF(IBUGA2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IFOUND='YES'
      ICASLF='DERI'
C
      ICASLF='DERI'
      IFOUND='YES'
      ITYPEL='F'
      CALL DPDERV(ITYPEH,IW21HO,IW22HO,W2HOLD,NWHOLD,
     1            IA,PARAM,IPARN,IPARN2,
     1            IFOUNZ,IBEGIN,IEND,ITYPE,IHOL,IHOL2,
     1            INT1,FLOAT1,IERRO1,
     1            NUMCL,NUMPL,NUMAOL,ITYW1L,ICAT1L,INLI1L,ITYW2L,
     1            NUMCR,NUMPR,NUMAOR,ITYW1R,ICAT1R,INLI1R,ITYW2R,
     1            IANGLU,TEMP1,
     1            IBUGA3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,IFOUND,IERROR)
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LETF')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLETF--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)ICASLF,IFOUND,IERROR
 9015   FORMAT('ICASLF,IFOUND,IERROR = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLETH(IHARG,IARGT,IARG,ARG,NUMARG,PDEFTH,
     1MAXLEG,PLEGTH,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE THICKNESS FOR A LEGEND.
C              THE THICKNESS FOR LEGEND I WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE REAL
C              VECTOR PLEGTH(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --ARG    (A REAL VECTOR)
C                     --NUMARG
C                     --PDEFTH
C                     --MAXLEG
C     OUTPUT ARGUMENTS--PLEGTH (A REAL VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              THICKNESS FOR LEGEND I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 COMPUTER SERVICES DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--89/2
C     ORIGINAL VERSION--JANUARY   1989.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
      DIMENSION ARG(*)
C
      DIMENSION PLEGTH(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'THIC')GOTO1110
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'THIC')GOTO1140
      GOTO1199
C
 1110 CONTINUE
      IF(NUMARG.LE.1)GOTO1120
      IF(IHARG(2).EQ.'ON')GOTO1120
      IF(IHARG(2).EQ.'OFF')GOTO1120
      IF(IHARG(2).EQ.'AUTO')GOTO1120
      IF(IHARG(2).EQ.'DEFA')GOTO1120
      GOTO1125
C
 1120 CONTINUE
      PHOLD=PDEFTH
      GOTO1130
C
 1125 CONTINUE
      PHOLD=ARG(2)
      GOTO1130
C
 1130 CONTINUE
      IFOUND='YES'
      DO1135I=1,MAXLEG
      PLEGTH(I)=PHOLD
 1135 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1139
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1136)PLEGTH(I)
 1136 FORMAT('ALL LEGEND THICKNESSS HAVE JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1139 CONTINUE
      GOTO1199
C
 1140 CONTINUE
      IF(IARGT(1).EQ.'NUMB')GOTO1150
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1141)
 1141 FORMAT('***** ERROR IN DPLETH--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1142)
 1142 FORMAT('      IN THE LEGEND ... THICKNESS COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1143)
 1143 FORMAT('      THE LEGEND IS IDENTIFIED BY A NUMBER, AS IN--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1144)
 1144 FORMAT('      LEGEND 3 THICKNESS 0.3')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1150 CONTINUE
      I=IARG(1)
      IF(1.LE.I.AND.I.LE.MAXLEG)GOTO1160
      IERROR='YES'
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1151)
 1151 FORMAT('***** ERROR IN DPLETH--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1152)
 1152 FORMAT('      IN THE LEGEND ... THICKNESS COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1153)
 1153 FORMAT('      THE NUMBER OF LEGENDS MUST BE ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1154)MAXLEG
 1154 FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1155)
 1155 FORMAT('      SUCH WAS NOT THE CASE HERE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1156)I
 1156 FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1'LEGEND.')
      CALL DPWRST('XXX','BUG ')
      GOTO1199
C
 1160 CONTINUE
      IF(NUMARG.LE.2)GOTO1170
      IF(IHARG(3).EQ.'ON')GOTO1170
      IF(IHARG(3).EQ.'OFF')GOTO1170
      IF(IHARG(3).EQ.'AUTO')GOTO1170
      IF(IHARG(3).EQ.'DEFA')GOTO1170
      GOTO1175
C
 1170 CONTINUE
      PHOLD=PDEFTH
      GOTO1180
C
 1175 CONTINUE
      PHOLD=ARG(3)
      GOTO1180
C
 1180 CONTINUE
      IFOUND='YES'
      PLEGTH(I)=PHOLD
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1186)I,PLEGTH(I)
 1186 FORMAT('THE THICKNESS FOR LEGEND ',I8,
     1' HAS JUST BEEN SET TO ',E15.7)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO1199
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPLEUN(IHARG,IARGT,IARG,NUMARG,IDEFUZ,
     1MAXLEG,ILEGUN,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE UNITS FOR A LEGEND (SCREEN OR DATA).
C              THE UNITS FOR LEGEND I WILL BE PLACED IN THE I-TH ELEMENT
C              OF THE HOLLERITH VECTOR ILEGUN(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A HOLLERITH VECTOR)
C                     --IARG   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFUZ
C                     --MAXLEG
C     OUTPUT ARGUMENTS--ILEGUN (A HOLLERITH VECTOR
C                              WHOSE I-TH ELEMENT CONTAINS THE
C                              UNITS FOR LEGEND I.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--99/12
C     ORIGINAL VERSION--DECEMBER  1999.
C     UPDATED         --FEBRUARY  2018. ALLOW SEPARATE SPECIFICATION
C                                       FOR X AND Y AXIS.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
      CHARACTER*4 IDEFUZ
      CHARACTER*4 ILEGUN
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION IARG(*)
C
      DIMENSION ILEGUN(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(NUMARG.EQ.0)GOTO1199
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'UNIT')THEN
        IF(NUMARG.LE.1 .OR. IHARG(2).EQ.'ON' .OR.
     1     IHARG(2).EQ.'OFF' .OR. IHARG(2).EQ.'AUTO' .OR.
     1     IHARG(2).EQ.'DEFA')THEN
          IHOLD=IDEFUZ
        ELSE
          IHOLD=IHARG(2)
          IF(IHOLD.EQ.'DATA' .OR. IHOLD.EQ.'DD  ')THEN
            IHOLD='DATA'
          ELSEIF(IHOLD.EQ.'SCRE' .OR. IHOLD.EQ.'SS')THEN
            IHOLD='SCRE'
          ELSEIF(IHOLD.EQ.'DS  ')THEN
            IHOLD='DS  '
          ELSEIF(IHOLD.EQ.'SD  ')THEN
            IHOLD='SD  '
          ELSE
            IHOLD='SCRE'
          ENDIF
        ENDIF
C
        IFOUND='YES'
        DO1135I=1,MAXLEG
          ILEGUN(I)=IHOLD
 1135   CONTINUE
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
  999     FORMAT(1X)
          CALL DPWRST('XXX','BUG ')
          I=1
          WRITE(ICOUT,1136)ILEGUN(I)
 1136     FORMAT('ALL LEGEND UNITSS HAVE JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
      ELSEIF(NUMARG.GE.2.AND.IHARG(2).EQ.'UNIT')THEN
        IF(IARGT(1).NE.'NUMB')THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
 1141     FORMAT('***** ERROR IN LEGEND UNITS--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
 1142     FORMAT('      IN THE LEGEND ... UNITS COMMAND,')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1143)
 1143     FORMAT('      THE LEGEND IS IDENTIFIED BY A NUMBER, AS IN--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1144)
 1144     FORMAT('      LEGEND 3 UNITS DATA')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        I=IARG(1)
        IF(I.LT.1 .OR. I.GT.MAXLEG)THEN
          IERROR='YES'
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1141)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1142)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1153)
 1153     FORMAT('      THE NUMBER OF LEGENDS MUST BE ')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1154)MAXLEG
 1154     FORMAT('      BETWEEN 1 AND ',I8,' (INCLUSIVELY);')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1155)
 1155     FORMAT('      SUCH WAS NOT THE CASE HERE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1156)I
 1156     FORMAT('      A REFERENCE WAS MADE TO THE ',I8,'-TH ',
     1           'LEGEND.')
          CALL DPWRST('XXX','BUG ')
          GOTO1199
        ENDIF
C
        IF(NUMARG.LE.2 .OR. IHARG(3).EQ.'ON' .OR.
     1     IHARG(3).EQ.'OFF' .OR. IHARG(3).EQ.'AUTO' .OR.
     1     IHARG(3).EQ.'DEFA')THEN
          IHOLD=IDEFUZ
        ELSE
          IHOLD=IHARG(3)
          IF(IHOLD.EQ.'DATA' .OR. IHOLD.EQ.'DD  ')THEN
            IHOLD='DATA'
          ELSEIF(IHOLD.EQ.'SCRE' .OR. IHOLD.EQ.'SS')THEN
            IHOLD='SCRE'
          ELSEIF(IHOLD.EQ.'DS  ')THEN
            IHOLD='DS  '
          ELSEIF(IHOLD.EQ.'SD  ')THEN
            IHOLD='SD  '
          ELSE
            IHOLD='SCRE'
          ENDIF
        ENDIF
C
        IFOUND='YES'
        ILEGUN(I)=IHOLD
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1186)I,ILEGUN(I)
 1186     FORMAT('THE UNITS FOR LEGEND ',I8,' HAS JUST BEEN SET TO ',A4)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ENDIF
C
 1199 CONTINUE
      RETURN
      END
      SUBROUTINE DPLF(IHARG,NUMARG,
     1IDEFLF,
     1ITEXLF,
     1IBUGD2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LINE FEED SWITCH (ON OR OFF) FOR
C              TEXT SCRIPT.
C              THE LINE FEED SWITCH WILL BE PLACED
C              IN THE CHARACTER VARIABLE ITEXLF.
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --NUMARG
C                     --IDEFLF
C                     --IBUGD2
C     OUTPUT ARGUMENTS--ITEXLF
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--APRIL     1981.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEFLF
      CHARACTER*4 ITEXLF
      CHARACTER*4 IBUGD2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(IBUGD2.EQ.'OFF')GOTO90
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,51)
   51 FORMAT('***** AT THE BEGINNING OF DPLF--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,53)IDEFLF
   53 FORMAT('IDEFLF = ',A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,54)NUMARG
   54 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      DO55I=1,NUMARG
      WRITE(ICOUT,56)I,IHARG(I)
   56 FORMAT('I,IHARG(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
   55 CONTINUE
   90 CONTINUE
C
C               ********************************
C               **  TREAT THE LINE FEED CASE  **
C               ********************************
C
      IF(NUMARG.LE.0)GOTO1161
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'FEED')GOTO1161
      IF(IHARG(NUMARG).EQ.'ON')GOTO1161
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1162
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1161
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1165
      GOTO1170
C
 1161 CONTINUE
      ITEXLF='ON'
      GOTO1180
C
 1162 CONTINUE
      ITEXLF='OFF'
      GOTO1180
C
 1165 CONTINUE
      ITEXLF=IDEFLF
      GOTO1180
C
 1170 CONTINUE
      IERROR='YES'
      WRITE(ICOUT,1171)
 1171 FORMAT('***** ERROR IN DPLF--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1172)
 1172 FORMAT('      ILLEGAL ENTRY FOR LINE FEED ',
     1'COMMAND.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1173)
 1173 FORMAT('      TEST EXAMPLE TO DEMONSTRATE THE ',
     1'PROPER FORM--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1174)
 1174 FORMAT('      SUPPOSE THE THE ANALYST WISHES ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1175)
 1175 FORMAT('      TO HAVE A LINE FEED AFTER THE TEXT ',
     1'COMMAND,')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1177)
 1177 FORMAT('      THEN ALLOWABLE FORMS ARE--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1178)
 1178 FORMAT('           LINE FEED ON     (OR   LF ON) ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1179)
 1179 FORMAT('           LINE FEED        (OR   LF) ')
      CALL DPWRST('XXX','BUG ')
      GOTO9000
C
 1180 CONTINUE
      IFOUND='YES'
C
      IF(IFEEDB.EQ.'OFF')GOTO1189
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1181)
 1181 FORMAT('THE LINE FEED (AFTER TEXT) ')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1182)ITEXLF
 1182 FORMAT('HAS JUST BEEN SET TO ',A4)
      CALL DPWRST('XXX','BUG ')
 1189 CONTINUE
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGD2.EQ.'OFF')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('***** AT THE END       OF DPLF')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGD2,ISUBRO,IFOUND,IERROR
 9012 FORMAT('IBUGD2,ISUBRO,IFOUND,IERROR = ',A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)IDEFLF,ITEXLF
 9013 FORMAT('IDEFLF,ITEXLF = ',A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPLIB1(IH,IH2,X,SAVE1,SAVE2,SAVE3,I,IANGLU,
     1                  TERM,IBUGEV,IFOUND,IERROR)
C
C     PURPOSE--PERFORM A LIBRARY FUNCTION EVALUATION.
C     NOTE--THIS IS PART 1
C           (EVALUATE MANY OF THE USUAL FORTRAN LIBRARY FUNCTIONS)
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--JANUARY  1979.
C     UPDATED         --NOVEMBER  1979.
C     UPDATED         --FEBRUARY  1981.
C     UPDATED         --JUNE      1981.
C     UPDATED         --JULY      1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --JULY      1986.
C     UPDATED         --JUNE      1987. FRACT(.)
C     UPDATED         --SEPTEMBER 1987. ROUND(.)
C     UPDATED         --SEPTEMBER 1987. LSD(.)
C     UPDATED         --SEPTEMBER 1988. IND(.) = INDICATOR FUNCTION
C     UPDATED         --OCTOBER   1988. ROUND(.) WITH 2ND ARGUMENT
C     UPDATED         --DECEMBER  1988. LSD(.) RENAMED AS MSD(.)
C     UPDATED         --MARCH     1989. JULIA(.)
C     UPDATED         --MARCH     1989. SAVE3 AS INPUT ARGUMENT (JULIA)
C     UPDATED         --JANUARY   1990. BINPAT(.,.)
C     UPDATED         --FEBRUARY  1993. ARG CHECK FOR ROUND()
C     UPDATED         --JULY      1993. FIX JULIA (ALAN)
C     UPDATED         --SEPTEMBER 1994. ADD BETA, BETAI, LNBETA (FOR
C                                       COMPLETE, INCOMPLETE BETA,
C                                       LOG BETA)
C     UPDATED         --SEPTEMBER 1994. GAMMAI (INCOMPLETE GAMMA)
C     UPDATED         --SEPTEMBER 1994. GAMMAR (RECIPROCAL GAMMA)
C     UPDATED         --SEPTEMBER 1994. DIGAMMA (DIGAMMA)
C     UPDATED         --SEPTEMBER 1994. TRICOMI (TRICOMI GAMMA)
C     UPDATED         --SEPTEMBER 1994. GAMMAIC (COMPLEMENTARY
C                                       INCOMPLETE GAMMA)
C     UPDATED         --SEPTEMBER 1994. POCH (POCHHAMMER GENERALIZED
C                                       SYMBOL)
C     UPDATED         --SEPTEMBER 1994. POCH (POCHHAMMER GENERALIZED
C                                       SYMBOL FIRST ORDER)
C     UPDATED         --SEPTEMBER 1994. CHU (LOG CONFLUENT HYPERGE.)
C     UPDATED         --MARCH     1995. HEAVE (HEAVESIDE FUNCTION)
C     UPDATED         --MARCH     1995. STEP (STEP FUNCTION)
C     UPDATED         --MARCH     1995. CEIL (CEILING FUNCTION)
C     UPDATED         --MARCH     1995. GCD (GREATEST COMMON DIVISOR FUNCTION)
C     UPDATED         --JANUARY   1997. ADD LOGBETA AND LNGAMMA AS
C                                       SYNONYMS
C     UPDATED         --MARCH     1997. ADD LAMBDA, STRUVE FUNCTIONS
C     UPDATED         --JULY      1997. CHM (M CONFLUENT HYPERGEOMETRIC)
C     UPDATED         --AUGUST    1997. CGAMMA, CGAMMAI (COMPLEX GAMMA)
C     UPDATED         --AUGUST    1997. CLNGAM, CLNGAM (COMPLEX LOG GAMMA)
C     UPDATED         --AUGUST    1997. CPSI, CPSII (COMPLEX PSI)
C     UPDATED         --AUGUST    1997. HYPERGEO (HYPERGEOMETRIC)
C     UPDATED         --AUGUST    1997. PARABOLIC CYLINDER FUNCTIONS
C                                       PBDV, PBDV1
C                                       PBVV, PBVV1
C                                       PBWA, PBWA1
C     UPDATED         --AUGUST    1997. CLNBETA, CLNBETAI (COMPLEX
C                                       LOG BETA)
C     UPDATED         --AUGUST    1997. CBETA, CBETAI (COMPLEX BETA)
C     UPDATED         --SEPTEMBER 1997. PSI SYNONYM FOR DIGAMMA
C     UPDATED         --SEPTEMBER 1997. KELVIN FUNCTIONS
C                                       (BER, BERI, BER1, BERI1,
C                                       KER, KERI, KER1, KERI1)
C     UPDATED         --SEPTEMBER 1997. ZETA, ETA, CATLAN BETA
C     UPDATED         --OCTOBER   1997. PSIFN
C     UPDATED         --APRIL     1998. ADD IGACDF, IGAPDF, IGAPPF
C                                       (INVERTED GAMMA)
C     UPDATED         --APRIL     1998. ADD SUPPORT FOR LOCATION AND
C                                       SCALE PARAMETERS WHERE 
C                                       APPROPRIATE FOR CDF, PDF,
C                                       PPF, AND SF FUNCTIONS
C     UPDATED         --MAY       2002. FERMDIRA
C     UPDATED         --MAY       2006. HARMNUMB
C     UPDATED         --DECEMBER  2010. MERGE, MERGE3
C     UPDATED         --DECEMBER  2010. RELDIF, PERCDIF
C     UPDATED         --JANUARY   2011. RELERR, PERCERR
C     UPDATED         --MAY       2014. FIX TO ROUND FUNCTION
C     UPDATED         --AUGUST    2015. RECODED A BIT TO SIMPLIFY
C     UPDATED         --AUGUST    2015. BINOCTAL, BINDEC
C     UPDATED         --AUGUST    2015. OCTALBIN, DECBIN
C     UPDATED         --AUGUST    2018. CORRECTED FORMULA FOR SIGN
C                                       FUNCTION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IANGLU
      CHARACTER*4 IBUGEV
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISIGN
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C     FOLLOWING SECTION ADDED SEPTEMBER 1994.
C
      DOUBLE PRECISION DTEMP1(1000)
      DOUBLE PRECISION DTEMP2(1000)
CCCCC DOUBLE PRECISION DTERM
      DOUBLE PRECISION DRESLT
      DOUBLE PRECISION DRSLT2
      DOUBLE PRECISION DRSLT3
      DOUBLE PRECISION DRSLT4
      DOUBLE PRECISION DRSLT5
      DOUBLE PRECISION DRSLT6
      DOUBLE PRECISION DRSLT7
      DOUBLE PRECISION DRSLT8
      DOUBLE PRECISION DARG1
      DOUBLE PRECISION DARG2
      DOUBLE PRECISION DARG3
      DOUBLE PRECISION DARG4
      DOUBLE PRECISION DBETAI
      DOUBLE PRECISION DBETA
      DOUBLE PRECISION DLBETA
      DOUBLE PRECISION DGAMMA
      DOUBLE PRECISION DGAMI
      DOUBLE PRECISION DGAMR
      DOUBLE PRECISION DGAMIP
      DOUBLE PRECISION DGAMIC
      DOUBLE PRECISION DGAMIT
      DOUBLE PRECISION DPOCH
      DOUBLE PRECISION DPOCH1
      DOUBLE PRECISION DPSI
      DOUBLE PRECISION DCHU
      DOUBLE PRECISION FDM0P5
      DOUBLE PRECISION FDP0P5
      DOUBLE PRECISION FDP1P5
      DOUBLE PRECISION FDP2P5
C
C     FOLLOWING SECTION ADDED AUGUST 1997
C
      COMPLEX ZRESLT
      COMPLEX ZARG
      COMPLEX CPSI
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOMC.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----DATA STATEMENTS-------------------------------------------------
C
      DATA PI/3.1415926536/
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPLI'
      ISUBN2='B1  '
C
      IF(IBUGEV.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('AT THE BEGINNING OF DPLIB1--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IH,IH2,IBUGEV,IANGU,X
   52   FORMAT('IH,IH2,IBUGEV,IANGU,X = ',4(A4,2X),G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)SAVE1,SAVE2,SAVE3
   53   FORMAT('SAVE1,SAVE2,SAVE3 = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IFOUND='YES'
C
      IF(IH.EQ.'SQRT'.AND.IH2.EQ.'    ')THEN
        IF(X.LT.0.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1501)
 1501     FORMAT('***** ERROR IN DPLIB1--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1601)
 1601     FORMAT('      ATTEMPT TO TAKE SQUARE ROOT OF NEGATIVE NUMBER')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1701)X
 1701     FORMAT('      THE NEGATIVE NUMBER = ',E15.7)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
        ELSEIF(X.EQ.0.0)THEN
          TERM=X
        ELSE
          TERM=SQRT(X)
        ENDIF
      ELSEIF(IH.EQ.'EXP '.AND.IH2.EQ.'    ')THEN
        ARG=X
        CUTUPP=LOG(CPUMAX)
        CUTLOW=LOG(TINY(1.0D0))
        IF(ARG.GE.CUTUPP)THEN
          TERM=CPUMAX
        ELSEIF(ARG.LT.CUTLOW)THEN
          TERM=0.0
        ELSE
          TERM=EXP(ARG)
        ENDIF
      ELSEIF((IH.EQ.'LN  '.AND.IH2.EQ.'    ') .OR.
     1       (IH.EQ.'LOG '.AND.IH2.EQ.'    ') .OR.
     1       (IH.EQ.'LOGE'.AND.IH2.EQ.'    ') .OR.
     1       (IH.EQ.'LOG'.AND.IH2.EQ.'    ')  .OR.
     1       (IH.EQ.'LOG'.AND.IH2.EQ.'E   '))THEN
        IF(X.GT.0.0)THEN
          TERM=LOG(X)
        ELSE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1501)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1603)
 1603     FORMAT('      ATTEMPT TO TAKE LOG OF NON-POSITIVE NUMBER')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1703)X
 1703     FORMAT('      THE NON-POSITIVE NUMBER = ',E15.7)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
        ENDIF
      ELSEIF((IH.EQ.'LOG1'.AND.IH2.EQ.'0   ') .OR.
     1       (IH.EQ.'LOG'.AND.IH2.EQ.'10  '))THEN
        IF(X.GT.0.0)THEN
          TERM=LOG10(X)
        ELSE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1501)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1603)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1703)X
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
        ENDIF
      ELSEIF(IH.EQ.'LOG2'.AND.IH2.EQ.'    ')THEN
        IF(X.GT.0.0)THEN
          TERM=LOG(X)/LOG(2.0)
        ELSE
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1501)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1603)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1703)X
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
        ENDIF
      ELSEIF(IH.EQ.'ATAN'.AND.IH2.EQ.'    ')THEN
        ARG=X
        RESULT=ATAN(ARG)
        IF(IANGLU.EQ.'DEGR')RESULT=(180.0/PI)*RESULT
        IF(IANGLU.EQ.'GRAD')RESULT=(200.0/PI)*RESULT
        TERM=RESULT
      ELSEIF(IH.EQ.'ATAN'.AND.IH2.EQ.'2   ')THEN
        ARG1=X
        ARG2=SAVE1
        RESULT=ATAN2(ARG1,ARG2)
        TERM=RESULT
      ELSEIF(IH.EQ.'ABS '.AND.IH2.EQ.'    ')THEN
        TERM=ABS(X)
      ELSEIF((IH.EQ.'AINT'.AND.IH2.EQ.'    ') .OR.
     1       (IH.EQ.'INT '.AND.IH2.EQ.'    ') .OR.
     1       (IH.EQ.'INTE'.AND.IH2.EQ.'GER '))THEN
        TERM=AINT(X)
      ELSEIF((IH.EQ.'AMOD'.AND.IH2.EQ.'    ') .OR.
     1       (IH.EQ.'MOD '.AND.IH2.EQ.'    ') .OR.
     1       (IH.EQ.'MODU'.AND.IH2.EQ.'LO  '))THEN
        TERM=AMOD(X,SAVE1)
      ELSEIF(IH.EQ.'SIGN'.AND.IH2.EQ.'    ')THEN
        IF(X.LT.0.0)THEN
          TERM=-1.0
        ELSEIF(X.GT.0.0)THEN
          TERM=1.0
        ELSE
          TERM=0.
        ENDIF
      ELSEIF(IH.EQ.'FRAC'.AND.IH2.EQ.'T   ')THEN
        TERM=X-AINT(X)
        TERM=ABS(TERM)
      ELSEIF(IH.EQ.'MSD '.AND.IH2.EQ.'    ')THEN
        TERM=ABS(X)
        DO1515I=1,1000
          IF(TERM.GT.10.0)TERM=TERM/10.0
          IF(TERM.LT.1.0)TERM=TERM*10.0
          IF(1.0.LE.TERM.AND.TERM.LE.10.0)GOTO1615
 1515   CONTINUE
 1615   CONTINUE
        TERM=AINT(TERM)
      ELSEIF(IH.EQ.'ROUN'.AND.IH2.EQ.'D   ')THEN
CCCCC   THE FOLLOWING ERROR CHECK SECTION WAS ADDED FEBRUARY 1993
        IF(SAVE1.LT.-10.0 .OR. SAVE1.GT.10.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1501)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2102)
 2102     FORMAT('      INVALID (OR NON-EXISTENT) SECOND ARGUMENT')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2103)
 2103     FORMAT('      FOR THE    ROUND(..,..)    FUNCTION')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2104)
 2104     FORMAT('      EXAMPLE OF PROPER FORM--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2105)
 2105     FORMAT('      LET Y2=ROUND(Y,3) TO ROUND TO 3 DEC. PLACES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2106)
 2106     FORMAT('      LET Y2=ROUND(Y,0) TO ROUND TO 0 DEC. PLACES')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
        ENDIF
CCCCC   IF(X.GE.0.0)TERM=AINT(X+0.5)
CCCCC   IF(X.LT.0.0)TERM=AINT(X-0.5)
C
C       2014/05: ALGORITHM BELOW DID NOT WORK CORRECTLY FOR INTEL 64-BIT
C                COMPILER UNDER WINDOWS.  USE A DIFFERENT ALGORITHM.
C
CCCCC   ABSX=ABS(X)
CCCCC   IPOWER=0
CCCCC   IF(SAVE1.GT.0.0)IPOWER=AINT(SAVE1+0.5)
CCCCC   AMULT=10.0**IPOWER
CCCCC   TEMP2=ABSX*AMULT
CCCCC   TEMP3=AINT(TEMP2+0.5)
CCCCC   TEMP4=TEMP3/AMULT
CCCCC   TERM=TEMP4
CCCCC   IF(X.LT.0.0)TERM=(-TEMP4)
        ABSX=ABS(X)
        IF(SAVE1.LT.0.0)SAVE1=0.0
        IPOWER=INT(AINT(SAVE1+0.5))
        TERM=FLOAT(INT(ABSX*10**IPOWER + 0.5))/10**IPOWER
        IF(X.LT.0.0)TERM=-TERM
      ELSEIF(IH.EQ.'IND '.AND.IH2.EQ.'    ')THEN
        TERM=0.0
        IF(ABS(SAVE1).EQ.0.0)EPS=0.000001
        IF(ABS(SAVE1).NE.0.0)EPS=ABS(SAVE1*0.000001)
        ALOWER=SAVE1-EPS
        AUPPER=SAVE1+EPS
        IF(ALOWER.LE.X.AND.X.LE.AUPPER)TERM=1.0
      ELSEIF((IH.EQ.'OCTA'.AND.IH2.EQ.'L   ') .OR.
     1      (IH.EQ.'OCTD'.AND.IH2.EQ.'EC  '))THEN
        IBASE1=8
        IBASE2=10
        GOTO8010
      ELSEIF(IH.EQ.'DECO'.AND.IH2.EQ.'CT  ')THEN
        IBASE1=10
        IBASE2=8
        GOTO8010
      ELSEIF(IH.EQ.'BIND'.AND.IH2.EQ.'EC  ')THEN
        IBASE1=2
        IBASE2=10
        GOTO8010
      ELSEIF((IH.EQ.'BINO'.AND.IH2.EQ.'CTAL') .OR.
     1       (IH.EQ.'BINO' .AND. IH2.EQ.'CT'))THEN
C
        IBASE1=2
        IBASE2=10
        ARG=X
        IX=INT(ARG+0.5)
        ISIGN='+'
        IF(IX.LT.0)ISIGN='-'
        ISUM=0
        DO435IBIT=1,NUMBPW
          INEWX=IX/IBASE2
          IDIG=IX-IBASE2*INEWX
          ISUM=ISUM+IDIG*IBASE1**(IBIT-1)
          IF(INEWX.LE.0)GOTO436
          IX=INEWX
  435   CONTINUE
  436   CONTINUE
        IF(ISIGN.EQ.'-')ISUM=-ISUM
        X=ISUM
C
        IBASE1=10
        IBASE2=8
        GOTO8010
      ELSEIF(IH.EQ.'DECB'.AND.IH2.EQ.'IN  ')THEN
        IBASE1=10
        IBASE2=2
        GOTO8010
      ELSEIF((IH.EQ.'OCTA'.AND.IH2.EQ.'LBIN') .OR.
     1       (IH.EQ.'OCTB'.AND.IH2.EQ.'IN  '))THEN
        IBASE1=8
        IBASE2=10
        ARG=X
        IX=INT(ARG+0.5)
        ISIGN='+'
        IF(IX.LT.0)ISIGN='-'
        ISUM=0
        DO445IBIT=1,NUMBPW
          INEWX=IX/IBASE2
          IDIG=IX-IBASE2*INEWX
          ISUM=ISUM+IDIG*IBASE1**(IBIT-1)
          IF(INEWX.LE.0)GOTO446
          IX=INEWX
  445   CONTINUE
  446   CONTINUE
        IF(ISIGN.EQ.'-')ISUM=-ISUM
        X=ISUM
C
        IBASE1=10
        IBASE2=2
        GOTO8010
      ELSEIF(IH.EQ.'ERF '.AND.IH2.EQ.'    ')THEN
CCCCC   DARG1=DBLE(X)*DSQRT(2.0D0)
CCCCC   CALL NODCDF(DARG1,DRESLT)
CCCCC   DTERM=2.0D0*DRESLT-1.0D0
CCCCC   TERM=REAL(DTERM)
        DARG1=DBLE(X)
        TERM=REAL(ERFDP(DARG1))
      ELSEIF(IH.EQ.'ERFC'.AND.IH2.EQ.'    ')THEN
CCCCC   DARG1=DBLE(X)*DSQRT(2.0D0)
CCCCC   CALL NODCDF(DARG1,DRESLT)
CCCCC   DTERM=2.0D0*DRESLT-1.0D0
CCCCC   DTERM=1.0D0-DTERM
CCCCC   TERM=REAL(DTERM)
        DARG1=DBLE(X)
        IND=0
        TERM=REAL(ERFC1(IND,DARG1))
      ELSEIF(IH.EQ.'GAMM'.AND.IH2.EQ.'A   ')THEN
        DARG1=DBLE(X)
CCCCC   CALL GAMMAF(ARG,TERM)
        DRESLT=DGAMMA(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF((IH.EQ.'LOGG'.AND.IH2.EQ.'AMMA') .OR.
     1  (IH.EQ.'LNGA'.AND.IH2.EQ.'MMA '))THEN
        ARG=X
        CALL LOGGAM(ARG,TERM)
      ELSEIF(IH.EQ.'DIM '.AND.IH2.EQ.'    ')THEN
        TERM=0.0
        IF(SAVE1.LT.X)TERM=X-SAVE1
      ELSEIF(IH.EQ.'JULI'.AND.IH2.EQ.'A   ')THEN
CCCCC   THE FOLLOWING SECTION (JULIA) WAS ADDED MARCH 1989
        XCALC=X
        YCALC=SAVE1
        X0=SAVE2
        Y0=SAVE3
        IMAX=100
        ICOUNT=0
        CUT=10.0**6
        DO511I=1,IMAX
          ICOUNT=ICOUNT+1
CCCCC     THE FOLLOWING LINE WAS ADDED JULY 1993 (ALAN)
          XTEMP=XCALC
          XCALC=XCALC**2-YCALC**2+X0
CCCCC     THE FOLLOWING LINE WAS FIXED JULY 1993 (ALAN)
CCCCC     YCALC=2.0*XCALC*YCALC+Y0
          YCALC=2.0*XTEMP*YCALC+Y0
          IF(ABS(XCALC).GT.CUT)GOTO515
          IF(ABS(YCALC).GT.CUT)GOTO515
  511   CONTINUE
  515   CONTINUE
        TERM=ICOUNT
      ELSEIF(IH.EQ.'BINP'.AND.IH2.EQ.'AT  ')THEN
CCCCC   THE FOLLOWING SECTION (BINPAT(X,K)) WAS ADDED JANUARY 1990
CCCCC   BINPAT WILL OUTPUT A -1 OR +1
        IX=INT(X+0.1)
        ISAVE=INT(SAVE1+0.1)
        IMOD=2**ISAVE
        IMOD2=IMOD/2
        IX2=MOD(IX,IMOD)
        IF(IX2.EQ.0)IX2=IMOD
        IX3=1
        IF(IX2.LE.IMOD2)IX3=(-1)
        TERM=REAL(IX3)
      ELSEIF(IH.EQ.'BETA'.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        DRESLT=DBETA(DARG1,DARG2)
        TERM=REAL(DRESLT)
      ELSEIF(IH.EQ.'BETA'.AND.IH2.EQ.'I   ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        DARG3=DBLE(SAVE2)
        DRESLT=DBETAI(DARG1,DARG2,DARG3)
        TERM=REAL(DRESLT)
      ELSEIF((IH.EQ.'LNBE'.AND.IH2.EQ.'TA  ') .OR.
     1       (IH.EQ.'LOGB'.AND.IH2.EQ.'ETA '))THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        DRESLT=DLBETA(DARG1,DARG2)
        TERM=REAL(DRESLT)
      ELSEIF(IH.EQ.'GAMM'.AND.IH2.EQ.'AI  ')THEN
        DARG2=DBLE(X)
        DARG1=DBLE(SAVE1)
        DRESLT=DGAMI(DARG1,DARG2)
        TERM=REAL(DRESLT)
      ELSEIF(IH.EQ.'GAMM'.AND.IH2.EQ.'AIP ')THEN
        DARG2=DBLE(X)
        DARG1=DBLE(SAVE1)
        DRESLT=DGAMIP(DARG1,DARG2)
        TERM=REAL(DRESLT)
      ELSEIF(IH.EQ.'GAMM'.AND.IH2.EQ.'AIC ')THEN
        DARG2=DBLE(X)
        DARG1=DBLE(SAVE1)
        DRESLT=DGAMIC(DARG1,DARG2)
        TERM=REAL(DRESLT)
      ELSEIF(IH.EQ.'GAMM'.AND.IH2.EQ.'AR  ')THEN
        DARG1=DBLE(X)
        DRESLT=DGAMR(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF((IH.EQ.'DIGA'.AND.IH2.EQ.'MMA ') .OR.
     1       (IH.EQ.'PSI '.AND.IH2.EQ.'    '))THEN
        DARG1=DBLE(X)
        DRESLT=DPSI(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IH.EQ.'PSIF'.AND.IH2.EQ.'N   ')THEN
        DARG1=DBLE(X)
        IF(DARG1.LE.0.0D0)THEN
          WRITE(ICOUT,1676)
 1676     FORMAT('***** ERROR FROM PSIFN--FIRST ARGUMENT IS NOT ',
     1           'POSITIVE')
          CALL DPWRST('XXX','BUG ')
        ELSE
          IARG1=INT(SAVE1+0.5)
          IF(IARG1.LT.0.0.OR.IARG1.GT.100)THEN
            WRITE(ICOUT,1677)
 1677       FORMAT('***** ERROR FROM PSIFN--SECOND ARGUMENT IS NOT ',
     1             'IN THE RANGE (0,100)')
            CALL DPWRST('XXX','BUG ')
          ELSE
            IARG2=1
            IARG3=1
            IARG4=0
            IERR=0
            CALL DPSIFN(DARG1,IARG1,IARG2,IARG3,DTEMP1,IARG4,IERR)
            DRESLT=DTEMP1(1)
            IF(IERR.LE.0)THEN
              TERM=SNGL(DRESLT)
            ELSEIF(IERR.EQ.1)THEN
              WRITE(ICOUT,1671)
 1671         FORMAT('**** ERROR FROM PSIFN--INPUT ERROR')
              CALL DPWRST('XXX','BUG ')
            ELSEIF(IERR.EQ.2)THEN
              WRITE(ICOUT,1672)
 1672         FORMAT('**** ERROR FROM PSIFN--OVERFLOW, EITHER X IS TOO',
     1               ' SMALL OR ORDER IS TOO LARGE')
              CALL DPWRST('XXX','BUG ')
            ELSEIF(IERR.EQ.3)THEN
              WRITE(ICOUT,1673)
 1673         FORMAT('**** ERROR FROM PSIFN--ORDER IS TOO LARGE')
              CALL DPWRST('XXX','BUG ')
            ELSE
              TERM=SNGL(DRESLT)
            ENDIF
          ENDIF
        ENDIF
      ELSEIF(IH.EQ.'TRIG'.AND.IH2.EQ.'AMMA')THEN
        DARG1=DBLE(X)
        IF(DARG1.LE.0.0D0)THEN
          WRITE(ICOUT,11676)
11676     FORMAT('***** ERROR FROM TRIGAMMA--FIRST ARGUMENT IS NOT ',
     1           'POSITIVE')
          CALL DPWRST('XXX','BUG ')
        ELSE
          IARG1=1
          IARG2=1
          IARG3=1
          IARG4=0
          IERR=0
          CALL DPSIFN(DARG1,IARG1,IARG2,IARG3,DTEMP1,IARG4,IERR)
          DRESLT=DTEMP1(1)
          IF(IERR.LE.0)THEN
            TERM=REAL(DRESLT)
            ELSEIF(IERR.EQ.1)THEN
            WRITE(ICOUT,1671)
            CALL DPWRST('XXX','BUG ')
          ELSEIF(IERR.EQ.2)THEN
            WRITE(ICOUT,1672)
            CALL DPWRST('XXX','BUG ')
          ELSEIF(IERR.EQ.3)THEN
            WRITE(ICOUT,1673)
            CALL DPWRST('XXX','BUG ')
          ELSE
            TERM=REAL(DRESLT)
          ENDIF
        ENDIF
      ELSEIF(IH.EQ.'TRIC'.AND.IH2.EQ.'OMI ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        DRESLT=DGAMIT(DARG2,DARG1)
        TERM=SNGL(DRESLT)
      ELSEIF(IH.EQ.'POCH'.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        DRESLT=DPOCH(DARG2,DARG1)
        TERM=SNGL(DRESLT)
      ELSEIF(IH.EQ.'POCH'.AND.IH2.EQ.'1   ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        DRESLT=DPOCH1(DARG2,DARG1)
        TERM=SNGL(DRESLT)
      ELSEIF(IH.EQ.'CHU '.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        DARG3=DBLE(SAVE2)
        DRESLT=DCHU(DARG2,DARG3,DARG1)
        TERM=SNGL(DRESLT)
      ELSEIF(IH.EQ.'HEAV'.AND.IH2.EQ.'E   ')THEN
CCCCC   THE FOLLOWING SECTION (HEAVE(X,A,B)) WAS ADDED MARCH 1995
CCCCC   HEAVSIDE FUNCTION IS 1 IF X>= 0, 0 IF X < 0. TEST FOR A SHIFT
CCCCC   PARAMETER, THE FUNCTION IS 1 IF A <= X <= B, 0 OTHERWISE
        IF(SAVE1.NE.CPUMIN)THEN
          ARG2=SAVE1
        ELSE
          ARG2=0.0
        ENDIF
        IF(SAVE2.NE.CPUMIN)THEN
          ARG3=SAVE2
        ELSE
          ARG3=CPUMAX
        ENDIF
        TERM=0.0
        IF(ARG2.LE.ARG3)THEN
          IF(X.GE.ARG2.AND.X.LE.ARG3)TERM=1.0
        ELSE
          IF(X.GE.ARG3.AND.X.LE.ARG2)TERM=1.0
        ENDIF
      ELSEIF(IH.EQ.'STEP'.AND.IH2.EQ.'    ')THEN
        ARG1=X
        IF(ARG1.GE.0.0)THEN
          IARG2=INT(ARG1)
          TERM=REAL(IARG2)
        ELSE
          IARG2=INT(ARG1)
          ARG3=REAL(IARG2)
          ARG4=ARG1-ARG3
          TERM=ARG3
          IF(ARG4.NE.0.0)TERM=TERM-1.0
        ENDIF
      ELSEIF(IH.EQ.'CEIL'.AND.IH2.EQ.'    ')THEN
        ARG1=X
        IF(ARG1.GE.0.0)THEN
          IARG2=INT(ARG1)
          ARG3=REAL(IARG2)
          ARG4=ARG1-ARG3
          TERM=ARG3
          IF(ARG4.NE.0.0)TERM=TERM+1.0
        ELSE
          IARG2=INT(ARG1)
          TERM=REAL(IARG2)
        ENDIF
      ELSEIF(IH.EQ.'FLOO'.AND.IH2.EQ.'R   ')THEN
        ARG1=X
        IF(ARG1.LE.0.0)THEN
          IARG2=INT(ARG1)
          ARG3=REAL(IARG2)
          ARG4=ARG1-ARG3
          TERM=ARG3
          IF(ARG4.NE.0.0)TERM=TERM-1.0
        ELSE
          IARG2=INT(ARG1)
          TERM=REAL(IARG2)
        ENDIF
      ELSEIF(IH.EQ.'GCD '.AND.IH2.EQ.'    ')THEN
        IARG1=INT(X+0.5)
        ITERM1=IABS(IARG1)
        IARG2=INT(SAVE1+0.5)
        ITERM2=IABS(IARG2)
        IF(ITERM1.EQ.0)THEN
          TERM=REAL(ITERM2)
        ELSE
 851      CONTINUE
          IARG3=MOD(ITERM2,ITERM1)
          IF(IARG3.EQ.0)THEN
            TERM=REAL(ITERM1)
            GOTO9000
          ENDIF
          ITERM2=ITERM1
          ITERM1=IARG3
          GOTO851
        ENDIF
      ELSEIF(IH.EQ.'LAMB'.AND.IH2.EQ.'DA  ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        ITEMP=INT(DARG2)
        DARG3=DABS(DARG2-DBLE(ITEMP))
        IERROR='NO'
        IF(DARG3.LT.0.0D-20)THEN
          CALL LAMN(INT(DARG2),DARG1,NJUNK,DRESLT,DARG3,IERROR)
        ELSE
          CALL LAMV(DARG2,DARG1,DARG4,DRESLT,DARG3,IERROR)
        ENDIF
        IF(IERROR.EQ.'YES')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,861)
  861     FORMAT('***** ERROR.  ORDER OF LAMBDA FUNCTION MUST BE ',
     1           'LESS THAN 500.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          TERM=SNGL(DRESLT)
        ENDIF
      ELSEIF(IH.EQ.'LAMB'.AND.IH2.EQ.'DAP ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        ITEMP=INT(DARG2)
        DARG3=DABS(DARG2-DBLE(ITEMP))
        IERROR='NO'
        IF(DARG3.LT.0.0D-20)THEN
          CALL LAMN(INT(DARG2),DARG1,NJUNK,DARG3,DRESLT,IERROR)
        ELSE
          CALL LAMV(DARG2,DARG1,DARG4,DARG3,DRESLT,IERROR)
        ENDIF
        IF(IERROR.EQ.'YES')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,871)
  871     FORMAT('***** ERROR.  ORDER OF LAMBDA FUNCTION MUST BE ',
     1           'LESS THAN 500.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          TERM=SNGL(DRESLT)
        ENDIF
      ELSEIF(IH.EQ.'H0  '.AND.IH2.EQ.'    ')THEN
        IF(X.LT.0.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,881)
  881     FORMAT('***** ERROR.  FIRST ARGUMENT TO H0 MUST BE ',
     1           'NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          DARG1=DBLE(X)
          CALL STVH0(DARG1,DRESLT)
          TERM=SNGL(DRESLT)
        ENDIF
      ELSEIF(IH.EQ.'H1  '.AND.IH2.EQ.'    ')THEN
        IF(X.LT.0.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,891)
  891     FORMAT('***** ERROR.  FIRST ARGUMENT TO H1 MUST BE ',
     1           'NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          DARG1=DBLE(X)
          CALL STVH1(DARG1,DRESLT)
          TERM=SNGL(DRESLT)
        ENDIF
      ELSEIF(IH.EQ.'HV  '.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        IF(X.LT.0.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,901)
  901     FORMAT('***** ERROR.  FIRST ARGUMENT TO HV MUST BE ',
     1           'NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          IF(SAVE1.LT.-8.5 .OR. SAVE1.GT.12.5)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,906)
  906       FORMAT('***** ERROR.  SECOND ARGUMENT TO HV MUST BE IN ',
     1             'THE RANGE (-8.5, 12.5).')
            CALL DPWRST('XXX','BUG ')
            TERM=0.0
          ELSE
            DARG2=DBLE(SAVE1)
            CALL STVHV(DARG2,DARG1,DRESLT)
            TERM=SNGL(DRESLT)
          ENDIF
        ENDIF
      ELSEIF(IH.EQ.'L0  '.AND.IH2.EQ.'    ')THEN
        IF(X.LT.0.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,911)
  911     FORMAT('***** ERROR.  FIRST ARGUMENT TO L0 MUST BE ',
     1           'NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          DARG1=DBLE(X)
          CALL STVL0(DARG1,DRESLT)
          TERM=SNGL(DRESLT)
        ENDIF
      ELSEIF(IH.EQ.'L1  '.AND.IH2.EQ.'    ')THEN
        IF(X.LT.0.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,921)
  921     FORMAT('***** ERROR.  FIRST ARGUMENT TO L1 MUST BE ',
     1           'NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          DARG1=DBLE(X)
          CALL STVL1(DARG1,DRESLT)
          TERM=SNGL(DRESLT)
        ENDIF
      ELSEIF(IH.EQ.'LV  '.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        IF(X.LT.0.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,931)
  931     FORMAT('***** ERROR.  FIRST ARGUMENT TO HV MUST BE ',
     1           'NON-NEGATIVE.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          IF(SAVE1.LT.-20.0 .OR. SAVE1.GT.20.0)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,936)
  936       FORMAT('***** ERROR.  SECOND ARGUMENT TO HV MUST BE IN ',
     1            'THE RANGE (-20.0, 20.0).')
            CALL DPWRST('XXX','BUG ')
            TERM=0.0
          ELSE
            DARG2=DBLE(SAVE1)
            CALL STVLV(DARG2,DARG1,DRESLT)
            TERM=SNGL(DRESLT)
          ENDIF
        ENDIF
      ELSEIF(IH.EQ.'CHM '.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        DARG3=DBLE(SAVE2)
        CALL CHM(DARG2,DARG3,DARG1,DRESLT,IERROR)
        TERM=SNGL(DRESLT)
      ELSEIF(IH.EQ.'CGAM'.AND.IH2.EQ.'MA  ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        ICODE=1
        CALL CGAMA(DARG1,DARG2,ICODE,DRESLT,DRSLT2)
        TERM=REAL(DRESLT)
      ELSEIF(IH.EQ.'CLNG'.AND.IH2.EQ.'AM  ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        ICODE=0
        CALL CGAMA(DARG1,DARG2,ICODE,DRESLT,DRSLT2)
        TERM=REAL(DRESLT)
      ELSEIF(IH.EQ.'CGAM'.AND.IH2.EQ.'MAI ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        ICODE=1
        CALL CGAMA(DARG1,DARG2,ICODE,DRESLT,DRSLT2)
        TERM=REAL(DRSLT2)
      ELSEIF(IH.EQ.'CLNG'.AND.IH2.EQ.'AMI ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        ICODE=0
        CALL CGAMA(DARG1,DARG2,ICODE,DRESLT,DRSLT2)
        TERM=REAL(DRSLT2)
      ELSEIF(IH.EQ.'CPSI'.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        ZARG=CMPLX(DARG1,DARG2)
        ZRESLT=CPSI(ZARG)
        TERM=REAL(ZRESLT)
      ELSEIF(IH.EQ.'CPSI'.AND.IH2.EQ.'I   ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        ZARG=CMPLX(DARG1,DARG2)
        ZRESLT=CPSI(ZARG)
        TERM=AIMAG(ZRESLT)
      ELSEIF(IH.EQ.'HYPE'.AND.IH2.EQ.'RGEO')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        DARG3=DBLE(SAVE2)
        DARG4=DBLE(SAVE3)
        IF(DABS(DARG1).GE.1.0D0)THEN
          WRITE(ICOUT,992)
  992     FORMAT('***** ERROR: HYPERGEO FUNCTION IS CURRENTLY ONLY ',
     1           'SUPPORTED FOR ARGUMENTS WITH ABSOLUTE VALUE LESS ',
     1          'THAN 1')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          CALL HYGFX(DARG2,DARG3,DARG4,DARG1,DRESLT,IERR2)
          TERM=SNGL(DRESLT)
        ENDIF
      ELSEIF(IH.EQ.'PBDV'.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        CALL PBDV(DARG2,DARG1,DTEMP1,DTEMP2,DRESLT,DRSLT2)
        TERM=SNGL(DRESLT)
      ELSEIF(IH.EQ.'PBDV'.AND.IH2.EQ.'1   ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        CALL PBDV(DARG2,DARG1,DTEMP1,DTEMP2,DRESLT,DRSLT2)
        TERM=SNGL(DRSLT2)
      ELSEIF(IH.EQ.'PBVV'.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        CALL PBVV(DARG2,DARG1,DTEMP1,DTEMP2,DRESLT,DRSLT2)
        TERM=SNGL(DRESLT)
      ELSEIF(IH.EQ.'PBVV'.AND.IH2.EQ.'1   ')THEN
        DARG1=DBLE(X)
        DARG2=DBLE(SAVE1)
        CALL PBVV(DARG2,DARG1,DTEMP1,DTEMP2,DRESLT,DRSLT2)
        TERM=SNGL(DRSLT2)
      ELSEIF(IH.EQ.'PBWA'.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(ABS(X))
        DARG2=DBLE(SAVE1)
        IF(DABS(DARG1).GT.5.0D0)THEN
          WRITE(ICOUT,1042)
 1042     FORMAT('***** ERROR: ABSOLUTE VALUE OF FIRST ARGUMENT TO ',
     1           'PBWA MUST BE LESS THAN OR EQUAL TO 5.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          IF(DABS(DARG2).GT.5.0D0)THEN
            WRITE(ICOUT,1044)
 1044       FORMAT('***** ERROR: ABSOLUTE VALUE OF SECOND ARGUMENT TO ',
     1             'PBWA MUST BE LESS THAN OR EQUAL TO 5.')
            CALL DPWRST('XXX','BUG ')
            TERM=0.0
          ELSE
            CALL PBWA(DARG2,DARG1,DRESLT,DRSLT2,DRSLT3,DRSLT4)
            IF(X.GE.0.0)THEN
              TERM=SNGL(DRESLT)
            ELSE
              TERM=SNGL(DRSLT3)
            ENDIF
          ENDIF
        ENDIF
      ELSEIF(IH.EQ.'PBWA'.AND.IH2.EQ.'1   ')THEN
        DARG1=DBLE(ABS(X))
        DARG2=DBLE(SAVE1)
        CALL PBWA(DARG2,DARG1,DRESLT,DRSLT2,DRSLT3,DRSLT4)
        IF(X.GE.0.0)THEN
          TERM=SNGL(DRSLT2)
        ELSE
          TERM=SNGL(DRSLT4)
        ENDIF
      ELSEIF(IH.EQ.'CLNB'.AND.IH2.EQ.'ETA ')THEN
        TERM=0.0
        DARG1=DBLE(X)
        IF(DARG1.LE.0.D0)THEN
          WRITE(ICOUT,1061)
 1061     FORMAT('****** ERROR FROM CLNBETA: FIRST ARGUMENT MUST BE ',
     1           'POSITIVE.')
          CALL DPWRST('XXX','BUG ')
        ELSE
          DARG2=DBLE(SAVE1)
          DARG3=DBLE(SAVE2)
          IF(DARG3.LE.0.D0)THEN
            WRITE(ICOUT,1062)
 1062       FORMAT('****** ERROR FROM CLNBETA: THIRD ARGUMENT MUST BE ',
     1             'POSITIVE.')
            CALL DPWRST('XXX','BUG ')
          ELSE
            DARG4=DBLE(SAVE2)
            ICODE=0
            CALL CGAMA(DARG1,DARG2,ICODE,DRESLT,DRSLT2)
            CALL CGAMA(DARG3,DARG4,ICODE,DRSLT3,DRSLT4)
            CALL CGAMA(DARG1+DARG3,DARG2+DARG4,ICODE,DRSLT5,DRSLT6)
            TERM=REAL(DRESLT + DRSLT3 - DRSLT5)
          ENDIF
        ENDIF
      ELSEIF(IH.EQ.'CLNB'.AND.IH2.EQ.'ETAI')THEN
        TERM=0.0
        DARG1=DBLE(X)
        IF(DARG1.LE.0.D0)THEN
          WRITE(ICOUT,1071)
 1071     FORMAT('****** ERROR FROM CLNBETAI: FIRST ARGUMENT MUST BE ',
     1           'POSITIVE.')
          CALL DPWRST('XXX','BUG ')
        ELSE
          DARG2=DBLE(SAVE1)
          DARG3=DBLE(SAVE2)
          IF(DARG3.LE.0.D0)THEN
            WRITE(ICOUT,1072)
 1072       FORMAT('****** ERROR FROM CLNBETAI: THIRD ARGUMENT MUST ',
     1             'BE POSITIVE.')
            CALL DPWRST('XXX','BUG ')
          ELSE
            DARG4=DBLE(SAVE2)
            ICODE=0
            CALL CGAMA(DARG1,DARG2,ICODE,DRESLT,DRSLT2)
            CALL CGAMA(DARG3,DARG4,ICODE,DRSLT3,DRSLT4)
            CALL CGAMA(DARG1+DARG3,DARG2+DARG4,ICODE,DRSLT5,DRSLT6)
            TERM=REAL(DRSLT2 + DRSLT4 - DRSLT6)
          ENDIF
        ENDIF
      ELSEIF(IH.EQ.'CBET'.AND.IH2.EQ.'A   ')THEN
        TERM=0.0
        DARG1=DBLE(X)
        IF(DARG1.LE.0.D0)THEN
          WRITE(ICOUT,1081)
 1081     FORMAT('****** ERROR FROM CBETA: FIRST ARGUMENT MUST BE ',
     1           'POSITIVE.')
          CALL DPWRST('XXX','BUG ')
        ELSE
          DARG2=DBLE(SAVE1)
          DARG3=DBLE(SAVE2)
          IF(DARG3.LE.0.D0)THEN
            WRITE(ICOUT,1082)
 1082       FORMAT('****** ERROR FROM CBETA: THIRD ARGUMENT MUST BE ',
     1             'POSITIVE.')
            CALL DPWRST('XXX','BUG ')
          ELSE
            DARG4=DBLE(SAVE2)
            ICODE=0
            CALL CGAMA(DARG1,DARG2,ICODE,DRESLT,DRSLT2)
            CALL CGAMA(DARG3,DARG4,ICODE,DRSLT3,DRSLT4)
            CALL CGAMA(DARG1+DARG3,DARG2+DARG4,ICODE,DRSLT5,DRSLT6)
            TERM=SNGL(DEXP(DRESLT + DRSLT3 - DRSLT5))
          ENDIF
        ENDIF
      ELSEIF(IH.EQ.'CBET'.AND.IH2.EQ.'AI  ')THEN
        TERM=0.0
        DARG1=DBLE(X)
        IF(DARG1.LE.0.D0)THEN
          WRITE(ICOUT,1091)
 1091     FORMAT('****** ERROR FROM CBETAI: FIRST ARGUMENT MUST BE ',
     1           'POSITIVE.')
          CALL DPWRST('XXX','BUG ')
        ELSE
          DARG2=DBLE(SAVE1)
          DARG3=DBLE(SAVE2)
          IF(DARG3.LE.0.D0)THEN
            WRITE(ICOUT,1092)
 1092       FORMAT('****** ERROR FROM CBETAI: THIRD ARGUMENT MUST BE ',
     1             'POSITIVE.')
            CALL DPWRST('XXX','BUG ')
          ELSE
            DARG4=DBLE(SAVE2)
            ICODE=0
            CALL CGAMA(DARG1,DARG2,ICODE,DRESLT,DRSLT2)
            CALL CGAMA(DARG3,DARG4,ICODE,DRSLT3,DRSLT4)
            CALL CGAMA(DARG1+DARG3,DARG2+DARG4,ICODE,DRSLT5,DRSLT6)
            TERM=SNGL(DEXP(DRSLT2 + DRSLT4 - DRSLT6))
          ENDIF
        ENDIF
      ELSEIF(IH.EQ.'ZETA'.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        IF(DARG1.LE.1.0D0)THEN
          WRITE(ICOUT,1101)
 1101     FORMAT('***** ERROR: ARGUMENT FOR ZETA FUNCTION MUST ',
     1           'BE > 1')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          CALL ZETA(DARG1,DRESLT)
          TERM=SNGL(DRESLT)
        ENDIF
      ELSEIF(IH.EQ.'BER '.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        IF(DARG1.LT.0.D0)THEN
          WRITE(ICOUT,1112)
 1112     FORMAT('***** ERROR FROM BER: ARGUMENT MUST BE GREATER ',
     1           'THAN OR EQUAL TO ZERO.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          CALL KLVNA(DARG1,DRESLT,DRSLT2,DRSLT3,DRSLT4,DRSLT5,
     1               DRSLT6,DRSLT7,DRSLT8)
          TERM=SNGL(DRESLT)
        ENDIF
      ELSEIF(IH.EQ.'BERI'.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        IF(DARG1.LT.0.D0)THEN
          WRITE(ICOUT,1122)
 1122     FORMAT('***** ERROR FROM BERI: ARGUMENT MUST BE GREATER ',
     1           'THAN OR EQUAL TO ZERO.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          CALL KLVNA(DARG1,DRESLT,DRSLT2,DRSLT3,DRSLT4,DRSLT5,
     1               DRSLT6,DRSLT7,DRSLT8)
          TERM=SNGL(DRSLT2)
        ENDIF
      ELSEIF(IH.EQ.'BER1'.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        IF(DARG1.LT.0.D0)THEN
          WRITE(ICOUT,1132)
 1132     FORMAT('***** ERROR FROM BER1: ARGUMENT MUST BE GREATER ',
     1           'THAN OR EQUAL TO ZERO.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          CALL KLVNA(DARG1,DRESLT,DRSLT2,DRSLT3,DRSLT4,DRSLT5,
     1               DRSLT6,DRSLT7,DRSLT8)
          TERM=SNGL(DRSLT5)
        ENDIF
      ELSEIF(IH.EQ.'BERI'.AND.IH2.EQ.'1   ')THEN
        DARG1=DBLE(X)
        IF(DARG1.LT.0.D0)THEN
          WRITE(ICOUT,1142)
 1142     FORMAT('***** ERROR FROM BERI1: ARGUMENT MUST BE GREATER ',
     1           'THAN OR EQUAL TO ZERO.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          CALL KLVNA(DARG1,DRESLT,DRSLT2,DRSLT3,DRSLT4,DRSLT5,
     1               DRSLT6,DRSLT7,DRSLT8)
          TERM=SNGL(DRSLT6)
        ENDIF
      ELSEIF(IH.EQ.'KER '.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        IF(DARG1.LE.0.D0)THEN
          WRITE(ICOUT,1152)
 1152     FORMAT('***** ERROR FROM KER: ARGUMENT MUST BE POSITIVE ')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          CALL KLVNA(DARG1,DRESLT,DRSLT2,DRSLT3,DRSLT4,DRSLT5,
     1               DRSLT6,DRSLT7,DRSLT8)
          TERM=SNGL(DRSLT3)
        ENDIF
      ELSEIF(IH.EQ.'KERI'.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        IF(DARG1.LT.0.D0)THEN
          WRITE(ICOUT,1162)
 1162     FORMAT('***** ERROR FROM KERI: ARGUMENT MUST BE GREATER ',
     1           'THAN OR EQUAL TO ZERO.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          CALL KLVNA(DARG1,DRESLT,DRSLT2,DRSLT3,DRSLT4,DRSLT5,
     1               DRSLT6,DRSLT7,DRSLT8)
          TERM=SNGL(DRSLT4)
        ENDIF
      ELSEIF(IH.EQ.'KER1'.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        IF(DARG1.LE.0.D0)THEN
          WRITE(ICOUT,1172)
 1172     FORMAT('***** ERROR FROM KER1: ARGUMENT MUST BE POSITIVE ')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          CALL KLVNA(DARG1,DRESLT,DRSLT2,DRSLT3,DRSLT4,DRSLT5,
     1               DRSLT6,DRSLT7,DRSLT8)
          TERM=SNGL(DRSLT7)
        ENDIF
      ELSEIF(IH.EQ.'KERI'.AND.IH2.EQ.'1   ')THEN
        DARG1=DBLE(X)
        IF(DARG1.LT.0.D0)THEN
          WRITE(ICOUT,1182)
 1182     FORMAT('***** ERROR FROM KERI1: ARGUMENT MUST BE GREATER ',
     1           'THAN OR EQUAL TO ZERO.')
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
        ELSE
          CALL KLVNA(DARG1,DRESLT,DRSLT2,DRSLT3,DRSLT4,DRSLT5,
     1               DRSLT6,DRSLT7,DRSLT8)
          TERM=SNGL(DRSLT8)
        ENDIF
      ELSEIF(IH.EQ.'ETA '.AND.IH2.EQ.'    ')THEN
        DARG1=DBLE(X)
        IF(DARG1.LT.1.0D0)THEN
          WRITE(ICOUT,1191)
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
 1191     FORMAT('***** ERROR: ARGUMENT FOR ETA FUNCTION MUST ',
     1           'BE > 1')
        ELSEIF(DARG1.EQ.1.0D0)THEN
          TERM=-0.30685281944
        ELSE
          CALL ZETA(DARG1,DRESLT)
          DARG2=2.0D0**(1.0D0-DARG1)
          DRSLT2=(1.0D0-DARG2)*DRESLT - DARG2
          TERM=SNGL(DRSLT2)
        ENDIF
      ELSEIF(IH.EQ.'CATL'.AND.IH2.EQ.'AN  ')THEN
        DARG1=DBLE(X)
        IF(DARG1.LT.1.0D0)THEN
          WRITE(ICOUT,1201)
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
 1201     FORMAT('***** ERROR: ARGUMENT FOR CATLAN FUNCTION MUST ',
     1           'BE >= 1')
        ENDIF
        CALL CATLAN(DARG1,DRESLT)
        TERM=SNGL(DRESLT)
      ELSEIF(IH.EQ.'FERM'.AND.IH2.EQ.'DIRA')THEN
        DARG1=DBLE(X)
        ARG2=SAVE1
        IF(ABS(ARG2 - (-0.5)).LE.0.01)THEN
          DRESLT=FDM0P5(DARG1)
        ELSEIF(ABS(ARG2 - 0.5).LE.0.01)THEN
          DRESLT=FDP0P5(DARG1)
        ELSEIF(ABS(ARG2 - 1.5).LE.0.01)THEN
          DRESLT=FDP1P5(DARG1)
        ELSEIF(ABS(ARG2 - 2.5).LE.0.01)THEN
          DRESLT=FDP2P5(DARG1)
        ELSE
          WRITE(ICOUT,1211)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1213)ARG2
          CALL DPWRST('XXX','BUG ')
          TERM=0.0
          GOTO9000
 1211     FORMAT('***** ERROR: ORDER FOR FERMDIRA FUNCTION MUST BE ',
     1           '-0.5, 0.5, 1.5, OR 2.5.')
 1213     FORMAT('      REQUESTED ORDER IS ',E15.7)
        ENDIF
        IF(DRESLT.GE.DBLE(CPUMAX))THEN
          WRITE(ICOUT,1216)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1218)REAL(DARG1)
          CALL DPWRST('XXX','BUG ')
          TERM=CPUMAX
 1216     FORMAT('***** ERROR: RESULT FOR FERMDIRA FUNCTION OVERFLOWS ',
     1          'MAXIMUM ALLOWED.')
 1218     FORMAT('      X = ',E15.7)
        ELSE
          TERM=REAL(DRESLT)
        ENDIF
      ELSEIF(IH.EQ.'HARM'.AND.IH2.EQ.'NUMB')THEN
        IARG1=INT(X + 0.5)
        DARG2=DBLE(SAVE1)
        IF(DARG2.LT.0.0D0)THEN
          CALL HN(IARG1,DRESLT)
        ELSE
          CALL HNM(IARG1,DARG2,DRESLT)
        ENDIF
        TERM=REAL(DRESLT)
      ELSEIF(IH.EQ.'MERG'.AND.IH2.EQ.'E   ')THEN
        IF(SAVE2.LE.0.0)THEN
          TERM=X
        ELSE
          TERM=SAVE1
        ENDIF
      ELSEIF(IH.EQ.'MERG'.AND.IH2.EQ.'E3  ')THEN
        IF(SAVE3.LT.0.0)THEN
          TERM=X
        ELSEIF(SAVE3.GT.0.0)THEN
          TERM=SAVE2
        ELSE
          TERM=SAVE1
        ENDIF
      ELSEIF(IH.EQ.'RELD'.AND.IH2.EQ.'IF  ')THEN
        TERM=ABS(X - SAVE1)/MAX(ABS(X),ABS(SAVE1))
      ELSEIF(IH.EQ.'RELD'.AND.IH2.EQ.'IF2 ')THEN
        TERM1=X - SAVE1
        TERM2=(X + SAVE1)/2.0
        TERM=ABS(TERM1/TERM2)
      ELSEIF(IH.EQ.'RELE'.AND.IH2.EQ.'RR  ')THEN
        TERM=(X - SAVE1)/X
      ELSEIF(IH.EQ.'PERC'.AND.IH2.EQ.'DIF ')THEN
        TERM=100.0*ABS(X - SAVE1)/MAX(ABS(X),ABS(SAVE1))
      ELSEIF(IH.EQ.'PERC'.AND.IH2.EQ.'DIF2')THEN
        TERM1=X - SAVE1
        TERM2=(X + SAVE1)/2.0
        TERM=ABS(TERM1/TERM2)*100.0
      ELSEIF(IH.EQ.'PERC'.AND.IH2.EQ.'ERR ')THEN
        TERM=((X - SAVE1)/X)*100.0
      ELSE
        IFOUND='NO'
      ENDIF
      GOTO9000
C
 8010 CONTINUE
C
C     BASE CONVERSION FOR BINARY, OCTAL, DECIMAL
C
      ARG=X
      IX=INT(ARG+0.5)
      ISIGN='+'
      IF(IX.LT.0)ISIGN='-'
      ISUM=0
      DO425IBIT=1,NUMBPW
        INEWX=IX/IBASE2
        IDIG=IX-IBASE2*INEWX
        ISUM=ISUM+IDIG*IBASE1**(IBIT-1)
        IF(INEWX.LE.0)GOTO426
        IX=INEWX
  425 CONTINUE
  426 CONTINUE
      IF(ISIGN.EQ.'-')ISUM=-ISUM
      TERM=ISUM
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGEV.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('AT THE END       OF DPLIB1--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)IFOUND,IERROR,TERM
 9015   FORMAT('IFOUND,IERROR,TERM = ',2(A4,2X),G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLIB2(IH,IH2,X,SAVE1,SAVE2,IANGLU,
     1                  TERM,IBUGEV,IFOUND,IERROR)
C
C     PURPOSE--PERFORM A LIBRARY FUNCTION EVALUATION.
C     NOTE--THIS IS PART 2
C          (EVALUATE TRIGONOMETRIC FUNCTIONS)
C
C     NOTE--DOMAIN OF TRIG ARGUMENT (JULY 1988)
C
C     SIN(X)       -INF < X < INF
C     COS(X)       -INF < X < INF
C     TAN(X)       NOT +-PI/2  +-3PI/2  +-5PI/2  ... (WHENEVER COS IS 0)
C     COT(X)       NOT 0  +-PI  +-2PI  +-3PI  ...    (WHENEVER SIN IS 0)
C     SEC(X)       NOT +-PI/2  +-3PI/2  +-5PI/2  ... (WHENEVER COS IS 0)
C     CSC(X)       NOT 0  +-PI  +-2PI  +-3PI  ...    (WHENEVER SIN IS 0)
C
C     ARCSIN(X)    -1 <= X <= 1      YIELDING -PI/2 <= Y <= PI/2 (PRIN. BR.)
C     ARCCOS(X)    -1 <= X <= 1      YIELDING 0 <= Y <= PI (PRIN. BR.)
C     ARCTAN(X)    -INF < X < INF    YIELDING -PI/2 < Y < PI/2 (PRIN BR.)
C     ARCCOT(X)    -INF < X < INF    YIELDING 0 < X < PI/2 (PRIN. BR.)
C     ARCSEC(X)    X>= 1   X <= -1   YIELDING 0 <= Y < PI/2   -PI <= X < -PI/2 (
C                                    COMPUTED YIELDS 0 <= Y < PI/2   PI/2 < Y <=
C     ARCCSC(X)    X>= 1   X <= -1   YIELDING 0 < Y <= PI/2    -PI < Y <= -PI/2
C                                    COMPUTED YIELDS 0 <= Y < PI/2   -PI/2 <= Y
C
C     SINH(X)      -INF < X < INF
C     COSH(X)      0 <= X < INF
C     TANH(X)      0 <= X < INF
C     COTH(X)      0 < X < INF
C     SECH(X)      0 <= X < INF
C     CSCH(X)      X NOT= 0 ?
C
C     ARCSINH(X)   -INF < X < INF
C     ARCCOSH(X)   X >= 1
C     ARCTANH(X)   -1 < X < 1
C     ARCCOTH(X)   X > 1   X < -1
C     ARCSECH(X)   0 < X <= 1
C     ARCCSCH(X)   X NOT= 0
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--JANUARY  1979.
C     UPDATED         --NOVEMBER  1979.
C     UPDATED         --FEBRUARY  1981.
C     UPDATED         --JUNE      1981.
C     UPDATED         --JULY      1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --JULY      1988.  (HEAVY RENUMBERING + 0-DIVIDE CHECKS
C                                        + PROPER DOMAIN CHECKS)
C     UPDATED         --JANUARY   1989.  ASYMPTOTIC TRAPS FOR HYP TRIG FUNC
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IANGLU
      CHARACTER*4 IBUGEV
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----DATA STATEMENTS-------------------------------------------------
C
      DATA PI/3.1415926536/
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      ISUBN1='DPLI'
      ISUBN2='B1  '
C
      RESULT=0.0
C
      IF(IBUGEV.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('AT THE BEGINNING OF DPLIB2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IH,IH2,IBUGEV,IANGLU
   52   FORMAT('IH,IH2,IBUGEV,IANGLU,X = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)X,SAVE1,SAVE2
   53   FORMAT('X,SAVE1,SAVE2 = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IFOUND='YES'
C
      IF(IH.EQ.'SIN '.AND.IH2.EQ.'    ')GOTO1100
      IF(IH.EQ.'COS '.AND.IH2.EQ.'    ')GOTO1200
      IF(IH.EQ.'TAN '.AND.IH2.EQ.'    ')GOTO1300
      IF(IH.EQ.'COT '.AND.IH2.EQ.'    ')GOTO1400
      IF(IH.EQ.'SEC '.AND.IH2.EQ.'    ')GOTO1500
      IF(IH.EQ.'CSC '.AND.IH2.EQ.'    ')GOTO1600
C
      IF(IH.EQ.'ARCS'.AND.IH2.EQ.'IN  ')GOTO2100
      IF(IH.EQ.'ARCC'.AND.IH2.EQ.'OS  ')GOTO2200
      IF(IH.EQ.'ARCT'.AND.IH2.EQ.'AN  ')GOTO2300
      IF(IH.EQ.'ARCC'.AND.IH2.EQ.'OT  ')GOTO2400
      IF(IH.EQ.'ARCS'.AND.IH2.EQ.'EC  ')GOTO2500
      IF(IH.EQ.'ARCC'.AND.IH2.EQ.'SC  ')GOTO2600
C
      IF(IH.EQ.'SINH'.AND.IH2.EQ.'    ')GOTO3100
      IF(IH.EQ.'COSH'.AND.IH2.EQ.'    ')GOTO3200
      IF(IH.EQ.'TANH'.AND.IH2.EQ.'    ')GOTO3300
      IF(IH.EQ.'COTH'.AND.IH2.EQ.'    ')GOTO3400
      IF(IH.EQ.'SECH'.AND.IH2.EQ.'    ')GOTO3500
      IF(IH.EQ.'CSCH'.AND.IH2.EQ.'    ')GOTO3600
C
      IF(IH.EQ.'ARCS'.AND.IH2.EQ.'INH ')GOTO4100
      IF(IH.EQ.'ARCC'.AND.IH2.EQ.'OSH ')GOTO4200
      IF(IH.EQ.'ARCT'.AND.IH2.EQ.'ANH ')GOTO4300
      IF(IH.EQ.'ARCC'.AND.IH2.EQ.'OTH ')GOTO4400
      IF(IH.EQ.'ARCS'.AND.IH2.EQ.'ECH ')GOTO4500
      IF(IH.EQ.'ARCC'.AND.IH2.EQ.'SCH ')GOTO4600
C
      IFOUND='NO'
      GOTO9000
C
C     STEP 10--
C     EVALUATE THE CIRCULAR TRIG FUNCTIONS
C
 1100 CONTINUE
      ARG=X
      IF(IANGLU.EQ.'DEGR')ARG=(PI/180.0)*ARG
      IF(IANGLU.EQ.'GRAD')ARG=(PI/200.0)*ARG
      TERM=SIN(ARG)
      GOTO9000
C
 1200 CONTINUE
      ARG=X
      IF(IANGLU.EQ.'DEGR')ARG=(PI/180.0)*ARG
      IF(IANGLU.EQ.'GRAD')ARG=(PI/200.0)*ARG
      TERM=COS(ARG)
      GOTO9000
C
 1300 CONTINUE
      ARG=X
      IF(IANGLU.EQ.'DEGR')ARG=(PI/180.0)*ARG
      IF(IANGLU.EQ.'GRAD')ARG=(PI/200.0)*ARG
      TEMP=COS(ARG)
      IF(TEMP.NE.0.0)GOTO1330
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
 1311 FORMAT('***** ERROR IN DPLIB2--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1312)
 1312 FORMAT('      ATTEMPT TO TAKE THE TANGENT OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1313)
 1313 FORMAT('      WHICH IS AN ODD MULTIPLE OF PI/2.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1314)
 1314 FORMAT('      THIS IS ILLEGAL BECAUSE THE TANGENT')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1315)
 1315 FORMAT('      IS INFINITE AT SUCH POINTS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1316)X
 1316 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 1330 CONTINUE
      TERM=SIN(ARG)/TEMP
      GOTO9000
C
 1400 CONTINUE
      ARG=X
      IF(IANGLU.EQ.'DEGR')ARG=(PI/180.0)*ARG
      IF(IANGLU.EQ.'GRAD')ARG=(PI/200.0)*ARG
      TEMP=SIN(ARG)
      IF(TEMP.NE.0.0)GOTO1430
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1412)
 1412 FORMAT('      ATTEMPT TO TAKE THE COTANGENT OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1413)
 1413 FORMAT('      WHICH IS 0 OR A MULTIPLE OF PI.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1414)
 1414 FORMAT('      THIS IS ILLEGAL BECAUSE THE COTANGENT')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1415)
 1415 FORMAT('      IS INFINITE AT SUCH POINTS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1416)X
 1416 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 1430 CONTINUE
      TERM=COS(ARG)/TEMP
      GOTO9000
C
 1500 CONTINUE
      ARG=X
      IF(IANGLU.EQ.'DEGR')ARG=(PI/180.0)*ARG
      IF(IANGLU.EQ.'GRAD')ARG=(PI/200.0)*ARG
      TEMP=COS(ARG)
      IF(TEMP.NE.0.0)GOTO1530
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1512)
 1512 FORMAT('      ATTEMPT TO TAKE THE SECANT OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1513)
 1513 FORMAT('      WHICH IS AN ODD MULTIPLE OF PI/2.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1514)
 1514 FORMAT('      THIS IS ILLEGAL BECAUSE THE SECANT')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1515)
 1515 FORMAT('      IS INFINITE AT SUCH POINTS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1516)X
 1516 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 1530 CONTINUE
      TERM=1.0/TEMP
      GOTO9000
C
 1600 CONTINUE
      ARG=X
      IF(IANGLU.EQ.'DEGR')ARG=(PI/180.0)*ARG
      IF(IANGLU.EQ.'GRAD')ARG=(PI/200.0)*ARG
      TEMP=SIN(ARG)
      IF(TEMP.NE.0.0)GOTO1630
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1612)
 1612 FORMAT('      ATTEMPT TO TAKE THE COSECANT OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1613)
 1613 FORMAT('      WHICH IS 0 OR A MULTIPLE OF PI.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1614)
 1614 FORMAT('      THIS IS ILLEGAL BECAUSE THE COSECANT')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1615)
 1615 FORMAT('      IS INFINITE AT SUCH POINTS.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1616)X
 1616 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 1630 CONTINUE
      TERM=1.0/TEMP
      GOTO9000
C
C     STEP 20--
C     EVALUATE THE INVERSE CIRCULAR TRIG FUNCTIONS
C
 2100 CONTINUE
      IF(-1.0.LE.X.AND.X.LE.1.0)GOTO2130
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2112)
 2112 FORMAT('      ATTEMPT TO TAKE ARCSIN OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2113)
 2113 FORMAT('      SMALLER THAN -1 OR LARGER THAN +1.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2114)
 2114 FORMAT('      THIS IS ILLEGAL BECAUSE THE ARCSIN')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2115)
 2115 FORMAT('      IS NOT DEFINED IN SUCH DOMAIN.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2117)X
 2117 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 2130 CONTINUE
      ARG=X
      IF(ARG.EQ.-1.0)RESULT=-PI/2.0
      IF(ARG.EQ.-1.0)GOTO2190
      IF(ARG.EQ.1.0)RESULT=PI/2.0
      IF(ARG.EQ.1.0)GOTO2190
      ARG2=ARG/SQRT(1.0-ARG*ARG)
      RESULT=ATAN(ARG2)
 2190 CONTINUE
      IF(IANGLU.EQ.'DEGR')RESULT=(180.0/PI)*RESULT
      IF(IANGLU.EQ.'GRAD')RESULT=(200.0/PI)*RESULT
      TERM=RESULT
      GOTO9000
C
 2200 CONTINUE
      IF(-1.0.LE.X.AND.X.LE.1.0)GOTO2230
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2212)
 2212 FORMAT('      ATTEMPT TO TAKE ARCCOS OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2213)
 2213 FORMAT('      SMALLER THAN -1 OR LARGER THAN +1.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2214)
 2214 FORMAT('      THIS IS ILLEGAL BECAUSE THE ARCCOS')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2215)
 2215 FORMAT('      IS NOT DEFINED IN SUCH DOMAIN.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2217)X
 2217 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 2230 CONTINUE
      ARG=X
      IF(ARG.EQ.-1.0)RESULT=PI
      IF(ARG.EQ.-1.0)GOTO2290
      IF(ARG.EQ.0.0)RESULT=PI/2.0
      IF(ARG.EQ.0.0)GOTO2290
      IF(ARG.EQ.1.0)RESULT=0.0
      IF(ARG.EQ.1.0)GOTO2290
      ARG2=(SQRT(1.0-ARG*ARG))/ARG
      RESULT=ATAN(ARG2)
      IF(RESULT.LT.0.0)RESULT=RESULT+PI
 2290 CONTINUE
      IF(IANGLU.EQ.'DEGR')RESULT=(180.0/PI)*RESULT
      IF(IANGLU.EQ.'GRAD')RESULT=(200.0/PI)*RESULT
      TERM=RESULT
      GOTO9000
C
 2300 CONTINUE
      ARG=X
      RESULT=ATAN(ARG)
      IF(IANGLU.EQ.'DEGR')RESULT=(180.0/PI)*RESULT
      IF(IANGLU.EQ.'GRAD')RESULT=(200.0/PI)*RESULT
      TERM=RESULT
      GOTO9000
C
 2400 CONTINUE
      IF(X.EQ.0.0)RESULT=PI/2.0
      IF(X.EQ.0.0)GOTO2490
      ARG=1.0/X
      RESULT=ATAN(ARG)
 2490 CONTINUE
      IF(IANGLU.EQ.'DEGR')RESULT=(180.0/PI)*RESULT
      IF(IANGLU.EQ.'GRAD')RESULT=(200.0/PI)*RESULT
      TERM=RESULT
      GOTO9000
C
 2500 CONTINUE
      IF(X.LE.-1.0.OR.X.GE.1.0)GOTO2530
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2512)
 2512 FORMAT('      ATTEMPT TO TAKE ARCSEC OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2513)
 2513 FORMAT('      IN THE DOMAIN -1 TO +1 (EXCLUSIVE).')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2514)
 2514 FORMAT('      THIS IS ILLEGAL BECAUSE THE ARCSEC')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2515)
 2515 FORMAT('      IS NOT DEFINED IN SUCH DOMAIN.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2517)X
 2517 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 2530 CONTINUE
      ARG=1.0/X
      IF(ARG.EQ.-1.0)RESULT=PI
      IF(ARG.EQ.-1.0)GOTO2590
      IF(ARG.EQ.0.0)RESULT=PI/2.0
      IF(ARG.EQ.0.0)GOTO2590
      IF(ARG.EQ.1.0)RESULT=0.0
      IF(ARG.EQ.1.0)GOTO2590
      ARG2=(SQRT(1.0-ARG*ARG))/ARG
      RESULT=ATAN(ARG2)
      IF(RESULT.LT.0.0)RESULT=RESULT+PI
 2590 CONTINUE
      IF(IANGLU.EQ.'DEGR')RESULT=(180.0/PI)*RESULT
      IF(IANGLU.EQ.'GRAD')RESULT=(200.0/PI)*RESULT
      TERM=RESULT
      GOTO9000
C
 2600 CONTINUE
      IF(X.LE.-1.0.OR.X.GE.1.0)GOTO2630
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2612)
 2612 FORMAT('      ATTEMPT TO TAKE ARCCSC OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2613)
 2613 FORMAT('      IN THE DOMAIN -1 TO +1 (EXCLUSIVE).')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2614)
 2614 FORMAT('      THIS IS ILLEGAL BECAUSE THE ARCCSC')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2615)
 2615 FORMAT('      IS NOT DEFINED IN SUCH DOMAIN.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2617)X
 2617 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 2630 CONTINUE
      ARG=1.0/X
      IF(ARG.EQ.-1.0)RESULT=-PI/2.0
      IF(ARG.EQ.-1.0)GOTO2690
      IF(ARG.EQ.1.0)RESULT=PI/2.0
      IF(ARG.EQ.1.0)GOTO2690
      ARG2=ARG/SQRT(1.0-ARG*ARG)
      RESULT=ATAN(ARG2)
 2690 CONTINUE
      IF(IANGLU.EQ.'DEGR')RESULT=(180.0/PI)*RESULT
      IF(IANGLU.EQ.'GRAD')RESULT=(200.0/PI)*RESULT
      TERM=RESULT
      GOTO9000
C
C     STEP 30--
C     EVALUATE THE HYPERBOLIC TRIG FUNCTIONS
C
 3100 CONTINUE
CCCCC THE ASYMPTOTIC TRAP WAS INSERTED JANUARY 1989
      ARG=X
      IF(ARG.GT.80.0)TERM=CPUMAX
      IF(ARG.LT.-80.0)TERM=(-CPUMAX)
      IF(-80.0.LE.ARG.AND.ARG.LE.80.0)TERM=(EXP(ARG)-EXP(-ARG))/2.0
      GOTO9000
C
 3200 CONTINUE
CCCCC THE ASYMPTOTIC TRAP WAS INSERTED JANUARY 1989
      ARG=X
      IF(ARG.GT.80.0)TERM=CPUMAX
      IF(ARG.LT.-80.0)TERM=CPUMAX
      IF(-80.0.LE.ARG.AND.ARG.LE.80.0)TERM=(EXP(ARG)+EXP(-ARG))/2.0
      GOTO9000
C
 3300 CONTINUE
CCCCC THE ASYMPTOTIC TRAP WAS INSERTED JANUARY 1989
      ARG=X
      IF(ARG.GT.40.0)TERM=1.0
      IF(ARG.LT.-40.0)TERM=(-1.0)
      IF(-40.0.LE.ARG.AND.ARG.LE.40.0)GOTO3310
      GOTO3319
 3310 CONTINUE
      TERM=(EXP(ARG)-EXP(-ARG))/(EXP(ARG)+EXP(-ARG))
      GOTO3319
 3319 CONTINUE
      GOTO9000
C
 3400 CONTINUE
CCCCC THE ASYMPTOTIC TRAP WAS INSERTED JANUARY 1989
      ARG=X
      IF(ARG.GT.40.0)TERM=1.0
      IF(ARG.LT.-40.0)TERM=(-1.0)
      IF(-40.0.LE.ARG.AND.ARG.LE.40.0)GOTO3410
      GOTO3419
 3410 CONTINUE
      TERM=(EXP(ARG)+EXP(-ARG))/(EXP(ARG)-EXP(-ARG))
      GOTO3419
 3419 CONTINUE
      GOTO9000
C
 3500 CONTINUE
CCCCC THE ASYMPTOTIC TRAP WAS INSERTED JANUARY 1989
      ARG=X
      IF(ARG.GT.80.0)TERM=0.0
      IF(ARG.LT.-80.0)TERM=0.0
      IF(-80.0.LE.ARG.AND.ARG.LE.80.0)TERM=2.0/(EXP(ARG)+EXP(-ARG))
      GOTO9000
C
 3600 CONTINUE
CCCCC THE ASYMPTOTIC TRAP WAS INSERTED JANUARY 1989
      ARG=X
      IF(ARG.GT.80.0)TERM=0.0
      IF(ARG.LT.-80.0)TERM=(-0.0)
      IF(-80.0.LE.ARG.AND.ARG.LE.80.0)TERM=2.0/(EXP(ARG)-EXP(-ARG))
      GOTO9000
C
C     STEP 40--
C     EVALUATE THE INVERSE HYPERBOLIC TRIG FUNCTIONS
C
 4100 CONTINUE
      ARG=X
      ARG2=ARG+SQRT(ARG*ARG+1.0)
      RESULT=LOG(ARG2)
      TERM=RESULT
      GOTO9000
C
 4200 CONTINUE
      IF(X.GE.1.0)GOTO4230
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4212)
 4212 FORMAT('      ATTEMPT TO TAKE ARCCOSH OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4213)
 4213 FORMAT('      SMALLER THAN -1.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4214)
 4214 FORMAT('      THIS IS ILLEGAL BECAUSE THE ARCCOSH')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4215)
 4215 FORMAT('      IS NOT DEFINED IN SUCH DOMAIN.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4217)X
 4217 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 4230 CONTINUE
      ARG=X
      IF(ARG.EQ.1.0)RESULT=0.0
      IF(ARG.EQ.1.0)GOTO4290
      ARG2=ARG+SQRT(ARG*ARG-1.0)
      RESULT=LOG(ARG2)
 4290 CONTINUE
      TERM=RESULT
      GOTO9000
C
 4300 CONTINUE
      IF(-1.0.LT.X.AND.X.LT.1.0)GOTO4330
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4312)
 4312 FORMAT('      ATTEMPT TO TAKE ARCTANH OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4313)
 4313 FORMAT('      <= -1 OR >= +1.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4314)
 4314 FORMAT('      THIS IS ILLEGAL BECAUSE THE ARCTANH')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4315)
 4315 FORMAT('      IS NOT DEFINED IN SUCH DOMAIN.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4317)X
 4317 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 4330 CONTINUE
      ARG=X
      ARG2=(1.0+ARG)/(1.0-ARG)
      RESULT=0.5*LOG(ARG2)
      TERM=RESULT
      GOTO9000
C
 4400 CONTINUE
      IF(X.LT.-1.0.OR.1.0.LT.X)GOTO4430
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4412)
 4412 FORMAT('      ATTEMPT TO TAKE ARCCOTH OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4413)
 4413 FORMAT('      IN THE DOMAIN -1 TO 1 (INCLUSIVE).')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4414)
 4414 FORMAT('      THIS IS ILLEGAL BECAUSE THE ARCCOTH')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4415)
 4415 FORMAT('      IS NOT DEFINED IN SUCH DOMAIN.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4417)X
 4417 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 4430 CONTINUE
      ARG=X
      ARG2=(ARG+1.0)/(ARG-1.0)
      RESULT=0.5*LOG(ARG2)
      TERM=RESULT
      GOTO9000
C
 4500 CONTINUE
      IF(0.0.LT.X.AND.X.LE.1.0)GOTO4530
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4512)
 4512 FORMAT('      ATTEMPT TO TAKE ARCSECH OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4513)
 4513 FORMAT('      <= 0 OR > +1.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4514)
 4514 FORMAT('      THIS IS ILLEGAL BECAUSE THE ARCSECH')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4515)
 4515 FORMAT('      IS NOT DEFINED IN SUCH DOMAIN.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4517)X
 4517 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 4530 CONTINUE
      ARG=1.0/X
      IF(ARG.EQ.1.0)RESULT=0.0
      IF(ARG.EQ.1.0)GOTO4590
      ARG2=ARG+SQRT(ARG*ARG-1.0)
      RESULT=LOG(ARG2)
 4590 CONTINUE
      TERM=RESULT
      GOTO9000
C
 4600 CONTINUE
      IF(X.NE.0.0)GOTO4630
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1311)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4612)
 4612 FORMAT('      ATTEMPT TO TAKE ARCCSCH OF A NUMBER')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4613)
 4613 FORMAT('      IDENTICALLY 0.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4614)
 4614 FORMAT('      THIS IS ILLEGAL BECAUSE THE ARCCSCH')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4615)
 4615 FORMAT('      IS NOT DEFINED FOR 0.')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,4617)X
 4617 FORMAT('      THE NUMBER = ',E15.7)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
 4630 CONTINUE
      ARG=1.0/X
      ARG2=ARG+SQRT(ARG*ARG+1.0)
      RESULT=LOG(ARG2)
      TERM=RESULT
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGEV.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('AT THE END       OF DPLIB2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)IFOUND,IERROR,TERM
 9015   FORMAT('IFOUND,IERROR,TERM = ',2(A4,2X),G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
CCCCC SUBROUTINE DPLIB3(IH,IH2,X,SAVE1,SAVE2,I,IANGLU,
CCCCC SEPTEMBER 1994.  ADD SAVE3 ARGUMENT.
CCCCC MAY       1998.  ADD SAVE5 ARGUMENT.
      SUBROUTINE DPLIB3(IH,IH2,X,SAVE1,SAVE2,SAVE3,SAVE4,SAVE5,
     1                  SAVE6,SAVE7,SAVE8,
     1                  I,IANGLU,
     1                  TERM,IBUGEV,IFOUND,IERROR)
C
C     PURPOSE--PERFORM A LIBRARY FUNCTION EVALUATION.
C     NOTE--THIS IS PART 3
C           (EVALUATE VARIOUS PROBABILITY FUNCTIONS AND
C           VARIOUS SPECIAL MATHEMATICAL FUNCTIONS)
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--JANUARY  1979.
C     UPDATED         --NOVEMBER  1979.
C     UPDATED         --FEBRUARY  1981.
C     UPDATED         --JUNE      1981.
C     UPDATED         --JULY      1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --JUNE      1987.  WEICDF, WEIPDF, WEIPPF
C     UPDATED         --MAY       1989.  CP, CPK, PERDEF, EXPLOS
C     UPDATED         --MAY       1990.  INV. GAUS. PDF, CDF, PPF
C     UPDATED         --MAY       1990.  WALD PDF, CDF, PPF
C     UPDATED         --MAY       1990.  REV INV GAUS PDF, CDF, PPF
C     UPDATED         --MAY       1990.  FAT. LIFE PDF, CDF, PPF
C     UPDATED         --APRIL     1993.  ADD TYPE ARG. TO WEIBULL
C     UPDATED         --DECEMBER  1993.  GEPCDF, GEPPDF, GEPPPF
C                                        GENERALIZED PARETO
C     UPDATED         --JANUARY   1994.  MINMAX FOR WEI...
C     UPDATED         --JANUARY   1994.  WEIB MINMAX TO DPCOS2.INC
C     UPDATED         --APRIL     1994.  BINCDF, BIBPDF, BINPPF
C     UPDATED         --APRIL     1994.  POICDF, POIPDF, POIPPF
C     UPDATED         --APRIL     1994.  SEMCDF, SEMPDF, SEMPPF
C     UPDATED         --APRIL     1994.  NBCDF,  NBPDF,  NBPPF
C     UPDATED         --APRIL     1994.  CAUCDF, CAUPDF, CAUPPF, CAUSF
C     UPDATED         --APRIL     1994.  DEXCDF, DEXPDF, DEXPPF, DEXSF
C     UPDATED         --APRIL     1994.  EV1CDF, EV1PDF, EV1PPF
C     UPDATED         --APRIL     1994.  EV2CDF, EV2PDF, EV2PPF
C     UPDATED         --APRIL     1994.  EXPCDF, EXPPDF, EXPPPF, EXPSF
C     UPDATED         --APRIL     1994.  GAMCDF, GAMPPF
C     UPDATED         --APRIL     1994.  GEOCDF, GEOPDF, GEOPPF
C     UPDATED         --APRIL     1994.  HFNCDF, HFNPDF, HFNPPF
C     UPDATED         --APRIL     1994.  LAMCDF, LAMPDF, LAMPPF, LAMPPF
C     UPDATED         --APRIL     1994.  LGNCDF, LGNPDF, LGNPPF
C     UPDATED         --APRIL     1994.  LOGCDF, LOGPDF, LOGPPF, LOGPPF
C     UPDATED         --APRIL     1994.  UNICDF, UNIPDF, UNIPPF, UNISF
C     UPDATED         --SEPTEMBER 1994.  BETCDF, BETPDF, BETPPF
C     UPDATED         --SEPTEMBER 1994.  DISCDF, DISPDF, DISPPF
C     UPDATED         --SEPTEMBER 1994.  TRICDF, TRIPDF, TRIPPF
C     UPDATED         --SEPTEMBER 1994.  NCBCDF, NCBPPF
C     UPDATED         --SEPTEMBER 1994.  NCCCDF, NCCPPF, NCCNCP
C     UPDATED         --SEPTEMBER 1994.  NCFCDF, NCFPPF
C     UPDATED         --SEPTEMBER 1994.  DNFCDF, DNFPPF
C     UPDATED         --SEPTEMBER 1994.  NCTCDF, NCTPPF
C     UPDATED         --SEPTEMBER 1994.  DNTCDF, DNTPPF
C     UPDATED         --SEPTEMBER 1994.  GAMPDF
C     UPDATED         --SEPTEMBER 1994.  SAVE3 FOR NON-CENTRAL DISTR.
C     UPDATED         --SEPTEMBER 1994.  ADDITIONAL BESSEL FUNCTIONS
C     UPDATED         --SEPTEMBER 1994.  ELLIPTCAL INTEGRALS (BOTH 
C                                        CARLSON AND LEGENDRE)
C     UPDATED         --SEPTEMBER 1994.  3 EXPONENTIAL INTEGRALS
C     UPDATED         --SEPTEMBER 1994.  LOGARITHMIC INTEGRAL
C     UPDATED         --SEPTEMBER 1994.  SINE, COSINE, HYPERBOLIC SINE,
C                                        HYPERBOLIC COSINE INTEGRALS
C     UPDATED         --SEPTEMBER 1994.  DAWSON INTEGRALS
C     UPDATED         --SEPTEMBER 1994.  SPENCE DILOGARITHM
C     UPDATED         --SEPTEMBER 1994.  HYPCDF, HYPPDF, HYPPPF
C     UPDATED         --OCTOBER   1994.  VONCDF, VONPDF, VONPPF
C     UPDATED         --OCTOBER   1994.  USE DOUBLE PRECISION FOR I0,
C                                        I1, IN BESSEL FUNCTIONS.
C     UPDATED         --OCTOBER   1994.  CBESSJR, CBESSJI
C     UPDATED         --OCTOBER   1994.  CBESSYR, CBESSYI
C     UPDATED         --OCTOBER   1994.  CBESSIR, CBESSII
C     UPDATED         --OCTOBER   1994.  CBESSKR, CBESSKI
C     UPDATED         --OCTOBER   1994.  BVNCDF
C     UPDATED         --OCTOBER   1994.  CABS, CCOS, CEXP, CLOG,
C                                        CSIN, CSQRT
C     UPDATED         --NOVEMBER  1994.  FRESNC, FRESNS, FRESNF,
C                                        FRESNG, PEQ, PEQ1, PLEM, PLEM1
C                                        PEQI, PEQ1I, PLEMI, PLEM1I
C     UPDATED         --NOVEMBER  1994.  CN, DN, SN
C     UPDATED         --APRIL     1995.  EXPONENTIAL INTEGRAL FIX
C     UPDATED         --APRIL     1995.  SINE INTEGRAL AND
C                                        HYPERBOLIC SINE INTEGRAL
C                                        FOR X < 0
C     UPDATED         --APRIL     1995.  COSCDF, COSPDF, COSPPF
C     UPDATED         --APRIL     1995.  ALPCDF, ALPPDF, ALPPPF
C     UPDATED         --APRIL     1995.  PNRCDF, PNRPDF, PNRPPF
C     UPDATED         --APRIL     1995.  PLNCDF, PLNPDF, PLNPPF
C     UPDATED         --APRIL     1995.  FNRCDF, FNRPDF, FNRPPF
C     UPDATED         --APRIL     1995.  TNRCDF, TNRPDF, TNRPPF
C     UPDATED         --APRIL     1995.  POWCDF, POWPDF, POWPPF
C     UPDATED         --APRIL     1995.  CHCDF,  CHPDF,  CHPPF
C     UPDATED         --APRIL     1995.  DLGCDF, DLGPDF, DLGPPF
C     UPDATED         --APRIL     1995.  WARCDF, WARPDF, WARPPF
C     UPDATED         --APRIL     1995.  LLGCDF, LLGPDF, LLGPPF
C     UPDATED         --APRIL     1995.  GGDCDF, GGDPDF, GGDPPF
C     UPDATED         --MAY       1995.  NCTPDF
C     UPDATED         --JUNE      1995.  ADD ARGUMENT TO WARCDF
C     UPDATED         --JULY      1995.  ADD HERMITE, LEGENDRE,  
C                                        LAGUERRE, CHEBYCHEV T AND U,
C                                        NORMALIZED LAGUERRE, JACOBI,
C                                        ULTRASPHERICAL, ASSOCIATED
C                                        LEGENDRE
C                                        POLYNOMIALS
C     UPDATED         --SEPTEMBER 1995.  ANGCDF, ANGPDF, ANGPPF
C     UPDATED         --SEPTEMBER 1995.  ARSCDF, ARSPDF, ARSPPF
C     UPDATED         --SEPTEMBER 1995.  ACTIVATE BVNPDF
C     UPDATED         --SEPTEMBER 1995.  ACTIVATE TNRCDF, TNRPPF
C     UPDATED         --SEPTEMBER 1995.  ACTIVATE FNRCDF, FNRPPF
C     UPDATED         --OCTOBER   1995.  DWECDF, DWEPDF, DWEPPF
C     UPDATED         --OCTOBER   1995.  LGACDF, LGAPDF, LGAPPF
C     UPDATED         --OCTOBER   1995.  HSECDF, HSEPDF, HSEPPF
C     UPDATED         --OCTOBER   1995.  HFCCDF, HFCPDF, HFCPPF
C     UPDATED         --OCTOBER   1995.  HFLCDF, HFLPDF, HFLPPF
C     UPDATED         --OCTOBER   1995.  GEVCDF, GEVPDF, GEVPPF
C     UPDATED         --OCTOBER   1995.  GOMCDF, GOMPDF, GOMPPF
C     UPDATED         --OCTOBER   1995.  PA2CDF, PA2PDF, PA2PPF
C     UPDATED         --OCTOBER   1995.  WCACDF, WCAPDF, WCAPPF
C     UPDATED         --OCTOBER   1995.  EWECDF, EWEPDF, EWEPPF
C     UPDATED         --OCTOBER   1995.  TNECDF, TNEPDF, TNEPPF
C     UPDATED         --DECEMBER  1995.  GLOCDF, GLOPDF, GLOPPF
C     UPDATED         --DECEMBER  1995.  PEXCDF, PEXPDF, PEXPPF
C     UPDATED         --JANUARY   1996.  DGACDF, DGAPDF, DGAPPF
C     UPDATED         --JANUARY   1996.  KAPCDF, KAPPDF, KAPPPF
C     UPDATED         --JANUARY   1996.  FCACDF, FCAPDF, FCAPPF
C     UPDATED         --JANUARY   1996.  NCCPDF
C     UPDATED         --FEBRUARY  1996.  BBNCDF, BBNPDF, BBNPPF
C     UPDATED         --FEBRUARY  1996.  BRACDF, BRAPDF, BRAPPF
C     UPDATED         --FEBRUARY  1996.  GEXCDF, GEXPDF, GEXPPF
C     UPDATED         --MAY       1996.  RECCDF, RECPDF, RECPPF
C     UPDATED         --SEPTEMBER 1997.  BN, EN, BINOM
C     UPDATED         --APRIL     1998.  LOCATION AND SCALE PARAMETERS
C                                        FOR MANY DISTRIBUTIONS
C     UPDATED         --APRIL     1998.  HAZARD AND CUMULATIVE HAZARD
C                                        FOR MANY DISTRIBUTIONS
C
C     UPDATED         --MAY       1998.  NORMXCDF, NORMXPDF, NORMXPPF
C     UPDATED         --MARCH     1999.  SRACDF, SRAPPF
C     UPDATED         --MARCH     1999.  ABRAM, CLAUSN, DEBYE
C                                        EXP3, GOODST, LOBACH,
C                                        STROM, SYNCH1, SYNCH2, TRAN
C     UPDATED         --AUGUST    2001.  GLDCDF, GLDPDF, GLDPPF,
C                                        GLDCHK, GLDLLM, GLDULM
C     UPDATED         --SEPTEMBER 2001.  LDECDF, LDEPDF, LDEPPF
C     UPDATED         --SEPTEMBER 2001.  IWECDF, IWEPDF, IWEPPF
C     UPDATED         --SEPTEMBER 2001.  JSBCDF, JSBPDF, JSBPPF
C     UPDATED         --SEPTEMBER 2001.  JSUCDF, JSUPDF, JSUPPF
C     UPDATED         --NOVEMBER  2001.  GEECDF, GEEPDF, GEEPPF,
C                                        GEEHAZ, GEECHAZ
C     UPDATED         --MAY       2002.  TSPCDF, TSPPDF, TSPPPF,
C     UPDATED         --MAY       2002.  BWECDF, BWEPDF, BWEPPF,
C                                        BWEHAZ, BWECHAZ
C     UPDATED         --JANUARY   2003.  GHPDF
C     UPDATED         --APRIL     2003.  LANCDF, LANPDF, LANPPF
C     UPDATED         --APRIL     2003.  LANXM1, LANXM2, LANDIF
C     UPDATED         --MAY       2003.  IBPDF,  SLAPDF
C     UPDATED         --MAY       2003.  ERRCDF, ERRPDF, ERRPPF
C     UPDATED         --JUNE      2003.  TRACDF, TRAPDF, TRAPPF
C     UPDATED         --NOVEMBER  2003.  FTCDF,  FTPDF,  FTPPF
C     UPDATED         --NOVEMBER  2003.  SNCDF,  SNPDF,  SNPPF
C     UPDATED         --NOVEMBER  2003.  TNCDF,  TNPDF,  TNPPF
C     UPDATED         --NOVEMBER  2003.  ZIPCDF, ZIPPDF, ZIPPPF
C     UPDATED         --DECEMBER  2003.  SLACDF, SLAPPF
C     UPDATED         --DECEMBER  2003.  IBCDF,  IBPPF
C     UPDATED         --DECEMBER  2003.  MAKCDF, MAKPDF, MAKPPF
C     UPDATED         --MARCH     2004.  LSNCDF, LSNPDF, LSNPPF
C     UPDATED         --MARCH     2004.  LSTCDF, LSTPDF, LSTPPF
C     UPDATED         --MARCH     2004.  POLCDF, POLPDF, POLPPF
C     UPDATED         --APRIL     2004.  HERCDF, HERPDF, HERPPF
C     UPDATED         --APRIL     2004.  YULCDF, YULPDF, YULPPF
C     UPDATED         --APRIL     2004.  GWACDF, GWAPDF, GWAPPF
C     UPDATED         --MAY       2004.  DNTPDF, DNFPDF, NCFPDF
C     UPDATED         --JUNE      2004.  SDECDF, SDEPDF, SDEPPF
C     UPDATED         --JUNE      2004.  ADECDF, ADEPDF, ADEPPF
C     UPDATED         --JUNE      2004.  MAXCDF, MAXPDF, MAXPPF
C     UPDATED         --JUNE      2004.  FERCDF, FERPDF, FERPPF
C     UPDATED         --JUNE      2004.  RAYCDF, RAYPDF, RAYPPF
C     UPDATED         --JULY      2004.  GALCDF, GALPDF, GALPPF
C     UPDATED         --AUGUST    2004.  GIGCDF, GALPDF, GALPPF
C     UPDATED         --AUGUST    2004.  BEICDF, BEIPDF, BEIPPF
C     UPDATED         --AUGUST    2004.  BEKCDF, BEKPDF, BEKPPF
C     UPDATED         --AUGUST    2004.  MCLCDF, MCLPDF, MCLPPF
C     UPDATED         --SEPTEMBER 2004.  GMCCDF, GMCPDF, GMCPPF
C     UPDATED         --SEPTEMBER 2004.  HBOCDF, HBOPDF, HBOPPF
C     UPDATED         --DECEMBER  2004.  RESOLVE AMBIGUITY IN CALLS
C                                        TO PARETO (PAR) AND PARETO
C                                        SECOND KIND (PA2) SUBROUTINES
C     UPDATED         --MARCH     2005.  EXPAFR, LGNAFR, WEIAFR
C     UPDATED         --JULY      2005.  CALL LIST TO LGAxxx AND SNxxx
C     UPDATED         --AUGUST    2005.  ADJUSTMENT TO
C                                        TRICDF, TRIPDF, TRIPPF
C                                        TO HAVE GENERAL CASE HANDLED
C                                        WITHIN THE ROUTINE SINCE SHAPE
C                                        PARAMETER BOUNDED BY LOWER AND
C                                        UPPER LIMIT PARAMETERS.
C     UPDATED         --NOVEMBER  2005.  AIRINT
C     UPDATED         --NOVEMBER  2005.  AIRYGI
C     UPDATED         --NOVEMBER  2005.  AIRYHI
C     UPDATED         --NOVEMBER  2005.  ATNINT
C     UPDATED         --NOVEMBER  2005.  BIRINT
C     UPDATED         --NOVEMBER  2005.  I0INT
C     UPDATED         --NOVEMBER  2005.  I0ML0
C     UPDATED         --NOVEMBER  2005.  I1ML1
C     UPDATED         --NOVEMBER  2005.  J0INT
C     UPDATED         --NOVEMBER  2005.  K0INT
C     UPDATED         --NOVEMBER  2005.  Y0INT
C     UPDATED         --FEBRUARY  2006.  GL5CDF, GL5PDF, GL5PPF
C     UPDATED         --FEBRUARY  2006.  WAKCDF, WAKPDF, WAKPPF
C     UPDATED         --MARCH     2006.  BNOCDF, BNOPDF, BNOPPF
C     UPDATED         --MARCH     2006.  GL2CDF, GL2PDF, GL2PPF
C     UPDATED         --MARCH     2006.  GL3CDF, GL3PDF, GL3PPF
C     UPDATED         --MARCH     2006.  GL4CDF, GL4PDF, GL4PPF
C     UPDATED         --MARCH     2006.  ALDCDF, ALDPDF, ALDPPF
C     UPDATED         --MAY       2006.  BGECDF, BGEPDF, BGEPPF
C     UPDATED         --MAY       2006.  CHANGE ZIPPDF TO ZETPDF
C     UPDATED         --MAY       2006.  BTACDF, BTAPDF, BTAPPF
C     UPDATED         --MAY       2006.  LBECDF, LBEPDF, LBEPPF
C     UPDATED         --JUNE      2006.  LPOCDF, LPOPDF, LPOPPF
C     UPDATED         --JUNE      2006.  MATCDF, MATPDF, MATPPF
C     UPDATED         --JUNE      2006.  LCTCDF, LCTPDF, LCTPPF
C     UPDATED         --JUNE      2006.  OCCCDF, OCCPDF, OCCPPF
C     UPDATED         --JUNE      2006.  PAPCDF, PAPPDF, PAPPPF
C     UPDATED         --JUNE      2006.  NEYCDF, NEYPDF, NEYPPF
C     UPDATED         --JUNE      2006.  DXGCDF, DXGPDF, DXGPPF
C     UPDATED         --JUNE      2006.  LOSCDF, LOSPDF, LOSPPF
C     UPDATED         --JUNE      2006.  GLSCDF, GLSPDF, GLSPPF
C     UPDATED         --JULY      2006.  GETCDF, GETPDF, GETPPF
C     UPDATED         --JULY      2006.  GNBCDF, GNBPDF, GNBPPF
C     UPDATED         --JULY      2006.  QBICDF, QBIPDF, QBIPPF
C     UPDATED         --AUGUST    2006.  CONCDF, CONPDF, CONPPF
C     UPDATED         --AUGUST    2006.  LKCDF,  LKPDF,  LKPPF
C     UPDATED         --SEPTEMBER 2006.  KATCDF, KATPDF, KATPPF
C     UPDATED         --NOVEMBER  2006.  DIWCDF, DIWPDF, DIWPPF,
C                                        DIWHAZ
C     UPDATED         --NOVEMBER  2006.  GLGCDF, GLGPDF, GLGPPF
C     UPDATED         --JANUARY   2007.  GOMHAZ, GOMCHAZ
C     UPDATED         --JANUARY   2007.  GNTCDF, GNTPDF, GNTPPF
C     UPDATED         --FEBRUARY  2007.  TOPCDF, TOPPDF, TOPPPF
C     UPDATED         --FEBRUARY  2007.  RGTCDF, RGTPDF, RGTPPF
C     UPDATED         --FEBRUARY  2007.  GTLCDF, GTLPDF, GTLPPF
C     UPDATED         --JUNE      2007.  ADD LOWER/UPPER LIMITS
C                                        TO CALL LIST FOR
C                                        TSPCDF, TSPPDF, TSPPPF
C     UPDATED         --SEPTEMBER 2007.  SLOCDF, SLOPDF, SLOPPF
C     UPDATED         --SEPTEMBER 2007.  OGICDF, OGIPDF, OGIPPF
C     UPDATED         --SEPTEMBER 2007.  TSSCDF, TSSPDF, TSSPPF
C     UPDATED         --SEPTEMBER 2007.  TSOCDF, TSOPDF, TSOPPF
C     UPDATED         --OCTOBER   2007.  BU1CDF, BU1PDF, BU1PPF
C     UPDATED         --OCTOBER   2007.  BU2CDF, BU2PDF, BU2PPF
C     UPDATED         --OCTOBER   2007.  BU3CDF, BU2PDF, BU3PPF
C     UPDATED         --OCTOBER   2007.  BU4CDF, BU2PDF, BU4PPF
C     UPDATED         --OCTOBER   2007.  BU5CDF, BU2PDF, BU5PPF
C     UPDATED         --OCTOBER   2007.  BU6CDF, BU2PDF, BU6PPF
C     UPDATED         --OCTOBER   2007.  BU7CDF, BU2PDF, BU7PPF
C     UPDATED         --OCTOBER   2007.  BU8CDF, BU2PDF, BU8PPF
C     UPDATED         --OCTOBER   2007.  BU9CDF, BU2PDF, BU9PPF
C     UPDATED         --OCTOBER   2007.  B10CDF, B10PDF, B10PPF
C     UPDATED         --OCTOBER   2007.  B11CDF, B11PDF, B11PPF
C     UPDATED         --OCTOBER   2007.  B12CDF, B12PDF, B12PPF
C     UPDATED         --OCTOBER   2007.  UTSCDF, UTSPDF, UTSPPF
C     UPDATED         --OCTOBER   2007.  KUMCDF, KUMPDF, KUMPPF
C     UPDATED         --NOVEMBER  2007.  CALL LIST TO PEXxxx ROUTINES
C     UPDATED         --NOVEMBER  2007.  CALL LIST TO ALPxxx ROUTINES
C     UPDATED         --DECEMBER  2007.  CONVERT POWCDF, POWPDF, POWPPF
C                                        TO USE LOWER/UPPER LIMITS RATHER
C                                        THAN LOCATION/SCALE
C     UPDATED         --DECEMBER  2007.  POWHAZ, POWCHAZ
C     UPDATED         --DECEMBER  2007.  RPOCDF, RPOPDF, RPOPPF
C     UPDATED         --DECEMBER  2007.  RPOHAZ, RPOCHAZ
C     UPDATED         --JANUARY   2008.  MMXCDF, MMXPDF, MMXPPF
C     UPDATED         --JANUARY   2008.  MUTCDF, MUTPDF, MUTPPF
C     UPDATED         --JANUARY   2008.  MUTHAZ, MURCHAZ
C     UPDATED         --JANUARY   2008.  LEXCDF, LEXPDF, LEXPPF
C     UPDATED         --JANUARY   2008.  LEXHAZ, LEXCHAZ
C     UPDATED         --FEBRUARY  2008.  ARGUMENTS TO
C                                        MAXCDF, MAXPDF, MAXPPF
C     UPDATED         --MARCH     2008.  TNPCDF, TNPPDF, TNPPPF
C     UPDATED         --MARCH     2008.  BFRCDF, BFRPDF, BFRPPF
C     UPDATED         --MARCH     2008.  LE3CDF, LE3PDF, LE3PPF
C     UPDATED         --MARCH     2008.  LE3HAZ, LE3CHAZ
C     UPDATED         --MAY       2008.  RENAME KAPCDF, KAPPDF,
C                                        KAPPPF TO MIECDF, MIEPDF,
C                                        MIEPPF
C     UPDATED         --MAY       2008.  KAPCDF, KAPPDF, KAPPPF
C                                        (DIFFERENT PARAMETERIZATION
C                                        THAN PREVIOUS KAPxxx)
C     UPDATED         --MAY       2008.  PE3CDF, PE3PDF, PE3PPF
C     UPDATED         --JULY      2010.  EEWCDF, EEWPDF, EEWPPF
C     UPDATED         --AUGUST    2010.  BFWCDF, BFWPDF, BFWPPF
C     UPDATED         --DECEMBER  2010.  MOVE MIN AND MAX FUNCTIONS
C                                        HERE TO INCREASE NUMBER OF
C                                        PERMISSABLE ARGUMENTS TO 8
C                                        (FROM 2)
C     UPDATED         --JANUARY   2011.  ATNCDF, ATNPDF, ATNPPF
C                                        ATNHAZ, ATNCHAZ
C     UPDATED         --AUGUST    2011.  AGREE
C     UPDATED         --OCTOBER   2012.  DPNTLI (PERPINDICULAR DISTANCE
C                                        FROM POINT TO LINE)
C     UPDATED         --JANUARY   2013.  SLOPE (FROM TWO POINTS)
C     UPDATED         --AUGUST    2013.  LINEAR INTERPOLATION
C     UPDATED         --MAY       2014.  EXPSURV, EXPISURV
C     UPDATED         --MAY       2014.  EV1SURV, EV1ISURV
C     UPDATED         --MAY       2014.  EV2SURV, EV2ISURV
C     UPDATED         --MAY       2014.  EWESURV, EWEISURV
C     UPDATED         --MAY       2014.  FLSURV,  FLISURV
C     UPDATED         --MAY       2014.  GAMSURV, GAMISURV
C     UPDATED         --MAY       2014.  GEESURV, GEEISURV
C     UPDATED         --MAY       2014.  GEVSURV, GEVISURV
C     UPDATED         --MAY       2014.  GOMSURV, GOMISURV
C     UPDATED         --MAY       2014.  IGSURV,  IGISURV
C     UPDATED         --MAY       2014.  IGASURV, IGAISURV
C     UPDATED         --MAY       2014.  IWESURV, IWEISURV
C     UPDATED         --MAY       2014.  LGNSURV, LGNISURV
C     UPDATED         --MAY       2014.  LOGSURV, LOGISURV
C     UPDATED         --MAY       2014.  NORSURV, NORISURV
C     UPDATED         --MAY       2014.  PLNSURV, PLNISURV
C     UPDATED         --MAY       2014.  PNRSURV, PNRISURV
C     UPDATED         --MAY       2014.  RIGSURV, RIGISURV
C     UPDATED         --MAY       2014.  WALSURV, WALISURV
C     UPDATED         --MAY       2014.  WEISURV, WEIISURV
C     UPDATED         --MAY       2014.  UNISURV, UNIISURV
C     UPDATED         --JULY      2014.  NORPPCV
C     UPDATED         --JUNE      2021.  GT, GE, LT, LE, EQ, NE
C     UPDATED         --JUNE      2021.  EQ AND EQUAL AS SYNONYMS
C                                        FOR AGREE
C     UPDATED         --JUNE      2021.  NE AND NOTEQUAL AS SYNONYMS
C                                        FOR DISAGREE
C     UPDATED         --JUNE      2023.  SUPPORT FOR FRACTIONAL DEGREES
C                                        OF FREEDOM FOR F DISTRIBUTION
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IANGLU
      CHARACTER*4 IBUGEV
      CHARACTER*4 IWRITE
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IFLAG2
      CHARACTER*4 ISUBRO
C
C---------------------------------------------------------------------
C
CCCCC THE FOLLOWING LINE WAS ADDED                 JANUARY 1994
CCCCC SO AS TO ALLOW THE EXTRACTION OF   MINMAX    JANUARY 1994
CCCCC FOR WEIBULL, (EV1, AND EV2) DISTRIBUTIONS    JANUARY 1994
      INCLUDE 'DPCOS2.INC'
      INCLUDE 'DPCOMC.INC'
      INCLUDE 'DPCOST.INC'
C
CCCCC SEPTEMBER 1994.  FOLLOWING ROUTINE NEEDED BY SOME NEW
CCCCC BESSEL FUNCTION ROUTINES.
C
      EXTERNAL BESJ0DP
      EXTERNAL BESJ1DP
      EXTERNAL BESY0DP
      EXTERNAL BESY1DP
C
      DIMENSION TEMP1(1000)
      DOUBLE PRECISION DTEMP1(1000)
C
      COMPLEX CTEMP1(102)
      COMPLEX Z1
CCCCC COMPLEX Z2
      COMPLEX PEQ
      COMPLEX PEQ1
      COMPLEX PLEM
      COMPLEX PLEM1
C
      REAL LININ3
C
      DOUBLE PRECISION DARG1
      DOUBLE PRECISION DARG2
      DOUBLE PRECISION DARG3
      DOUBLE PRECISION DARG4
      DOUBLE PRECISION DARG5
      DOUBLE PRECISION DARG6
      DOUBLE PRECISION DARG7
      DOUBLE PRECISION DARG8
      DOUBLE PRECISION DARG9
      DOUBLE PRECISION DSPENC
      DOUBLE PRECISION DBESI0
      DOUBLE PRECISION DBESI1
      DOUBLE PRECISION DBSI0E
      DOUBLE PRECISION DBSI1E
      DOUBLE PRECISION DRESLT
CCCCC JULY 1995.  ADD FOLLOWING LINES
      DOUBLE PRECISION DRSLT2
      DOUBLE PRECISION DTERM1
      DOUBLE PRECISION DTERM2
      DOUBLE PRECISION DTERM3
      DOUBLE PRECISION DTERM4
      DOUBLE PRECISION DTERM5
      DOUBLE PRECISION DGAMMA
      DOUBLE PRECISION DGAMR
      DOUBLE PRECISION DPI
      DOUBLE PRECISION DPN(10)
      DOUBLE PRECISION DABRAM(0:100)
      INTEGER IPN(10)
C
      DOUBLE PRECISION DFRENC
C
      DOUBLE PRECISION ABRAM0
      DOUBLE PRECISION ABRAM1
      DOUBLE PRECISION ABRAM2
      DOUBLE PRECISION CLAUSN
      DOUBLE PRECISION DEBYE1
      DOUBLE PRECISION DEBYE2
      DOUBLE PRECISION DEBYE3
      DOUBLE PRECISION DEBYE4
      DOUBLE PRECISION EXP3
      DOUBLE PRECISION GOODST
      DOUBLE PRECISION LANCDF
      DOUBLE PRECISION LANPDF
      DOUBLE PRECISION LANPPF
      DOUBLE PRECISION LANXM1
      DOUBLE PRECISION LANXM2
      DOUBLE PRECISION LANDIF
      DOUBLE PRECISION LOBACH
      DOUBLE PRECISION STROM
      DOUBLE PRECISION SYNCH1
      DOUBLE PRECISION SYNCH2
      DOUBLE PRECISION TRAN02
      DOUBLE PRECISION TRAN03
      DOUBLE PRECISION TRAN04
      DOUBLE PRECISION TRAN05
      DOUBLE PRECISION TRAN06
      DOUBLE PRECISION TRAN07
      DOUBLE PRECISION TRAN08
      DOUBLE PRECISION TRAN09
      DOUBLE PRECISION AIRINT
      DOUBLE PRECISION AIRYGI
      DOUBLE PRECISION AIRYHI
      DOUBLE PRECISION ATNINT
      DOUBLE PRECISION BIRINT
      DOUBLE PRECISION I0INT
      DOUBLE PRECISION I0ML0
      DOUBLE PRECISION I1ML1
      DOUBLE PRECISION J0INT
      DOUBLE PRECISION K0INT
      DOUBLE PRECISION Y0INT
      DOUBLE PRECISION CDFGLO
      DOUBLE PRECISION QUAGLO
      DOUBLE PRECISION CDFWAK
      DOUBLE PRECISION PDFWAK
      DOUBLE PRECISION QUAWAK
      DOUBLE PRECISION XPAR(5)
      DOUBLE PRECISION PRTRNG
      DOUBLE PRECISION QTRNG
C
      LOGICAL HYPPNT
C
      INCLUDE 'DPCOP2.INC'
C
C-----DATA STATEMENTS-----------------------------------------------------
C
      DATA C00/1.0/
      DATA C11/1.0/
      DATA C22,C20/2.0,-1.0/
      DATA C33,C31/4.0,-3.0/
      DATA C44,C42,C40/8.0,-8.0,1.0/
      DATA C55,C53,C51/16.0,-20.0,5.0/
      DATA C66,C64,C62,C60/32.0,-48.0,18.0,-1.0/
      DATA C77,C75,C73,C71/64.0,-112.0,56.0,-7.0/
      DATA C88,C86,C84,C82,C80/128.0,-256.0,160.0,-32.0,1.0/
      DATA C99,C97,C95,C93,C91/256.0,-576.0,432.0,-120.0,9.0/
      DATA C1010,C108,C106,C104,C102,C100/512.0,-1280.0,1120.0,-400.0,
     1                                    50.0,-1.0/
C
CCCCC DATA D00,D02,D04,D06,D08,D010,D012
CCCCC1     /1.0,-2.2499997,1.2656208,-0.3163866,0.0444479,
CCCCC1     -0.0039444,0.0002100/
CCCCC DATA F00,F01,F02,F03,F04,F05,F06
CCCCC1     /0.79788456,-0.00000077,-0.00552740,-0.00009512,
CCCCC1     0.00137237,-0.00072805,0.00014476/
CCCCC DATA G00,G01,G02,G03,G04,G05,G06
CCCCC1     /-0.78539816,-0.04166397,-0.00003954,0.00262573,
CCCCC1     -0.00054125,-0.00029333,0.00013558/
CCCCC DATA D10,D12,D14,D16,D18,D110,D112
CCCCC1     /0.5,-0.56249985,0.21093573,-0.03954289,
CCCCC1     0.00443319,-0.00031761,0.00001109/
CCCCC DATA F10,F11,F12,F13,F14,F15,F16
CCCCC1     /0.79788456,0.00000156,0.01659667,0.00017105,
CCCCC1     -0.00249511,0.00113653,-0.00020033/
CCCCC DATA G10,G11,G12,G13,G14,G15,G16
CCCCC1     /-2.35619449,0.12499612,0.00005650,-0.00637879,
CCCCC1     0.00074348,0.00079824,-0.00029166/
      DATA REALPI /3.141593/
      DATA DPI / 3.1415926535 8979323846 2643383279 503 D0 /
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      ISUBN1='DPLI'
      ISUBN2='B2  '
C
      IF(IBUGEV.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('AT THE BEGINNING OF DPLIB3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IH,IH2,IBUGEV,IANGLU,X
   52   FORMAT('IH,IH2,,IBUGEV,IANGLU,X = ',4(A4,2X),G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)SAVE1,SAVE2,SAVE3,SAVE4
   53   FORMAT('SAVE1,SAVE2,SAVE3,SAVE4 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)SAVE5,SAVE6,SAVE7,SAVE8
   54   FORMAT('SAVE5,SAVE6,SAVE7,SAVE8 = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IFOUND='YES'
C
      IF(IH.EQ.'NORC'.AND.IH2.EQ.'DF  ')GOTO551
      IF(IH.EQ.'NORP'.AND.IH2.EQ.'DF  ')GOTO552
      IF(IH.EQ.'NORP'.AND.IH2.EQ.'PF  ')GOTO553
      IF(IH.EQ.'NORS'.AND.IH2.EQ.'F   ')GOTO554
      IF(IH.EQ.'NORH'.AND.IH2.EQ.'AZ  ')GOTO555
      IF(IH.EQ.'NORC'.AND.IH2.EQ.'HAZ ')GOTO556
      IF(IH.EQ.'NORS'.AND.IH2.EQ.'URV ')GOTO557
      IF(IH.EQ.'NORI'.AND.IH2.EQ.'SURV')GOTO558
      IF(IH.EQ.'NORP'.AND.IH2.EQ.'PCV ')GOTO88559
      IF(IH.EQ.'NORM'.AND.IH2.EQ.'XCDF')GOTO8557
      IF(IH.EQ.'NORM'.AND.IH2.EQ.'XPDF')GOTO8558
      IF(IH.EQ.'NORM'.AND.IH2.EQ.'XPPF')GOTO8559
C
      IF(IH.EQ.'TCDF'.AND.IH2.EQ.'    ')GOTO561
      IF(IH.EQ.'TPDF'.AND.IH2.EQ.'    ')GOTO562
      IF(IH.EQ.'TPPF'.AND.IH2.EQ.'    ')GOTO563
C
      IF(IH.EQ.'CHSC'.AND.IH2.EQ.'DF  ')GOTO571
      IF(IH.EQ.'CHSP'.AND.IH2.EQ.'DF  ')GOTO572
      IF(IH.EQ.'CHSP'.AND.IH2.EQ.'PF  ')GOTO573
C
      IF(IH.EQ.'FCDF'.AND.IH2.EQ.'    ')GOTO581
      IF(IH.EQ.'FPDF'.AND.IH2.EQ.'    ')GOTO582
      IF(IH.EQ.'FPPF'.AND.IH2.EQ.'    ')GOTO583
C
      IF(IH.EQ.'WEIC'.AND.IH2.EQ.'DF  ')GOTO591
      IF(IH.EQ.'WEIP'.AND.IH2.EQ.'DF  ')GOTO592
      IF(IH.EQ.'WEIP'.AND.IH2.EQ.'PF  ')GOTO593
      IF(IH.EQ.'WEIH'.AND.IH2.EQ.'AZ  ')GOTO594
      IF(IH.EQ.'WEIC'.AND.IH2.EQ.'HAZ ')GOTO595
      IF(IH.EQ.'WEIA'.AND.IH2.EQ.'FR  ')GOTO596
      IF(IH.EQ.'WEIS'.AND.IH2.EQ.'URV ')GOTO597
      IF(IH.EQ.'WEII'.AND.IH2.EQ.'SURV')GOTO598
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED MAY 1990
      IF(IH.EQ.'IGCD'.AND.IH2.EQ.'F   ')GOTO601
      IF(IH.EQ.'IGPD'.AND.IH2.EQ.'F   ')GOTO602
      IF(IH.EQ.'IGPP'.AND.IH2.EQ.'F   ')GOTO603
      IF(IH.EQ.'IGHA'.AND.IH2.EQ.'Z   ')GOTO604
      IF(IH.EQ.'IGCH'.AND.IH2.EQ.'AZ  ')GOTO605
      IF(IH.EQ.'IGCS'.AND.IH2.EQ.'URV ')GOTO606
      IF(IH.EQ.'IGCI'.AND.IH2.EQ.'SURV')GOTO607
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED MAY 1990
      IF(IH.EQ.'WALC'.AND.IH2.EQ.'DF  ')GOTO611
      IF(IH.EQ.'WALP'.AND.IH2.EQ.'DF  ')GOTO612
      IF(IH.EQ.'WALP'.AND.IH2.EQ.'PF  ')GOTO613
      IF(IH.EQ.'WALH'.AND.IH2.EQ.'AZ  ')GOTO614
      IF(IH.EQ.'WALC'.AND.IH2.EQ.'HAZ ')GOTO615
      IF(IH.EQ.'WALS'.AND.IH2.EQ.'URV ')GOTO616
      IF(IH.EQ.'WALI'.AND.IH2.EQ.'SURV')GOTO617
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED MAY 1990
      IF(IH.EQ.'RIGC'.AND.IH2.EQ.'DF  ')GOTO621
      IF(IH.EQ.'RIGP'.AND.IH2.EQ.'DF  ')GOTO622
      IF(IH.EQ.'RIGP'.AND.IH2.EQ.'PF  ')GOTO623
      IF(IH.EQ.'RIGH'.AND.IH2.EQ.'AZ  ')GOTO624
      IF(IH.EQ.'RIGC'.AND.IH2.EQ.'HAZ ')GOTO625
      IF(IH.EQ.'RIGS'.AND.IH2.EQ.'URV ')GOTO626
      IF(IH.EQ.'RIGI'.AND.IH2.EQ.'SURV')GOTO627
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED MAY 1990
      IF(IH.EQ.'FLCD'.AND.IH2.EQ.'F   ')GOTO631
      IF(IH.EQ.'FLPD'.AND.IH2.EQ.'F   ')GOTO632
      IF(IH.EQ.'FLPP'.AND.IH2.EQ.'F   ')GOTO633
      IF(IH.EQ.'FLHA'.AND.IH2.EQ.'Z   ')GOTO634
      IF(IH.EQ.'FLCH'.AND.IH2.EQ.'AZ  ')GOTO635
      IF(IH.EQ.'FLSU'.AND.IH2.EQ.'RV  ')GOTO636
      IF(IH.EQ.'FLIS'.AND.IH2.EQ.'URV ')GOTO637
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    DECEMBER 1993
      IF(IH.EQ.'GEPC'.AND.IH2.EQ.'DF  ')GOTO641
      IF(IH.EQ.'GEPP'.AND.IH2.EQ.'DF  ')GOTO642
      IF(IH.EQ.'GEPP'.AND.IH2.EQ.'PF  ')GOTO643
      IF(IH.EQ.'GEPH'.AND.IH2.EQ.'AZ  ')GOTO644
      IF(IH.EQ.'GEPC'.AND.IH2.EQ.'HAZ ')GOTO645
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'BINC'.AND.IH2.EQ.'DF  ')GOTO651
      IF(IH.EQ.'BINP'.AND.IH2.EQ.'DF  ')GOTO652
      IF(IH.EQ.'BINP'.AND.IH2.EQ.'PF  ')GOTO653
C
CCCCC THE FOLLOWING 2 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'POIC'.AND.IH2.EQ.'DF  ')GOTO661
      IF(IH.EQ.'POIP'.AND.IH2.EQ.'DF  ')GOTO662
      IF(IH.EQ.'POIP'.AND.IH2.EQ.'PF  ')GOTO663
C
CCCCC THE FOLLOWING 2 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'SEMC'.AND.IH2.EQ.'DF  ')GOTO671
      IF(IH.EQ.'SEMP'.AND.IH2.EQ.'DF  ')GOTO672
      IF(IH.EQ.'SEMP'.AND.IH2.EQ.'PF  ')GOTO673
C
CCCCC THE FOLLOWING 2 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'NBCD'.AND.IH2.EQ.'F   ')GOTO681
      IF(IH.EQ.'NBPD'.AND.IH2.EQ.'F   ')GOTO682
      IF(IH.EQ.'NBPP'.AND.IH2.EQ.'F   ')GOTO683
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'CAUC'.AND.IH2.EQ.'DF  ')GOTO691
      IF(IH.EQ.'CAUP'.AND.IH2.EQ.'DF  ')GOTO692
      IF(IH.EQ.'CAUP'.AND.IH2.EQ.'PF  ')GOTO693
      IF(IH.EQ.'CAUS'.AND.IH2.EQ.'F   ')GOTO694
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'DEXC'.AND.IH2.EQ.'DF  ')GOTO701
      IF(IH.EQ.'DEXP'.AND.IH2.EQ.'DF  ')GOTO702
      IF(IH.EQ.'DEXP'.AND.IH2.EQ.'PF  ')GOTO703
      IF(IH.EQ.'DEXS'.AND.IH2.EQ.'F   ')GOTO704
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'EV1C'.AND.IH2.EQ.'DF  ')GOTO711
      IF(IH.EQ.'EV1P'.AND.IH2.EQ.'DF  ')GOTO712
      IF(IH.EQ.'EV1P'.AND.IH2.EQ.'PF  ')GOTO713
      IF(IH.EQ.'EV1H'.AND.IH2.EQ.'AZ  ')GOTO714
      IF(IH.EQ.'EV1C'.AND.IH2.EQ.'HAZ ')GOTO715
      IF(IH.EQ.'EV1S'.AND.IH2.EQ.'URV ')GOTO716
      IF(IH.EQ.'EV1I'.AND.IH2.EQ.'SURV')GOTO717
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'EV2C'.AND.IH2.EQ.'DF  ')GOTO721
      IF(IH.EQ.'EV2P'.AND.IH2.EQ.'DF  ')GOTO722
      IF(IH.EQ.'EV2P'.AND.IH2.EQ.'PF  ')GOTO723
      IF(IH.EQ.'EV2H'.AND.IH2.EQ.'AZ  ')GOTO724
      IF(IH.EQ.'EV2C'.AND.IH2.EQ.'HAZ ')GOTO725
      IF(IH.EQ.'EV2S'.AND.IH2.EQ.'URV ')GOTO726
      IF(IH.EQ.'EV2I'.AND.IH2.EQ.'SURV')GOTO727
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'EXPC'.AND.IH2.EQ.'DF  ')GOTO731
      IF(IH.EQ.'EXPP'.AND.IH2.EQ.'DF  ')GOTO732
      IF(IH.EQ.'EXPP'.AND.IH2.EQ.'PF  ')GOTO733
      IF(IH.EQ.'EXPS'.AND.IH2.EQ.'F   ')GOTO734
      IF(IH.EQ.'EXPH'.AND.IH2.EQ.'AZ  ')GOTO735
      IF(IH.EQ.'EXPC'.AND.IH2.EQ.'HAZ ')GOTO736
      IF(IH.EQ.'EXPA'.AND.IH2.EQ.'FR  ')GOTO737
      IF(IH.EQ.'EXPS'.AND.IH2.EQ.'URV ')GOTO738
      IF(IH.EQ.'EXPI'.AND.IH2.EQ.'SURV')GOTO739
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'GAMC'.AND.IH2.EQ.'DF  ')GOTO741
      IF(IH.EQ.'GAMP'.AND.IH2.EQ.'DF  ')GOTO742
      IF(IH.EQ.'GAMP'.AND.IH2.EQ.'PF  ')GOTO743
      IF(IH.EQ.'GAMH'.AND.IH2.EQ.'AZ  ')GOTO744
      IF(IH.EQ.'GAMC'.AND.IH2.EQ.'HAZ ')GOTO745
      IF(IH.EQ.'GAMS'.AND.IH2.EQ.'URV ')GOTO746
      IF(IH.EQ.'GAMI'.AND.IH2.EQ.'SURV')GOTO747
C
CCCCC MARCH 2004.  MAKE DISTINCTION BETWEEN TWO COMMON DEFINITIONS
CCCCC OF GEOMETRIC DISTRIBUTION.  THE JOHNSON, KOTZ, AND KEMP
CCCCC DEFINITION (THE DEFAULT) IS THE NUMBER OF TRIALS UP TO AND
CCCCC INCLUDING THE FIRST SUCCESS (OR FAILURE). THE DEFINITION
CCCCC USED IN THE DIGITAL LIBRARY OF MATHEMATICAL FUNCTIONS
CCCCC IS THE NUMBER OF TRIALS UNTIL, BUT NOT INCLUDING, THE
CCCCC FIRST SUCCESS.
C
      IF(IGEODF.EQ.'DLMF')THEN
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    MARCH 2004
        IF(IH.EQ.'GEOC'.AND.IH2.EQ.'DF  ')GOTO756
        IF(IH.EQ.'GEOP'.AND.IH2.EQ.'DF  ')GOTO757
        IF(IH.EQ.'GEOP'.AND.IH2.EQ.'PF  ')GOTO758
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      ELSE
        IF(IH.EQ.'GEOC'.AND.IH2.EQ.'DF  ')GOTO751
        IF(IH.EQ.'GEOP'.AND.IH2.EQ.'DF  ')GOTO752
        IF(IH.EQ.'GEOP'.AND.IH2.EQ.'PF  ')GOTO753
      ENDIF
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'HFNC'.AND.IH2.EQ.'DF  ')GOTO761
      IF(IH.EQ.'HFNP'.AND.IH2.EQ.'DF  ')GOTO762
      IF(IH.EQ.'HFNP'.AND.IH2.EQ.'PF  ')GOTO763
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'LAMC'.AND.IH2.EQ.'DF  ')GOTO771
      IF(IH.EQ.'LAMP'.AND.IH2.EQ.'DF  ')GOTO772
      IF(IH.EQ.'LAMP'.AND.IH2.EQ.'PF  ')GOTO773
      IF(IH.EQ.'LAMS'.AND.IH2.EQ.'F   ')GOTO774
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'LGNC'.AND.IH2.EQ.'DF  ')GOTO781
      IF(IH.EQ.'LGNP'.AND.IH2.EQ.'DF  ')GOTO782
      IF(IH.EQ.'LGNP'.AND.IH2.EQ.'PF  ')GOTO783
      IF(IH.EQ.'LGNH'.AND.IH2.EQ.'AZ  ')GOTO784
      IF(IH.EQ.'LGNC'.AND.IH2.EQ.'HAZ ')GOTO785
      IF(IH.EQ.'LGNA'.AND.IH2.EQ.'FR  ')GOTO786
      IF(IH.EQ.'LGNS'.AND.IH2.EQ.'URV ')GOTO787
      IF(IH.EQ.'LGNI'.AND.IH2.EQ.'SURV')GOTO788
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'LOGC'.AND.IH2.EQ.'DF  ')GOTO791
      IF(IH.EQ.'LOGP'.AND.IH2.EQ.'DF  ')GOTO792
      IF(IH.EQ.'LOGP'.AND.IH2.EQ.'PF  ')GOTO793
      IF(IH.EQ.'LOGS'.AND.IH2.EQ.'F   ')GOTO794
      IF(IH.EQ.'LOGH'.AND.IH2.EQ.'AZ  ')GOTO795
      IF(IH.EQ.'LOGC'.AND.IH2.EQ.'HAZ ')GOTO796
      IF(IH.EQ.'LOGS'.AND.IH2.EQ.'URV ')GOTO797
      IF(IH.EQ.'LOGI'.AND.IH2.EQ.'SURV')GOTO798
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'PARC'.AND.IH2.EQ.'DF  ')GOTO801
      IF(IH.EQ.'PARP'.AND.IH2.EQ.'DF  ')GOTO802
      IF(IH.EQ.'PARP'.AND.IH2.EQ.'PF  ')GOTO803
      IF(IH.EQ.'PARH'.AND.IH2.EQ.'AZ  ')GOTO804
      IF(IH.EQ.'PARC'.AND.IH2.EQ.'HAZ ')GOTO805
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL 1994
      IF(IH.EQ.'UNIC'.AND.IH2.EQ.'DF  ')GOTO811
      IF(IH.EQ.'UNIP'.AND.IH2.EQ.'DF  ')GOTO812
      IF(IH.EQ.'UNIP'.AND.IH2.EQ.'PF  ')GOTO813
      IF(IH.EQ.'UNIS'.AND.IH2.EQ.'F   ')GOTO814
      IF(IH.EQ.'UNIH'.AND.IH2.EQ.'AZ  ')GOTO815
      IF(IH.EQ.'UNIC'.AND.IH2.EQ.'HAZ ')GOTO816
      IF(IH.EQ.'UNIS'.AND.IH2.EQ.'URV ')GOTO817
      IF(IH.EQ.'UNII'.AND.IH2.EQ.'SURV')GOTO818
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    SEPTEMBER 1994
      IF(IH.EQ.'BETC'.AND.IH2.EQ.'DF  ')GOTO821
      IF(IH.EQ.'BETP'.AND.IH2.EQ.'DF  ')GOTO822
      IF(IH.EQ.'BETP'.AND.IH2.EQ.'PF  ')GOTO823
C
CCCCC THE FOLLOWING 2 LINES WERE ADDED    SEPTEMBER 1994
      IF(IH.EQ.'NCBC'.AND.IH2.EQ.'DF  ')GOTO831
      IF(IH.EQ.'NCBP'.AND.IH2.EQ.'DF  ')GOTO832
      IF(IH.EQ.'NCBP'.AND.IH2.EQ.'PF  ')GOTO833
C
CCCCC THE FOLLOWING 2 LINES WERE ADDED    SEPTEMBER 1994
      IF(IH.EQ.'NCCC'.AND.IH2.EQ.'DF  ')GOTO841
      IF(IH.EQ.'NCCP'.AND.IH2.EQ.'DF  ')GOTO842
      IF(IH.EQ.'NCCP'.AND.IH2.EQ.'PF  ')GOTO843
      IF(IH.EQ.'NCCN'.AND.IH2.EQ.'CP  ')GOTO844
C
CCCCC THE FOLLOWING 2 LINES WERE ADDED    SEPTEMBER 1994
      IF(IH.EQ.'NCFC'.AND.IH2.EQ.'DF  ')GOTO851
      IF(IH.EQ.'NCFP'.AND.IH2.EQ.'DF  ')GOTO852
      IF(IH.EQ.'NCFP'.AND.IH2.EQ.'PF  ')GOTO853
C
CCCCC THE FOLLOWING 2 LINES WERE ADDED    SEPTEMBER 1994
      IF(IH.EQ.'NCTC'.AND.IH2.EQ.'DF  ')GOTO861
      IF(IH.EQ.'NCTP'.AND.IH2.EQ.'DF  ')GOTO862
      IF(IH.EQ.'NCTP'.AND.IH2.EQ.'PF  ')GOTO863
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    SEPTEMBER 1994
      IF(IH.EQ.'DISC'.AND.IH2.EQ.'DF  ')GOTO871
      IF(IH.EQ.'DISP'.AND.IH2.EQ.'DF  ')GOTO872
      IF(IH.EQ.'DISP'.AND.IH2.EQ.'PF  ')GOTO873
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    SEPTEMBER 1994
      IF(IH.EQ.'TRIC'.AND.IH2.EQ.'DF  ')GOTO881
      IF(IH.EQ.'TRIP'.AND.IH2.EQ.'DF  ')GOTO882
      IF(IH.EQ.'TRIP'.AND.IH2.EQ.'PF  ')GOTO883
C
CCCCC THE FOLLOWING 2 LINES WERE ADDED    SEPTEMBER 1994
      IF(IH.EQ.'DNTC'.AND.IH2.EQ.'DF  ')GOTO891
      IF(IH.EQ.'DNTP'.AND.IH2.EQ.'DF  ')GOTO892
      IF(IH.EQ.'DNTP'.AND.IH2.EQ.'PF  ')GOTO893
C
CCCCC THE FOLLOWING 2 LINES WERE ADDED    SEPTEMBER 1994
      IF(IH.EQ.'DNFC'.AND.IH2.EQ.'DF  ')GOTO901
      IF(IH.EQ.'DNFP'.AND.IH2.EQ.'DF  ')GOTO902
      IF(IH.EQ.'DNFP'.AND.IH2.EQ.'PF  ')GOTO903
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    SEPTEMBER 1994
      IF(IH.EQ.'HYPC'.AND.IH2.EQ.'DF  ')GOTO911
      IF(IH.EQ.'HYPP'.AND.IH2.EQ.'DF  ')GOTO912
      IF(IH.EQ.'HYPP'.AND.IH2.EQ.'PF  ')GOTO913
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    OCTOBER   1994
      IF(IH.EQ.'VONC'.AND.IH2.EQ.'DF  ')GOTO921
      IF(IH.EQ.'VONP'.AND.IH2.EQ.'DF  ')GOTO922
      IF(IH.EQ.'VONP'.AND.IH2.EQ.'PF  ')GOTO923
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    OCTOBER   1994
      IF(IH.EQ.'BVNC'.AND.IH2.EQ.'DF  ')GOTO931
      IF(IH.EQ.'BVNP'.AND.IH2.EQ.'DF  ')GOTO932
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1995
      IF(IH.EQ.'COSC'.AND.IH2.EQ.'DF  ')GOTO941
      IF(IH.EQ.'COSP'.AND.IH2.EQ.'DF  ')GOTO942
      IF(IH.EQ.'COSP'.AND.IH2.EQ.'PF  ')GOTO943
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    MARCH     2013
      IF(IH.EQ.'SINC'.AND.IH2.EQ.'DF  ')GOTO946
      IF(IH.EQ.'SINP'.AND.IH2.EQ.'DF  ')GOTO947
      IF(IH.EQ.'SINP'.AND.IH2.EQ.'PF  ')GOTO948
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1995
      IF(IH.EQ.'ALPC'.AND.IH2.EQ.'DF  ')GOTO951
      IF(IH.EQ.'ALPP'.AND.IH2.EQ.'DF  ')GOTO952
      IF(IH.EQ.'ALPP'.AND.IH2.EQ.'PF  ')GOTO953
      IF(IH.EQ.'ALPH'.AND.IH2.EQ.'AZ  ')GOTO954
      IF(IH.EQ.'ALPC'.AND.IH2.EQ.'HAZ ')GOTO955
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1995
      IF(IH.EQ.'PNRC'.AND.IH2.EQ.'DF  ')GOTO961
      IF(IH.EQ.'PNRP'.AND.IH2.EQ.'DF  ')GOTO962
      IF(IH.EQ.'PNRP'.AND.IH2.EQ.'PF  ')GOTO963
      IF(IH.EQ.'PNRH'.AND.IH2.EQ.'AZ  ')GOTO964
      IF(IH.EQ.'PNRC'.AND.IH2.EQ.'HAZ ')GOTO965
      IF(IH.EQ.'PNRS'.AND.IH2.EQ.'URV ')GOTO966
      IF(IH.EQ.'PNRI'.AND.IH2.EQ.'SURV')GOTO967
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1995
      IF(IH.EQ.'PLNC'.AND.IH2.EQ.'DF  ')GOTO971
      IF(IH.EQ.'PLNP'.AND.IH2.EQ.'DF  ')GOTO972
      IF(IH.EQ.'PLNP'.AND.IH2.EQ.'PF  ')GOTO973
      IF(IH.EQ.'PLNH'.AND.IH2.EQ.'AZ  ')GOTO974
      IF(IH.EQ.'PLNC'.AND.IH2.EQ.'HAZ ')GOTO975
      IF(IH.EQ.'PLNS'.AND.IH2.EQ.'URV ')GOTO976
      IF(IH.EQ.'PLNI'.AND.IH2.EQ.'SURV')GOTO977
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1995
      IF(IH.EQ.'FNRC'.AND.IH2.EQ.'DF  ')GOTO981
      IF(IH.EQ.'FNRP'.AND.IH2.EQ.'DF  ')GOTO982
      IF(IH.EQ.'FNRP'.AND.IH2.EQ.'PF  ')GOTO983
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1995
      IF(IH.EQ.'POWC'.AND.IH2.EQ.'DF  ')GOTO991
      IF(IH.EQ.'POWP'.AND.IH2.EQ.'DF  ')GOTO992
      IF(IH.EQ.'POWP'.AND.IH2.EQ.'PF  ')GOTO993
      IF(IH.EQ.'POWH'.AND.IH2.EQ.'AZ  ')GOTO994
      IF(IH.EQ.'POWC'.AND.IH2.EQ.'HAZ ')GOTO995
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1995
      IF(IH.EQ.'TNRC'.AND.IH2.EQ.'DF  ')GOTO1011
      IF(IH.EQ.'TNRP'.AND.IH2.EQ.'DF  ')GOTO1012
      IF(IH.EQ.'TNRP'.AND.IH2.EQ.'PF  ')GOTO1013
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1995
      IF(IH.EQ.'CHCD'.AND.IH2.EQ.'F   ')GOTO1021
      IF(IH.EQ.'CHPD'.AND.IH2.EQ.'F   ')GOTO1022
      IF(IH.EQ.'CHPP'.AND.IH2.EQ.'F   ')GOTO1023
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1995
      IF(IH.EQ.'DLGC'.AND.IH2.EQ.'DF  ')GOTO1031
      IF(IH.EQ.'DLGP'.AND.IH2.EQ.'DF  ')GOTO1032
      IF(IH.EQ.'DLGP'.AND.IH2.EQ.'PF  ')GOTO1033
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1995
      IF(IH.EQ.'WARC'.AND.IH2.EQ.'DF  ')GOTO1041
      IF(IH.EQ.'WARP'.AND.IH2.EQ.'DF  ')GOTO1042
      IF(IH.EQ.'WARP'.AND.IH2.EQ.'PF  ')GOTO1043
      IF(IH.EQ.'YULC'.AND.IH2.EQ.'DF  ')GOTO1046
      IF(IH.EQ.'YULP'.AND.IH2.EQ.'DF  ')GOTO1047
      IF(IH.EQ.'YULP'.AND.IH2.EQ.'PF  ')GOTO1048
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1995
      IF(IH.EQ.'LLGC'.AND.IH2.EQ.'DF  ')GOTO1051
      IF(IH.EQ.'LLGP'.AND.IH2.EQ.'DF  ')GOTO1052
      IF(IH.EQ.'LLGP'.AND.IH2.EQ.'PF  ')GOTO1053
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1995
      IF(IH.EQ.'GGDC'.AND.IH2.EQ.'DF  ')GOTO1061
      IF(IH.EQ.'GGDP'.AND.IH2.EQ.'DF  ')GOTO1062
      IF(IH.EQ.'GGDP'.AND.IH2.EQ.'PF  ')GOTO1063
      IF(IH.EQ.'GGDH'.AND.IH2.EQ.'AZ  ')GOTO1064
      IF(IH.EQ.'GGDC'.AND.IH2.EQ.'HAZ ')GOTO1065
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    APRIL     1998
      IF(IH.EQ.'IGAC'.AND.IH2.EQ.'DF  ')GOTO1066
      IF(IH.EQ.'IGAP'.AND.IH2.EQ.'DF  ')GOTO1067
      IF(IH.EQ.'IGAP'.AND.IH2.EQ.'PF  ')GOTO1068
      IF(IH.EQ.'IGAH'.AND.IH2.EQ.'AZ  ')GOTO1069
      IF(IH.EQ.'IGAC'.AND.IH2.EQ.'HAZ ')GOTO9065
      IF(IH.EQ.'IGAS'.AND.IH2.EQ.'URV ')GOTO9066
      IF(IH.EQ.'IGAI'.AND.IH2.EQ.'SURV')GOTO9067
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    SEPTEMBER 1995
      IF(IH.EQ.'ANGC'.AND.IH2.EQ.'DF  ')GOTO1071
      IF(IH.EQ.'ANGP'.AND.IH2.EQ.'DF  ')GOTO1072
      IF(IH.EQ.'ANGP'.AND.IH2.EQ.'PF  ')GOTO1073
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    SEPTEMBER 1995
      IF(IH.EQ.'ARSC'.AND.IH2.EQ.'DF  ')GOTO1081
      IF(IH.EQ.'ARSP'.AND.IH2.EQ.'DF  ')GOTO1082
      IF(IH.EQ.'ARSP'.AND.IH2.EQ.'PF  ')GOTO1083
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    OCTOBER 1995
      IF(IH.EQ.'DWEC'.AND.IH2.EQ.'DF  ')GOTO1091
      IF(IH.EQ.'DWEP'.AND.IH2.EQ.'DF  ')GOTO1092
      IF(IH.EQ.'DWEP'.AND.IH2.EQ.'PF  ')GOTO1093
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    OCTOBER 1995
      IF(IH.EQ.'LGAC'.AND.IH2.EQ.'DF  ')GOTO1101
      IF(IH.EQ.'LGAP'.AND.IH2.EQ.'DF  ')GOTO1102
      IF(IH.EQ.'LGAP'.AND.IH2.EQ.'PF  ')GOTO1103
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    OCTOBER 1995
      IF(IH.EQ.'HSEC'.AND.IH2.EQ.'DF  ')GOTO1111
      IF(IH.EQ.'HSEP'.AND.IH2.EQ.'DF  ')GOTO1112
      IF(IH.EQ.'HSEP'.AND.IH2.EQ.'PF  ')GOTO1113
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    OCTOBER 1995
      IF(IH.EQ.'HFCC'.AND.IH2.EQ.'DF  ')GOTO1121
      IF(IH.EQ.'HFCP'.AND.IH2.EQ.'DF  ')GOTO1122
      IF(IH.EQ.'HFCP'.AND.IH2.EQ.'PF  ')GOTO1123
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    OCTOBER 1995
      IF(IH.EQ.'HFLC'.AND.IH2.EQ.'DF  ')GOTO1131
      IF(IH.EQ.'HFLP'.AND.IH2.EQ.'DF  ')GOTO1132
      IF(IH.EQ.'HFLP'.AND.IH2.EQ.'PF  ')GOTO1133
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    OCTOBER 1995
      IF(IH.EQ.'GEVC'.AND.IH2.EQ.'DF  ')GOTO1141
      IF(IH.EQ.'GEVP'.AND.IH2.EQ.'DF  ')GOTO1142
      IF(IH.EQ.'GEVP'.AND.IH2.EQ.'PF  ')GOTO1143
      IF(IH.EQ.'GEVH'.AND.IH2.EQ.'AZ  ')GOTO1144
      IF(IH.EQ.'GEVC'.AND.IH2.EQ.'HAZ ')GOTO1145
      IF(IH.EQ.'GEVS'.AND.IH2.EQ.'URV ')GOTO1146
      IF(IH.EQ.'GEVI'.AND.IH2.EQ.'SURV')GOTO1147
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    OCTOBER 1995
      IF(IH.EQ.'GOMC'.AND.IH2.EQ.'DF  ')GOTO1151
      IF(IH.EQ.'GOMP'.AND.IH2.EQ.'DF  ')GOTO1152
      IF(IH.EQ.'GOMP'.AND.IH2.EQ.'PF  ')GOTO1153
      IF(IH.EQ.'GOMH'.AND.IH2.EQ.'AZ  ')GOTO1154
      IF(IH.EQ.'GOMC'.AND.IH2.EQ.'HAZ ')GOTO1155
      IF(IH.EQ.'GOMS'.AND.IH2.EQ.'URV ')GOTO1156
      IF(IH.EQ.'GOMI'.AND.IH2.EQ.'SURV')GOTO1157
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    OCTOBER 1995
      IF(IH.EQ.'PA2C'.AND.IH2.EQ.'DF  ')GOTO1161
      IF(IH.EQ.'PA2P'.AND.IH2.EQ.'DF  ')GOTO1162
      IF(IH.EQ.'PA2P'.AND.IH2.EQ.'PF  ')GOTO1163
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    OCTOBER 1995
      IF(IH.EQ.'WCAC'.AND.IH2.EQ.'DF  ')GOTO1171
      IF(IH.EQ.'WCAP'.AND.IH2.EQ.'DF  ')GOTO1172
      IF(IH.EQ.'WCAP'.AND.IH2.EQ.'PF  ')GOTO1173
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED    OCTOBER 1995
      IF(IH.EQ.'EWEC'.AND.IH2.EQ.'DF  ')GOTO1181
      IF(IH.EQ.'EWEP'.AND.IH2.EQ.'DF  ')GOTO1182
      IF(IH.EQ.'EWEP'.AND.IH2.EQ.'PF  ')GOTO1183
      IF(IH.EQ.'EWEH'.AND.IH2.EQ.'AZ  ')GOTO1184
      IF(IH.EQ.'EWEC'.AND.IH2.EQ.'HAZ ')GOTO1185
      IF(IH.EQ.'EWES'.AND.IH2.EQ.'URV ')GOTO1186
      IF(IH.EQ.'EWEI'.AND.IH2.EQ.'SURV')GOTO1187
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED    OCTOBER 1995
      IF(IH.EQ.'TNEC'.AND.IH2.EQ.'DF  ')GOTO1191
      IF(IH.EQ.'TNEP'.AND.IH2.EQ.'DF  ')GOTO1192
      IF(IH.EQ.'TNEP'.AND.IH2.EQ.'PF  ')GOTO1193
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED    DECEMBER 1995
      IF(IH.EQ.'GLOC'.AND.IH2.EQ.'DF  ')GOTO1201
      IF(IH.EQ.'GLOP'.AND.IH2.EQ.'DF  ')GOTO1202
      IF(IH.EQ.'GLOP'.AND.IH2.EQ.'PF  ')GOTO1203
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED    DECEMBER 1995
      IF(IH.EQ.'PEXC'.AND.IH2.EQ.'DF  ')GOTO1211
      IF(IH.EQ.'PEXP'.AND.IH2.EQ.'DF  ')GOTO1212
      IF(IH.EQ.'PEXP'.AND.IH2.EQ.'PF  ')GOTO1213
      IF(IH.EQ.'PEXH'.AND.IH2.EQ.'AZ  ')GOTO1214
      IF(IH.EQ.'PEXC'.AND.IH2.EQ.'HAZ ')GOTO1215
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED    DECEMBER 1995
      IF(IH.EQ.'DGAC'.AND.IH2.EQ.'DF  ')GOTO1221
      IF(IH.EQ.'DGAP'.AND.IH2.EQ.'DF  ')GOTO1222
      IF(IH.EQ.'DGAP'.AND.IH2.EQ.'PF  ')GOTO1223
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED    DECEMBER 1995
CCCCC IF(IH.EQ.'KAPC'.AND.IH2.EQ.'DF  ')GOTO1231
CCCCC IF(IH.EQ.'KAPP'.AND.IH2.EQ.'DF  ')GOTO1232
CCCCC IF(IH.EQ.'KAPP'.AND.IH2.EQ.'PF  ')GOTO1233
      IF(IH.EQ.'MIEC'.AND.IH2.EQ.'DF  ')GOTO1231
      IF(IH.EQ.'MIEP'.AND.IH2.EQ.'DF  ')GOTO1232
      IF(IH.EQ.'MIEP'.AND.IH2.EQ.'PF  ')GOTO1233
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED    DECEMBER 1995
      IF(IH.EQ.'FCAC'.AND.IH2.EQ.'DF  ')GOTO1241
      IF(IH.EQ.'FCAP'.AND.IH2.EQ.'DF  ')GOTO1242
      IF(IH.EQ.'FCAP'.AND.IH2.EQ.'PF  ')GOTO1243
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED    FEBRUARY 1996
      IF(IH.EQ.'BBNC'.AND.IH2.EQ.'DF  ')GOTO1251
      IF(IH.EQ.'BBNP'.AND.IH2.EQ.'DF  ')GOTO1252
      IF(IH.EQ.'BBNP'.AND.IH2.EQ.'PF  ')GOTO1253
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED    MARCH 2004
      IF(IH.EQ.'POLC'.AND.IH2.EQ.'DF  ')GOTO1256
      IF(IH.EQ.'POLP'.AND.IH2.EQ.'DF  ')GOTO1257
      IF(IH.EQ.'POLP'.AND.IH2.EQ.'PF  ')GOTO1258
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED    FEBRUARY 1996
      IF(IH.EQ.'BRAC'.AND.IH2.EQ.'DF  ')GOTO1261
      IF(IH.EQ.'BRAP'.AND.IH2.EQ.'DF  ')GOTO1262
      IF(IH.EQ.'BRAP'.AND.IH2.EQ.'PF  ')GOTO1263
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED    FEBRUARY 1996
      IF(IH.EQ.'GEXC'.AND.IH2.EQ.'DF  ')GOTO1271
      IF(IH.EQ.'GEXP'.AND.IH2.EQ.'DF  ')GOTO1272
      IF(IH.EQ.'GEXP'.AND.IH2.EQ.'PF  ')GOTO1273
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED    MAY 1996
      IF(IH.EQ.'RECC'.AND.IH2.EQ.'DF  ')GOTO1281
      IF(IH.EQ.'RECP'.AND.IH2.EQ.'DF  ')GOTO1282
      IF(IH.EQ.'RECP'.AND.IH2.EQ.'PF  ')GOTO1283
C
CCCCC THE FOLLOWING 5 LINES WERE ADDED    MAY 1996
      IF(IH.EQ.'SRAC'.AND.IH2.EQ.'DF  ')GOTO1291
CCCCC IF(IH.EQ.'SRAP'.AND.IH2.EQ.'DF  ')GOTO1292
      IF(IH.EQ.'SRAP'.AND.IH2.EQ.'PF  ')GOTO1293
C
CCCCC THE FOLLOWING 7 LINES WERE ADDED    SEPTEMBER 2001
      IF(IH.EQ.'GLDC'.AND.IH2.EQ.'DF  ')GOTO1301
      IF(IH.EQ.'GLDP'.AND.IH2.EQ.'DF  ')GOTO1302
      IF(IH.EQ.'GLDP'.AND.IH2.EQ.'PF  ')GOTO1303
CCCCC IF(IH.EQ.'GLDC'.AND.IH2.EQ.'HK  ')GOTO1304
      IF(IH.EQ.'GLDL'.AND.IH2.EQ.'LM  ')GOTO1305
      IF(IH.EQ.'GLDU'.AND.IH2.EQ.'LM  ')GOTO1306
CCCCC IF(IH.EQ.'GLDS'.AND.IH2.EQ.'GN  ')GOTO1307
C
CCCCC THE FOLLOWING SECTION WAS ADDED    SEPTEMBER 2001
      IF(IH.EQ.'LDEC'.AND.IH2.EQ.'DF  ')GOTO1321
      IF(IH.EQ.'LDEP'.AND.IH2.EQ.'DF  ')GOTO1322
      IF(IH.EQ.'LDEP'.AND.IH2.EQ.'PF  ')GOTO1323
C
      IF(IH.EQ.'IWEC'.AND.IH2.EQ.'DF  ')GOTO1331
      IF(IH.EQ.'IWEP'.AND.IH2.EQ.'DF  ')GOTO1332
      IF(IH.EQ.'IWEP'.AND.IH2.EQ.'PF  ')GOTO1333
      IF(IH.EQ.'IWEH'.AND.IH2.EQ.'AZ  ')GOTO1334
      IF(IH.EQ.'IWEC'.AND.IH2.EQ.'HAZ ')GOTO1335
      IF(IH.EQ.'IWES'.AND.IH2.EQ.'URV ')GOTO1336
      IF(IH.EQ.'IWEI'.AND.IH2.EQ.'SURV')GOTO1337
C
      IF(IH.EQ.'JSBC'.AND.IH2.EQ.'DF  ')GOTO1341
      IF(IH.EQ.'JSBP'.AND.IH2.EQ.'DF  ')GOTO1342
      IF(IH.EQ.'JSBP'.AND.IH2.EQ.'PF  ')GOTO1343
      IF(IH.EQ.'JSUC'.AND.IH2.EQ.'DF  ')GOTO1351
      IF(IH.EQ.'JSUP'.AND.IH2.EQ.'DF  ')GOTO1352
      IF(IH.EQ.'JSUP'.AND.IH2.EQ.'PF  ')GOTO1353
C
      IF(IH.EQ.'GEEC'.AND.IH2.EQ.'DF  ')GOTO1361
      IF(IH.EQ.'GEEP'.AND.IH2.EQ.'DF  ')GOTO1362
      IF(IH.EQ.'GEEP'.AND.IH2.EQ.'PF  ')GOTO1363
      IF(IH.EQ.'GEEH'.AND.IH2.EQ.'AZ  ')GOTO1364
      IF(IH.EQ.'GEEC'.AND.IH2.EQ.'HAZ ')GOTO1365
      IF(IH.EQ.'GEES'.AND.IH2.EQ.'URV ')GOTO1366
      IF(IH.EQ.'GEEI'.AND.IH2.EQ.'SURV')GOTO1367
C
      IF(IH.EQ.'TSPC'.AND.IH2.EQ.'DF  ')GOTO1371
      IF(IH.EQ.'TSPP'.AND.IH2.EQ.'DF  ')GOTO1372
      IF(IH.EQ.'TSPP'.AND.IH2.EQ.'PF  ')GOTO1373
C
      IF(IH.EQ.'BWEC'.AND.IH2.EQ.'DF  ')GOTO1381
      IF(IH.EQ.'BWEP'.AND.IH2.EQ.'DF  ')GOTO1382
      IF(IH.EQ.'BWEP'.AND.IH2.EQ.'PF  ')GOTO1383
      IF(IH.EQ.'BWEH'.AND.IH2.EQ.'AZ  ')GOTO1384
      IF(IH.EQ.'BWEC'.AND.IH2.EQ.'HAZ ')GOTO1385
C
      IF(IH.EQ.'GHCD'.AND.IH2.EQ.'F   ')GOTO1391
      IF(IH.EQ.'GHPD'.AND.IH2.EQ.'F   ')GOTO1392
      IF(IH.EQ.'GHPP'.AND.IH2.EQ.'F   ')GOTO1393
      IF(IH.EQ.'GCDF'.AND.IH2.EQ.'    ')GOTO1396
      IF(IH.EQ.'GPDF'.AND.IH2.EQ.'    ')GOTO1397
      IF(IH.EQ.'GPPF'.AND.IH2.EQ.'    ')GOTO1398
C
      IF(IH.EQ.'SLAC'.AND.IH2.EQ.'DF  ')GOTO1401
      IF(IH.EQ.'SLAP'.AND.IH2.EQ.'DF  ')GOTO1402
      IF(IH.EQ.'SLAP'.AND.IH2.EQ.'PF  ')GOTO1403
C
      IF(IH.EQ.'LANC'.AND.IH2.EQ.'DF  ')GOTO1411
      IF(IH.EQ.'LANP'.AND.IH2.EQ.'DF  ')GOTO1412
      IF(IH.EQ.'LANP'.AND.IH2.EQ.'PF  ')GOTO1413
      IF(IH.EQ.'LANX'.AND.IH2.EQ.'M1  ')GOTO1414
      IF(IH.EQ.'LANX'.AND.IH2.EQ.'M2  ')GOTO1415
      IF(IH.EQ.'LAND'.AND.IH2.EQ.'IF  ')GOTO1416
C
      IF(IH.EQ.'IBCD'.AND.IH2.EQ.'F   ')GOTO1421
      IF(IH.EQ.'IBPD'.AND.IH2.EQ.'F   ')GOTO1422
      IF(IH.EQ.'IBPP'.AND.IH2.EQ.'F   ')GOTO1423
C
      IF(IH.EQ.'ERRC'.AND.IH2.EQ.'DF  ')GOTO1431
      IF(IH.EQ.'ERRP'.AND.IH2.EQ.'DF  ')GOTO1432
      IF(IH.EQ.'ERRP'.AND.IH2.EQ.'PF  ')GOTO1433
C
      IF(IH.EQ.'TRAC'.AND.IH2.EQ.'DF  ')GOTO1441
      IF(IH.EQ.'TRAP'.AND.IH2.EQ.'DF  ')GOTO1442
      IF(IH.EQ.'TRAP'.AND.IH2.EQ.'PF  ')GOTO1443
C
      IF(IH.EQ.'GTRC'.AND.IH2.EQ.'DF  ')GOTO1451
      IF(IH.EQ.'GTRP'.AND.IH2.EQ.'DF  ')GOTO1452
      IF(IH.EQ.'GTRP'.AND.IH2.EQ.'PF  ')GOTO1453
C
      IF(IH.EQ.'FTCD'.AND.IH2.EQ.'F   ')GOTO1461
      IF(IH.EQ.'FTPD'.AND.IH2.EQ.'F   ')GOTO1462
      IF(IH.EQ.'FTPP'.AND.IH2.EQ.'F   ')GOTO1463
C
      IF(IH.EQ.'SNCD'.AND.IH2.EQ.'F   ')GOTO1471
      IF(IH.EQ.'SNPD'.AND.IH2.EQ.'F   ')GOTO1472
      IF(IH.EQ.'SNPP'.AND.IH2.EQ.'F   ')GOTO1473
C
      IF(IH.EQ.'STCD'.AND.IH2.EQ.'F   ')GOTO1481
      IF(IH.EQ.'STPD'.AND.IH2.EQ.'F   ')GOTO1482
      IF(IH.EQ.'STPP'.AND.IH2.EQ.'F   ')GOTO1483
C
      IF(IH.EQ.'ZETC'.AND.IH2.EQ.'DF  ')GOTO1491
      IF(IH.EQ.'ZETP'.AND.IH2.EQ.'DF  ')GOTO1492
      IF(IH.EQ.'ZETP'.AND.IH2.EQ.'PF  ')GOTO1493
C
      IF(IMAKDF.EQ.'DLMF' .OR. IMAKDF.EQ.'MEEK')THEN
         IF(IH.EQ.'MAKC'.AND.IH2.EQ.'DF  ')GOTO1501
         IF(IH.EQ.'MAKP'.AND.IH2.EQ.'DF  ')GOTO1502
         IF(IH.EQ.'MAKP'.AND.IH2.EQ.'PF  ')GOTO1503
         IF(IH.EQ.'MAKH'.AND.IH2.EQ.'AZ  ')GOTO1504
         IF(IH.EQ.'MAKC'.AND.IH2.EQ.'HAZ ')GOTO1505
      ELSEIF(IMAKDF.EQ.'REPA')THEN
         IF(IH.EQ.'MAKC'.AND.IH2.EQ.'DF  ')GOTO1506
         IF(IH.EQ.'MAKP'.AND.IH2.EQ.'DF  ')GOTO1507
         IF(IH.EQ.'MAKP'.AND.IH2.EQ.'PF  ')GOTO1508
         IF(IH.EQ.'MAKH'.AND.IH2.EQ.'AZ  ')GOTO1509
         IF(IH.EQ.'MAKC'.AND.IH2.EQ.'HAZ ')GOTO1510
      ENDIF
C
      IF(IH.EQ.'LSNC'.AND.IH2.EQ.'DF  ')GOTO1511
      IF(IH.EQ.'LSNP'.AND.IH2.EQ.'DF  ')GOTO1512
      IF(IH.EQ.'LSNP'.AND.IH2.EQ.'PF  ')GOTO1513
C
      IF(IH.EQ.'LSTC'.AND.IH2.EQ.'DF  ')GOTO1521
      IF(IH.EQ.'LSTP'.AND.IH2.EQ.'DF  ')GOTO1522
      IF(IH.EQ.'LSTP'.AND.IH2.EQ.'PF  ')GOTO1523
C
      IF(IH.EQ.'HERC'.AND.IH2.EQ.'DF  ')GOTO1531
      IF(IH.EQ.'HERP'.AND.IH2.EQ.'DF  ')GOTO1532
      IF(IH.EQ.'HERP'.AND.IH2.EQ.'PF  ')GOTO1533
C
      IF(IH.EQ.'GWAC'.AND.IH2.EQ.'DF  ')GOTO1541
      IF(IH.EQ.'GWAP'.AND.IH2.EQ.'DF  ')GOTO1542
      IF(IH.EQ.'GWAP'.AND.IH2.EQ.'PF  ')GOTO1543
C
      IF(IH.EQ.'BNBC'.AND.IH2.EQ.'DF  ')GOTO1541
      IF(IH.EQ.'BNBP'.AND.IH2.EQ.'DF  ')GOTO1542
      IF(IH.EQ.'BNBP'.AND.IH2.EQ.'PF  ')GOTO1543
C
      IF(IH.EQ.'SDEC'.AND.IH2.EQ.'DF  ')GOTO1551
      IF(IH.EQ.'SDEP'.AND.IH2.EQ.'DF  ')GOTO1552
      IF(IH.EQ.'SDEP'.AND.IH2.EQ.'PF  ')GOTO1553
C
      IF(IH.EQ.'ADEC'.AND.IH2.EQ.'DF  ')GOTO1561
      IF(IH.EQ.'ADEP'.AND.IH2.EQ.'DF  ')GOTO1562
      IF(IH.EQ.'ADEP'.AND.IH2.EQ.'PF  ')GOTO1563
C
      IF(IH.EQ.'GALC'.AND.IH2.EQ.'DF  ')GOTO1571
      IF(IH.EQ.'GALP'.AND.IH2.EQ.'DF  ')GOTO1572
      IF(IH.EQ.'GALP'.AND.IH2.EQ.'PF  ')GOTO1573
C
      IF(IH.EQ.'MAXC'.AND.IH2.EQ.'DF  ')GOTO1581
      IF(IH.EQ.'MAXP'.AND.IH2.EQ.'DF  ')GOTO1582
      IF(IH.EQ.'MAXP'.AND.IH2.EQ.'PF  ')GOTO1583
C
      IF(IH.EQ.'FERC'.AND.IH2.EQ.'DF  ')GOTO1591
      IF(IH.EQ.'FERP'.AND.IH2.EQ.'DF  ')GOTO1592
      IF(IH.EQ.'FERP'.AND.IH2.EQ.'PF  ')GOTO1593
C
      IF(IH.EQ.'RAYC'.AND.IH2.EQ.'DF  ')GOTO1601
      IF(IH.EQ.'RAYP'.AND.IH2.EQ.'DF  ')GOTO1602
      IF(IH.EQ.'RAYP'.AND.IH2.EQ.'PF  ')GOTO1603
C
      IF(IGIGDF.EQ.'3PAR')THEN
        IF(IH.EQ.'GIGC'.AND.IH2.EQ.'DF  ')GOTO1611
        IF(IH.EQ.'GIGP'.AND.IH2.EQ.'DF  ')GOTO1612
        IF(IH.EQ.'GIGP'.AND.IH2.EQ.'PF  ')GOTO1613
      ELSEIF(IGIGDF.EQ.'2PAR')THEN
        IF(IH.EQ.'GIGC'.AND.IH2.EQ.'DF  ')GOTO1616
        IF(IH.EQ.'GIGP'.AND.IH2.EQ.'DF  ')GOTO1617
        IF(IH.EQ.'GIGP'.AND.IH2.EQ.'PF  ')GOTO1618
      ENDIF
C
      IF(IH.EQ.'BEIC'.AND.IH2.EQ.'DF  ')GOTO1621
      IF(IH.EQ.'BEIP'.AND.IH2.EQ.'DF  ')GOTO1622
      IF(IH.EQ.'BEIP'.AND.IH2.EQ.'PF  ')GOTO1623
C
      IF(IH.EQ.'BEKC'.AND.IH2.EQ.'DF  ')GOTO1631
      IF(IH.EQ.'BEKP'.AND.IH2.EQ.'DF  ')GOTO1632
      IF(IH.EQ.'BEKP'.AND.IH2.EQ.'PF  ')GOTO1633
C
      IF(IH.EQ.'MCLC'.AND.IH2.EQ.'DF  ')GOTO1641
      IF(IH.EQ.'MCLP'.AND.IH2.EQ.'DF  ')GOTO1642
      IF(IH.EQ.'MCLP'.AND.IH2.EQ.'PF  ')GOTO1643
C
      IF(IH.EQ.'GMCC'.AND.IH2.EQ.'DF  ')GOTO1651
      IF(IH.EQ.'GMCP'.AND.IH2.EQ.'DF  ')GOTO1652
      IF(IH.EQ.'GMCP'.AND.IH2.EQ.'PF  ')GOTO1653
C
      IF(IH.EQ.'HBOC'.AND.IH2.EQ.'DF  ')GOTO1661
      IF(IH.EQ.'HBOP'.AND.IH2.EQ.'DF  ')GOTO1662
      IF(IH.EQ.'HBOP'.AND.IH2.EQ.'PF  ')GOTO1663
C
      IF(IH.EQ.'GL5C'.AND.IH2.EQ.'DF  ')GOTO1671
      IF(IH.EQ.'GL5P'.AND.IH2.EQ.'DF  ')GOTO1672
      IF(IH.EQ.'GL5P'.AND.IH2.EQ.'PF  ')GOTO1673
C
      IF(IH.EQ.'WAKC'.AND.IH2.EQ.'DF  ')GOTO1681
      IF(IH.EQ.'WAKP'.AND.IH2.EQ.'DF  ')GOTO1682
      IF(IH.EQ.'WAKP'.AND.IH2.EQ.'PF  ')GOTO1683
C
      IF(IH.EQ.'BNOC'.AND.IH2.EQ.'DF  ')GOTO1691
      IF(IH.EQ.'BNOP'.AND.IH2.EQ.'DF  ')GOTO1692
      IF(IH.EQ.'BNOP'.AND.IH2.EQ.'PF  ')GOTO1693
C
      IF(IH.EQ.'GL2C'.AND.IH2.EQ.'DF  ')GOTO1701
      IF(IH.EQ.'GL2P'.AND.IH2.EQ.'DF  ')GOTO1702
      IF(IH.EQ.'GL2P'.AND.IH2.EQ.'PF  ')GOTO1703
C
      IF(IH.EQ.'GL3C'.AND.IH2.EQ.'DF  ')GOTO1711
      IF(IH.EQ.'GL3P'.AND.IH2.EQ.'DF  ')GOTO1712
      IF(IH.EQ.'GL3P'.AND.IH2.EQ.'PF  ')GOTO1713
C
      IF(IH.EQ.'GL4C'.AND.IH2.EQ.'DF  ')GOTO1721
      IF(IH.EQ.'GL4P'.AND.IH2.EQ.'DF  ')GOTO1722
      IF(IH.EQ.'GL4P'.AND.IH2.EQ.'PF  ')GOTO1723
C
      IF(IH.EQ.'ALDC'.AND.IH2.EQ.'DF  ')GOTO1731
      IF(IH.EQ.'ALDP'.AND.IH2.EQ.'DF  ')GOTO1732
      IF(IH.EQ.'ALDP'.AND.IH2.EQ.'PF  ')GOTO1733
C
      IF(IH.EQ.'BGEC'.AND.IH2.EQ.'DF  ')GOTO1741
      IF(IH.EQ.'BGEP'.AND.IH2.EQ.'DF  ')GOTO1742
      IF(IH.EQ.'BGEP'.AND.IH2.EQ.'PF  ')GOTO1743
C
      IF(IH.EQ.'ZIPC'.AND.IH2.EQ.'DF  ')GOTO1751
      IF(IH.EQ.'ZIPP'.AND.IH2.EQ.'DF  ')GOTO1752
      IF(IH.EQ.'ZIPP'.AND.IH2.EQ.'PF  ')GOTO1753
C
      IF(IH.EQ.'BTAC'.AND.IH2.EQ.'DF  ')GOTO1761
      IF(IH.EQ.'BTAP'.AND.IH2.EQ.'DF  ')GOTO1762
      IF(IH.EQ.'BTAP'.AND.IH2.EQ.'PF  ')GOTO1763
C
      IF(IH.EQ.'LBEC'.AND.IH2.EQ.'DF  ')GOTO1771
      IF(IH.EQ.'LBEP'.AND.IH2.EQ.'DF  ')GOTO1772
      IF(IH.EQ.'LBEP'.AND.IH2.EQ.'PF  ')GOTO1773
C
      IF(IH.EQ.'LPOC'.AND.IH2.EQ.'DF  ')GOTO1781
      IF(IH.EQ.'LPOP'.AND.IH2.EQ.'DF  ')GOTO1782
      IF(IH.EQ.'LPOP'.AND.IH2.EQ.'PF  ')GOTO1783
C
      IF(IH.EQ.'LCTC'.AND.IH2.EQ.'DF  ')GOTO1791
      IF(IH.EQ.'LCTP'.AND.IH2.EQ.'DF  ')GOTO1792
      IF(IH.EQ.'LCTP'.AND.IH2.EQ.'PF  ')GOTO1793
C
      IF(IH.EQ.'MATC'.AND.IH2.EQ.'DF  ')GOTO1801
      IF(IH.EQ.'MATP'.AND.IH2.EQ.'DF  ')GOTO1802
      IF(IH.EQ.'MATP'.AND.IH2.EQ.'PF  ')GOTO1803
C
      IF(IH.EQ.'OCCC'.AND.IH2.EQ.'DF  ')GOTO1811
      IF(IH.EQ.'OCCP'.AND.IH2.EQ.'DF  ')GOTO1812
      IF(IH.EQ.'OCCP'.AND.IH2.EQ.'PF  ')GOTO1813
C
      IF(IH.EQ.'PAPC'.AND.IH2.EQ.'DF  ')GOTO1821
      IF(IH.EQ.'PAPP'.AND.IH2.EQ.'DF  ')GOTO1822
      IF(IH.EQ.'PAPP'.AND.IH2.EQ.'PF  ')GOTO1823
C
      IF(IH.EQ.'NEYC'.AND.IH2.EQ.'DF  ')GOTO1831
      IF(IH.EQ.'NEYP'.AND.IH2.EQ.'DF  ')GOTO1832
      IF(IH.EQ.'NEYP'.AND.IH2.EQ.'PF  ')GOTO1833
C
      IF(IH.EQ.'DXGC'.AND.IH2.EQ.'DF  ')GOTO1841
      IF(IH.EQ.'DXGP'.AND.IH2.EQ.'DF  ')GOTO1842
      IF(IH.EQ.'DXGP'.AND.IH2.EQ.'PF  ')GOTO1843
C
      IF(IH.EQ.'LOSC'.AND.IH2.EQ.'DF  ')GOTO1851
      IF(IH.EQ.'LOSP'.AND.IH2.EQ.'DF  ')GOTO1852
      IF(IH.EQ.'LOSP'.AND.IH2.EQ.'PF  ')GOTO1853
C
      IF(IH.EQ.'GLSC'.AND.IH2.EQ.'DF  ')GOTO1861
      IF(IH.EQ.'GLSP'.AND.IH2.EQ.'DF  ')GOTO1862
      IF(IH.EQ.'GLSP'.AND.IH2.EQ.'PF  ')GOTO1863
C
      IF(IH.EQ.'GETC'.AND.IH2.EQ.'DF  ')GOTO1871
      IF(IH.EQ.'GETP'.AND.IH2.EQ.'DF  ')GOTO1872
      IF(IH.EQ.'GETP'.AND.IH2.EQ.'PF  ')GOTO1873
C
      IF(IH.EQ.'GNBC'.AND.IH2.EQ.'DF  ')GOTO1881
      IF(IH.EQ.'GNBP'.AND.IH2.EQ.'DF  ')GOTO1882
      IF(IH.EQ.'GNBP'.AND.IH2.EQ.'PF  ')GOTO1883
C
      IF(IH.EQ.'PIGC'.AND.IH2.EQ.'DF  ')GOTO1891
      IF(IH.EQ.'PIGP'.AND.IH2.EQ.'DF  ')GOTO1892
      IF(IH.EQ.'PIGP'.AND.IH2.EQ.'PF  ')GOTO1893
C
      IF(IH.EQ.'QBIC'.AND.IH2.EQ.'DF  ')GOTO1901
      IF(IH.EQ.'QBIP'.AND.IH2.EQ.'DF  ')GOTO1902
      IF(IH.EQ.'QBIP'.AND.IH2.EQ.'PF  ')GOTO1903
C
      IF(IH.EQ.'CONC'.AND.IH2.EQ.'DF  ')GOTO1911
      IF(IH.EQ.'CONP'.AND.IH2.EQ.'DF  ')GOTO1912
      IF(IH.EQ.'CONP'.AND.IH2.EQ.'PF  ')GOTO1913
C
      IF(IH.EQ.'LKCD'.AND.IH2.EQ.'F   ')GOTO1921
      IF(IH.EQ.'LKPD'.AND.IH2.EQ.'F   ')GOTO1922
      IF(IH.EQ.'LKPP'.AND.IH2.EQ.'F   ')GOTO1923
C
      IF(IH.EQ.'KATC'.AND.IH2.EQ.'DF  ')GOTO1931
      IF(IH.EQ.'KATP'.AND.IH2.EQ.'DF  ')GOTO1932
      IF(IH.EQ.'KATP'.AND.IH2.EQ.'PF  ')GOTO1933
C
      IF(IH.EQ.'DIWC'.AND.IH2.EQ.'DF  ')GOTO1941
      IF(IH.EQ.'DIWP'.AND.IH2.EQ.'DF  ')GOTO1942
      IF(IH.EQ.'DIWP'.AND.IH2.EQ.'PF  ')GOTO1943
      IF(IH.EQ.'DIWH'.AND.IH2.EQ.'AZ  ')GOTO1944
C
      IF(IH.EQ.'GLGC'.AND.IH2.EQ.'DF  ')GOTO1951
      IF(IH.EQ.'GLGP'.AND.IH2.EQ.'DF  ')GOTO1952
      IF(IH.EQ.'GLGP'.AND.IH2.EQ.'PF  ')GOTO1953
C
      IF(IH.EQ.'GNTC'.AND.IH2.EQ.'DF  ')GOTO1961
      IF(IH.EQ.'GNTP'.AND.IH2.EQ.'DF  ')GOTO1962
      IF(IH.EQ.'GNTP'.AND.IH2.EQ.'PF  ')GOTO1963
C
      IF(IH.EQ.'TOPC'.AND.IH2.EQ.'DF  ')GOTO1971
      IF(IH.EQ.'TOPP'.AND.IH2.EQ.'DF  ')GOTO1972
      IF(IH.EQ.'TOPP'.AND.IH2.EQ.'PF  ')GOTO1973
C
      IF(IH.EQ.'RGTC'.AND.IH2.EQ.'DF  ')GOTO1981
      IF(IH.EQ.'RGTP'.AND.IH2.EQ.'DF  ')GOTO1982
      IF(IH.EQ.'RGTP'.AND.IH2.EQ.'PF  ')GOTO1983
C
      IF(IH.EQ.'GTLC'.AND.IH2.EQ.'DF  ')GOTO1991
      IF(IH.EQ.'GTLP'.AND.IH2.EQ.'DF  ')GOTO1992
      IF(IH.EQ.'GTLP'.AND.IH2.EQ.'PF  ')GOTO1993
C
      IF(IH.EQ.'SLOC'.AND.IH2.EQ.'DF  ')GOTO3001
      IF(IH.EQ.'SLOP'.AND.IH2.EQ.'DF  ')GOTO3002
      IF(IH.EQ.'SLOP'.AND.IH2.EQ.'PF  ')GOTO3003
C
      IF(IH.EQ.'OGIC'.AND.IH2.EQ.'DF  ')GOTO3011
      IF(IH.EQ.'OGIP'.AND.IH2.EQ.'DF  ')GOTO3012
      IF(IH.EQ.'OGIP'.AND.IH2.EQ.'PF  ')GOTO3013
C
      IF(IH.EQ.'TSSC'.AND.IH2.EQ.'DF  ')GOTO3021
      IF(IH.EQ.'TSSP'.AND.IH2.EQ.'DF  ')GOTO3022
      IF(IH.EQ.'TSSP'.AND.IH2.EQ.'PF  ')GOTO3023
C
      IF(IH.EQ.'TSOC'.AND.IH2.EQ.'DF  ')GOTO3031
      IF(IH.EQ.'TSOP'.AND.IH2.EQ.'DF  ')GOTO3032
      IF(IH.EQ.'TSOP'.AND.IH2.EQ.'PF  ')GOTO3033
C
      IF(IH.EQ.'UTSC'.AND.IH2.EQ.'DF  ')GOTO3041
      IF(IH.EQ.'UTSP'.AND.IH2.EQ.'DF  ')GOTO3042
      IF(IH.EQ.'UTSP'.AND.IH2.EQ.'PF  ')GOTO3043
C
      IF(IH.EQ.'DPUC'.AND.IH2.EQ.'DF  ')GOTO3051
      IF(IH.EQ.'DPUP'.AND.IH2.EQ.'DF  ')GOTO3052
      IF(IH.EQ.'DPUP'.AND.IH2.EQ.'PF  ')GOTO3053
C
      IF(IH.EQ.'BU1C'.AND.IH2.EQ.'DF  ')GOTO811
      IF(IH.EQ.'BU1P'.AND.IH2.EQ.'DF  ')GOTO812
      IF(IH.EQ.'BU1P'.AND.IH2.EQ.'PF  ')GOTO813
      IF(IH.EQ.'BU1H'.AND.IH2.EQ.'AZ  ')GOTO814
      IF(IH.EQ.'BU1C'.AND.IH2.EQ.'HAZ ')GOTO815
C
      IF(IH.EQ.'BU2C'.AND.IH2.EQ.'DF  ')GOTO3061
      IF(IH.EQ.'BU2P'.AND.IH2.EQ.'DF  ')GOTO3062
      IF(IH.EQ.'BU2P'.AND.IH2.EQ.'PF  ')GOTO3063
C
      IF(IH.EQ.'BU3C'.AND.IH2.EQ.'DF  ')GOTO3071
      IF(IH.EQ.'BU3P'.AND.IH2.EQ.'DF  ')GOTO3072
      IF(IH.EQ.'BU3P'.AND.IH2.EQ.'PF  ')GOTO3073
C
      IF(IH.EQ.'BU4C'.AND.IH2.EQ.'DF  ')GOTO3081
      IF(IH.EQ.'BU4P'.AND.IH2.EQ.'DF  ')GOTO3082
      IF(IH.EQ.'BU4P'.AND.IH2.EQ.'PF  ')GOTO3083
C
      IF(IH.EQ.'BU5C'.AND.IH2.EQ.'DF  ')GOTO3091
      IF(IH.EQ.'BU5P'.AND.IH2.EQ.'DF  ')GOTO3092
      IF(IH.EQ.'BU5P'.AND.IH2.EQ.'PF  ')GOTO3093
C
      IF(IH.EQ.'BU6C'.AND.IH2.EQ.'DF  ')GOTO3101
      IF(IH.EQ.'BU6P'.AND.IH2.EQ.'DF  ')GOTO3102
      IF(IH.EQ.'BU6P'.AND.IH2.EQ.'PF  ')GOTO3103
C
      IF(IH.EQ.'BU7C'.AND.IH2.EQ.'DF  ')GOTO3111
      IF(IH.EQ.'BU7P'.AND.IH2.EQ.'DF  ')GOTO3112
      IF(IH.EQ.'BU7P'.AND.IH2.EQ.'PF  ')GOTO3113
C
      IF(IH.EQ.'BU8C'.AND.IH2.EQ.'DF  ')GOTO3121
      IF(IH.EQ.'BU8P'.AND.IH2.EQ.'DF  ')GOTO3122
      IF(IH.EQ.'BU8P'.AND.IH2.EQ.'PF  ')GOTO3123
C
      IF(IH.EQ.'BU9C'.AND.IH2.EQ.'DF  ')GOTO3131
      IF(IH.EQ.'BU9P'.AND.IH2.EQ.'DF  ')GOTO3132
      IF(IH.EQ.'BU9P'.AND.IH2.EQ.'PF  ')GOTO3133
C
      IF(IH.EQ.'B10C'.AND.IH2.EQ.'DF  ')GOTO3141
      IF(IH.EQ.'B10P'.AND.IH2.EQ.'DF  ')GOTO3142
      IF(IH.EQ.'B10P'.AND.IH2.EQ.'PF  ')GOTO3143
C
      IF(IH.EQ.'B11C'.AND.IH2.EQ.'DF  ')GOTO3151
      IF(IH.EQ.'B11P'.AND.IH2.EQ.'DF  ')GOTO3152
      IF(IH.EQ.'B11P'.AND.IH2.EQ.'PF  ')GOTO3153
C
      IF(IH.EQ.'B12C'.AND.IH2.EQ.'DF  ')GOTO3161
      IF(IH.EQ.'B12P'.AND.IH2.EQ.'DF  ')GOTO3162
      IF(IH.EQ.'B12P'.AND.IH2.EQ.'PF  ')GOTO3163
C
      IF(IH.EQ.'KUMC'.AND.IH2.EQ.'DF  ')GOTO3171
      IF(IH.EQ.'KUMP'.AND.IH2.EQ.'DF  ')GOTO3172
      IF(IH.EQ.'KUMP'.AND.IH2.EQ.'PF  ')GOTO3173
C
      IF(IH.EQ.'RPOC'.AND.IH2.EQ.'DF  ')GOTO3181
      IF(IH.EQ.'RPOP'.AND.IH2.EQ.'DF  ')GOTO3182
      IF(IH.EQ.'RPOP'.AND.IH2.EQ.'PF  ')GOTO3183
      IF(IH.EQ.'RPOH'.AND.IH2.EQ.'AZ  ')GOTO3184
      IF(IH.EQ.'RPOC'.AND.IH2.EQ.'HAZ ')GOTO3185
C
      IF(IH.EQ.'MMXC'.AND.IH2.EQ.'DF  ')GOTO3191
      IF(IH.EQ.'MMXP'.AND.IH2.EQ.'DF  ')GOTO3192
      IF(IH.EQ.'MMXP'.AND.IH2.EQ.'PF  ')GOTO3193
C
      IF(IH.EQ.'LEXC'.AND.IH2.EQ.'DF  ')GOTO3201
      IF(IH.EQ.'LEXP'.AND.IH2.EQ.'DF  ')GOTO3202
      IF(IH.EQ.'LEXP'.AND.IH2.EQ.'PF  ')GOTO3203
      IF(IH.EQ.'LEXH'.AND.IH2.EQ.'AZ  ')GOTO3204
      IF(IH.EQ.'LEXC'.AND.IH2.EQ.'HAZ ')GOTO3205
C
      IF(IH.EQ.'MUTC'.AND.IH2.EQ.'DF  ')GOTO3211
      IF(IH.EQ.'MUTP'.AND.IH2.EQ.'DF  ')GOTO3212
      IF(IH.EQ.'MUTP'.AND.IH2.EQ.'PF  ')GOTO3213
      IF(IH.EQ.'MUTH'.AND.IH2.EQ.'AZ  ')GOTO3214
      IF(IH.EQ.'MUTC'.AND.IH2.EQ.'HAZ ')GOTO3215
C
      IF(IH.EQ.'TNPC'.AND.IH2.EQ.'DF  ')GOTO3221
      IF(IH.EQ.'TNPP'.AND.IH2.EQ.'DF  ')GOTO3222
      IF(IH.EQ.'TNPP'.AND.IH2.EQ.'PF  ')GOTO3223
C
      IF(IH.EQ.'BFRC'.AND.IH2.EQ.'DF  ')GOTO3231
      IF(IH.EQ.'BFRP'.AND.IH2.EQ.'DF  ')GOTO3232
      IF(IH.EQ.'BFRP'.AND.IH2.EQ.'PF  ')GOTO3233
      IF(IH.EQ.'BFRC'.AND.IH2.EQ.'HAZ ')GOTO3234
      IF(IH.EQ.'BFRH'.AND.IH2.EQ.'AZ  ')GOTO3235
C
      IF(IH.EQ.'LE3C'.AND.IH2.EQ.'DF  ')GOTO3241
      IF(IH.EQ.'LE3P'.AND.IH2.EQ.'DF  ')GOTO3242
      IF(IH.EQ.'LE3P'.AND.IH2.EQ.'PF  ')GOTO3243
      IF(IH.EQ.'LE3H'.AND.IH2.EQ.'AZ  ')GOTO3244
      IF(IH.EQ.'LE3C'.AND.IH2.EQ.'HAZ ')GOTO3245
C
      IF(IH.EQ.'KAPC'.AND.IH2.EQ.'DF  ')GOTO3251
      IF(IH.EQ.'KAPP'.AND.IH2.EQ.'DF  ')GOTO3252
      IF(IH.EQ.'KAPP'.AND.IH2.EQ.'PF  ')GOTO3253
C
      IF(IH.EQ.'PE3C'.AND.IH2.EQ.'DF  ')GOTO3261
      IF(IH.EQ.'PE3P'.AND.IH2.EQ.'DF  ')GOTO3262
      IF(IH.EQ.'PE3P'.AND.IH2.EQ.'PF  ')GOTO3263
C
      IF(IH.EQ.'EEWC'.AND.IH2.EQ.'DF  ')GOTO3271
      IF(IH.EQ.'EEWP'.AND.IH2.EQ.'DF  ')GOTO3272
      IF(IH.EQ.'EEWP'.AND.IH2.EQ.'PF  ')GOTO3273
C
      IF(IH.EQ.'BFWC'.AND.IH2.EQ.'DF  ')GOTO3281
      IF(IH.EQ.'BFWP'.AND.IH2.EQ.'DF  ')GOTO3282
      IF(IH.EQ.'BFWP'.AND.IH2.EQ.'PF  ')GOTO3283
C
      IF(IH.EQ.'ATNC'.AND.IH2.EQ.'DF  ')GOTO3291
      IF(IH.EQ.'ATNP'.AND.IH2.EQ.'DF  ')GOTO3292
      IF(IH.EQ.'ATNP'.AND.IH2.EQ.'PF  ')GOTO3293
      IF(IH.EQ.'ATNH'.AND.IH2.EQ.'AZ  ')GOTO3294
C
CCCCC THE FOLLOWING LINES WERE ADDED    NOVEMBER   1994
      IF(IH.EQ.'FRES'.AND.IH2.EQ.'NC  ')GOTO2000
      IF(IH.EQ.'FRES'.AND.IH2.EQ.'NS  ')GOTO2010
      IF(IH.EQ.'FRES'.AND.IH2.EQ.'NF  ')GOTO2020
      IF(IH.EQ.'FRES'.AND.IH2.EQ.'NG  ')GOTO2030
      IF(IH.EQ.'PEQ '.AND.IH2.EQ.'    ')GOTO2100
      IF(IH.EQ.'PEQI'.AND.IH2.EQ.'    ')GOTO2105
      IF(IH.EQ.'PEQ1'.AND.IH2.EQ.'    ')GOTO2110
      IF(IH.EQ.'PEQ1'.AND.IH2.EQ.'I   ')GOTO2115
      IF(IH.EQ.'PLEM'.AND.IH2.EQ.'    ')GOTO2120
      IF(IH.EQ.'PLEM'.AND.IH2.EQ.'I   ')GOTO2125
      IF(IH.EQ.'PLEM'.AND.IH2.EQ.'1   ')GOTO2130
      IF(IH.EQ.'PLEM'.AND.IH2.EQ.'1I  ')GOTO2135
      IF(IH.EQ.'SN  '.AND.IH2.EQ.'    ')GOTO2200
      IF(IH.EQ.'CN  '.AND.IH2.EQ.'    ')GOTO2210
      IF(IH.EQ.'DN  '.AND.IH2.EQ.'    ')GOTO2220
C
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'0   ')GOTO5000
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'1   ')GOTO5010
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'2   ')GOTO5020
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'3   ')GOTO5030
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'4   ')GOTO5040
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'5   ')GOTO5050
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'6   ')GOTO5060
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'7   ')GOTO5070
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'8   ')GOTO5080
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'9   ')GOTO5090
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'10  ')GOTO5100
CCCCC THE FOLLOWING SECTION ADDED JULY 1995
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'T   ')GOTO5110
      IF(IH.EQ.'CHEB'.AND.IH2.EQ.'U   ')GOTO5120
      IF(IH.EQ.'NRML'.AND.IH2.EQ.'AG  ')GOTO5130
      IF(IH.EQ.'JACO'.AND.IH2.EQ.'BIP ')GOTO5140
      IF(IH.EQ.'ULTR'.AND.IH2.EQ.'ASPH')GOTO5150
      IF(IH.EQ.'LAGU'.AND.IH2.EQ.'ERRL')GOTO5160
CCCCC IF(IH.EQ.'NRML'.AND.IH2.EQ.'AGL ')GOTO5170
      IF(IH.EQ.'NRML'.AND.IH2.EQ.'EG  ')THEN
        IF(SAVE2.LT.0.)GOTO5180
        IF(SAVE2.GE.0.)GOTO5200
      ENDIF
      IF(IH.EQ.'LEGP'.AND.IH2.EQ.'    ')THEN
        IF(SAVE2.NE.CPUMIN)GOTO5220
        IF(SAVE2.EQ.CPUMIN)GOTO5220
      ENDIF
      IF(IH.EQ.'LEGQ'.AND.IH2.EQ.'    ')THEN
        IF(SAVE2.NE.CPUMIN)GOTO5240
        IF(SAVE2.EQ.CPUMIN)GOTO5240
      ENDIF
      IF(IH.EQ.'SPHR'.AND.IH2.EQ.'HRMR')THEN
        ISJUNK=0
        GOTO5300
      ENDIF
      IF(IH.EQ.'SPHR'.AND.IH2.EQ.'HRMC')THEN
        ISJUNK=1
        GOTO5300
      ENDIF
C
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'0   ')GOTO6000
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'1   ')GOTO6010
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 1994.
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'J0  ')GOTO6000
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'J1  ')GOTO6010
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'Y0  ')GOTO6100
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'Y1  ')GOTO6150
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'I0  ')GOTO6200
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'I0E ')GOTO6230
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'I1  ')GOTO6250
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'I1E ')GOTO6280
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'K0  ')GOTO6300
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'K0E ')GOTO6330
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'K1  ')GOTO6350
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'K1E ')GOTO6380
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'JN  ')GOTO6400
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'YN  ')GOTO6500
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'IN  ')GOTO6600
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'INE ')GOTO6650
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'KN  ')GOTO6700
      IF(IH.EQ.'BESS'.AND.IH2.EQ.'KNE ')GOTO6750
      IF(IH.EQ.'AIRY'.AND.IH2.EQ.'    ')GOTO6800
      IF(IH.EQ.'BAIR'.AND.IH2.EQ.'Y   ')GOTO6900
CCCCC FOLLOWING SECTION ADDED OCTOBER, 1994.
      IF(IH.EQ.'CBES'.AND.IH2.EQ.'SJR ')GOTO7000
      IF(IH.EQ.'CBES'.AND.IH2.EQ.'SJI ')GOTO7010
      IF(IH.EQ.'CBES'.AND.IH2.EQ.'SYR ')GOTO7020
      IF(IH.EQ.'CBES'.AND.IH2.EQ.'SYI ')GOTO7030
      IF(IH.EQ.'CBES'.AND.IH2.EQ.'SIR ')GOTO7040
      IF(IH.EQ.'CBES'.AND.IH2.EQ.'SII ')GOTO7050
      IF(IH.EQ.'CBES'.AND.IH2.EQ.'SKR ')GOTO7060
      IF(IH.EQ.'CBES'.AND.IH2.EQ.'SKI ')GOTO7070
C
CCCCC THE FOLLOWING 4 LINES WERE ADDED MAY 1989
      IF(IH.EQ.'CP  '.AND.IH2.EQ.'    ')GOTO7100
      IF(IH.EQ.'CPK '.AND.IH2.EQ.'    ')GOTO7200
      IF(IH.EQ.'PERD'.AND.IH2.EQ.'EF  ')GOTO7300
      IF(IH.EQ.'EXPL'.AND.IH2.EQ.'OS  ')GOTO7400
C
CCCCC THE FOLLOWING SECTION ADDED SEPTEMBER 1994
      IF(IH.EQ.'DAWS'.AND.IH2.EQ.'ON  ')GOTO7500
      IF(IH.EQ.'EXPI'.AND.IH2.EQ.'NT1 ')GOTO7600
      IF(IH.EQ.'EXPI'.AND.IH2.EQ.'NTE ')GOTO7650
      IF(IH.EQ.'EXPI'.AND.IH2.EQ.'NTN ')GOTO7700
      IF(IH.EQ.'RC  '.AND.IH2.EQ.'    ')GOTO7800
      IF(IH.EQ.'RD  '.AND.IH2.EQ.'    ')GOTO7810
      IF(IH.EQ.'ELLI'.AND.IH2.EQ.'PC2 ')GOTO7815
      IF(IH.EQ.'ELLI'.AND.IH2.EQ.'P2  ')GOTO7818
      IF(IH.EQ.'RF  '.AND.IH2.EQ.'    ')GOTO7820
      IF(IH.EQ.'ELLI'.AND.IH2.EQ.'PC1 ')GOTO7825
      IF(IH.EQ.'ELLI'.AND.IH2.EQ.'P1  ')GOTO7828
      IF(IH.EQ.'RJ  '.AND.IH2.EQ.'    ')GOTO7830
      IF(IH.EQ.'ELLI'.AND.IH2.EQ.'P3  ')GOTO7838
      IF(IH.EQ.'SPEN'.AND.IH2.EQ.'CE  ')GOTO7900
      IF(IH.EQ.'LOGI'.AND.IH2.EQ.'NT  ')GOTO8000
      IF(IH.EQ.'SINI'.AND.IH2.EQ.'NT  ')GOTO8100
      IF(IH.EQ.'SINH'.AND.IH2.EQ.'INT ')GOTO8200
      IF(IH.EQ.'COSI'.AND.IH2.EQ.'NT  ')GOTO8300
      IF(IH.EQ.'COSH'.AND.IH2.EQ.'INT ')GOTO8400
      IF(IH.EQ.'CABS'.AND.IH2.EQ.'    ')GOTO8500
      IF(IH.EQ.'CCOS'.AND.IH2.EQ.'    ')GOTO8600
      IF(IH.EQ.'CCOS'.AND.IH2.EQ.'I   ')GOTO8610
      IF(IH.EQ.'CEXP'.AND.IH2.EQ.'    ')GOTO8700
      IF(IH.EQ.'CEXP'.AND.IH2.EQ.'I   ')GOTO8710
      IF(IH.EQ.'CLOG'.AND.IH2.EQ.'    ')GOTO8800
      IF(IH.EQ.'CLOG'.AND.IH2.EQ.'I   ')GOTO8810
      IF(IH.EQ.'CSIN'.AND.IH2.EQ.'    ')GOTO8900
      IF(IH.EQ.'CSIN'.AND.IH2.EQ.'I   ')GOTO8910
      IF(IH.EQ.'CSQR'.AND.IH2.EQ.'T   ')GOTO8950
      IF(IH.EQ.'CSQR'.AND.IH2.EQ.'TI  ')GOTO8960
CCCCC FOLLOWING 5 LINES ADDED JULY 1995.
      IF(IH.EQ.'HERM'.AND.IH2.EQ.'ITE ')GOTO8970
      IF(IH.EQ.'LNHE'.AND.IH2.EQ.'RMIT')GOTO8975
      IF(IH.EQ.'HERM'.AND.IH2.EQ.'SGN ')GOTO8978
      IF(IH.EQ.'LAGU'.AND.IH2.EQ.'ERRE')GOTO8980
      IF(IH.EQ.'LEGE'.AND.IH2.EQ.'NDRE')THEN
        IF(SAVE2.LT.0.)GOTO8990
        IF(SAVE2.GE.0.)GOTO5280
      ENDIF
      IF(IH.EQ.'BN  '.AND.IH2.EQ.'    ')GOTO8010
      IF(IH.EQ.'EN  '.AND.IH2.EQ.'    ')GOTO8020
      IF(IH.EQ.'BINO'.AND.IH2.EQ.'M   ')GOTO8030
      IF(IH.EQ.'BINO'.AND.IH2.EQ.'MIAL')GOTO8030
C
      IF(IH.EQ.'ABRA'.AND.IH2.EQ.'M   ')GOTO8040
      IF(IH.EQ.'CLAU'.AND.IH2.EQ.'SN  ')GOTO8045
      IF(IH.EQ.'DEBY'.AND.IH2.EQ.'E   ')GOTO8050
      IF(IH.EQ.'EXP3'.AND.IH2.EQ.'    ')GOTO8055
      IF(IH.EQ.'GOOD'.AND.IH2.EQ.'ST  ')GOTO8060
      IF(IH.EQ.'LOBA'.AND.IH2.EQ.'CH  ')GOTO8065
      IF(IH.EQ.'STRO'.AND.IH2.EQ.'M   ')GOTO8070
      IF(IH.EQ.'SYNC'.AND.IH2.EQ.'H1  ')GOTO8075
      IF(IH.EQ.'SYNC'.AND.IH2.EQ.'H2  ')GOTO8080
      IF(IH.EQ.'TRAN'.AND.IH2.EQ.'    ')GOTO8085
C
      IF(IH.EQ.'AIRI'.AND.IH2.EQ.'NT  ')GOTO18090
      IF(IH.EQ.'AIRY'.AND.IH2.EQ.'GI  ')GOTO18095
      IF(IH.EQ.'AIRY'.AND.IH2.EQ.'HI  ')GOTO18100
      IF(IH.EQ.'ATNI'.AND.IH2.EQ.'NT  ')GOTO18105
      IF(IH.EQ.'BIRI'.AND.IH2.EQ.'NT  ')GOTO18110
      IF(IH.EQ.'I0IN'.AND.IH2.EQ.'T   ')GOTO18115
      IF(IH.EQ.'I0ML'.AND.IH2.EQ.'0   ')GOTO18120
      IF(IH.EQ.'I1ML'.AND.IH2.EQ.'1   ')GOTO18125
      IF(IH.EQ.'J0IN'.AND.IH2.EQ.'T   ')GOTO18130
      IF(IH.EQ.'K0IN'.AND.IH2.EQ.'T   ')GOTO18135
      IF(IH.EQ.'Y0IN'.AND.IH2.EQ.'T   ')GOTO18140
      IF(IH.EQ.'MIN '.AND.IH2.EQ.'    ')GOTO18150
      IF(IH.EQ.'MAX '.AND.IH2.EQ.'    ')GOTO18160
      IF(IH.EQ.'AGRE'.AND.IH2.EQ.'E   ')GOTO18170
      IF(IH.EQ.'DISA'.AND.IH2.EQ.'GREE')GOTO18170
      IF(IH.EQ.'DPNT'.AND.IH2.EQ.'LINE')GOTO18180
      IF(IH.EQ.'ANGR'.AND.IH2.EQ.'AD  ')GOTO18190
      IF(IH.EQ.'SLOP'.AND.IH2.EQ.'E   ')GOTO18200
      IF(IH.EQ.'LINI'.AND.IH2.EQ.'NTER')GOTO18210
      IF(IH.EQ.'GT  '.AND.IH2.EQ.'    ')GOTO18220
      IF(IH.EQ.'GE  '.AND.IH2.EQ.'    ')GOTO18230
      IF(IH.EQ.'LT  '.AND.IH2.EQ.'    ')GOTO18240
      IF(IH.EQ.'LE  '.AND.IH2.EQ.'    ')GOTO18250
      IF(IH.EQ.'EQ  '.AND.IH2.EQ.'    ')GOTO18170
      IF(IH.EQ.'EQUA'.AND.IH2.EQ.'L   ')GOTO18170
      IF(IH.EQ.'NE  '.AND.IH2.EQ.'    ')GOTO18170
      IF(IH.EQ.'NOTE'.AND.IH2.EQ.'QUAL')GOTO18170
C
      IFOUND='NO'
      GOTO9000
C
  551 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ELSEIF(ZSCALE.EQ.0.0)THEN
        IF(ARG1.LT.ZLOC)THEN
          TERM=0.0
        ELSE
          TERM=1.0
        ENDIF
        GOTO9000
      ENDIF
  559 FORMAT('**** ERROR: NEGATIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
CCCCC CALL NORCDF(ARG1,RESULT)
      CALL NODCDF(DBLE(ARG1),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  552 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ELSEIF(ZSCALE.EQ.0.0)THEN
        IF(ARG1.EQ.ZLOC)THEN
          TERM=CPUMAX
        ELSE
          TERM=0.0
        ENDIF
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
CCCCC CALL NORPDF(ARG1,RESULT)
      CALL NODPDF(DBLE(ARG1),DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
  553 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ELSEIF(ZSCALE.EQ.0.0)THEN
        TERM=ZLOC
        GOTO9000
      ENDIF
C
CCCCC CALL NORPPF(ARG1,RESULT)
      CALL NODPPF(DBLE(ARG1),DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
  554 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL NORSF(DBLE(ARG1),DRESLT)
      TERM=REAL(DBLE(ZLOC) + DBLE(ZSCALE)*DRESLT)
      GOTO9000
C
  555 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=DBLE((ARG1-ZLOC)/ZSCALE)
      CALL NODPDF(DARG1,DTERM2)
      CALL NODCDF(-DARG1,DTERM1)
      IF(DTERM1.NE.0.0D0)THEN
        TERM=REAL(DTERM2/DTERM1)/ZSCALE
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
      ENDIF
      GOTO9000
C
  556 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=-DBLE((ARG1-ZLOC)/ZSCALE)
      CALL NODCDF(DARG1,DTERM1)
      IF(DTERM1.GT.0.0D0)THEN
        TERM=REAL(-DLOG(DTERM1))
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
      ENDIF
      GOTO9000
C
  557 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ELSEIF(ZSCALE.EQ.0.0)THEN
        IF(ARG1.LT.ZLOC)THEN
          TERM=0.0
        ELSE
          TERM=1.0
        ENDIF
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
CCCCC CALL NORCDF(ARG1,RESULT)
      CALL NODCDF(DBLE(ARG1),DRESLT)
      TERM=REAL(1.0D0 - DRESLT)
      GOTO9000
C
  558 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ELSEIF(ZSCALE.EQ.0.0)THEN
        TERM=ZLOC
        GOTO9000
      ENDIF
C
CCCCC CALL NORPPF(ARG1,RESULT)
      ARG1=1.0 - ARG1
      CALL NODPPF(DBLE(ARG1),DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
88559 CONTINUE
      ISUBRO='NULL'
      IARG1=INT(X+0.5)
      ALPHAT=0.0
      IF(SAVE1.NE.CPUMIN)ALPHAT=SAVE1
      CALL NORPCV(ALPHAT,IARG1,TERM,
     1            ISUBRO,IBUGEV,IERROR)
      GOTO9000
C
 8557 CONTINUE
      ARG1=X
C
      ZLOC1=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC1=SAVE1
      ZSCAL1=1.0
      IF(SAVE2.NE.CPUMIN)ZSCAL1=SAVE2
      ZLOC2=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC2=SAVE3
      ZSCAL2=1.0
      IF(SAVE4.NE.CPUMIN)ZSCAL2=SAVE4
      P=0.5
      IF(SAVE5.GE.0.0 .AND. SAVE5.LE.1.0)P=SAVE5
      CALL NMXCDF(ARG1,ZLOC1,ZSCAL1,ZLOC2,ZSCAL2,P,RESULT)
      TERM=RESULT
      GOTO9000
C
 8558 CONTINUE
      ARG1=X
C
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL NORPDF(ARG1,RESLT1)
      RESLT1=RESLT1/ZSCALE
C
      ARG1=X
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL NORPDF(ARG1,RESLT2)
      RESLT2=RESLT2/ZSCALE
C
      P=0.5
      IF(SAVE5.GE.0.0 .AND. SAVE5.LE.1.0)P=SAVE5
      TERM=P*RESLT1 + (1.0-P)*RESLT2
      GOTO9000
C
 8559 CONTINUE
      ARG1=X
      ZLOC1=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC1=SAVE1
      ZSCAL1=1.0
      IF(SAVE2.NE.CPUMIN)ZSCAL1=SAVE2
      ZLOC2=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC2=SAVE3
      ZSCAL2=1.0
      IF(SAVE4.NE.CPUMIN)ZSCAL2=SAVE4
      P=0.5
      IF(SAVE5.GE.0.0 .AND. SAVE5.LE.1.0)P=SAVE5
C
      IF(ZSCAL1.LE.0.0.OR.ZSCAL2.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL NMXPPF(ARG1,ZLOC1,ZSCAL1,ZLOC2,ZSCAL2,P,RESULT)
      TERM=RESULT
      GOTO9000
C
  561 CONTINUE
      ARG1=X
CCCCC IARG2=SAVE1+0.5
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL TCDF(ARG1,IARG2,RESULT)
      CALL TCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  562 CONTINUE
      ARG1=X
CCCCC IARG2=SAVE1+0.5
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL TPDF(ARG1,IARG2,RESULT)
      CALL TPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  563 CONTINUE
      ARG1=X
CCCCC IARG2=SAVE1+0.5
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL TPPF(ARG1,IARG2,RESULT)
      CALL TPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  571 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL CHSCDF(ARG1,IARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  572 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL CHSPDF(ARG1,IARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  573 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL CHSPPF(ARG1,IARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  581 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      IARG3=INT(SAVE2+0.5)
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
C
C     2023/06: CHECK FOR NON-INTEGER VALUES FOR DEGREES
C              OF FREEDOM.  IF FOUND, USE F2CDF INSTEAD OF
C              FCDF.
C
      AVAL1=ARG2 - REAL(IARG2)
      AVAL2=ARG3 - REAL(IARG3)
      IF(ABS(AVAL1).LE.0.0001 .AND. ABS(AVAL2).LE.0.0001)THEN
        CALL FCDF(ARG1,IARG2,IARG3,RESULT)
        TERM=RESULT
      ELSE
        CALL F2CDF(ARG1,ARG2,ARG3,RESULT)
        TERM=RESULT
      ENDIF
      GOTO9000
C
  582 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      IARG3=INT(SAVE2+0.5)
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
C
C     2023/06: CHECK FOR NON-INTEGER VALUES FOR DEGREES
C              OF FREEDOM.  IF FOUND, USE F2CDF INSTEAD OF
C              FCDF.
C
      AVAL1=ARG2 - REAL(IARG2)
      AVAL2=ARG3 - REAL(IARG3)
      IF(ABS(AVAL1).LE.0.0001 .AND. ABS(AVAL2).LE.0.0001)THEN
        CALL FPDF(ARG1,IARG2,IARG3,RESULT)
        TERM=RESULT/ZSCALE
      ELSE
        CALL F2PDF(ARG1,ARG2,ARG3,RESULT)
        TERM=RESULT/ZSCALE
      ENDIF
      GOTO9000
C
  583 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      IARG3=INT(SAVE2+0.5)
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
C     2023/06: CHECK FOR NON-INTEGER VALUES FOR DEGREES
C              OF FREEDOM.  IF FOUND, USE F2PPF INSTEAD OF
C              FPPF.
C
      AVAL1=ARG2 - REAL(IARG2)
      AVAL2=ARG3 - REAL(IARG3)
      IF(ABS(AVAL1).LE.0.0001 .AND. ABS(AVAL2).LE.0.0001)THEN
        CALL FPPF(ARG1,IARG2,IARG3,RESULT)
        TERM=ZLOC + ZSCALE*RESULT
      ELSE
        CALL F2PPF(ARG1,ARG2,ARG3,RESULT)
        TERM=ZLOC + ZSCALE*RESULT
      ENDIF
      GOTO9000
C
  591 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  599 FORMAT('**** ERROR: NEGATIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
CCCCC THE FOLLOWING LINE WAS ADDED MAY 1993
CCCCC IARG3=SAVE2+0.5  (BUT INCORRECT)
CCCCC THE FOLLOWING LINE FIXED THE ABOVE LINE    JANUARY 1994
      IARG3=MINMAX
CCCCC THE FOLLOWING LINE WAS CHANGED MAY 1993
CCCCC CALL WEICDF(ARG1,ARG2,RESULT)
      CALL WEICDF(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  592 CONTINUE
      ARG1=X
      ARG2=SAVE1
CCCCC THE FOLLOWING LINE WAS ADDED MAY 1993
CCCCC IARG3=SAVE2+0.5  (BUT INCORRECT)
CCCCC THE FOLLOWING LINE FIXED THE ABOVE LINE    JANUARY 1994
      IARG3=MINMAX
CCCCC THE FOLLOWING LINE WAS CHANGED MAY 1993
CCCCC CALL WEIPDF(ARG1,ARG2,RESULT)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL WEIPDF(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  593 CONTINUE
      ARG1=X
      ARG2=SAVE1
CCCCC THE FOLLOWING LINE WAS ADDED MAY 1993
CCCCC IARG3=SAVE2+0.5  (BUT INCORRECT)
CCCCC THE FOLLOWING LINE FIXED THE ABOVE LINE    JANUARY 1994
      IARG3=MINMAX
CCCCC THE FOLLOWING LINE WAS CHANGED MAY 1993
CCCCC CALL WEIPPF(ARG1,ARG2,RESULT)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL WEIPPF(ARG1,ARG2,IARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  594 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL WEIHAZ(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  595 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL WEICHA(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  596 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      CALL WEIAFR(ARG1,ARG2,ARG3,ZLOC,ZSCALE,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  597 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      IARG3=MINMAX
      CALL WEICDF(ARG1,ARG2,IARG3,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
  598 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL WEIPPF(ARG1,ARG2,IARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC THE FOLLOWING 3 SECTIONS WERE ADDED MAY 1990
  601 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,609)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  609 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL IGCDF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  602 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IF(IGAUDF.EQ.'STAN')THEN
        ZLOC=0.0
        IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
        ZSCALE=1.0
        IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ELSE
        ARG3=1.0
        IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
        ZLOC=0.0
        IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
        ZSCALE=1.0
        IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ENDIF
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,609)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL IGPDF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
  603 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,609)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL IGPPF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
  604 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,609)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL IGHAZ(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
  605 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,609)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL IGCHA(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  606 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,609)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL IGCDF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(1.0D0 - DRESLT)
      GOTO9000
C
  607 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,609)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL IGPPF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC THE FOLLOWING 3 SECTIONS WERE ADDED MAY 1990
  611 CONTINUE
      ARG1=X
      ARG2=SAVE1
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
CCCCC CALL WALCDF(ARG1,ARG2,RESULT)
      ARG3=1.0
      CALL IGCDF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  612 CONTINUE
      ARG1=X
      ARG2=SAVE1
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
CCCCC CALL WALPDF(ARG1,ARG2,RESULT)
CCCCC TERM=RESULT/ZSCALE
      ARG3=1.0
      CALL IGPDF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
  613 CONTINUE
      ARG1=X
      ARG2=SAVE1
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL WALPPF(ARG1,ARG2,RESULT)
CCCCC TERM=ZLOC + ZSCALE*RESULT
      ARG3=1.0
      CALL IGPPF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
  614 CONTINUE
      ARG1=X
      ARG2=SAVE1
      AMU=1.0
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL IGHAZ(DBLE(ARG1),DBLE(ARG2),DBLE(AMU),DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
  615 CONTINUE
      ARG1=X
      ARG2=SAVE1
      AMU=1.0
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL IGCHA(DBLE(ARG1),DBLE(ARG2),DBLE(AMU),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  616 CONTINUE
      ARG1=X
      ARG2=SAVE1
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
CCCCC CALL WALCDF(ARG1,ARG2,RESULT)
      ARG3=1.0
      CALL IGCDF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(1.0D0 - DRESLT)
      GOTO9000
C
  617 CONTINUE
      ARG1=X
      ARG2=SAVE1
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL WALPPF(ARG1,ARG2,RESULT)
CCCCC TERM=ZLOC + ZSCALE*RESULT
      ARG3=1.0
      ARG1=1.0 - ARG1
      CALL IGPPF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC THE FOLLOWING 3 SECTIONS WERE ADDED MAY 1990
  621 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,629)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  629 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL RIGCDF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  622 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,629)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL RIGPDF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
  623 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,629)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL RIGPPF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
  624 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,629)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL RIGHAZ(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
  625 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,629)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL RIGCHA(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  626 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,629)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL RIGCDF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=REAL(1.0D0 - DRESLT)
      GOTO9000
C
  627 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,629)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL RIGPPF(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC THE FOLLOWING 3 SECTIONS WERE ADDED MAY 1990
  631 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,639)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  639 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL FLCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  632 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,639)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL FLPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  633 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,639)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL FLPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + RESULT
      GOTO9000
C
  634 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,639)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL FLHAZ(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  635 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,639)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL FLCHA(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  636 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,639)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL FLCDF(ARG1,ARG2,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
  637 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,639)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL FLPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + RESULT
      GOTO9000
C
CCCCC THE FOLLOWING 3 SECTIONS WERE ADDED      DECEMBER 1993
  641 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,649)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  649 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GEPCDF(ARG1,ARG2,IARG3,IGEPDF,RESULT)
      TERM=RESULT
      GOTO9000
C
  642 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,649)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GEPPDF(ARG1,ARG2,IARG3,IGEPDF,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  643 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,649)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GEPPPF(ARG1,ARG2,IARG3,IGEPDF,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  644 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,649)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GEPHAZ(ARG1,ARG2,IARG3,IGEPDF,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  645 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,649)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GEPCHA(ARG1,ARG2,IARG3,IGEPDF,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  651 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      IARG3=INT(SAVE2+0.5)
      CALL BINCDF(DARG1,DARG2,IARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  652 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      IARG3=INT(SAVE2+0.5)
      CALL BINPDF(DARG1,DARG2,IARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  653 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      IARG3=INT(SAVE2+0.5)
      CALL BINPPF(DARG1,DARG2,IARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  661 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL POICDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  662 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL POICDF(ARG1,ARG2,RESLT1)
      IF(ARG1.LE.0.1)THEN
        TERM=RESLT1
      ELSE
        ARG1=X-1.0
        CALL POICDF(ARG1,ARG2,RESLT2)
        TERM=RESLT1-RESLT2
      ENDIF
      GOTO9000
C
  663 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL POIPPF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  671 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=ARG1-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,649)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL SEMCDF(ARG1,ZSCALE,RESULT)
      TERM=RESULT
      GOTO9000
C
  672 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=ARG1-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,649)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL SEMPDF(ARG1,ZSCALE,RESULT)
      TERM=RESULT
      GOTO9000
C
  673 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,649)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL SEMPPF(ARG1,ZSCALE,RESULT)
      TERM=ZLOC + RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  681 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL NBCDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  682 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL NBPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  683 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL NBPPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=DRESLT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  691 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,699)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  699 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL CAUCDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
  692 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,699)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL CAUPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  693 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,699)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL CAUPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  694 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,699)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL CAUSF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  701 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,709)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  709 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL DEXCDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
  702 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,709)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL DEXPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  703 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,709)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL DEXPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  704 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,709)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL DEXSF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  711 CONTINUE
      ARG1=X
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,719)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  719 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EV1CDF(ARG1,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  712 CONTINUE
      ARG1=X
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,719)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EV1PDF(ARG1,IARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  713 CONTINUE
      ARG1=X
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,719)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL EV1PPF(ARG1,IARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  714 CONTINUE
      ARG1=X
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,719)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EV1HAZ(ARG1,IARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  715 CONTINUE
      ARG1=X
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,719)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EV1CHA(ARG1,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  716 CONTINUE
      ARG1=X
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,719)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EV1CDF(ARG1,IARG3,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
  717 CONTINUE
      ARG1=X
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,719)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL EV1PPF(ARG1,IARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  721 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  729 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EV2CDF(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  722 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EV2PDF(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  723 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL EV2PPF(ARG1,ARG2,IARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  724 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EV2HAZ(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  725 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EV2CHA(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  726 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EV2CDF(ARG1,ARG2,IARG3,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
  727 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL EV2PPF(ARG1,ARG2,IARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  731 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EXPCDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
  732 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EXPPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  733 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL EXPPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  734 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL EXPSF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  735 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EXPHAZ(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  736 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EXPCHA(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
  737 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZSCALE=SAVE2
      CALL EXPAFR(ARG1,ARG2,ZSCALE,RESULT)
      TERM=RESULT
      GOTO9000
C
  738 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EXPCDF(ARG1,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
  739 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,729)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL EXPPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  741 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  749 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GAMCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  742 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GAMPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  743 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GAMPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  744 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ARG1.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11747)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
11747 FORMAT('**** ERROR FROM GAMHAZ: VALUE OF ',G15.7,' YIELDS ',
     1'A NEGATIVE ARGUMENT FOR GAMPDF AND GAMCDF.')
C
      IF(ARG2.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11748)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
11748 FORMAT('**** ERROR FROM GAMHAZ: NEGATIVE VALUES FOR SHAPE ',
     1'PARAMETER NOT ALLOWED.')
C
      IF(ARG2.EQ.1.0)THEN
        TERM=1.0/ZSCALE
        GOTO9000
      ENDIF
      CALL GAMPDF(ARG1,ARG2,PDF)
      CALL GAMCDF(ARG1,ARG2,CDF)
      TERM1=1.0-CDF
      IF(TERM1.NE.0.0)THEN
        TERM=(PDF/TERM1)/ZSCALE
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,7749)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
      ENDIF
 7749 FORMAT('*****WARNING: FOR ARGUMENT = ',F15.7,' CDF TERM ',
     1'ESSENTIALLY 1, VALUE SET TO 0')
      GOTO9000
C
  745 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ARG1.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,12747)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
12747 FORMAT('**** ERROR FROM GAMCHAZ: VALUE OF ',E15.7,' YIELDS ',
     1'A NEGATIVE ARGUMENT FOR GAMCDF.')
C
      IF(ARG2.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,12748)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
12748 FORMAT('**** ERROR FROM GAMCHAZ: NEGATIVE VALUES FOR SHAPE ',
     1'PARAMETER NOT ALLOWED.')
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GAMCDF(ARG1,ARG2,CDF)
      TERM1=1.0-CDF
      IF(TERM1.GT.0.0)THEN
        TERM=-LOG(TERM1)
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
      ENDIF
      GOTO9000
C
  746 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GAMCDF(ARG1,ARG2,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
  747 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL GAMPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  751 CONTINUE
      DARG1=X
      DARG2=SAVE1
      CALL GEOCDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  752 CONTINUE
      DARG1=X
      DARG2=SAVE1
      CALL GEOPDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  753 CONTINUE
      DARG1=X
      DARG2=SAVE1
      CALL GEOPPF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH, 2004.
  756 CONTINUE
      DARG1=X
      DARG2=SAVE1
      CALL GE2CDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  757 CONTINUE
      DARG1=X
      DARG2=SAVE1
      CALL GE2PDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  758 CONTINUE
      DARG1=X
      DARG2=SAVE1
      CALL GE2PPF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  761 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  769 FORMAT('**** ERROR: NEGATIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL HFNCDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
  762 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL HFNPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  763 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL HFNPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  771 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LAMCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  772 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LAMPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  773 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LAMPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  774 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LAMSF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
CCCCC APRIL 1995.  SUPPORT STANDARD DEVIATION SHAPE PARAMETER.
CCCCC MARCH 2014.  CALL THE DOUBLE PRECISION VERSION
  781 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      IF(DARG2.LE.0.0D0)DARG2=1.0D0
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,789)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  789 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
CCCCC CALL LGNCDF(ARG1,ARG2,RESULT)
      CALL LGDCDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC APRIL 1995.  SUPPORT STANDARD DEVIATION SHAPE PARAMETER.
CCCCC MARCH 2014.  CALL THE DOUBLE PRECISION VERSION
  782 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      IF(DARG2.LE.0.0D0)DARG2=1.0D0
CCCCC CALL LGNPDF(ARG1,RESULT)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,789)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
CCCCC CALL LGNPDF(ARG1,ARG2,RESULT)
      CALL LGDPDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT/DBLE(ZSCALE))
      GOTO9000
C
CCCCC APRIL 1995.  SUPPORT STANDARD DEVIATION SHAPE PARAMETER.
CCCCC MARCH 2014.  CALL THE DOUBLE PRECISION VERSION
  783 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      IF(DARG2.LE.0.0D0)DARG2=1.0D0
CCCCC CALL LGNPPF(ARG1,RESULT)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,789)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL LGNPPF(ARG1,ARG2,RESULT)
      CALL LGDPPF(DARG1,DARG2,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
  784 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IF(ARG2.LE.0.0)ARG2=1.0
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,789)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LGNHAZ(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  785 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IF(ARG2.LE.0.0)ARG2=1.0
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,789)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LGNCHA(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  786 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      CALL LGNAFR(ARG1,ARG2,ARG3,ZLOC,ZSCALE,RESULT)
      TERM=RESULT
      GOTO9000
C
  787 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      IF(DARG2.LE.0.0D0)DARG2=1.0D0
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,789)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL LGDCDF(DARG1,DARG2,DRESLT)
      TERM=REAL(1.0D0 - DRESLT)
      GOTO9000
C
  788 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      IF(DARG2.LE.0.0D0)DARG2=1.0D0
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,789)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=1.0D0 - DARG1
      CALL LGDPPF(DARG1,DARG2,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  791 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  799 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LOGCDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
  792 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LOGPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  793 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LOGPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  794 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LOGSF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  795 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LOGHAZ(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  796 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LOGCHA(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
  797 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LOGCDF(ARG1,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
  798 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL LOGPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
CCCCC OCTOBER 2004: TREAT A "LOCATION" PARAMETER AS A
CCCCC A SHAPE PARAMETER (AND ADJUST TRUE LOCATION AND
CCCCC SCALE PARAMETERS ACCORDINGLY).  HOWEVER, DEFAULT IT
CCCCC TO 1 IF NOT SPECIFIED.
C
  801 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL PARCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  802 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL PARPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  803 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL PARPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  804 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL PARHAZ(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  805 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL PARCHA(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 1994.
  811 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2-ZLOC
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL UNICDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
  812 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2-ZLOC
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL UNIPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  813 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2-ZLOC
      CALL UNIPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  814 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2-ZLOC
      CALL UNISF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  815 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2-ZLOC
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL UNIHAZ(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  816 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2-ZLOC
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL UNICHA(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
  817 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2-ZLOC
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL UNICDF(ARG1,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
  818 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2-ZLOC
      ARG1=1.0 - ARG1
      CALL UNIPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 1994.
  821 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4-ZLOC
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL BETCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  822 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4-ZLOC
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL BETPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  823 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4-ZLOC
      CALL BETPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  831 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5-ZLOC
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL NCBCDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
  832 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5-ZLOC
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL NCBPDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  833 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5-ZLOC
      CALL NCBPPF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 1994.
  841 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL NCCCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY, 1996.
  842 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL NCCPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  843 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL NCCPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  844 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL NCCNCP(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 1994.
  851 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL NCFCDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 1994.
  852 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL NCFPDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  853 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL NCFPPF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 1994.
  861 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL NCTCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MAY        1995.
  862 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL NCTPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  863 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL NCTPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 1994.
  871 CONTINUE
      IARG1=INT(X+0.5)
      IARG2=INT(SAVE1+0.5)
      CALL DISCDF(IARG1,IARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  872 CONTINUE
      IARG1=INT(X+0.5)
      IARG2=INT(SAVE1+0.5)
      CALL DISPDF(IARG1,IARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  873 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      CALL DISPPF(ARG1,IARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 1994.
  881 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOWLM=-1.0
      IF(SAVE2.NE.CPUMIN)ZLOWLM=SAVE2
      ZUPPLM=1.0
      IF(SAVE3.NE.CPUMIN)ZUPPLM=SAVE3
C
      CALL TRICDF(ARG1,ARG2,ZLOWLM,ZUPPLM,RESULT)
      TERM=RESULT
      GOTO9000
C
  882 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOWLM=-1.0
      IF(SAVE2.NE.CPUMIN)ZLOWLM=SAVE2
      ZUPPLM=1.0
      IF(SAVE3.NE.CPUMIN)ZUPPLM=SAVE3
C
      CALL TRIPDF(ARG1,ARG2,ZLOWLM,ZUPPLM,RESULT)
      TERM=RESULT
      GOTO9000
C
  883 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOWLM=-1.0
      IF(SAVE2.NE.CPUMIN)ZLOWLM=SAVE2
      ZUPPLM=1.0
      IF(SAVE3.NE.CPUMIN)ZUPPLM=SAVE3
C
      CALL TRIPPF(ARG1,ARG2,ZLOWLM,ZUPPLM,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 1994.
  891 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL DNTCDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MAY, 2004.
  892 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL DNTPDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  893 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL DNTPPF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 1994.
  901 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ZLOC=0.0
      IF(SAVE5.NE.CPUMIN)ZLOC=SAVE5
      ZSCALE=1.0
      IF(SAVE6.NE.CPUMIN)ZSCALE=SAVE6
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL DNFCDF(ARG1,ARG2,ARG3,ARG4,ARG5,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MAY 2004.
  902 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ZLOC=0.0
      IF(SAVE5.NE.CPUMIN)ZLOC=SAVE5
      ZSCALE=1.0
      IF(SAVE6.NE.CPUMIN)ZSCALE=SAVE6
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL DNFPDF(ARG1,ARG2,ARG3,ARG4,ARG5,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  903 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ZLOC=0.0
      IF(SAVE5.NE.CPUMIN)ZLOC=SAVE5
      ZSCALE=1.0
      IF(SAVE6.NE.CPUMIN)ZSCALE=SAVE6
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL DNFPPF(ARG1,ARG2,ARG3,ARG4,ARG5,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 1994.
  911 CONTINUE
      IARG1=INT(X+0.5)
      IARG2=INT(SAVE1+0.5)
      IARG3=INT(SAVE2+0.5)
      IARG4=INT(SAVE3+0.5)
      HYPPNT=.FALSE.
      CALL HYPCDF(IARG1,IARG2,IARG3,IARG4,HYPPNT,RESULT)
      TERM=RESULT
      GOTO9000
C
  912 CONTINUE
      IARG1=INT(X+0.5)
      IARG2=INT(SAVE1+0.5)
      IARG3=INT(SAVE2+0.5)
      IARG4=INT(SAVE3+0.5)
      HYPPNT=.TRUE.
      CALL HYPCDF(IARG1,IARG2,IARG3,IARG4,HYPPNT,RESULT)
      TERM=RESULT
      GOTO9000
C
  913 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      IARG3=INT(SAVE2+0.5)
      IARG4=INT(SAVE3+0.5)
      CALL HYPPPF(ARG1,IARG2,IARG3,IARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER, 1994.
  921 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
C
      ARG1=ARG1-ZLOC
      CALL VONCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  922 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
C
      ARG1=ARG1-ZLOC
      CALL VONPDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  923 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
C
      CALL VONPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER, 1994.
  931 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL BVNCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MAY      1995.
  932 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
CCCCC SEPTEMBER 1995.  ACTIVATE FOLLOWING LINE.
      CALL BVNPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1995.
  941 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL COSCDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
  942 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL COSPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  943 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL COSPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH    2013.
  946 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL SINCDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
  947 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL SINPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  948 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL SINPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1995.
  951 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL ALPCDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
  952 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL ALPPDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT/DBLE(ZSCALE))
      GOTO9000
C
  953 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ALPPPF(DARG1,DARG2,DRESLT)
      TERM=REAL(DBLE(ZLOC) + DBLE(ZSCALE)*DRESLT)
      GOTO9000
C
  954 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL ALPHAZ(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT/DBLE(ZSCALE))
      GOTO9000
C
  955 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL ALPCHA(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1995.
  961 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL PNRCDF(ARG1,ARG2,ARG3,RESULT)
      CALL PNRCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  962 CONTINUE
      ARG1=X
      ARG2=SAVE1
CCCCC ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
CCCCC CALL PNRPDF(ARG1,ARG2,ARG3,RESULT)
      CALL PNRPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  963 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC ARG3=1.0
CCCCC CALL PNRPPF(ARG1,ARG2,ARG3,RESULT)
      CALL PNRPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  964 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL PNRHAZ(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  965 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL PNRCHA(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  966 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL PNRCDF(ARG1,ARG2,ARG3,RESULT)
      CALL PNRCDF(ARG1,ARG2,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
  967 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC ARG3=1.0
CCCCC CALL PNRPPF(ARG1,ARG2,ARG3,RESULT)
      ARG1=1.0 - ARG1
      CALL PNRPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1995.
  971 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.0)ARG3=1.0
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,979)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  979 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL PLNCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  972 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.0)ARG3=1.0
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,979)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL PLNPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  973 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.0)ARG3=1.0
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,979)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL PLNPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  974 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.0)ARG3=1.0
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,979)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL PLNHAZ(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  975 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.0)ARG3=1.0
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,979)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL PLNCHA(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  976 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.0)ARG3=1.0
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,979)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL PLNCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
  977 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.0)ARG3=1.0
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,979)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL PLNPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1995.
  981 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.0)ARG3=1.0
C
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL FNRCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
  982 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.0)ARG3=1.0
C
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL FNRPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  983 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.0)ARG3=1.0
C
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL FNRPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1995.
  991 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,998)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
  998 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL POWCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
  992 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,998)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL POWPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  993 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,998)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL POWPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
  994 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,998)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL POWHAZ(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
  995 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,998)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL POWCHA(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1995.
CCCCC NOTE 12/2008: DO NOT INCLUDE LOCATION/SCALE PARAMETERS FOR
CCCCC               TRUNCATED NORMAL SINCE LOWER/UPPER LIMITS
CCCCC               ESSENTIALLY DEFINE THESE.
C
 1011 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      DARG5=DBLE(SAVE4)
      IF(SAVE1.EQ.CPUMIN)DARG2=DBLE(CPUMIN)
      IF(SAVE2.EQ.CPUMIN)DARG3=DBLE(CPUMIN)
      IF(SAVE3.EQ.CPUMIN)DARG4=0.0D0
      IF(SAVE4.EQ.CPUMIN)DARG5=1.0D0
C
      CALL TNRCDF(DARG1,DARG2,DARG3,DARG4,DARG5,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1012 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      DARG5=DBLE(SAVE4)
      IF(SAVE1.EQ.CPUMIN)DARG2=DBLE(CPUMIN)
      IF(SAVE2.EQ.CPUMIN)DARG3=DBLE(CPUMIN)
      IF(SAVE3.EQ.CPUMIN)DARG4=0.0D0
      IF(SAVE4.EQ.CPUMIN)DARG5=1.0D0
C
      CALL TNRPDF(DARG1,DARG2,DARG3,DARG4,DARG5,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1013 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      DARG5=DBLE(SAVE4)
      IF(SAVE1.EQ.CPUMIN)DARG2=DBLE(CPUMIN)
      IF(SAVE2.EQ.CPUMIN)DARG3=DBLE(CPUMIN)
      IF(SAVE3.EQ.CPUMIN)DARG4=0.0D0
      IF(SAVE4.EQ.CPUMIN)DARG5=1.0D0
C
      CALL TNRPPF(DARG1,DARG2,DARG3,DARG4,DARG5,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1995.
 1021 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL CHCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1022 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      CALL CHPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1023 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      CALL CHPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1995.
 1031 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL DLGCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1032 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL DLGPDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1033 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL DLGPPF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1995.
 1041 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.)ARG3=1.0
CCCCC JUNE 1995.  ADD 'TRUN' ARGUMENT
CCCCC CALL WARCDF(ARG1,ARG2,ARG3,RESULT,'NOTR')
      CALL WARCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1042 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.)ARG3=1.0
      CALL WARPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1043 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG3.LE.0.)ARG3=1.0
      IFLAG2='OFF'
CCCCC CALL WARPPF(ARG1,ARG2,ARG3,RESULT,IFLAG2)
      CALL WARPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   2004.
 1046 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      CALL YULCDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1047 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL YULPDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1048 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL YULPPF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1995.
 1051 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1059)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 1059 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LLGCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1052 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1059)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LLGPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1053 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1059)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LLGPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1995.
 1061 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11069)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
11069 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GGDCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1062 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11069)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GGDPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1063 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11069)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GGDPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1998.
 1064 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11069)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GGDHAZ(ARG1,ARG2,ARG3,HAZ)
      TERM=HAZ/ZSCALE
      GOTO9000
C
 1065 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11069)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GGDCHA(ARG1,ARG2,ARG3,HAZ)
      TERM=HAZ
      GOTO9000
C
 1066 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11069)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL IGACDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1067 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11069)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL IGAPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1068 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11069)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL IGAPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL,   1998.
 1069 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=-1.0
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11069)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GGDHAZ(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 9065 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=-1.0
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11069)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GGDCHA(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 9066 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11069)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL IGACDF(ARG1,ARG2,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
 9067 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11069)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL IGAPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER,   1995.
 1071 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ANGCDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
 1072 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ANGPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1073 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ANGPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER,   1995.
 1081 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2-ZLOC
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ARSCDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
 1082 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2-ZLOC
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ARSPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1083 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ARSPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
 1091 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1099)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 1099 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL DWECDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1092 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1099)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL DWEPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1093 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1099)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL DWEPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
 1101 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1169)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 1169 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LGACDF(ARG1,ARG2,ILGADF,RESULT)
      TERM=RESULT
      GOTO9000
C
 1102 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1169)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LGAPDF(ARG1,ARG2,ILGADF,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1103 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1169)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LGAPPF(ARG1,ARG2,ILGADF,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
 1111 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL HSECDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
 1112 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL HSEPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1113 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL HSEPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
 1121 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1129)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 1129 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL HFCCDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
 1122 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1129)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL HFCPDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
 1123 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1129)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL HFCPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
 1131 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL HFLCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1132 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      CALL HFLPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1133 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      CALL HFLPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
 1141 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1149)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 1149 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GEVCDF(ARG1,ARG2,MINMAX,RESULT)
      TERM=RESULT
      GOTO9000
C
 1142 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1149)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GEVPDF(ARG1,ARG2,MINMAX,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1143 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1149)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GEVPPF(ARG1,ARG2,MINMAX,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1144 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GEVHAZ(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1145 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=MINMAX
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GEVCHA(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1146 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1149)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GEVCDF(ARG1,ARG2,MINMAX,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
 1147 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1149)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL GEVPPF(ARG1,ARG2,MINMAX,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
 1151 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GOMCDF(ARG1,ARG2,ARG3,IGOMDF,RESULT)
      TERM=RESULT
      GOTO9000
C
 1152 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      CALL GOMPDF(ARG1,ARG2,ARG3,IGOMDF,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1153 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      CALL GOMPPF(ARG1,ARG2,ARG3,IGOMDF,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1154 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      CALL GOMHAZ(ARG1,ARG2,ARG3,IGOMDF,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1155 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      CALL GOMCHA(ARG1,ARG2,ARG3,IGOMDF,RESULT)
      TERM=RESULT
      GOTO9000
C
 1156 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GOMCDF(ARG1,ARG2,ARG3,IGOMDF,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
 1157 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=1.0 - ARG1
      CALL GOMPPF(ARG1,ARG2,ARG3,IGOMDF,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
CCCCC DECEMBER 2004.  ALTHOUGH THE A PARAMETER IS TYPICALLY CALLED
CCCCC A LOCATION PARAMETER, IT IS NOT IN THE TECHNICAL SENSE OF
CCCCC LOCATION/SCALE PARAMETERS: f(X,A,B) = (1/B)f((X-A)/B,0,1).
CCCCC THEREFORE, WE TREAT IT AS A SHAPE PARAMETER (DEFAULTS TO 1 IF
CCCCC NOT SPECIFIED).
C
 1161 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL PA2CDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1162 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL PA2PDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1163 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,799)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL PA2PPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
 1171 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1149)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL WCACDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1172 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1149)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL WCAPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1173 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1149)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL WCAPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
 1181 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG1=1
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1189)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 1189 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EWECDF(ARG1,ARG2,ARG3,IARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
 1182 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG1=1
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1189)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EWEPDF(ARG1,ARG2,ARG3,IARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1183 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG1=1
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1189)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL EWEPPF(ARG1,ARG2,ARG3,IARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1184 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG1=1
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1189)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EWEHAZ(ARG1,ARG2,ARG3,IARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1185 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG1=1
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1189)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EWECHA(ARG1,ARG2,ARG3,IARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
 1186 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG1=1
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1189)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL EWECDF(ARG1,ARG2,ARG3,IARG1,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
 1187 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG1=1
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1189)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL EWEPPF(ARG1,ARG2,ARG3,IARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
 1191 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      IF(ARG3.EQ.CPUMIN)ARG3=0.0
      IF(ARG4.EQ.CPUMIN)ARG4=1.0
C
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL TNECDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1192 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      IF(ARG3.EQ.CPUMIN)ARG3=0.0
      IF(ARG4.EQ.CPUMIN)ARG4=1.0
C
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL TNEPDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1193 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      IF(ARG3.EQ.CPUMIN)ARG3=0.0
      IF(ARG4.EQ.CPUMIN)ARG4=1.0
C
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL TNEPPF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
 1201 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1209)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 1209 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GLOCDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1202 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1209)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GLOPDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1203 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1209)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GLOPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER,   1995.
 1211 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL PEXCDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1212 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL PEXPDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT/DBLE(ZSCALE))
      GOTO9000
C
 1213 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL PEXPPF(DARG1,DARG2,DRESLT)
      TERM=REAL(DBLE(ZLOC) + DBLE(ZSCALE)*DRESLT)
      GOTO9000
C
 1214 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL PEXHAZ(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT/DBLE(ZSCALE))
      GOTO9000
C
 1215 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
C
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL PEXCHA(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY,   1996.
 1221 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1229)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 1229 FORMAT('**** ERROR: NON-POSITIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL DGACDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1222 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1229)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL DGAPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1223 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1229)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL DGAPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY,   1996.
CCCCC MAY 2008.  RENAME TO "MIE", UPGRADE TO DOUBLE
CCCCC            PRECISION, BETA PARAMETER ACTUALLY
CCCCC            A SCALE PARAMETER.
 1231 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL KAPCDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      CALL MIECDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1232 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
CCCCC CALL KAPPDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      CALL MIEPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 1233 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
CCCCC CALL KAPPPF(ARG1,ARG2,ARG3,ARG4,RESULT)
      CALL MIEPPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY,   1996.
 1241 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
C
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL FCACDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1242 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
C
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL FCAPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1243 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
C
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL FCAPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY,   1996.
 1251 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG4=INT(SAVE3+0.5)
      CALL BBNCDF(ARG1,ARG2,ARG3,IARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1252 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG4=INT(SAVE3+0.5)
      CALL BBNPDF(ARG1,ARG2,ARG3,IARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1253 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG4=INT(SAVE3+0.5)
      CALL BBNPPF(ARG1,ARG2,ARG3,IARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH      2004.
 1256 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG4=INT(SAVE3+0.5)
      CALL POLCDF(ARG1,ARG2,ARG3,IARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1257 CONTINUE
      ARG1=X
      ARG2=INT(SAVE1+0.5)
      ARG3=INT(SAVE2+0.5)
      ARG4=INT(SAVE3+0.5)
      IARG5=INT(SAVE4+0.5)
      CALL POLPDF(ARG1,ARG2,ARG3,ARG4,IARG5,RESULT)
      TERM=RESULT
      GOTO9000
C
 1258 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IARG4=INT(SAVE3+0.5)
      CALL POLPPF(ARG1,ARG2,ARG3,IARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY,   1996.
 1261 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BRACDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1262 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      CALL BRAPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1263 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      CALL BRAPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY,   1996.
 1271 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
C
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL GEXCDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1272 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
C
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      CALL GEXPDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1273 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
C
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GEXPPF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY,   1996.
 1281 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL RECCDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1282 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      CALL RECPDF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1283 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      CALL RECPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH,   1999.
 1291 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ARG1.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11291)ARG1
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
11291 FORMAT(
     1'***** ERROR FROM SRACDF.  ARGUMENT 1 MUST BE POSITIVE.  IT ',
     1'WAS ',G15.7)
      IF(ARG2.LT.1.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,21291)ARG2
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
21291 FORMAT(
     1'***** ERROR FROM SRACDF.  ARGUMENT 2 MUST BE >= 1.  IT ',
     1'WAS ',G15.7)
      IF(ARG3.LT.2.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31291)ARG3
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
31291 FORMAT(
     1'***** ERROR FROM SRACDF.  ARGUMENT 3 MUST BE >= 2.  IT ',
     1'WAS ',G15.7)
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL SRACDF(ARG1,ARG2,ARG3,RESULT)
      DRESLT=PRTRNG(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),IFAULT)
      RESULT=REAL(DRESLT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
C1292 CONTINUE
CCCCC ARG1=X
CCCCC ARG2=SAVE1
CCCCC ARG3=SAVE2
CCCCC ZLOC=0.0
CCCCC IF(SAVE3.NE.CPUMIN)ZLOC=SAVE4
CCCCC ZSCALE=1.0
CCCCC IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
CCCCC ARG1=(ARG1-ZLOC)/ZSCALE
C
CCCCC IF(ZSCALE.LE.0.0)THEN
CCCCC   WRITE(ICOUT,999)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   WRITE(ICOUT,559)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   TERM=0.0
CCCCC   GOTO9000
CCCCC ENDIF
CCCCC CALL SRAPDF(ARG1,ARG2,RESULT)
CCCCC TERM=ZLOC + ZSCALE*RESULT
CCCCC GOTO9000
C
 1293 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      IF(ARG1.LT.0.90.OR.ARG1.GT.0.99)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11293)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11294)ARG1
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
11293 FORMAT(
     1'***** ERROR FROM SRAPPF.  ARGUMENT 1 MUST BE IN THE INTERVAL ',
     1'(0.90,0.99).')
11294 FORMAT(
     1'      IT WAS ',G15.7)
      IF(ARG2.LT.1.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,21293)ARG2
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
21293 FORMAT(
     1'***** ERROR FROM SRAPPF.  ARGUMENT 2 MUST BE >= 1.  IT ',
     1'WAS ',G15.7)
      IF(ARG3.LT.2.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31293)ARG3
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
31293 FORMAT(
     1'***** ERROR FROM SRAPPF.  ARGUMENT 3 MUST BE >= 2.  IT ',
     1'WAS ',G15.7)
C
      DRESLT=QTRNG(DBLE(ARG1),DBLE(ARG2),DBLE(ARG3),IFAULT)
      RESULT=REAL(DRESLT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED AUGUST,   2001.
 1301 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      DARG5=1.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
      DARG1=(DARG1-DARG4)/DARG5
C
      IF(DARG5.LE.0.0D0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      IWRITE='ERRO'
      CALL GLDCDF(DARG1,DARG2,DARG3,DRESLT,IGLDDF,IWRITE)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1302 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      DARG5=1.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
      DARG1=(DARG1-DARG4)/DARG5
C
      IF(DARG5.LE.0.0D0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GLDPDF(DARG1,DARG2,DARG3,DRESLT,IGLDDF,IWRITE)
      TERM=REAL(DRESLT)/DARG5
      GOTO9000
C
 1303 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      DARG5=1.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
C
      IF(DARG5.LE.0.0D0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      IWRITE='ERRO'
      CALL GLDPPF(DARG1,DARG2,DARG3,DRESLT,IGLDDF,IWRITE)
      TERM=DARG4 + DARG5*DRESLT
      GOTO9000
C
C1304 CONTINUE
CCCCC ARG1=X
CCCCC ARG2=SAVE1
CCCCC IWRITE='ON'
CCCCC CALL GLDCHK(ARG1,ARG2,ALOWER,AUPPER,IFLAG,ISIGN,IWRITE)
CCCCC TERM=0.0
CCCCC IF(IFLAG.EQ.1)TERM=1.0
CCCCC GOTO9000
C
 1305 CONTINUE
C
C  DETERMINE LOWER LIMIT FOR GENERALIZED TUKEY LAMBDA.
C  FIND GLDPPF OF 0.
C
      DARG1=0.0D0
      DARG2=DBLE(X)
      DARG3=DBLE(SAVE1)
      DARG4=0.0D0
      DARG5=1.0D0
      IF(SAVE2.NE.CPUMIN)DARG4=DBLE(SAVE2)
      IF(SAVE3.NE.CPUMIN)DARG5=DBLE(SAVE3)
C
      IF(DARG5.LE.0.0D0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      IWRITE='ERRO'
      CALL GLDPPF(DARG1,DARG2,DARG3,DRESLT,IGLDDF,IWRITE)
      TERM=DARG4 + DARG5*DRESLT
      GOTO9000
C
CCCCC ARG1=X
CCCCC ARG2=SAVE1
CCCCC ARG3=SAVE2
CCCCC ARG4=SAVE3
CCCCC ZLOC=0.0
CCCCC IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
CCCCC ZSCALE=1.0
CCCCC CALL GLDCHK(ARG2,ARG3,ALOWER,AUPPER,IFLAG,ISIGN,IWRITE)
CCCCC IF(ISIGN.LT.0)ZSCALE=-1.0
CCCCC IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
CCCCC IF(ISIGN.GT.0 .AND. ZSCALE.LE.0.0)THEN
CCCCC   WRITE(ICOUT,999)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   WRITE(ICOUT,559)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   TERM=0.0
CCCCC   GOTO9000
CCCCC ELSEIF(ISIGN.LT.0 .AND. ZSCALE.GE.0.0)THEN
CCCCC   WRITE(ICOUT,999)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   WRITE(ICOUT,1309)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   TERM=0.0
CCCCC   GOTO9000
CCCCC ENDIF
C
CCCCC IWRITE='OFF'
CCCCC CALL GLDCHK(ARG1,ARG2,ALOWER,AUPPER,IFLAG,ISIGN,IWRITE)
CCCCC TERM=ZLOC + ABS(ZSCALE)*ALOWER
CCCCC GOTO9000
C
 1306 CONTINUE
C
C  DETERMINE UPPER LIMIT FOR GENERALIZED TUKEY LAMBDA.
C  FIND GLDPPF OF 1.
C
      DARG1=1.0D0
      DARG2=DBLE(X)
      DARG3=DBLE(SAVE1)
      DARG4=0.0D0
      DARG5=1.0D0
      IF(SAVE2.NE.CPUMIN)DARG4=DBLE(SAVE2)
      IF(SAVE3.NE.CPUMIN)DARG5=DBLE(SAVE3)
C
      IF(DARG5.LE.0.0D0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,559)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      IWRITE='ERRO'
      CALL GLDPPF(DARG1,DARG2,DARG3,DRESLT,IGLDDF,IWRITE)
      TERM=DARG4 + DARG5*DRESLT
      GOTO9000
C
CCCCC ARG1=X
CCCCC ARG2=SAVE1
CCCCC ARG3=SAVE2
CCCCC ARG4=SAVE3
CCCCC ZLOC=0.0
CCCCC IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
CCCCC ZSCALE=1.0
CCCCC CALL GLDCHK(ARG2,ARG3,ALOWER,AUPPER,IFLAG,ISIGN,IWRITE)
CCCCC IF(ISIGN.LT.0)ZSCALE=-1.0
CCCCC IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
CCCCC IF(ISIGN.GT.0 .AND. ZSCALE.LE.0.0)THEN
CCCCC   WRITE(ICOUT,999)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   WRITE(ICOUT,559)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   TERM=0.0
CCCCC   GOTO9000
CCCCC ELSEIF(ISIGN.LT.0 .AND. ZSCALE.GE.0.0)THEN
CCCCC   WRITE(ICOUT,999)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   WRITE(ICOUT,1309)
CCCCC   CALL DPWRST('XXX','BUG ')
CCCCC   TERM=0.0
CCCCC   GOTO9000
CCCCC ENDIF
C
CCCCC IWRITE='OFF'
CCCCC CALL GLDCHK(ARG1,ARG2,ALOWER,AUPPER,IFLAG,ISIGN,IWRITE)
CCCCC TERM=ZLOC + ABS(ZSCALE)*AUPPER
CCCCC GOTO9000
C
C1307 CONTINUE
CCCCC ARG1=X
CCCCC ARG2=SAVE1
CCCCC IWRITE='OFF'
CCCCC CALL GLDCHK(ARG1,ARG2,ALOWER,AUPPER,IFLAG,ISIGN,IWRITE)
CCCCC TERM=REAL(ISIGN)
CCCCC GOTO9000
C
 1321 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LDECDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1322 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LDEPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1323 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LDEPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1331 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL IWECDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1332 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL IWEPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1333 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL IWEPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1334 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,749)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ARG1.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,11337)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
11337 FORMAT('**** ERROR FROM IWEHAZ: VALUE OF ',E15.7,' YIELDS ',
     1'A NEGATIVE ARGUMENT FOR IWEPDF AND IWECDF.')
C
      IF(ARG2.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1338)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 1338 FORMAT('**** ERROR FROM IWEHAZ: NEGATIVE VALUES FOR SHAPE ',
     1'PARAMETER NOT ALLOWED.')
C
      IF(ARG2.EQ.1.0)THEN
        TERM=1.0/ZSCALE
        GOTO9000
      ENDIF
      CALL IWEPDF(ARG1,ARG2,PDF)
      CALL IWECDF(ARG1,ARG2,CDF)
      TERM1=1.0-CDF
      IF(TERM1.NE.0.0)THEN
        TERM=(PDF/TERM1)/ZSCALE
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1349)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
      ENDIF
 1349 FORMAT('*****WARNING: FOR ARGUMENT = ',F15.7,' CDF TERM ',
     1'ESSENTIALLY 1, VALUE SET TO 0')
      GOTO9000
C
 1335 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ARG1.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,13337)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
13337 FORMAT('**** ERROR FROM IWECHAZ: VALUE OF ',E15.7,' YIELDS ',
     1'A NEGATIVE ARGUMENT FOR IWECDF.')
C
      IF(ARG2.LT.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,13338)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
13338 FORMAT('**** ERROR FROM IWECHAZ: NEGATIVE VALUES FOR SHAPE ',
     1'PARAMETER NOT ALLOWED.')
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,13339)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
13339 FORMAT('**** ERROR FROM IWECHAZ: NEGATIVE VALUES FOR SCALE ',
     1'PARAMETER NOT ALLOWED.')
C
      CALL IWECDF(ARG1,ARG2,CDF)
      TERM1=1.0-CDF
      IF(TERM1.GT.0.0)THEN
        TERM=-LOG(TERM1)
      ELSE
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,13337)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
      ENDIF
      GOTO9000
C
 1336 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL IWECDF(ARG1,ARG2,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
 1337 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL IWEPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 2001.
 1341 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL JSBCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1342 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL JSBPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1343 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL JSBPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER, 2001.
 1351 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL JSUCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1352 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL JSUPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1353 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      CALL JSUPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1361 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GEECDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1362 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GEEPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1363 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GEEPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1364 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GEEHAZ(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1365 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GEECHA(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1366 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GEECDF(ARG1,ARG2,RESULT)
      TERM=1.0 - RESULT
      GOTO9000
C
 1367 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=1.0 - ARG1
      CALL GEEPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MAY 2002.
 1371 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4 - ZLOC
C
      CALL TSPCDF(ARG1,ARG2,ARG3,ZLOC,ZSCALE,RESULT)
      TERM=RESULT
      GOTO9000
C
 1372 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4 - ZLOC
C
      CALL TSPPDF(ARG1,ARG2,ARG3,ZLOC,ZSCALE,RESULT)
      TERM=RESULT
      GOTO9000
C
 1373 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4 - ZLOC
C
      CALL TSPPPF(ARG1,ARG2,ARG3,ZLOC,ZSCALE,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MAY 2002.
CCCCC NOTE: FOR THIS DISTRIBUTION, LOCATION AND SCALE ARE
CCCCC       PART OF THE DEFINITION, SO NO SEPARATE LOCATION
CCCCC       AND SCALE.
 1381 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ARG6=SAVE5
      ZLOC=0.0
      ZSCALE=1.0
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL BWECDF(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,RESULT,DRSLT2)
      TERM=RESULT
      GOTO9000
C
 1382 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ARG6=SAVE5
      ZLOC=0.0
      ZSCALE=1.0
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL BWECDF(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,RESULT,DTERM1)
      CALL BWEHAZ(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,RESULT,DTERM2)
      DRSLT2=DTERM2*(1.0D0-DTERM1)
      TERM=REAL(DRSLT2)/ZSCALE
      GOTO9000
C
 1383 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ARG6=SAVE5
      ZLOC=0.0
      ZSCALE=1.0
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BWEPPF(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,RESULT,DTERM1)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1384 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ARG6=SAVE5
      ZLOC=0.0
      ZSCALE=1.0
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL BWEHAZ(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,RESULT,DRSLT2)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1385 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ARG6=SAVE5
      ZLOC=0.0
      ZSCALE=1.0
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BWECDF(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,RESULT,DTERM1)
      DTERM2=1.0D0-DTERM1
      DRSLT2=0.0D0
      IF(DTERM2.GE.0.0D0)THEN
        DRSLT2=-DLOG(DTERM2)
      ELSE
        WRITE(ICOUT,1386)
        CALL DPWRST('XXX','BUG ')
      ENDIF
 1386 FORMAT('**** WARNING FROM BWECHAZ: OVERFLOW IN COMPUTATION, ',
     1       'CUMULATIVE HAZARD SET TO 0')
      TERM=REAL(DRSLT2)/ZSCALE
      GOTO9000
C
 1391 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG2.EQ.CPUMIN)ARG2=0.0
      IF(ARG3.EQ.CPUMIN)ARG3=0.0
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GHCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1392 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG2.EQ.CPUMIN)ARG2=0.0
      IF(ARG3.EQ.CPUMIN)ARG3=0.0
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GHPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1393 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(ARG2.EQ.CPUMIN)ARG2=0.0
      IF(ARG3.EQ.CPUMIN)ARG3=0.0
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GHPPF(ARG1,ARG2,ARG3,RESULT,DBLE(ARG1),DTERM1)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1396 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=0.0
      IF(ARG2.EQ.CPUMIN)ARG2=0.0
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GHCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1397 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=0.0
      IF(ARG2.EQ.CPUMIN)ARG2=0.0
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL GHPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1398 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=0.0
      IF(ARG2.EQ.CPUMIN)ARG2=0.0
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GHPPF(ARG1,ARG2,ARG3,RESULT,DBLE(ARG1),DTERM1)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1401 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL SLACDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
 1402 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL SLAPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1403 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL SLAPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC APRIL 2003: ADD SUPPORT FOR LANDAU DISTRIBUTION
 1411 CONTINUE
      DARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      DARG1=(DARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DRESLT=LANCDF(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1412 CONTINUE
      DARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
      DARG1=(DARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DRESLT=LANPDF(DARG1)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 1413 CONTINUE
      DARG1=0.0D0
      DARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DRESLT=LANPPF(DARG1)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
 1414 CONTINUE
      DARG1=DBLE(X)
C
      DRESLT=LANXM1(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1415 CONTINUE
      DARG1=DBLE(X)
C
      DRESLT=LANXM2(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1416 CONTINUE
      DARG1=DBLE(X)
C
      DRESLT=LANDIF(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1421 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL IBCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1422 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL IBPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1423 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL IBPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1431 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ERRCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1432 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      ARG1=(ARG1-ZLOC)/ZSCALE
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ERRPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1433 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ERRPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1441 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
C
      CALL TRACDF(ARG1,ARG2,ARG3,ARG4,ARG5,RESULT)
      TERM=RESULT
      GOTO9000
C
 1442 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
C
      CALL TRAPDF(ARG1,ARG2,ARG3,ARG4,ARG5,RESULT)
      TERM=RESULT
      GOTO9000
C
 1443 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
C
      CALL TRAPPF(ARG1,ARG2,ARG3,ARG4,ARG5,RESULT)
      TERM=RESULT
      GOTO9000
C
 1451 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ARG6=SAVE5
      ARG7=SAVE6
      ARG8=SAVE7
C
      CALL GTRCDF(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,ARG8,RESULT)
      TERM=RESULT
      GOTO9000
C
 1452 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ARG6=SAVE5
      ARG7=SAVE6
      ARG8=SAVE7
C
      CALL GTRPDF(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,ARG8,RESULT)
      TERM=RESULT
      GOTO9000
C
 1453 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ARG6=SAVE5
      ARG7=SAVE6
      ARG8=SAVE7
C
      CALL GTRPPF(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,ARG8,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 2003.
 1461 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG2=INT(ARG2+0.5)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL FTCDF(ARG1,IARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1462 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG2=INT(ARG2+0.5)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL FTPDF(ARG1,IARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1463 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG2=INT(ARG2+0.5)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL FTPPF(ARG1,IARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 2003.
 1471 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL SNCDF(ARG1,ARG2,ISKNDF,RESULT)
      TERM=RESULT
      GOTO9000
C
 1472 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL SNPDF(ARG1,ARG2,ISKNDF,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1473 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL SNPPF(ARG1,ARG2,ISKNDF,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 2003.
 1481 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG2=INT(ARG2+0.5)
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL STCDF(ARG1,IARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1482 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG2=INT(ARG2+0.5)
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL STPDF(ARG1,IARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1483 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG2=INT(ARG2+0.5)
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL STPPF(ARG1,IARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER,   1995.
 1491 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL ZETCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1492 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL ZETPDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1493 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL ZETPPF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED DECEMBER, 2003.
 1501 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      IF(IMAKDF.EQ.'MEEK')THEN
        ARG1Z=ARG1/ARG2
        ARG2Z=ARG2
        ARG3Z=ARG3/ARG1
        ARG1=ARG1Z
        ARG2=ARG2Z
        ARG3=ARG3Z
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL MAKCDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1502 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      IF(IMAKDF.EQ.'MEEK')THEN
        ARG1Z=ARG1/ARG2
        ARG2Z=ARG2
        ARG3Z=ARG3/ARG1
        ARG1=ARG1Z
        ARG2=ARG2Z
        ARG3=ARG3Z
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL MAKPDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1503 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      IF(IMAKDF.EQ.'MEEK')THEN
        ARG1Z=ARG1/ARG2
        ARG2Z=ARG2
        ARG3Z=ARG3/ARG1
        ARG1=ARG1Z
        ARG2=ARG2Z
        ARG3=ARG3Z
      ENDIF
      CALL MAKPPF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1504 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      IF(IMAKDF.EQ.'MEEK')THEN
        ARG1Z=ARG1/ARG2
        ARG2Z=ARG2
        ARG3Z=ARG3/ARG1
        ARG1=ARG1Z
        ARG2=ARG2Z
        ARG3=ARG3Z
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL MAKHAZ(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1505 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      IF(IMAKDF.EQ.'MEEK')THEN
        ARG1Z=ARG1/ARG2
        ARG2Z=ARG2
        ARG3Z=ARG3/ARG1
        ARG1=ARG1Z
        ARG2=ARG2Z
        ARG3=ARG3Z
      ENDIF
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL MAKCHA(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JULY, 2004.
 1506 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL MA2CDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1507 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL MA2PDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1508 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL MA2PPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1509 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL MA2HAZ(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1510 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL MA2CHA(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH, 2004.
 1511 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LSNCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1512 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LSNPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1513 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=1.0
      IF(SAVE2.NE.CPUMIN)ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LSNPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH, 2004.
 1521 CONTINUE
      ARG1=X
      IARG1=INT(SAVE1+0.5)
      ARG2=SAVE2
      ARG3=1.0
      IF(SAVE3.NE.CPUMIN)ARG3=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LSTCDF(ARG1,IARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1522 CONTINUE
      ARG1=X
      IARG1=INT(SAVE1+0.5)
      ARG2=SAVE2
      ARG3=1.0
      IF(SAVE3.NE.CPUMIN)ARG3=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LSTPDF(ARG1,IARG1,ARG2,ARG3,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1523 CONTINUE
      ARG1=X
      IARG1=INT(SAVE1+0.5)
      ARG2=SAVE2
      ARG3=1.0
      IF(SAVE3.NE.CPUMIN)ARG3=SAVE3
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LSTPPF(ARG1,IARG1,ARG2,ARG3,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 1531 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL HERCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1532 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL HERPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1533 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL HERPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED APRIL, 2004.
 1541 CONTINUE
      DARG1=X
      DARG2=SAVE1
      DARG3=SAVE2
      DARG4=SAVE3
      CALL GWACDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1542 CONTINUE
      DARG1=X
      DARG2=SAVE1
      DARG3=SAVE2
      DARG4=SAVE3
      CALL GWAPDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1543 CONTINUE
      DARG1=X
      DARG2=SAVE1
      DARG3=SAVE2
      DARG4=SAVE3
      CALL GWAPPF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=DBLE(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 2003.
 1551 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL SDECDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1552 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL SDEPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1553 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL SDEPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE 2004
 1561 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL ADECDF(ARG1,ARG2,IADEDF,RESULT)
      TERM=RESULT
      GOTO9000
C
 1562 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL ADEPDF(ARG1,ARG2,IADEDF,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1563 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ADEPPF(ARG1,ARG2,IADEDF,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE 2004
 1571 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GALCDF(DARG1,DARG2,DARG3,IADEDF,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1572 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GALPDF(DARG1,DARG2,DARG3,IADEDF,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 1573 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GALPPF(DARG1,DARG2,DARG3,IADEDF,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE 2004
 1581 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
CCCCC CALL MAXCDF(ARG1,ARG2,RESULT)
      CALL MAXCDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
 1582 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
CCCCC CALL MAXPDF(ARG1,ARG2,RESULT)
      CALL MAXPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1583 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL MAXPPF(ARG1,ARG2,RESULT)
      CALL MAXPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE 2004
 1591 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
CCCCC CALL FERCDF(ARG1,ARG2,ARG3,RESULT)
CCCCC TERM=RESULT
      TERM=0.0
      GOTO9000
C
 1592 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
CCCCC CALL FERPDF(ARG1,ARG2,ARG3,RESULT)
CCCCC TERM=RESULT/ZSCALE
      TERM=0.0
      GOTO9000
C
 1593 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL FERPPF(ARG1,ARG2,ARG3,RESULT)
CCCCC TERM=ZLOC + ZSCALE*RESULT
      TERM=0.0
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE 2004
 1601 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL RAYCDF(ARG1,RESULT)
      TERM=RESULT
      GOTO9000
C
 1602 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL RAYPDF(ARG1,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1603 CONTINUE
      ARG1=X
      ZLOC=0.0
      IF(SAVE1.NE.CPUMIN)ZLOC=SAVE1
      ZSCALE=1.0
      IF(SAVE2.NE.CPUMIN)ZSCALE=SAVE2
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL RAYPPF(ARG1,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED AUGUST 2004
 1611 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GIGCDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1612 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GIGPDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 1613 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GIGPPF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
 1616 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GI2CDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1617 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GI2PDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 1618 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GI2PPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED AUGUST 2004
 1621 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BEICDF(DARG1,DARG2,DARG3,DARG4,IBEIDF,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1622 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BEIPDF(DARG1,DARG2,DARG3,DARG4,IBEIDF,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 1623 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BEIPPF(DARG1,DARG2,DARG3,DARG4,IBEIDF,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED AUGUST 2004
 1631 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
CCCCC CALL BEKCDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
CCCCC TERM=REAL(DRESLT)
      TERM=0.0
      GOTO9000
C
 1632 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
CCCCC CALL BEKPDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
CCCCC TERM=REAL(DRESLT)/ZSCALE
      TERM=0.0
      GOTO9000
C
 1633 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL BEKPPF(DARG1,DARG2,DARG3,DARG4,DRESLT)
CCCCC TERM=ZLOC + ZSCALE*REAL(DRESLT)
      TERM=0.0
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED AUGUST 2004
 1641 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL MCLCDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1642 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL MCLPDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 1643 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL MCLPPF(DARG1,DARG2,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER 2004
 1651 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GMCCDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1652 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GMCPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 1653 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GMCPPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER 2004
 1661 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL HBOCDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1662 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL HBOPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 1663 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL HBOPPF(DARG1,DARG2,DARG3,DRESLT)
CCCCC TERM=ZLOC + ZSCALE*REAL(DRESLT)
      TERM=0.0
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED FEBRUARY 2006
 1671 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=0.0D0
      IF(SAVE2.NE.CPUMIN)DARG3=DBLE(SAVE2)
      DARG4=1.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
C
      XPAR(1)=DARG3
      XPAR(2)=DARG4
      XPAR(3)=DARG2
      DRESLT=CDFGLO(DARG1,XPAR)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1672 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=0.0D0
      IF(SAVE2.NE.CPUMIN)DARG3=DBLE(SAVE2)
      DARG4=1.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
C
      IF(DARG4.LE.0.0D0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DARG3)/DARG4
      CALL GL5PDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT/DARG4)
      GOTO9000
C
 1673 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=0.0D0
      IF(SAVE2.NE.CPUMIN)DARG3=DBLE(SAVE2)
      DARG4=1.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
C
      XPAR(1)=DARG3
      XPAR(2)=DARG4
      XPAR(3)=DARG2
      DRESLT=QUAGLO(DARG1,XPAR)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED FEBRUARY 2006
 1681 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      DARG5=0.0D0
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
      DARG6=1.0D0
      IF(SAVE5.NE.CPUMIN)DARG6=DBLE(SAVE5)
C
      XPAR(1)=DARG5
      XPAR(2)=DARG6
      XPAR(3)=DARG2
      XPAR(4)=DARG3
      XPAR(5)=DARG4
      DRESLT=CDFWAK(DARG1,XPAR)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1682 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      DARG5=0.0D0
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
      DARG6=1.0D0
      IF(SAVE5.NE.CPUMIN)DARG6=DBLE(SAVE5)
C
      XPAR(1)=DARG5
      XPAR(2)=DARG6
      XPAR(3)=DARG2
      XPAR(4)=DARG3
      XPAR(5)=DARG4
      DRESLT=PDFWAK(DARG1,XPAR)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1683 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      DARG5=0.0D0
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
      DARG6=1.0D0
      IF(SAVE5.NE.CPUMIN)DARG6=DBLE(SAVE5)
C
      XPAR(1)=DARG5
      XPAR(2)=DARG6
      XPAR(3)=DARG2
      XPAR(4)=DARG3
      XPAR(5)=DARG4
      DRESLT=QUAWAK(DARG1,XPAR)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH 2006
 1691 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      DARG5=1.0D0
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
C
      IF(DARG5.LE.0.0D0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DARG4)/DARG5
      CALL BNOCDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1692 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      DARG5=1.0D0
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
C
      IF(DARG5.LE.0.0D0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DARG4)/DARG5
      CALL BNOPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT/DARG5)
      GOTO9000
C
 1693 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      DARG5=1.0D0
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
C
      IF(DARG5.LE.0.0D0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BNOPPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DARG4 + DARG5*DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH  2006.
 1701 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1209)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GL2CDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT/DBLE(ZSCALE))
      GOTO9000
C
 1702 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1209)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GL2PDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1703 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1209)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GL2PPF(DARG1,DARG2,DRESLT)
      DRESLT=DBLE(ZLOC) + DBLE(ZSCALE)*DRESLT
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH  2006.
 1711 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1209)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GL3CDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT/DBLE(ZSCALE))
      GOTO9000
C
 1712 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1209)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GL3PDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1713 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1209)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GL3PPF(DARG1,DARG2,DRESLT)
      DRESLT=DBLE(ZLOC) + DBLE(ZSCALE)*DRESLT
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH  2006.
 1721 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1209)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GL4CDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT/DBLE(ZSCALE))
      GOTO9000
C
 1722 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1209)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL GL4PDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1723 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1209)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL GL4PPF(DARG1,DARG2,DARG3,DRESLT)
      DRESLT=DBLE(ZLOC) + DBLE(ZSCALE)*DRESLT
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH 2006
 1731 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      DARG5=1.0D0
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
C
      IF(DARG5.LE.0.0D0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DARG4)/DARG5
      CALL ALDCDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1732 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      DARG5=1.0D0
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
C
      IF(DARG5.LE.0.0D0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DARG4)/DARG5
      CALL ALDPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT/DARG5)
      GOTO9000
C
 1733 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      DARG5=1.0D0
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
C
      IF(DARG5.LE.0.0D0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,769)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ALDPPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DARG4 + DARG5*DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY,   1996.
 1741 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(IBGEDF.EQ.'UNSH')THEN
        CALL BGECDF(ARG1,ARG2,ARG3,RESULT)
      ELSE
        CALL BG2CDF(ARG1,ARG2,ARG3,RESULT)
      ENDIF
      TERM=RESULT
      GOTO9000
C
 1742 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(IBGEDF.EQ.'UNSH')THEN
        CALL BGEPDF(ARG1,ARG2,ARG3,RESULT)
      ELSE
        CALL BG2PDF(ARG1,ARG2,ARG3,RESULT)
      ENDIF
      TERM=RESULT
      GOTO9000
C
 1743 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      IF(IBGEDF.EQ.'UNSH')THEN
        CALL BGEPPF(ARG1,ARG2,ARG3,RESULT)
      ELSE
        CALL BG2PPF(ARG1,ARG2,ARG3,RESULT)
      ENDIF
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MAY 2006
 1751 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=INT(SAVE2)
      CALL ZIPCDF(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1752 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=INT(SAVE2)
      CALL ZIPPDF(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1753 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=INT(SAVE2)
      CALL ZIPPPF(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MAY   2006
 1761 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL BTACDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1762 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL BTAPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1763 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL BTAPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MAY 2006
 1771 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ZLOC=0.0
      IF(SAVE5.NE.CPUMIN)ZLOC=SAVE5
      ZSCALE=1.0
      IF(SAVE6.NE.CPUMIN)ZSCALE=SAVE6
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LBECDF(ARG1,ARG2,ARG3,ARG4,ARG5,RESULT)
      TERM=RESULT
      GOTO9000
C
 1772 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ZLOC=0.0
      IF(SAVE5.NE.CPUMIN)ZLOC=SAVE5
      ZSCALE=1.0
      IF(SAVE6.NE.CPUMIN)ZSCALE=SAVE6
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL LBEPDF(ARG1,ARG2,ARG3,ARG4,ARG5,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 1773 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ZLOC=0.0
      IF(SAVE5.NE.CPUMIN)ZLOC=SAVE5
      ZSCALE=1.0
      IF(SAVE6.NE.CPUMIN)ZSCALE=SAVE6
      CALL LBEPPF(ARG1,ARG2,ARG3,ARG4,ARG5,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE   2006
 1781 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL LPOCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1782 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL LPOPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1783 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL LPOPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE   2006
 1791 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      CALL LCTCDF(ARG1,IARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1792 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      CALL LCTPDF(ARG1,IARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1793 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      CALL LCTPPF(ARG1,IARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE   2006
 1801 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      CALL MATCDF(ARG1,IARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1802 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      CALL MATPDF(ARG1,IARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 1803 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      CALL MATPPF(ARG1,IARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE   2006
 1811 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      IARG3=INT(SAVE2+0.5)
CCCCC CALL OCCCDF(ARG1,IARG2,IARG3,RESULT)
CCCCC TERM=RESULT
      TERM=0.0
      GOTO9000
C
 1812 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      IARG3=INT(SAVE2+0.5)
      CALL OCCPDF(ARG1,IARG2,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1813 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      IARG3=INT(SAVE2+0.5)
CCCCC CALL OCCPPF(ARG1,IARG2,IARG3,RESULT)
CCCCC TERM=RESULT
      TERM=0.0
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE   2006
 1821 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL PAPCDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1822 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL PAPPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1823 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL PAPPPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE   2006
 1831 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
CCCCC CALL NEYCDF(DARG1,DARG2,DARG3,DRESLT)
CCCCC TERM=REAL(DRESLT)
      TERM=0.0
      GOTO9000
C
 1832 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
CCCCC CALL NEYPDF(DARG1,DARG2,DARG3,DRESLT)
CCCCC TERM=REAL(DRESLT)
      TERM=0.0
      GOTO9000
C
 1833 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
CCCCC CALL NEYPPF(DARG1,DARG2,DARG3,DRESLT)
CCCCC TERM=REAL(DRESLT)
      TERM=0.0
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE   2006
 1841 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
CCCCC CALL DXGCDF(DARG1,DARG2,DARG3,DRESLT)
CCCCC TERM=REAL(DRESLT)
      TERM=0.0
      GOTO9000
C
 1842 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
CCCCC CALL DXGPDF(DARG1,DARG2,DARG3,DRESLT)
CCCCC TERM=REAL(DRESLT)
      TERM=0.0
      GOTO9000
C
 1843 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
CCCCC CALL DXGPPF(DARG1,DARG2,DARG3,DRESLT)
CCCCC TERM=REAL(DRESLT)
      TERM=0.0
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE   2006
 1851 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=INT(SAVE2+0.5)
      CALL LOSCDF(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1852 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=INT(SAVE2+0.5)
      CALL LOSPDF(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1853 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=INT(SAVE2+0.5)
      CALL LOSPPF(ARG1,ARG2,IARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE   2006
 1861 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL GLSCDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1862 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL GLSPDF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1863 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL GLSPPF(ARG1,ARG2,ARG3,RESULT)
      TERM=RESULT
      GOTO9000
C
 1871 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL GETCDF(DARG1,DARG2,DARG3,IGETDF,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1872 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL GETPDF(DARG1,DARG2,DARG3,IGETDF,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1873 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL GETPPF(DARG1,DARG2,DARG3,IGETDF,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1881 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      CALL GNBCDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1882 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      CALL GNBPDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1883 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      CALL GNBPPF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE   2006
 1891 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
CCCCC CALL PIGCDF(DARG1,DARG2,DARG3,DRESLT)
CCCCC TERM=REAL(DRESLT)
      TERM=0.0
      GOTO9000
C
 1892 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL PIGPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1893 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
CCCCC CALL PIGPPF(DARG1,DARG2,DARG3,DRESLT)
CCCCC TERM=REAL(DRESLT)
      TERM=0.0
      GOTO9000
C
 1901 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      CALL QBICDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1902 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      CALL QBIPDF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1903 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      CALL QBIPPF(ARG1,ARG2,ARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1911 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL CONCDF(DARG1,DARG2,DARG3,ICONDF,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1912 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL CONPDF(DARG1,DARG2,DARG3,ICONDF,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1913 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL CONPPF(DARG1,DARG2,DARG3,ICONDF,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1921 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      CALL LKCDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1922 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      CALL LKPDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1923 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      CALL LKPPF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1931 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL KATCDF(DARG1,DARG2,DARG3,IKATDF,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1932 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL KATPDF(DARG1,DARG2,DARG3,IKATDF,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1933 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL KATPPF(DARG1,DARG2,DARG3,IKATDF,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1941 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL DIWCDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1942 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL DIWPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1943 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL DIWPPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1944 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      CALL DIWHAZ(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JUNE   2006
 1951 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=INT(SAVE2+0.5)
      ARG4=SAVE3
      CALL GLGCDF(ARG1,ARG2,IARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1952 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=INT(SAVE2+0.5)
      ARG4=SAVE3
      CALL GLGPDF(ARG1,ARG2,IARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1953 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IARG3=INT(SAVE2+0.5)
      ARG4=SAVE3
      CALL GLGPPF(ARG1,ARG2,IARG3,ARG4,RESULT)
      TERM=RESULT
      GOTO9000
C
 1961 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      IARG5=INT(SAVE4+0.5)
      CALL GNTCDF(ARG1,ARG2,ARG3,ARG4,IARG5,RESULT)
      TERM=RESULT
      GOTO9000
C
 1962 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      IARG5=INT(SAVE4+0.5)
      CALL GNTPDF(ARG1,ARG2,ARG3,ARG4,IARG5,RESULT)
      TERM=RESULT
      GOTO9000
C
 1963 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      IARG5=INT(SAVE4+0.5)
      CALL GNTPPF(ARG1,ARG2,ARG3,ARG4,IARG5,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED FEBRUARY 2007
 1971 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL TOPCDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1972 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL TOPPDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 1973 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL TOPPPF(DARG1,DARG2,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED FEBRUARY 2007
 1981 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      DARG5=1.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
      CALL RGTCDF(DARG1,DARG2,DARG3,DARG4,DARG5,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1982 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      DARG5=1.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
      CALL RGTPDF(DARG1,DARG2,DARG3,DARG4,DARG5,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1983 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      DARG5=1.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
C
      IF(DARG4.EQ.DARG5)THEN
        TERM=REAL(DARG4)
      ELSEIF(DARG4.GT.DARG5)THEN
        DARG6=DARG4
        DARG4=DARG5
        DARG5=DARG4
      ENDIF
C
      CALL RGTPPF(DARG1,DARG2,DARG3,DRESLT)
      DRESLT=DARG4 + (DARG5-DARG4)*DRESLT
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED FEBRUARY 2007
 1991 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      DARG5=1.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
      CALL GTLCDF(DARG1,DARG2,DARG3,DARG4,DARG5,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1992 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      DARG5=1.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
      CALL GTLPDF(DARG1,DARG2,DARG3,DARG4,DARG5,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 1993 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      DARG5=1.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
C
      IF(DARG4.EQ.DARG5)THEN
        TERM=REAL(DARG4)
      ELSEIF(DARG4.GT.DARG5)THEN
        DARG6=DARG4
        DARG4=DARG5
        DARG5=DARG4
      ENDIF
C
      CALL GTLPPF(DARG1,DARG2,DARG3,DRESLT)
      DRESLT=DARG4 + (DARG5-DARG4)*DRESLT
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER 2007
 3001 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL SLOCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 3002 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL SLOPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 3003 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL SLOPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER 2007
 3011 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL OGICDF(DBLE(ARG1),DBLE(ARG2),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3012 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL OGIPDF(DBLE(ARG1),DBLE(ARG2),DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 3013 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL OGIPPF(DBLE(ARG1),DBLE(ARG2),DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER  2007.
 3021 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      CALL TSSCDF(ARG1,ARG2,ARG3,ZLOC,ZSCALE,RESULT)
      TERM=RESULT
      GOTO9000
C
 3022 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4 
C
      CALL TSSPDF(ARG1,ARG2,ARG3,ZLOC,ZSCALE,RESULT)
      TERM=RESULT
      GOTO9000
C
 3023 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      CALL TSSPPF(ARG1,ARG2,ARG3,ZLOC,ZSCALE,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER  2007.
 3031 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      CALL TSOCDF(DARG1,DARG2,DARG3,DBLE(ZLOC),DBLE(ZSCALE),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3032 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      CALL TSOPDF(DARG1,DARG2,DARG3,DBLE(ZLOC),DBLE(ZSCALE),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3033 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      CALL TSOPPF(DARG1,DARG2,DARG3,DBLE(ZLOC),DBLE(ZSCALE),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3041 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ARG6=SAVE5
      ARG7=SAVE6
C
      CALL UTSCDF(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,RESULT)
      TERM=RESULT
      GOTO9000
C
 3042 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ARG6=SAVE5
      ARG7=SAVE6
C
      CALL UTSPDF(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,RESULT)
      TERM=RESULT
      GOTO9000
C
 3043 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      ARG5=SAVE4
      ARG6=SAVE5
      ARG7=SAVE6
C
      CALL UTSPPF(ARG1,ARG2,ARG3,ARG4,ARG5,ARG6,ARG7,RESULT)
      TERM=RESULT
      GOTO9000
C
 3051 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      DARG5=1.0D0
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
C
      CALL DPUCDF(DARG1,DARG2,DARG3,DARG4,DARG5,DRESLT)
      TERM=DBLE(DRESLT)
      GOTO9000
C
 3052 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      DARG5=1.0D0
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
C
      CALL DPUPDF(DARG1,DARG2,DARG3,DARG4,DARG5,DRESLT)
      TERM=DBLE(DRESLT)
      GOTO9000
C
 3053 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=0.0D0
      IF(SAVE3.NE.CPUMIN)DARG4=DBLE(SAVE3)
      DARG5=1.0D0
      IF(SAVE4.NE.CPUMIN)DARG5=DBLE(SAVE4)
C
      CALL DPUPPF(DARG1,DARG2,DARG3,DARG4,DARG5,DRESLT)
      TERM=DBLE(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER  2007.
 3061 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU2CDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3062 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU2PDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3063 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BU2PPF(DARG1,DARG2,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER  2007.
 3071 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU3CDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3072 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU3PDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3073 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BU3PPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER  2007.
 3081 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU4CDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3082 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
CCCCC CALL BU4PDF(DARG1,DARG2,DARG3,DRESLT)
CCCCC TERM=REAL(DRESLT)/DBLE(ZSCALE)
      TERM=0.0
      GOTO9000
C
 3083 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BU4PPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER  2007.
 3091 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU5CDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3092 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU5PDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3093 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BU5PPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER  2007.
 3101 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU6CDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3102 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU6PDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3103 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BU6PPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER  2007.
 3111 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU7CDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3112 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU7PDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3113 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BU7PPF(DARG1,DARG2,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER  2007.
 3121 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU8CDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3122 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU8PDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3123 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BU8PPF(DARG1,DARG2,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER  2007.
 3131 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU9CDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3132 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BU9PDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3133 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BU9PPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER  2007.
 3141 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL B10CDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3142 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL B10PDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3143 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL B10PPF(DARG1,DARG2,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER  2007.
 3151 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL B11CDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3152 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL B11PDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3153 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL B11PPF(DARG1,DARG2,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED OCTOBER  2007.
 3161 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL B12CDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3162 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL B12PDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3163 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL B12PPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED SEPTEMBER  2007.
 3171 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=(SAVE4-SAVE3)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL KUMCDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3172 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=(SAVE4-SAVE3)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL KUMPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 3173 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=(SAVE4-SAVE3)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL KUMPPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED DECEMBER,   2007.
 3181 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,998)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL RPOCDF(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
 3182 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,998)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL RPOPDF(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 3183 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,998)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL RPOPPF(ARG1,ARG2,RESULT)
      TERM=ZLOC + ZSCALE*RESULT
      GOTO9000
C
 3184 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,998)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL RPOHAZ(ARG1,ARG2,RESULT)
      TERM=RESULT/ZSCALE
      GOTO9000
C
 3185 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3-ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,998)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      ARG1=(ARG1-ZLOC)/ZSCALE
      CALL RPOCHA(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY 2008
 3191 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=(SAVE4-SAVE3)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL MMXCDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3192 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=(SAVE4-SAVE3)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL MMXPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 3193 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=(SAVE4-SAVE3)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
CCCCC CALL MMXPPF(DARG1,DARG2,DARG3,DRESLT)
CCCCC TERM=ZLOC + ZSCALE*REAL(DRESLT)
      TERM=0.0
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY 2008.
 3201 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=(SAVE3-SAVE2)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL LEXCDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3202 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=(SAVE3-SAVE2)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL LEXPDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 3203 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=(SAVE3-SAVE2)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LEXPPF(DARG1,DARG2,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
 3204 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=(SAVE3-SAVE2)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL LEXHAZ(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 3205 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=(SAVE3-SAVE2)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL LEXCHA(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY  2008.
 3211 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL MUTCDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3212 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL MUTPDF(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3213 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL MUTPPF(DARG1,DARG2,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
 3214 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL MUTHAZ(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3215 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL MUTCHA(DARG1,DARG2,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH  2008.
 3221 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL TNPCDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3222 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL TNPPDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3223 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL TNPPPF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MARCH  2008.
 3231 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BFRCDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3232 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BFRPDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)/DBLE(ZSCALE)
      GOTO9000
C
 3233 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BFRPPF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
 3234 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BFRCHA(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3235 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=SAVE5 - ZLOC
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL BFRHAZ(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT/DBLE(ZSCALE))
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY 2008.
 3241 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=(SAVE5-ZLOC)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL LE3CDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3242 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=(SAVE5-ZLOC)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL LE3PDF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 3243 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=(SAVE5-SAVE4)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL LE3PPF(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
 3244 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=(SAVE5-ZLOC)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL LE3HAZ(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 3245 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      ZLOC=0.0
      IF(SAVE4.NE.CPUMIN)ZLOC=SAVE4
      ZSCALE=1.0
      IF(SAVE5.NE.CPUMIN)ZSCALE=(SAVE5-ZLOC)
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
      CALL LE3CHA(DARG1,DARG2,DARG3,DARG4,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MAY,   2008.
 3251 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      CALL KAPCDF(DARG1,DARG2,DARG3,DBLE(ZLOC),DBLE(ZSCALE),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3252 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      CALL KAPPDF(DARG1,DARG2,DARG3,DBLE(ZLOC),DBLE(ZSCALE),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3253 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
      CALL KAPPPF(DARG1,DARG2,DARG3,DBLE(ZLOC),DBLE(ZSCALE),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED MAY,   2008.
 3261 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      CALL PE3CDF(DARG1,DARG2,DBLE(ZLOC),DBLE(ZSCALE),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3262 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
C
      CALL PE3PDF(DARG1,DARG2,DBLE(ZLOC),DBLE(ZSCALE),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3263 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      ZLOC=0.0
      IF(SAVE2.NE.CPUMIN)ZLOC=SAVE2
      ZSCALE=1.0
      IF(SAVE3.NE.CPUMIN)ZSCALE=SAVE3
      CALL PE3PPF(DARG1,DARG2,DBLE(ZLOC),DBLE(ZSCALE),DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JULY,   2010.
 3271 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      DARG5=DBLE(SAVE4)
      DARG6=DBLE(SAVE5)
C
      CALL EEWCDF(DARG1,DARG2,DARG3,DARG4,DARG5,DARG6,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3272 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      DARG5=DBLE(SAVE4)
      DARG6=DBLE(SAVE5)
C
      CALL EEWPDF(DARG1,DARG2,DARG3,DARG4,DARG5,DARG6,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3273 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      DARG4=DBLE(SAVE3)
      DARG5=DBLE(SAVE4)
      DARG6=DBLE(SAVE5)
C
      CALL EEWPPF(DARG1,DARG2,DARG3,DARG4,DARG5,DARG6,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED AUGUST,   2010.
 3281 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL BFWCDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3282 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL BFWPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 3283 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL BFWPPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED JANUARY,   2011.
 3291 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL ATNCDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)
      GOTO9000
C
 3292 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL ATNPDF(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
 3293 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      CALL ATNPPF(DARG1,DARG2,DARG3,DRESLT)
      TERM=ZLOC + ZSCALE*REAL(DRESLT)
      GOTO9000
C
 3294 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
      DARG3=DBLE(SAVE2)
      ZLOC=0.0
      IF(SAVE3.NE.CPUMIN)ZLOC=SAVE3
      ZSCALE=1.0
      IF(SAVE4.NE.CPUMIN)ZSCALE=SAVE4
C
      IF(ZSCALE.LE.0.0)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,599)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
C
      DARG1=(DARG1-DBLE(ZLOC))/DBLE(ZSCALE)
C
      CALL ATNHAZ(DARG1,DARG2,DARG3,DRESLT)
      TERM=REAL(DRESLT)/ZSCALE
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2000 CONTINUE
      DARG1=DBLE(X)
      IARG2=1
      RESULT=DFRENC(DARG1,IARG2)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2010 CONTINUE
      DARG1=DBLE(X)
      IARG2=2
      RESULT=DFRENC(DARG1,IARG2)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2020 CONTINUE
      DARG1=DBLE(X)
      IARG2=3
      RESULT=DFRENC(DARG1,IARG2)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2030 CONTINUE
      DARG1=DBLE(X)
      IARG2=4
      RESULT=DFRENC(DARG1,IARG2)
      TERM=RESULT
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2100 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=REAL(PEQ(Z1))
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2105 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=AIMAG(PEQ(Z1))
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2110 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=REAL(PEQ1(Z1))
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2115 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=AIMAG(PEQ1(Z1))
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2120 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=REAL(PLEM(Z1))
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2125 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=AIMAG(PLEM(Z1))
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2130 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=REAL(PLEM1(Z1))
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2135 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=AIMAG(PLEM1(Z1))
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2200 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL JACELL(ARG1,ARG2,RESLT1,RESLT2,RESLT3)
      TERM=RESLT1
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2210 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL JACELL(ARG1,ARG2,RESLT1,RESLT2,RESLT3)
      TERM=RESLT2
      GOTO9000
C
CCCCC FOLLOWING SECTION ADDED NOVEMBER, 1994.
 2220 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL JACELL(ARG1,ARG2,RESLT1,RESLT2,RESLT3)
      TERM=RESLT3
      GOTO9000
C
 5000 CONTINUE
      ARG=X
      TERM=C00
      GOTO9000
C
 5010 CONTINUE
      ARG=X
      TERM=(C11*ARG)
      GOTO9000
C
 5020 CONTINUE
      ARG=X
      TERM=(C22*ARG**2)+C20
      GOTO9000
C
 5030 CONTINUE
      ARG=X
      TERM=(C33*ARG**3)+(C31*ARG)
      GOTO9000
C
 5040 CONTINUE
      ARG=X
      TERM=(C44*ARG**4)+(C42*ARG**2)+C40
      GOTO9000
C
 5050 CONTINUE
      ARG=X
      TERM=(C55*ARG**5)+(C53*ARG**3)+(C51*ARG)
      GOTO9000
C
 5060 CONTINUE
      ARG=X
      TERM=(C66*ARG**6)+(C64*ARG**4)+(C62*ARG**2)+C60
      GOTO9000
C
 5070 CONTINUE
      ARG=X
      TERM=(C77*ARG**7)+(C75*ARG**5)+(C73*ARG**3)+(C71*ARG)
      GOTO9000
C
 5080 CONTINUE
      ARG=X
      TERM=(C88*ARG**8)+(C86*ARG**6)+(C84*ARG**4)+(C82*ARG**2)
     1            +C80
      GOTO9000
C
 5090 CONTINUE
      ARG=X
      TERM=(C99*ARG**9)+(C97*ARG**7)+(C95*ARG**5)+(C93*ARG**3)
     1            +(C91*ARG)
      GOTO9000
C
 5100 CONTINUE
      ARG=X
      TERM=(C1010*ARG**10)+(C108*ARG**8)+(C106*ARG**6)
     1            +(C104*ARG**4)+(C102*ARG**2)+C100
      GOTO9000
C
CCCCC JULY 1995.  ADD CHEBCHEV T POLYNOMIAL
 5110 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL CHEBT(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC JULY 1995.  ADD CHEBCHEV U POLYNOMIAL
 5120 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL CHEBU(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC JULY 1995.  ADD NORMALIZED LAGUERRE POLYNOMIAL
 5130 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL NRMLAG(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC JULY 1995.  ADD JACOBI POLYNOMIAL
 5140 CONTINUE
      DARG1=DBLE(X)
      IARG1=INT(SAVE1+0.5)
      DARG2=DBLE(SAVE2)
      DARG3=DBLE(SAVE3)
C
C  NOTE THAT JACOBP RETURNS DERIVATIVE AND RELATIVE OR ABSOLUTE
C  ERROR TERMS.  AT THIS POINT, DATAPLOT DOESN'T MAKE USE OF THIS
C  INFORMATION.  HOWEVER, LEAVE OUTPUT ARGUMENTS IN CASE WE DECIDE
C  TO IMPLEMENT SOME THINGS LATER.
C
      CALL JACOBP(IARG1,DARG2,DARG3,DARG1,DRESLT,DRSLT2,
     1E,ED,IOUT1,IOUT2)
      TERM=SNGL(DRESLT)
      GOTO9000
C
CCCCC JULY 1995.  ADD ULTRASPHERICAL (OR GEGENBAUER) POLYNOMIAL
 5150 CONTINUE
      DARG1=DBLE(X)
      IARG1=INT(SAVE1+0.5)
      DARG2=DBLE(SAVE2-0.5)
      DARG3=DBLE(SAVE2-0.5)
C
C  NOTE THAT JACOBP RETURNS DERIVATIVE AND RELATIVE OR ABSOLUTE
C  ERROR TERMS.  AT THIS POINT, DATAPLOT DOESN'T MAKE USE OF THIS
C  INFORMATION.  HOWEVER, LEAVE OUTPUT ARGUMENTS IN CASE WE DECIDE
C  TO IMPLEMENT SOME THINGS LATER.
C
      CALL JACOBP(IARG1,DARG2,DARG3,DARG1,DRESLT,DRSLT2,
     1E,ED,IOUT1,IOUT2)
C
      DTERM1=DGAMMA(DBLE(SAVE2+0.5))
      DTERM2=DGAMMA(DBLE(2.*SAVE2+REAL(IARG1)))
      DTERM3=DGAMR(DBLE(2.0*SAVE2))
      DTERM4=DGAMR(DBLE(SAVE2+REAL(IARG1)+0.5))
      DTERM5=DTERM1*DTERM2*DTERM3*DTERM4
      DTERM5=DTERM5*DRESLT
C
      TERM=SNGL(DTERM5)
      GOTO9000
C
CCCCC JULY 1995.  ADD GENERALIZED LAGUERRE POLYNOMIAL
 5160 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      CALL LAGUEL(ARG1,ARG2,ARG3,'NONO',RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC JULY 1995.  ADD NORMALIZED GENERALIZED LAGUERRE POLYNOMIAL
C5170 CONTINUE
CCCCC ARG1=X
CCCCC ARG2=SAVE1
CCCCC ARG3=SAVE2
CCCCC CALL LAGUEL(ARG1,ARG2,ARG3,'NORM',RESULT)
CCCCC TERM=RESULT
CCCCC GOTO9000
C
CCCCC JULY 1995.  ADD LEGENDRE POLYNOMIAL (NORMALIZED)
CCCCC NOTE THAT IN THIS CASE THE INPUT IS THETA (I.E., THE
CCCCC ANGLE) RATHER THAN X.  THIS IS BECAUSE USING THETA GIVES
CCCCC BETTER ACCURACY.
 5180 CONTINUE
      DARG1=DBLE(X)
      IF(IANGLU.EQ.'DEGR')DARG1=DARG1*DPI/180.D0
C
      IF(DARG1.LT.-DPI .OR. DARG1.GT.DPI)THEN
        WRITE(ICOUT,5181)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5182)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
      ISWTCH=0
      IF(DARG1.GT.(DPI/2.D0))ISWTCH=1
      IF(ISWTCH.EQ.1)DARG1=DPI-DARG1
 5181 FORMAT('***** ERROR FOR NRMLEG.  THE FIRST INPUT ARGUMENT IS ',
     1'OUTSIDE THE ALLOWABLE (-PI,PI) INTERVAL.')
 5182 FORMAT('      IT HAS THE VALUE ',E15.7)
      IARG1=INT(SAVE1+0.5)
      IF(IARG1.LT.0)THEN
        WRITE(ICOUT,5183)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5184)IARG1
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5183 FORMAT('***** ERROR FOR NRMLEG.  THE SECOND INPUT ARGUMENT IS ',
     1'NEGATIVE.')
 5184 FORMAT('      IT HAS THE VALUE ',I15)
C
      IARG2=0
      IARG3=2
      CALL DXNRMP(IARG1,IARG2,IARG2,DARG1,IARG3,DPN,IPN,ISIG,IERR2)
      IF(ISWTCH.EQ.1)DPN(1)=DPN(1)*(-1.D0)**(IARG1+IARG2)
      TERM=0.0
      IF(IERR2.EQ.0)THEN
        DRESLT=DPN(1)
        IF(IPN(1).EQ.0)THEN
          IF(ABS(DRESLT).GT.DBLE(R1MACH(2)))THEN
            IF(DRESLT.GE.0.D0)TERM=R1MACH(2)
            IF(DRESLT.LT.0.D0)TERM=-R1MACH(2)
          ELSE
            TERM=SNGL(DRESLT)
          ENDIF
        ELSE
          IF(IPN(1).GT.0)THEN
            TERM=R1MACH(2)
            WRITE(ICOUT,5185)
            CALL DPWRST('XXX','BUG ')
          ELSE
            TERM=0.
            WRITE(ICOUT,5189)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ELSEIF(IERR2.EQ.212 .OR. IERR2.EQ.213)THEN
        TERM=0.0
        WRITE(ICOUT,5186)
        CALL DPWRST('XXX','BUG ')
      ELSEIF(IERR2.GE.201.AND.IERR2.LE.204)THEN
        TERM=0.0
        WRITE(ICOUT,5187)
        CALL DPWRST('XXX','BUG ')
      ELSE
        WRITE(ICOUT,5188)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
      ENDIF
      GOTO9000
 5185 FORMAT('***** WARNING FROM NRMLEG.  CALCULATED VALUE OUTSIDE ',
     1'VALID MACHINE RANGE.  VALUE SET TO MACHINE MAXIMUM.')
 5186 FORMAT('***** ERROR FROM NRMLEG.  INVALID INPUT.')
 5187 FORMAT('***** ERROR FROM NRMLEG.  INVALID DXSET, CONTACT YOUR ',
     1'LOCAL SITE INSTALLER.')
 5188 FORMAT('***** ERROR FROM NRMLEG.  UNABLE TO PERFORM THE ',
     1'CALCULATIONS CORRECTLY, OUTPUT SET TO ZERO.')
 5189 FORMAT('***** WARNING FROM NRMLEG.  CALCULATED VALUE OUTSIDE ',
     1'VALID MACHINE RANGE.  VALUE SET TO 0.')
C
CCCCC JULY 1995.  ADD ASSOCIATED LEGENDRE POLYNOMIAL (NORMALIZED)
CCCCC NOTE THAT IN THIS CASE THE INPUT IS THEATA (I.E., THE
CCCCC ANGLE) RATHER THAN X.  THIS IS BECAUSE USING THETA GIVES
CCCCC BETTER ACCURACY.
 5200 CONTINUE
      DARG1=DBLE(X)
      IF(IANGLU.EQ.'DEGR')DARG1=DARG1*DPI/180.D0
C
      IF(DARG1.LT.-DPI.OR.DARG1.GT.DPI)THEN
        WRITE(ICOUT,5201)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5202)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5201 FORMAT('***** ERROR FOR NRMLEG.  THE FIRST INPUT ARGUMENT IS ',
     1'OUTSIDE THE ALLOWABLE (-DPI,DPI) INTERVAL.')
 5202 FORMAT('      IT HAS THE VALUE ',E15.7)
      ISWTCH=0
      IF(DARG1.GT.(DPI/2.D0))ISWTCH=1
      IF(ISWTCH.EQ.1)DARG1=DPI-DARG1
C
      IARG1=INT(SAVE1+0.5)
      IF(IARG1.LT.0)THEN
        WRITE(ICOUT,5203)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5204)IARG1
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5203 FORMAT('***** ERROR FOR NRMLEG.  THE SECOND INPUT ARGUMENT IS ',
     1'NEGATIVE.')
 5204 FORMAT('      IT HAS THE VALUE ',I15)
C
      IARG2=INT(SAVE2+0.5)
      IF(IARG2.LT.0)THEN
        WRITE(ICOUT,5213)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5204)IARG1
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5213 FORMAT('***** ERROR FOR NRMLEG.  THE THIRD INPUT ARGUMENT IS ',
     1'NEGATIVE.')
      IARG3=IARG2
      IARG4=2
      CALL DXNRMP(IARG1,IARG2,IARG3,DARG1,IARG4,DPN,IPN,ISIG,IERR2)
      IF(ISWTCH.EQ.1)DPN(1)=DPN(1)*(-1.D0)**(IARG1+IARG2)
      TERM=0.0
      IF(IERR2.EQ.0)THEN
        DRESLT=DPN(1)
        IF(IPN(1).EQ.0)THEN
          IF(ABS(DRESLT).GT.DBLE(R1MACH(2)))THEN
            IF(DRESLT.GE.0.D0)TERM=R1MACH(2)
            IF(DRESLT.LT.0.D0)TERM=-R1MACH(2)
          ELSE
            TERM=SNGL(DRESLT)
          ENDIF
        ELSE
          IF(IPN(1).GT.0)THEN
            TERM=R1MACH(2)
            WRITE(ICOUT,5205)
            CALL DPWRST('XXX','BUG ')
          ELSE
            TERM=0.
            WRITE(ICOUT,5209)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ELSEIF(IERR2.EQ.212 .OR. IERR2.EQ.213)THEN
        TERM=0.0
        WRITE(ICOUT,5206)
        CALL DPWRST('XXX','BUG ')
      ELSEIF(IERR2.GE.201.AND.IERR2.LE.204)THEN
        TERM=0.0
        WRITE(ICOUT,5207)
        CALL DPWRST('XXX','BUG ')
      ELSE
        WRITE(ICOUT,5208)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
      ENDIF
      GOTO9000
 5205 FORMAT('***** WARNING FROM NRMLEG.  CALCULATED VALUE OUTSIDE ',
     1'VALID MACHINE RANGE.  VALUE SET TO MACHINE MAXIMUM.')
 5206 FORMAT('***** ERROR FROM NRMLEG.  INVALID INPUT.')
 5207 FORMAT('***** ERROR FROM NRMLEG.  INVALID DXSET, CONTACT YOUR',
     1' LOCAL SITE INSTALLER.')
 5208 FORMAT('***** ERROR FROM NRMLEG.  UNABLE TO PERFORM THE ',
     1'CALCULATIONS CORRECTLY, OUTOUT SET TO ZERO.')
 5209 FORMAT('***** WARNING FROM NRMLEG.  CALCULATED VALUE OUTSIDE ',
     1'VALID MACHINE RANGE.  VALUE SET TO 0.')
C
CCCCC JULY 1995.  ADD ASSOCIATED LEGENDRE FUNCTION OF THE FIRST KIND.
CCCCC REDUCES TO LEGENDRE FUNCTION OF FIRST KIND IF M NOT SPECIFIED
CCCCC (OR IS EQUAL TO ZERO).
CCCCC NOTE THAT IN THIS CASE THE INPUT IS THEATA (I.E., THE
CCCCC ANGLE) RATHER THAN X.  THIS IS BECAUSE USING THETA GIVES
CCCCC BETTER ACCURACY.
 5220 CONTINUE
      DARG1=DBLE(X)
      IF(IANGLU.EQ.'DEGR')DARG1=DARG1*DPI/180.D0
C
      IF(DARG1.LT.0.D0.OR.DARG1.GE.DPI/2.0D0)THEN
        WRITE(ICOUT,5221)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5222)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5221 FORMAT('***** ERROR FOR LEGP.  THE FIRST INPUT ARGUMENT IS ',
     1'OUTSIDE THE ALLOWABLE (0,PI/2) INTERVAL.')
 5222 FORMAT('      IT HAS THE VALUE ',E15.7)
C
      DARG2=DBLE(SAVE1)
      IF(DARG2.LT.-0.5D0)THEN
        WRITE(ICOUT,5223)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5224)DARG2
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5223 FORMAT('***** ERROR FOR LEGP.  THE SECOND INPUT ARGUMENT IS ',
     1'LESS THAN -0.5.')
 5224 FORMAT('      IT HAS THE VALUE ',I15)
C
      IF(SAVE2.EQ.CPUMIN)THEN
        IARG2=0
      ELSE
        IARG2=INT(SAVE2+0.5)
      ENDIF
      IARG1=0
      IARG3=IARG2
      IARG4=3
      IF(DARG2.LT.0.D0)IARG4=1
      IF(IARG2.LT.0)THEN
        IARG2=-IARG2
        IARG3=IARG2
        IARG4=1
      ENDIF
      CALL DXLEGF(DARG2,IARG1,IARG2,IARG3,DARG1,IARG4,DPN,IPN,IERR2)
      TERM=0.0
      IF(IERR2.EQ.0)THEN
        DRESLT=DPN(1)
        IF(IPN(1).EQ.0)THEN
          IF(DRESLT.GT.R1MACH(2))TERM=R1MACH(2)
          IF(DRESLT.LE.R1MACH(2))TERM=SNGL(DRESLT)
        ELSE
          TERM=R1MACH(2)
          WRITE(ICOUT,5225)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ELSEIF(IERR2.EQ.212 .OR. IERR2.EQ.213)THEN
        TERM=0.0
        WRITE(ICOUT,5226)
        CALL DPWRST('XXX','BUG ')
      ELSEIF(IERR2.GE.201.AND.IERR2.LE.204)THEN
        TERM=0.0
        WRITE(ICOUT,5227)
        CALL DPWRST('XXX','BUG ')
      ELSE
        WRITE(ICOUT,5228)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
      ENDIF
      GOTO9000
 5225 FORMAT('***** WARNING FROM LEGP.  CALCULATED VALUE OUTSIDE ',
     1'VALID MACHINE RANGE.  VALUE SET TO MACHINE MAXIMUM.')
 5226 FORMAT('***** ERROR FROM LEGP.  INVALID INPUT.')
 5227 FORMAT('***** ERROR FROM LEGP.  INVALID DXSET, CONTACT YOUR ',
     1'LOCAL SITE INSTALLER.')
 5228 FORMAT('***** ERROR FROM LEGP.  UNABLE TO PERFORM THE ',
     1'CALCULATIONS CORRECTLY, OUTOUT SET TO ZERO.')
C
CCCCC JULY 1995.  ADD ASSOCIATED LEGENDRE FUNCTION OF THE SECOND KIND.
CCCCC REDUCES TO LEGENDRE FUNCTION OF FIRST KIND IF M NOT SPECIFIED
CCCCC (OR IS EQUAL TO ZERO).
CCCCC NOTE THAT IN THIS CASE THE INPUT IS THEATA (I.E., THE
CCCCC ANGLE) RATHER THAN X.  THIS IS BECAUSE USING THETA GIVES
CCCCC BETTER ACCURACY.
 5240 CONTINUE
      DARG1=DBLE(X)
      IF(IANGLU.EQ.'DEGR')DARG1=DARG1*DPI/180.D0
C
      IF(DARG1.LE.0.D0.OR.DARG1.GE.DPI/2.D0)THEN
        WRITE(ICOUT,5241)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5242)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5241 FORMAT('***** ERROR FOR LEGQ.  THE FIRST INPUT ARGUMENT IS ',
     1'OUTSIDE THE ALLOWABLE (0,PI/2) INTERVAL.')
 5242 FORMAT('      IT HAS THE VALUE ',E15.7)
C
      DARG2=DBLE(SAVE1)
      IF(DARG2.LT.-0.5D0)THEN
        WRITE(ICOUT,5243)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5244)DARG2
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5243 FORMAT('***** ERROR FOR LEGQ.  THE SECOND INPUT ARGUMENT IS ',
     1'LESS THAN -0.5.')
 5244 FORMAT('      IT HAS THE VALUE ',I15)
C
      IF(SAVE2.EQ.CPUMIN)THEN
        IARG2=0
      ELSE
        IARG2=INT(SAVE2+0.5)
      ENDIF
      IF(IARG2.LT.0)THEN
        WRITE(ICOUT,5253)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5254)SAVE2
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5253 FORMAT('***** ERROR FOR LEGQ.  THE THIRD INPUT ARGUMENT IS ',
     1'NEGATIVE.')
 5254 FORMAT('      IT HAS THE VALUE ',E15.7)
C
      IARG1=0
      IARG3=IARG2
      IARG4=2
      CALL DXLEGF(DARG2,IARG1,IARG2,IARG3,DARG1,IARG4,DPN,IPN,IERR2)
      TERM=0.0
      IF(IERR2.EQ.0)THEN
        DRESLT=DPN(1)
        IF(IPN(1).EQ.0)THEN
          IF(DRESLT.GT.R1MACH(2))TERM=R1MACH(2)
          IF(DRESLT.LE.R1MACH(2))TERM=SNGL(DRESLT)
        ELSE
          TERM=R1MACH(2)
          WRITE(ICOUT,5245)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ELSEIF(IERR2.EQ.212 .OR. IERR2.EQ.213)THEN
        TERM=0.0
        WRITE(ICOUT,5246)
        CALL DPWRST('XXX','BUG ')
      ELSEIF(IERR2.GE.201.AND.IERR2.LE.204)THEN
        TERM=0.0
        WRITE(ICOUT,5247)
        CALL DPWRST('XXX','BUG ')
      ELSE
        WRITE(ICOUT,5248)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
      ENDIF
      GOTO9000
 5245 FORMAT('***** WARNING FROM LEGQ.  CALCULATED VALUE OUTSIDE ',
     1'VALID MACHINE RANGE.  VALUE SET TO MACHINE MAXIMUM.')
 5246 FORMAT('***** ERROR FROM LEGQ.  INVALID INPUT.')
 5247 FORMAT('***** ERROR FROM LEGQ.  INVALID DXSET, CONTACT YOUR ',
     1'LOCAL SITE INSTALLER.')
 5248 FORMAT('***** ERROR FROM LEGQ.  UNABLE TO PERFORM THE ',
     1'CALCULATIONS CORRECTLY, OUTOUT SET TO ZERO.')
C
CCCCC JULY 1995.  ADD ASSOCIATED LEGENDRE POLYNOMIAL OF THE FIRST KIND.
CCCCC REDUCES TO LEGENDRE POLYNOMIAL OF FIRST KIND IF M NOT SPECIFIED
CCCCC (OR IS EQUAL TO ZERO).  THIS IS THE UNNORMALIZED CASE.
CCCCC NOTE THAT IN THIS CASE THE INPUT IS THEATA (I.E., THE
CCCCC ANGLE) RATHER THAN X.  THIS IS BECAUSE USING THETA GIVES
CCCCC BETTER ACCURACY.
 5280 CONTINUE
      DARG1=DBLE(X)
      IF(IANGLU.EQ.'DEGR')DARG1=DARG1*DPI/180.D0
C
      IF(DARG1.LE.-DPI.OR.DARG1.GE.DPI)THEN
        WRITE(ICOUT,5281)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5282)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5281 FORMAT('***** ERROR FOR LEGENDRE.  THE FIRST INPUT ARGUMENT IS ',
     1'OUTSIDE THE ALLOWABLE (-PI,PI) INTERVAL.')
 5282 FORMAT('      IT HAS THE VALUE ',E15.7)
      ISWTCH=0
      IF(DARG1.GT.(DPI/2.D0))ISWTCH=1
      IF(ISWTCH.EQ.1)DARG1=DPI-DARG1
C
      ITEMP=INT(SAVE1+0.5)
      DARG2=DBLE(ITEMP)
      IF(DARG2.LT.-0.1D0)THEN
        WRITE(ICOUT,5283)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5284)DARG2
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5283 FORMAT('***** ERROR FOR LEGENDRE.  THE SECOND INPUT ARGUMENT IS',
     1' NEGATIVE.')
 5284 FORMAT('      IT HAS THE VALUE ',I15)
C
      IF(SAVE2.EQ.CPUMIN)THEN
        IARG2=0
      ELSE
        IARG2=INT(SAVE2+0.5)
      ENDIF
      IARG1=0
      IARG3=IARG2
      IARG4=3
      CALL DXLEGF(DARG2,IARG1,IARG2,IARG3,DARG1,IARG4,DPN,IPN,IERR2)
      IF(ISWTCH.EQ.1)DPN(1)=DPN(1)*(-1.D0)**(INT(DARG2)+IARG2)
      TERM=0.0
      IF(IERR2.EQ.0)THEN
        DRESLT=DPN(1)
        IF(IPN(1).EQ.0)THEN
          IF(DRESLT.GT.R1MACH(2))TERM=R1MACH(2)
          IF(DRESLT.LE.R1MACH(2))TERM=SNGL(DRESLT)
        ELSE
          TERM=R1MACH(2)
          WRITE(ICOUT,5285)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ELSEIF(IERR2.EQ.212 .OR. IERR2.EQ.213)THEN
        TERM=0.0
        WRITE(ICOUT,5286)
        CALL DPWRST('XXX','BUG ')
      ELSEIF(IERR2.GE.201.AND.IERR2.LE.204)THEN
        TERM=0.0
        WRITE(ICOUT,5287)
        CALL DPWRST('XXX','BUG ')
      ELSE
        WRITE(ICOUT,5288)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
      ENDIF
      GOTO9000
 5285 FORMAT('***** WARNING FROM LEGENDRE.  CALCULATED VALUE OUTSIDE ',
     1'VALID MACHINE RANGE.  VALUE SET TO MACHINE MAXIMUM.')
 5286 FORMAT('***** ERROR FROM LEGENDRE.  INVALID INPUT.')
 5287 FORMAT('***** ERROR FROM LEGENDRE.  INVALID DXSET, CONTACT YOUR',
     1' LOCAL SITE INSTALLER.')
 5288 FORMAT('***** ERROR FROM LEGENDRE.  UNABLE TO PERFORM THE ',
     1'CALCULATIONS CORRECTLY, OUTOUT SET TO ZERO.')
C
CCCCC JULY 1995.  ADD SHPERICAL HARMONICS.  BASED ON ASSOCIATED
CCCCC LEGENDRE POLYNOMIALS.
 5300 CONTINUE
      DARG1=DBLE(X)
      IF(IANGLU.EQ.'DEGR')DARG1=DARG1*DPI/180.D0
C
      IF(DARG1.LT.-DPI.OR.DARG1.GT.DPI)THEN
        WRITE(ICOUT,5301)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5302)X
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5301 FORMAT('***** ERROR FOR SPHRHRMR.  THE FIRST INPUT ARGUMENT IS ',
     1'OUTSIDE THE ALLOWABLE (-DPI,DPI) INTERVAL.')
 5302 FORMAT('      IT HAS THE VALUE ',E15.7)
      DARG2=DBLE(SAVE1)
      IF(IANGLU.EQ.'DEGR')DARG2=DARG2*DPI/180.D0
C
      IF(DARG2.LT.0.OR.DARG2.GT.2.0D0*DPI)THEN
        WRITE(ICOUT,5311)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5302)SAVE1
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5311 FORMAT('***** ERROR FOR SPHRHRMR.  THE SECOND INPUT ARGUMENT IS',
     1' OUTSIDE THE ALLOWABLE (0,2*PI) INTERVAL.')
C
      IARG1=INT(SAVE2+0.5)
      IF(IARG1.LT.0)THEN
        WRITE(ICOUT,5303)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5304)IARG1
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5303 FORMAT('***** ERROR FOR SPHRHRM.  THE THIRD INPUT ARGUMENT IS',
     1' NEGATIVE.')
 5304 FORMAT('      IT HAS THE VALUE ',I15)
C
      IARG2=INT(SAVE3+0.5)
      IF(ABS(IARG2).GT.IARG1)THEN
        WRITE(ICOUT,5313)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5314)IARG1,IARG2
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 5313 FORMAT('***** ERROR FOR SPHRHRM.  THE FOURTH INPUT ARGUMENT IS ',
     1'LARGER THAN THE THIRD ARGUMENT.')
 5314 FORMAT('      THEY HAVE THE VALUES: ',I15,1X,I15)
      IF(IARG2.LT.0)THEN
        ISWTCH=1
        IARG2=-IARG2
      ELSE
        ISWTCH=0
      ENDIF
      IARG3=IARG2
      IARG4=2
      CALL DXNRMP(IARG1,IARG2,IARG3,DARG1,IARG4,DPN,IPN,ISIG,IERR2)
C
      TERM=0.0
C
      IF(IERR2.EQ.0)THEN
        IF(IPN(1).EQ.0)THEN
          DRESLT=DPN(1)
          IF(ABS(DRESLT).GT.DBLE(R1MACH(2)))THEN
            IF(DRESLT.GE.0.D0)TERM=R1MACH(2)
            IF(DRESLT.LT.0.D0)TERM=-R1MACH(2)
          ELSE
            DTERM1=(-1.D0)**IARG2*DSQRT(1.0D0/(2.D0*DPI))
            DRESLT=DTERM1*DPN(1)
            DTERM1=DBLE(IARG2)*DARG2
            IF(ISJUNK.EQ.0)THEN
              DTERM2=DRESLT*DCOS(DTERM1)
              TERM=REAL(DTERM2)
            ELSE
              DTERM2=DRESLT*DSIN(DTERM1)
              TERM=REAL(DTERM2)
            ENDIF
            IF(ISWTCH.EQ.1)TERM=(-1.**IARG2)*TERM
          ENDIF
        ELSE
          IF(IPN(1).GT.0)THEN
            TERM=R1MACH(2)
            WRITE(ICOUT,5305)
            CALL DPWRST('XXX','BUG ')
          ELSE
            TERM=0.
            WRITE(ICOUT,5309)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ENDIF
      ELSEIF(IERR2.EQ.212 .OR. IERR2.EQ.213)THEN
        TERM=0.0
        WRITE(ICOUT,5306)
        CALL DPWRST('XXX','BUG ')
      ELSEIF(IERR2.GE.201.AND.IERR2.LE.204)THEN
        TERM=0.0
        WRITE(ICOUT,5307)
        CALL DPWRST('XXX','BUG ')
      ELSE
        WRITE(ICOUT,5308)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
      ENDIF
      GOTO9000
 5305 FORMAT('***** WARNING FROM SPHRHRM.  CALCULATED VALUE OUTSIDE ',
     1'VALID MACHINE RANGE.  VALUE SET TO MACHINE MAXIMUM.')
 5306 FORMAT('***** ERROR FROM SPHRHRM.  INVALID INPUT.')
 5307 FORMAT('***** ERROR FROM SPHRHRM.  INVALID DXSET, CONTACT YOUR',
     1' LOCAL SITE INSTALLER.')
 5308 FORMAT('***** ERROR FROM SPHRHRM.  UNABLE TO PERFORM THE ',
     1'CALCULATIONS CORRECTLY, OUTOUT SET TO ZERO.')
 5309 FORMAT('***** WARNING FROM SPHRHRM.  CALCULATED VALUE OUTSIDE ',
     1'VALID MACHINE RANGE.  VALUE SET TO 0.')
C
CCCCC USE SLATEC ROUTINE SINCE IT HANDLES ANY REAL X (NOT LIMITED TO
CCCCC (-3,INF).
 6000 CONTINUE
      ARG=X
      RESULT=BESJ0DP(X)
      TERM=RESULT
CCCCC IF(-3.0.LE.ARG.AND.ARG.LE.3.0)GOTO6001
CCCCC IF(3.0.LE.ARG)GOTO6002
CCCCC WRITE(ICOUT,6009)
C6009 FORMAT('BESS0 BESSEL FUNCTION ARGUMENT NOT IN (-3,INFINITY) ')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC GOTO9000
C
C6001 CONTINUE
CCCCC ARG1=ARG/3.0
CCCCC RESULT=(D012*ARG1**12)+(D010*ARG1**10)+(D08*ARG1**8)
CCCCC1       +(D06*ARG1**6)+(D04*ARG1**4)+(D02*ARG1**2)+D00
CCCCC TERM=RESULT
CCCCC GOTO9000
C
C6002 CONTINUE
CCCCC ARG2=3.0/ARG
CCCCC F0=(F06*ARG2**6)+(F05*ARG2**5)+(F04*ARG2**4)
CCCCC1       +(F03*ARG2**3)+(F02*ARG2**2)+(F01*ARG2**1)+F00
CCCCC G0=(G06*ARG2**6)+(G05*ARG2**5)+(G04*ARG2**4)
CCCCC1       +(G03*ARG2**3)+(G02*ARG2**2)+(G01*ARG2**1)+G00
CCCCC THETA0=ARG+G0
CCCCC RESULT=(1.0/SQRT(ARG))*F0*COS(THETA0)
CCCCC TERM=RESULT
      GOTO9000
C
CCCCC USE SLATEC ROUTINE SINCE IT HANDLES ANY REAL X (NOT LIMITED TO
CCCCC (-3,INF).
 6010 CONTINUE
      ARG=X
      RESULT=BESJ1DP(X)
      TERM=RESULT
CCCCC IF(-3.0.LE.ARG.AND.ARG.LE.3.0)GOTO6011
CCCCC IF(3.0.LE.ARG)GOTO6012
CCCCC WRITE(ICOUT,6019)
C6019 FORMAT('BESS1 BESSEL FUNCTION ARGUMENT NOT IN (-3,INFINITY) ')
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC GOTO9000
C6011 CONTINUE
CCCCC ARG1=ARG/3.0
CCCCC RESULT=(D112*ARG1**12)+(D110*ARG1**10)+(D18*ARG1**8)
CCCCC1       +(D16*ARG1**6)+(D14*ARG1**4)+(D12*ARG1**2)+D10
CCCCC RESULT=ARG*RESULT
CCCCC TERM=RESULT
CCCCC GOTO9000
C6012 CONTINUE
CCCCC ARG2=3.0/ARG
CCCCC F1=(F16*ARG2**6)+(F15*ARG2**5)+(F14*ARG2**4)
CCCCC1       +(F13*ARG2**3)+(F12*ARG2**2)+(F11*ARG2**1)+F10
CCCCC G1=(G16*ARG2**6)+(G15*ARG2**5)+(G14*ARG2**4)
CCCCC1       +(G13*ARG2**3)+(G12*ARG2**2)+(G11*ARG2**1)+G10
CCCCC THETA1=ARG+G1
CCCCC RESULT=(1.0/SQRT(ARG))*F1*COS(THETA1)
CCCCC TERM=RESULT
      GOTO9000
C
CCCCC THE FOLLOWING SECTIONS (6100 TO 6700) WERE ADDED SEPTEMBER 1994
 6100 CONTINUE
      ARG1=X
      RESULT=BESY0DP(ARG1)
      TERM=RESULT
      GOTO9000
C
 6150 CONTINUE
      ARG1=X
      RESULT=BESY1DP(ARG1)
      TERM=RESULT
      GOTO9000
C
 6200 CONTINUE
      DARG1=DBLE(X)
      DRESLT=DBESI0(DARG1)
      TERM=SNGL(DRESLT)
      GOTO9000
C
 6230 CONTINUE
      DARG1=DBLE(X)
      DRESLT=DBSI0E(DARG1)
      TERM=SNGL(DRESLT)
      GOTO9000
C
 6250 CONTINUE
      DARG1=DBLE(X)
      DRESLT=DBESI1(DARG1)
      TERM=SNGL(DRESLT)
      GOTO9000
C
 6280 CONTINUE
      DARG1=DBLE(X)
      DRESLT=DBSI1E(DARG1)
      TERM=SNGL(DRESLT)
      GOTO9000
C
 6300 CONTINUE
      ARG1=X
      RESULT=BESK0(ARG1)
      TERM=RESULT
      GOTO9000
C
 6330 CONTINUE
      ARG1=X
      RESULT=BESK0E(ARG1)
      TERM=RESULT
      GOTO9000
C
 6350 CONTINUE
      ARG1=X
      RESULT=BESK1(ARG1)
      TERM=RESULT
      GOTO9000
C
 6380 CONTINUE
      ARG1=X
      RESULT=BESK1E(ARG1)
      TERM=RESULT
      GOTO9000
C
CCCCC NOTE: 2 CASES FOR BESSJ(X,ALPHA)
CCCCC       1) ALPHA IS INTEGER
CCCCC       2) ALPHA IS REAL
CCCCC       HOWEVER, CALL TO BESJ IS SAME.  BESJ ACTUALLY
CCCCC       COMPUTES A SEQUENCE OF BESJ VALUES, BUT WE ARE
CCCCC       ONLY COMPUTING 1 (SET ALPHA TO THIS VALUE).
 6400 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IF(ARG2.EQ.0.0)THEN
        RESULT=BESJ0DP(ARG1)
      ELSEIF(ARG2.EQ.1.0)THEN
        RESULT=BESJ1DP(ARG1)
      ELSE
        IARG1=1
        CALL BESJ(ARG1,ARG2,IARG1,TEMP1,NZERO)
        RESULT=TEMP1(IARG1)
      ENDIF
      TERM=RESULT
      GOTO9000
C
 6500 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IF(ARG2.EQ.0.0)THEN
        RESULT=BESY0DP(ARG1)
      ELSEIF(ARG2.EQ.1.0)THEN
        RESULT=BESY1DP(ARG1)
      ELSE
        IARG1=1
        CALL BESY(ARG1,ARG2,IARG1,TEMP1)
        RESULT=TEMP1(IARG1)
      ENDIF
      TERM=RESULT
      GOTO9000
C
 6600 CONTINUE
      DARG1=DBLE(X)
      DARG2=DBLE(SAVE1)
CCCCC APRIL 1995.  FIX BUG
CCCCC IF(ARG2.EQ.0.0)THEN
      IF(DARG2.EQ.0.D0)THEN
        DRESLT=DBESI0(DARG1)
CCCCC ELSEIF(ARG2.EQ.1.0)THEN
      ELSEIF(DARG2.EQ.1.D0)THEN
        DRESLT=DBESI1(DARG1)
      ELSE
        IARG1=1
        ISCALE=1
        CALL DBESI(DARG1,DARG2,ISCALE,IARG1,DTEMP1,NZERO)
        DRESLT=DTEMP1(IARG1)
      ENDIF
      TERM=SNGL(DRESLT)
      GOTO9000
C
 6650 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IF(ARG2.EQ.0.0)THEN
        RESULT=BESI0E(ARG1)
      ELSEIF(ARG2.EQ.1.0)THEN
        RESULT=BESI1E(ARG1)
      ELSE
        IARG1=1
        ISCALE=2
        CALL BESI(ARG1,ARG2,ISCALE,IARG1,TEMP1,NZERO)
        RESULT=TEMP1(IARG1)
      ENDIF
      TERM=RESULT
      GOTO9000
C
 6700 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IF(ARG2.EQ.0.0)THEN
        RESULT=BESK0(ARG1)
      ELSEIF(ARG2.EQ.1.0)THEN
        RESULT=BESK1(ARG1)
      ELSE
        IARG1=1
        ISCALE=1
        CALL BESK(ARG1,ARG2,ISCALE,IARG1,TEMP1,NZERO)
        RESULT=TEMP1(IARG1)
      ENDIF
      TERM=RESULT
      GOTO9000
C
 6750 CONTINUE
      ARG1=X
      ARG2=SAVE1
      IF(ARG2.EQ.0.0)THEN
        RESULT=BESK0E(ARG1)
      ELSEIF(ARG2.EQ.1.0)THEN
        RESULT=BESK1E(ARG1)
      ELSE
        IARG1=1
        ISCALE=2
        CALL BESK(ARG1,ARG2,ISCALE,IARG1,TEMP1,NZERO)
        RESULT=TEMP1(IARG1)
      ENDIF
      TERM=RESULT
      GOTO9000
C
 6800 CONTINUE
      ARG1=X
      RESULT=AI(ARG1)
      TERM=RESULT
      GOTO9000
C
 6900 CONTINUE
      ARG1=X
      RESULT=BI(ARG1)
      TERM=RESULT
      GOTO9000
C
 7000 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      IARG1=INT(SAVE2)
      ARG4=SAVE2-REAL(IARG1)
      IF(ARG4.GT.0.5)THEN
        IARG1=IARG1+1
        ARG4=-ARG4
      ENDIF
CCCCC IF(IARG1.GT.100.OR.SAVE.LT.0.0)THEN
      IF(IARG1.GT.100.OR.SAVE2.LT.0)THEN
        WRITE(ICOUT,7001)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7001 FORMAT('***** ORDER OF COMPLEX BESSEL FUNCTION NOT IN THE RANGE',
     1 ' (0,100). *****')
      CALL BESJCF(Z1,ARG4,IARG1,CTEMP1)
      TERM=REAL(CTEMP1(IARG1+2))
      GOTO9000
C
 7010 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      IARG1=INT(SAVE2)
      ARG4=SAVE2-REAL(IARG1)
      IF(ARG4.GT.0.5)THEN
        IARG1=IARG1+1
        ARG4=-ARG4
      ENDIF
      IF(IARG1.GT.100.OR.SAVE2.LT.0.0)THEN
        WRITE(ICOUT,7011)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7011 FORMAT('***** ORDER OF COMPLEX BESSEL FUNCTION NOT IN THE RANGE',
     1 ' (0,100). *****')
      CALL BESJCF(Z1,ARG4,IARG1,CTEMP1)
      TERM=AIMAG(CTEMP1(IARG1+2))
      GOTO9000
C
 7020 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      IARG1=INT(SAVE2)
      ARG4=SAVE2-REAL(IARG1)
      IF(ARG4.GT.0.5)THEN
        IARG1=IARG1+1
        ARG4=-ARG4
      ENDIF
      IF(IARG1.GT.100.OR.SAVE2.LT.0.0)THEN
        WRITE(ICOUT,7021)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7021 FORMAT('***** ORDER OF COMPLEX BESSEL FUNCTION NOT IN THE RANGE',
     1 ' (0,100). *****')
      CALL BESYCF(Z1,ARG4,IARG1,CTEMP1)
      TERM=REAL(CTEMP1(IARG1+2))
      GOTO9000
C
 7030 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      IARG1=INT(SAVE2)
      ARG4=SAVE2-REAL(IARG1)
      IF(ARG4.GT.0.5)THEN
        IARG1=IARG1+1
        ARG4=-ARG4
      ENDIF
      IF(IARG1.GT.100.OR.SAVE2.LT.0.0)THEN
        WRITE(ICOUT,7031)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7031 FORMAT('***** ORDER OF COMPLEX BESSEL FUNCTION NOT IN THE RANGE',
     1 ' (0,100). *****')
      CALL BESYCF(Z1,ARG4,IARG1,CTEMP1)
      TERM=AIMAG(CTEMP1(IARG1+2))
      GOTO9000
C
 7040 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      IARG1=INT(SAVE2)
      ARG4=SAVE2-REAL(IARG1)
      IF(ARG4.GT.0.5)THEN
        IARG1=IARG1+1
        ARG4=-ARG4
      ENDIF
      IF(IARG1.GT.100.OR.SAVE2.LT.0.0)THEN
        WRITE(ICOUT,7041)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7041 FORMAT('***** ORDER OF COMPLEX BESSEL FUNCTION NOT IN THE RANGE',
     1 ' (0,100). *****')
      CALL BESICF(Z1,ARG4,IARG1,CTEMP1)
      TERM=REAL(CTEMP1(IARG1+2))
      GOTO9000
C
 7050 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      IARG1=INT(SAVE2)
      ARG4=SAVE2-REAL(IARG1)
      IF(ARG4.GT.0.5)THEN
        IARG1=IARG1+1
        ARG4=-ARG4
      ENDIF
      IF(IARG1.GT.100.OR.SAVE2.LT.0.0)THEN
        WRITE(ICOUT,7051)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7051 FORMAT('***** ORDER OF COMPLEX BESSEL FUNCTION NOT IN THE RANGE',
     1 ' (0,100). *****')
      CALL BESICF(Z1,ARG4,IARG1,CTEMP1)
      TERM=AIMAG(CTEMP1(IARG1+2))
      GOTO9000
C
 7060 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      IARG1=INT(SAVE2)
      ARG4=SAVE2-REAL(IARG1)
      IF(ARG4.GT.0.5)THEN
        IARG1=IARG1+1
        ARG4=-ARG4
      ENDIF
      IF(IARG1.GT.100.OR.SAVE2.LT.0.0)THEN
        WRITE(ICOUT,7061)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7061 FORMAT('***** ORDER OF COMPLEX BESSEL FUNCTION NOT IN THE RANGE',
     1 ' (0,100). *****')
      CALL BESKCF(Z1,ARG4,IARG1,CTEMP1)
      TERM=REAL(CTEMP1(IARG1+2))
      GOTO9000
C
 7070 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      IARG1=INT(SAVE2)
      ARG4=SAVE2-REAL(IARG1)
      IF(ARG4.GT.0.5)THEN
        IARG1=IARG1+1
        ARG4=-ARG4
      ENDIF
      IF(IARG1.GT.100.OR.SAVE2.LT.0.0)THEN
        WRITE(ICOUT,7071)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7071 FORMAT('***** ORDER OF COMPLEX BESSEL FUNCTION NOT IN THE RANGE',
     1 ' (0,100). *****')
      CALL BESKCF(Z1,ARG4,IARG1,CTEMP1)
      TERM=AIMAG(CTEMP1(IARG1+2))
      GOTO9000
C
CCCCC THE FOLLOWING 4 SECTIONS (7100 TO 7400) WAS ADDED MAY 1989
 7100 CONTINUE
      ARG1=X
      IF(ARG1.GT.0.0)GOTO7109
      IF(ARG1.EQ.0.0)WRITE(ICOUT,7101)
 7101 FORMAT('ERROR--ARGUMENT OF CP FUNCTION IS 0')
      IF(ARG1.EQ.0.0)CALL DPWRST('XXX','BUG ')
      IF(ARG1.EQ.0.0)WRITE(ICOUT,7102)
 7102 FORMAT('ERROR--ARGUMENT OF CP FUNCTION IS NEGATIVE')
      IF(ARG1.EQ.0.0)CALL DPWRST('XXX','BUG ')
      GOTO9000
 7109 CONTINUE
      RESULT=1.0/(3.0*ARG1)
      TERM=RESULT
      GOTO9000
C
 7200 CONTINUE
      ARG1=X
      IF(X.LT.0.0)ARG1=(-X)
      ARG2=SAVE1
      IF(ARG2.GT.0.0)GOTO7209
      IF(ARG2.EQ.0.0)WRITE(ICOUT,7201)
 7201 FORMAT('ERROR--2ND ARGUMENT OF PERDEF FUNCTION IS 0')
      IF(ARG2.EQ.0.0)CALL DPWRST('XXX','BUG ')
      IF(ARG2.EQ.0.0)WRITE(ICOUT,7202)
 7202 FORMAT('ERROR--2ND ARGUMENT OF PERDEF FUNCTION IS NEGATIVE')
      IF(ARG2.EQ.0.0)CALL DPWRST('XXX','BUG ')
      GOTO9000
 7209 CONTINUE
      RESULT=(1.0-ARG1)/(3.0*ARG2)
      TERM=RESULT
      GOTO9000
C
 7300 CONTINUE
      ARG1=X
      IF(X.LT.0.0)ARG1=(-X)
      ARG2=SAVE1
      IF(ARG2.GT.0.0)GOTO7309
      IF(ARG2.EQ.0.0)WRITE(ICOUT,7301)
 7301 FORMAT('ERROR--2ND ARGUMENT OF PERDEF FUNCTION IS 0')
      IF(ARG2.EQ.0.0)CALL DPWRST('XXX','BUG ')
      IF(ARG2.EQ.0.0)WRITE(ICOUT,7302)
 7302 FORMAT('ERROR--2ND ARGUMENT OF PERDEF FUNCTION IS NEGATIVE')
      IF(ARG2.EQ.0.0)CALL DPWRST('XXX','BUG ')
      GOTO9000
 7309 CONTINUE
CCCCC Z1=(1.0-ARG1)/ARG2
      ARG3=(1.0-ARG1)/ARG2
      ZJUNK=(-1.0-ARG1)/ARG2
      CALL NORCDF(ARG3,CDF1)
      CALL NORCDF(ZJUNK,CDF2)
      RESULT=100.0*(1.0-(CDF1-CDF2))
      TERM=RESULT
      GOTO9000
C
 7400 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      RESULT=ARG3*(ARG1*ARG1+ARG2*ARG2)
      TERM=RESULT
      GOTO9000
CCCCC FOLLOWING SECTIONS ADDED SEPTEMBER 1994.
C
 7500 CONTINUE
      ARG1=X
      RESULT=DAWS(ARG1)
      TERM=RESULT
      GOTO9000
C
 7600 CONTINUE
      ARG1=X
      RESULT=E1(ARG1)
      TERM=RESULT
      GOTO9000
C
 7650 CONTINUE
      ARG1=X
      RESULT=EI(ARG1)
      TERM=RESULT
      GOTO9000
C
 7700 CONTINUE
      ARG1=X
      IARG2=INT(SAVE1+0.5)
      IARG3=1
      ISCALE=1
      TOL=1.0E-4
      IERR=0
C
C  APRIL 1995.  THE N=0 CASE HANDLED SEPARATELY.
C
      IF(X.GT.0.0 .AND. IARG2.EQ.0)THEN
        RESULT=EXP(-ARG1/ARG1)
        GOTO9000
      ENDIF
C
      CALL EXINT(ARG1,IARG2,ISCALE,IARG3,TOL,TEMP1,NZERO,IERR)
      IF(IERR.EQ.0)THEN
        RESULT=TEMP1(1)
      ELSEIF(IERR.EQ.1)THEN
        WRITE(ICOUT,7701)
        CALL DPWRST('XXX','BUG ')
        RESULT=0.0
      ELSEIF(IERR.EQ.2)THEN
        WRITE(ICOUT,7702)
        CALL DPWRST('XXX','BUG ')
        RESULT=0.0
      ELSEIF(IERR.EQ.3)THEN
        WRITE(ICOUT,7703)
        CALL DPWRST('XXX','BUG ')
        RESULT=0.0
      ENDIF
 7701 FORMAT('*****ERROR IN THE INPUT ARGUMENTS IN CALCULATING THE ',
     * 'EXPONENTIAL INTEGRAL. ****')
 7702 FORMAT('*****ERROR IN CALCULATING THE EXPONENTIAL INTEGRAL, THE',
     * ' ALGORITHM TERMINATION CONDITION NOT MET. ****')
 7703 FORMAT('*****ERROR IN CALCULATING THE EXPONENTIAL INTEGRAL. ***')
      TERM=RESULT
      GOTO9000
C
 7800 CONTINUE
      ARG1=X
      ARG2=SAVE1
      RESULT=RC(ARG1,ARG2,IERR)
      TERM=RESULT
      GOTO9000
C
 7810 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      RESULT=RD(ARG1,ARG2,ARG3,IERR)
      TERM=RESULT
      GOTO9000
C
 7815 CONTINUE
      ARG1=X
      IF(ARG1.LT.0.0.OR.ARG1.GE.1.0)THEN
        WRITE(ICOUT,7816)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7816 FORMAT('**** ERROR FROM ELLIPC2, ARGUMENT IS NOT IN THE (0,1)',
     1       ' INTERVAL. ****')
      ARG2=1.0-ARG1
      ARG3=0.0
      ARG4=1.0
      RESULT1=RF(ARG3,ARG2,ARG4,IERR)
      RESULT2=RD(ARG3,ARG2,ARG4,IERR)
      RESULT=RESULT1-(1.0/3.0)*ARG1*RESULT2
      TERM=RESULT
      GOTO9000
C
 7818 CONTINUE
      IF(X.LE.0.0.OR.X.GT.0.5*REALPI)THEN
        WRITE(ICOUT,7819)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7819 FORMAT('**** ERROR FROM ELLIP2, FIRST ARGUMENT IS NOT IN THE ',
     1       '(0,PI/2) INTERVAL. ****')
      ARG5=SIN(SAVE1)*SIN(SAVE1)
      ARG1=SIN(X)
      ARG2=COS(X)*COS(X)
      ARG3=1.0-ARG5*ARG1*ARG1
      ARG4=1.0
      RESULT1=RF(ARG2,ARG3,ARG4,IERR)
      RESULT2=RD(ARG2,ARG3,ARG4,IERR)
      RESULT=RESULT1-ARG1*ARG1*ARG5*RESULT2/3.0
      TERM=ARG1*RESULT
      GOTO9000
C
 7820 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      RESULT=RF(ARG1,ARG2,ARG3,IERR)
      TERM=RESULT
      GOTO9000
C
 7825 CONTINUE
      IF(ARG1.LT.0.0.OR.ARG1.GE.1.0)THEN
        WRITE(ICOUT,7826)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7826 FORMAT('**** ERROR FROM ELLIPC1, ARGUMENT IS NOT IN THE (0,1)',
     1       ' INTERVAL. ****')
      ARG1=0.0
      ARG2=1.0-X
      ARG3=1.0
      RESULT=RF(ARG1,ARG2,ARG3,IERR)
      TERM=RESULT
      GOTO9000
C
 7828 CONTINUE
      IF(X.LE.0.0.OR.X.GT.0.5*REALPI)THEN
        WRITE(ICOUT,7829)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7829 FORMAT('**** ERROR FROM ELLIP1, FIRST ARGUMENT IS NOT IN THE ',
     1       '(0,PI/2) INTERVAL. ****')
      ARG1=SIN(X)
      ARG2=COS(X)**2
      ARG3=(1.0-ARG1*SIN(SAVE1))*(1.0+ARG1*SIN(SAVE1))
      ARG4=1.0
      RESULT=RF(ARG2,ARG3,ARG4,IERR)
      TERM=ARG1*RESULT
      GOTO9000
C
 7830 CONTINUE
      ARG1=X
      ARG2=SAVE1
      ARG3=SAVE2
      ARG4=SAVE3
      RESULT=RJ(ARG1,ARG2,ARG3,ARG4,IERR)
      TERM=RESULT
      GOTO9000
C
 7838 CONTINUE
      IF(X.LE.0.0.OR.X.GT.0.5*REALPI)THEN
        WRITE(ICOUT,7839)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ENDIF
 7839 FORMAT('**** ERROR FROM ELLIP3, FIRST ARGUMENT IS NOT IN THE ',
     1       '(0,PI/2) INTERVAL. ****')
      ARG6=-SAVE1
      ARG1=SIN(X)
      ARG2=COS(X)*COS(X)
      ARG3=1.0-SIN(SAVE2)*SIN(SAVE2)*ARG1*ARG1
      ARG4=1.0+ARG6*ARG1*ARG1
      ARG5=1.0
      RESULT1=RF(ARG2,ARG3,ARG5,IERR)
      RESULT2=RJ(ARG2,ARG3,ARG5,ARG4,IERR)
      RESULT=(ARG6/3.0)*(ARG1**3)*RESULT2
      TERM=ARG1*RESULT1-RESULT
      GOTO9000
C
 7900 CONTINUE
      DARG1=DBLE(X)
      DRESLT=DSPENC(DARG1)
      TERM=SNGL(DRESLT)
      GOTO9000
C
 8000 CONTINUE
      ARG1=X
      RESULT=ALI(ARG1)
      TERM=RESULT
      GOTO9000
C
CCCCC ADD FOLLOWING SECTION (BN) SEPTEMBER 1997
 8010 CONTINUE
      IARG1=INT(X+0.5)
      ARG2=SAVE1
      IF(ARG2.EQ.CPUMIN)THEN
        CALL BERNOB(IARG1,DTEMP1(1))
        TERM=SNGL(DTEMP1(IARG1+1))
      ELSE
        DARG1=X
        IARG2=INT(ARG2+0.5)
        CALL BERNPN(DARG1,IARG2,DRESLT)
        TERM=SNGL(DRESLT)
      ENDIF
      GOTO9000
C
CCCCC ADD FOLLOWING SECTION (EN) SEPTEMBER 1997
 8020 CONTINUE
      IARG1=INT(X+0.5)
      ARG2=SAVE1
      IF(ARG2.EQ.CPUMIN)THEN
        CALL EULERB(IARG1,DTEMP1(1))
        TERM=SNGL(DTEMP1(IARG1+1))
      ELSE
        DARG1=X
        IARG2=INT(ARG2+0.5)
        CALL EULERP(DARG1,IARG2,DRESLT)
        TERM=SNGL(DRESLT)
      ENDIF
      GOTO9000
C
CCCCC ADD FOLLOWING SECTION (BINOM) SEPTEMBER 1997
 8030 CONTINUE
      IARG1=INT(X+0.5)
      IARG2=INT(SAVE1+0.5)
      RESULT=BINOM(IARG1,IARG2)
      TERM=RESULT
      GOTO9000
C
 8040 CONTINUE
      DARG1=DBLE(X)
      IARG2=INT(SAVE1+0.5)
      IF(IARG2.LT.0)IARG2=0
      IF(IARG2.EQ.0)THEN
        DRESLT=ABRAM0(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.EQ.1)THEN
        DRESLT=ABRAM1(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.EQ.2)THEN
        DRESLT=ABRAM2(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.LE.100)THEN
        DABRAM(0)=ABRAM0(DARG1)
        DABRAM(1)=ABRAM1(DARG1)
        DABRAM(2)=ABRAM2(DARG1)
        DO8041I=3,IARG2
          DABRAM(I)=(DBLE(I-1)*DABRAM(I-2) + DARG1*DABRAM(I-3))/2.0D0
 8041   CONTINUE
        DRESLT=DABRAM(IARG2)
        TERM=REAL(DRESLT)
      ELSE
        TERM=0.0
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8043)IARG2
        CALL DPWRST('XXX','BUG ')
      ENDIF
 8043 FORMAT('***** ERROR FROM ABRAM: MAXIMUM ORDER OF 100 ',
     1       'EXCEEDED.')
      GOTO9000
C
 8045 CONTINUE
      DARG1=DBLE(X)
      DRESLT=CLAUSN(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
 8050 CONTINUE
      DARG1=DBLE(X)
      IARG2=INT(SAVE1+0.5)
      IF(IARG2.LT.1)IARG2=1
      IF(IARG2.EQ.1)THEN
        DRESLT=DEBYE1(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.EQ.2)THEN
        DRESLT=DEBYE2(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.EQ.3)THEN
        DRESLT=DEBYE3(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.EQ.4)THEN
        DRESLT=DEBYE4(DARG1)
        TERM=REAL(DRESLT)
      ELSE
        TERM=0.0
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8053)IARG2
        CALL DPWRST('XXX','BUG ')
      ENDIF
 8053 FORMAT('***** ERROR FROM DEBYE: MAXIMUM ORDER OF 4 ',
     1       'EXCEEDED.')
      GOTO9000
C
 8055 CONTINUE
      DARG1=DBLE(X)
      DRESLT=EXP3(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
 8060 CONTINUE
      DARG1=DBLE(X)
      DRESLT=GOODST(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
 8065 CONTINUE
      DARG1=DBLE(X)
      DRESLT=LOBACH(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
 8070 CONTINUE
      DARG1=DBLE(X)
      DRESLT=STROM(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
 8075 CONTINUE
      DARG1=DBLE(X)
      DRESLT=SYNCH1(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
 8080 CONTINUE
      DARG1=DBLE(X)
      DRESLT=SYNCH2(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
 8085 CONTINUE
      DARG1=DBLE(X)
      IARG2=INT(SAVE1+0.5)
      IF(IARG2.LT.2)IARG2=2
      IF(IARG2.EQ.2)THEN
        DRESLT=TRAN02(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.EQ.3)THEN
        DRESLT=TRAN03(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.EQ.4)THEN
        DRESLT=TRAN04(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.EQ.5)THEN
        DRESLT=TRAN05(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.EQ.6)THEN
        DRESLT=TRAN06(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.EQ.7)THEN
        DRESLT=TRAN07(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.EQ.8)THEN
        DRESLT=TRAN08(DARG1)
        TERM=REAL(DRESLT)
      ELSEIF(IARG2.EQ.9)THEN
        DRESLT=TRAN09(DARG1)
        TERM=REAL(DRESLT)
      ELSE
        TERM=0.0
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8088)IARG2
        CALL DPWRST('XXX','BUG ')
      ENDIF
 8088 FORMAT('***** ERROR FROM TRAN: MAXIMUM ORDER OF 9 ',
     1       'EXCEEDED.')
      GOTO9000
C
 8100 CONTINUE
      DARG1=DBLE(X)
C
C  APRIL 1995.  SI(-X)=-SI(X)
C
      AFACT=1.0
      IF(DARG1.LT.0.D0)THEN
        AFACT=-1.0
        DARG1=-DARG1
      ENDIF
C
      IERR=0
      IOPT=1
      CALL SICIEI(IOPT,DARG1,DARG2,DARG3,DARG4,DARG5,DARG6,DARG7,
     1DARG8,DARG9,IERR)
      IF(IERR.GT.0)THEN
        WRITE(ICOUT,8101)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ELSE
        TERM=SNGL(DARG2)
        TERM=TERM*AFACT
      ENDIF
 8101 FORMAT('**** ERROR IN COMPUTING THE SINE INTEGRAL. ****')
      GOTO9000
C
 8200 CONTINUE
      DARG1=DBLE(X)
C
C  APRIL 1995.  SHI(-X)=-SHI(X)
C
      AFACT=1.0
      IF(DARG1.LT.0.D0)THEN
        AFACT=-1.0
        DARG1=-DARG1
      ENDIF
C
      IOPT=3
      IERR=0
      CALL SICIEI(IOPT,DARG1,DARG2,DARG3,DARG4,DARG5,DARG6,DARG7,
     1DARG8,DARG9,IERR)
      IF(IERR.GT.0)THEN
        WRITE(ICOUT,8201)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ELSE
        TERM=SNGL(DARG7)
        TERM=TERM*AFACT
      ENDIF
 8201 FORMAT('**** ERROR IN COMPUTING THE HYPERBOLIC SINE ',
     1'INTEGRAL. *****')
      GOTO9000
C
 8300 CONTINUE
      IF(X.EQ.0.0)THEN
        WRITE(ICOUT,8302)
        CALL DPWRST('XXX','BUG ')
        TERM=-R1MACH(2)
        GOTO9000
      ENDIF
 8302 FORMAT('**** ERROR, THE COSINE INTEGRAL IS UNDEFINED FOR 0.',
     1'  ****')
      DARG1=DBLE(X)
      IOPT=1
      IERR=0
      CALL SICIEI(IOPT,DARG1,DARG2,DARG3,DARG4,DARG5,DARG6,DARG7,
     1DARG8,DARG9,IERR)
      IF(IERR.GT.0)THEN
        WRITE(ICOUT,8301)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ELSE
        TERM=SNGL(DARG3)
      ENDIF
 8301 FORMAT('**** ERROR IN COMPUTING THE COSINE INTEGRAL. ****')
      GOTO9000
C
 8400 CONTINUE
      IF(X.EQ.0.0)THEN
        WRITE(ICOUT,8402)
        CALL DPWRST('XXX','BUG ')
        TERM=-R1MACH(2)
        GOTO9000
      ENDIF
 8402 FORMAT('**** ERROR, THE HYPERBOLIC COSINE INTEGRAL IS UNDEFINED',
     1' FOR 0. ****')
      DARG1=DBLE(X)
      IF(X.LT.0.0)DARG1=-DBLE(X)
      IOPT=3
      IERR=0
      CALL SICIEI(IOPT,DARG1,DARG2,DARG3,DARG4,DARG5,DARG6,DARG7,
     1DARG8,DARG9,IERR)
      IF(IERR.GT.0)THEN
        WRITE(ICOUT,8401)
        CALL DPWRST('XXX','BUG ')
        TERM=0.0
        GOTO9000
      ELSE
        TERM=SNGL(DARG8)
      ENDIF
 8401 FORMAT('**** ERROR IN COMPUTING THE HYPERBOLIC COSINE ',
     1'INTEGRAL. ****')
      GOTO9000
C
 8500 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=REAL(CABS(Z1))
      GOTO9000
C
 8600 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=REAL(CCOS(Z1))
      GOTO9000
C
 8610 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=AIMAG(CCOS(Z1))
      GOTO9000
C
 8700 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=REAL(CEXP(Z1))
      GOTO9000
C
 8710 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=AIMAG(CEXP(Z1))
      GOTO9000
C
 8800 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=REAL(CLOG(Z1))
      GOTO9000
C
 8810 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=AIMAG(CLOG(Z1))
      GOTO9000
C
 8900 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=REAL(CSIN(Z1))
      GOTO9000
C
 8910 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=AIMAG(CSIN(Z1))
      GOTO9000
C
 8950 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=REAL(CSQRT(Z1))
      GOTO9000
C
 8960 CONTINUE
      ARG1=X
      ARG2=SAVE1
      Z1=CMPLX(ARG1,ARG2)
      TERM=AIMAG(CSQRT(Z1))
      GOTO9000
C
CCCCC JULY 1995.  ADD HERMITE POLYNOMIAL
 8970 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL HERMIT(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC JULY 1995.  ADD LOG HERMITE POLYNOMIAL
 8975 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL LNHERM(ARG1,ARG2,RESULT,ISIGN)
      TERM=RESULT
      GOTO9000
C
CCCCC JULY 1995.  ADD SIGN OF LOG HERMITE POLYNOMIAL
 8978 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL LNHERM(ARG1,ARG2,RESULT,ISIGN)
      TERM=REAL(ISIGN)
      GOTO9000
C
CCCCC JULY 1995.  ADD LAGUERRE POLYNOMIAL
 8980 CONTINUE
      ARG1=X
      ARG2=SAVE1
      CALL LAGUE(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
CCCCC JULY 1995.  ADD LEGENDRE POLYNOMIAL (UNNORMALIZED)
CCCCC NOTE THAT IN THIS CASE THE INPUT IS THETA (I.E., THE
CCCCC ANGLE) RATHER THAN X.  THIS IS TO BE CONSISTENT WITH
CCCCC ASSOCIATED LEGENDRE POLYNOMILS AND FUNCTIONS.  CONVERT
CCCCC TO (-1,1) FOR LEGNDR ROUTINE.
 8990 CONTINUE
      IF(IANGLU.EQ.'DEGR')THEN
        ARG1=COS(X*REALPI/180.)
      ELSE
        ARG1=COS(X)
      ENDIF
      ARG2=SAVE1
      CALL LEGNDR(ARG1,ARG2,RESULT)
      TERM=RESULT
      GOTO9000
C
18090 CONTINUE
      DARG1=DBLE(X)
      DRESLT=AIRINT(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
18095 CONTINUE
      DARG1=DBLE(X)
      DRESLT=AIRYGI(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
18100 CONTINUE
      DARG1=DBLE(X)
      DRESLT=AIRYHI(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
18105 CONTINUE
      DARG1=DBLE(X)
      DRESLT=ATNINT(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
18110 CONTINUE
      DARG1=DBLE(X)
      DRESLT=BIRINT(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
18115 CONTINUE
      DARG1=DBLE(X)
      DRESLT=I0INT(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
18120 CONTINUE
      DARG1=DBLE(X)
      DRESLT=I0ML0(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
18125 CONTINUE
      DARG1=DBLE(X)
      DRESLT=I1ML1(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
18130 CONTINUE
      DARG1=DBLE(X)
      DRESLT=J0INT(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
18135 CONTINUE
      DARG1=DBLE(X)
      DRESLT=K0INT(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
18140 CONTINUE
      DARG1=DBLE(X)
      DRESLT=Y0INT(DARG1)
      TERM=REAL(DRESLT)
      GOTO9000
C
18150 CONTINUE
      TERM=X
      IF(SAVE1.LT.X)TERM=SAVE1
      IF(SAVE2.NE.CPUMIN)THEN
        IF(SAVE2.LT.TERM)TERM=SAVE2
      ELSE
        GOTO9000
      ENDIF
      IF(SAVE3.NE.CPUMIN)THEN
        IF(SAVE3.LT.TERM)TERM=SAVE3
      ELSE
        GOTO9000
      ENDIF
      IF(SAVE4.NE.CPUMIN)THEN
        IF(SAVE4.LT.TERM)TERM=SAVE4
      ELSE
        GOTO9000
      ENDIF
      IF(SAVE5.NE.CPUMIN)THEN
        IF(SAVE5.LT.TERM)TERM=SAVE5
      ELSE
        GOTO9000
      ENDIF
      IF(SAVE6.NE.CPUMIN)THEN
        IF(SAVE6.LT.TERM)TERM=SAVE6
      ELSE
        GOTO9000
      ENDIF
      IF(SAVE7.NE.CPUMIN)THEN
        IF(SAVE7.LT.TERM)TERM=SAVE7
      ELSE
        GOTO9000
      ENDIF
      IF(SAVE8.NE.CPUMIN)THEN
        IF(SAVE8.LT.TERM)TERM=SAVE8
      ELSE
        GOTO9000
      ENDIF
      GOTO9000
C
18160 CONTINUE
      TERM=X
      IF(SAVE1.GT.X)TERM=SAVE1
      IF(SAVE2.NE.CPUMIN)THEN
        IF(SAVE2.GT.TERM)TERM=SAVE2
      ELSE
        GOTO9000
      ENDIF
      IF(SAVE3.NE.CPUMIN)THEN
        IF(SAVE3.GT.TERM)TERM=SAVE3
      ELSE
        GOTO9000
      ENDIF
      IF(SAVE4.NE.CPUMIN)THEN
        IF(SAVE4.GT.TERM)TERM=SAVE4
      ELSE
        GOTO9000
      ENDIF
      IF(SAVE5.NE.CPUMIN)THEN
        IF(SAVE5.GT.TERM)TERM=SAVE5
      ELSE
        GOTO9000
      ENDIF
      IF(SAVE6.NE.CPUMIN)THEN
        IF(SAVE6.GT.TERM)TERM=SAVE6
      ELSE
        GOTO9000
      ENDIF
      IF(SAVE7.NE.CPUMIN)THEN
        IF(SAVE7.GT.TERM)TERM=SAVE7
      ELSE
        GOTO9000
      ENDIF
      IF(SAVE8.NE.CPUMIN)THEN
        IF(SAVE8.GT.TERM)TERM=SAVE8
      ELSE
        GOTO9000
      ENDIF
      GOTO9000
C
CCCCC THE FOLLOWING SECTION (AGREE) WAS ADDED  AUGUST 2011.
18170 CONTINUE
      TERM=1.0
      IF(SAVE1.NE.CPUMIN)THEN
        IF(X.NE.SAVE1)TERM=0.0
      ELSE
        GOTO18171
      ENDIF
      IF(SAVE2.NE.CPUMIN)THEN
        IF(X.NE.SAVE2)TERM=0.0
      ELSE
        GOTO18171
      ENDIF
      IF(SAVE3.NE.CPUMIN)THEN
        IF(X.NE.SAVE3)TERM=0.0
      ELSE
        GOTO18171
      ENDIF
      IF(SAVE4.NE.CPUMIN)THEN
        IF(X.NE.SAVE4)TERM=0.0
      ELSE
        GOTO18171
      ENDIF
      IF(SAVE5.NE.CPUMIN)THEN
        IF(X.NE.SAVE5)TERM=0.0
      ELSE
        GOTO18171
      ENDIF
      IF(SAVE6.NE.CPUMIN)THEN
        IF(X.NE.SAVE6)TERM=0.0
      ELSE
        GOTO18171
      ENDIF
      IF(SAVE7.NE.CPUMIN)THEN
        IF(X.NE.SAVE7)TERM=0.0
      ELSE
        GOTO18171
      ENDIF
      IF(SAVE8.NE.CPUMIN)THEN
        IF(X.NE.SAVE8)TERM=0.0
      ELSE
        GOTO18171
      ENDIF
18171 CONTINUE
      IF(IH.EQ.'DISA'.AND.IH2.EQ.'GREE')TERM=1.0 - TERM
      IF(IH.EQ.'NE  '.AND.IH2.EQ.'    ')TERM=1.0 - TERM
      IF(IH.EQ.'NOTE'.AND.IH2.EQ.'QUAL')TERM=1.0 - TERM
      GOTO9000
C
CCCCC THE FOLLOWING SECTION (DPNTLINE) WAS ADDED  OCTOBER 2012.
18180 CONTINUE
      TERM=DPNTLI(X,SAVE1,SAVE2,SAVE3,SAVE4,IBUGEV)
      GOTO9000
C
CCCCC THE FOLLOWING SECTION (ANGRAD) WAS ADDED  OCTOBER 2012.
18190 CONTINUE
      TERM=ANGRAD(X,SAVE1,SAVE2,SAVE3,SAVE4,SAVE5,IBUGEV)
      GOTO9000
C
CCCCC THE FOLLOWING SECTION (SLOPE) WAS ADDED  JANUARY 2013.
18200 CONTINUE
      X1TEMP=X
      Y1TEMP=SAVE1
      X2TEMP=SAVE2
      Y2TEMP=SAVE3
      IF(Y1TEMP.NE.Y2TEMP)THEN
        TERM=(Y2TEMP-Y1TEMP)/(X2TEMP-X1TEMP)
      ELSE
        TERM=CPUMIN
      ENDIF
      GOTO9000
C
CCCCC THE FOLLOWING SECTION (LININTER) WAS ADDED  AUGUST 2013.
18210 CONTINUE
      ISUBRO='NULL'
      TERM=LININ3(X,SAVE1,SAVE2,SAVE3,SAVE4,
     1            IBUGEV,ISUBRO,IERROR)
      GOTO9000
C
CCCCC THE FOLLOWING SECTION (GT) WAS ADDED  JUNE 2021.
18220 CONTINUE
      TERM=0.0
      IF(X.GT.SAVE1)TERM=1.0
      GOTO9000
C
CCCCC THE FOLLOWING SECTION (GE) WAS ADDED  JUNE 2021.
18230 CONTINUE
      TERM=0.0
      IF(X.GE.SAVE1)TERM=1.0
      GOTO9000
C
CCCCC THE FOLLOWING SECTION (LT) WAS ADDED  JUNE 2021.
18240 CONTINUE
      TERM=0.0
      IF(X.LT.SAVE1)TERM=1.0
      GOTO9000
C
CCCCC THE FOLLOWING SECTION (LE) WAS ADDED  JUNE 2021.
18250 CONTINUE
      TERM=0.0
      IF(X.LE.SAVE1)TERM=1.0
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGEV.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('AT THE END       OF DPLIB3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IH,IH2,X
 9012   FORMAT('IH,IH2,X = ',2A4,2X,G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)SAVE1,SAVE2,RESULT,TERM,I
 9013   FORMAT('SAVE1,SAVE2,RESULT,TERM,I = ',4G15.7,I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)IFOUND,IERROR,IANGLU,IBUGEV
 9015   FORMAT('IFOUND,IERROR,IANGLU,IBUGEV = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLIBF(IH,IH2,X,SAVE1,SAVE2,SAVE3,SAVE4,SAVE5,
     1                  SAVE6,SAVE7,SAVE8,
     1                  I,IANGLU,
     1                  TERM,IBUGEV,IERROR)
C
C     PURPOSE--PERFORM A LIBRARY FUNCTION EVALUATION.
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION (AS A SEPARATE SUBROUTINE)--JANUARY  1979.
C     UPDATED         --NOVEMBER  1979.
C     UPDATED         --FEBRUARY  1981.
C     UPDATED         --JUNE      1981.
C     UPDATED         --JULY      1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --MARCH     1989. INPUT ARG SAVE3 & SAVE3 IN CALL
C     UPDATED         --SEPTEMBER 1994. ADD SAVE3,SAVE4 TO DPLIB3.
C     UPDATED         --MAY       1998. ADD SAVE5 TO DPLIB3.
C     UPDATED         --JUNE      2003. ADD SAVE6, SAVE7, SAVE8 TO
C                                       DPLIB3.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IANGLU
      CHARACTER*4 IBUGEV
      CHARACTER*4 IERROR
C
      CHARACTER*4 IFOUNZ
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUNZ='NO'
      IERROR='NO'
      ISUBN1='DPLI'
      ISUBN2='BF  '
C
      IF(IBUGEV.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('AT THE BEGINNING OF DPLIBF--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IH,IH2,X,TERM
   52   FORMAT('IH,IH2,X,TERM = ',2(A4,2X),2E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)SAVE1,SAVE2,SAVE3,SAVE4,SAVE5,I
   53   FORMAT('SAVE1,SAVE2,SAVE3,SAVE4,SAVE5,I = ',5E15.7,I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)IANGLU,IBUGEV,IERROR,NUMBPW
   54   FORMAT('IANGLU,IBUGEV,IERROR,NUMBPW = ',3(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IFOUNZ='NO'
      CALL DPLIB1(IH,IH2,X,SAVE1,SAVE2,SAVE3,I,IANGLU,
     1            TERM,IBUGEV,IFOUNZ,IERROR)
      IF(IFOUNZ.EQ.'YES')GOTO9000
C
      IFOUNZ='NO'
      CALL DPLIB2(IH,IH2,X,SAVE1,SAVE2,IANGLU,
     1            TERM,IBUGEV,IFOUNZ,IERROR)
      IF(IFOUNZ.EQ.'YES')GOTO9000
C
      IFOUNZ='NO'
      CALL DPLIB3(IH,IH2,X,SAVE1,SAVE2,SAVE3,SAVE4,SAVE5,
     1            SAVE6,SAVE7,SAVE8,
     1            I,IANGLU,
     1            TERM,IBUGEV,IFOUNZ,IERROR)
      IF(IFOUNZ.EQ.'YES')GOTO9000
C
      WRITE(ICOUT,419)
  419 FORMAT('***** ERROR IN DPLIBF--UNKNOWN LIBRARY FUNCTION')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,396)I,IH,IH2
  396 FORMAT('I,IH,IH2 = ',I8,2X,A4,A4)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGEV.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('AT THE END       OF DPLIBF--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9015)IFOUNZ,IERROR
 9015   FORMAT('IFOUNZ,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLICA(ICAPSW,IFORSW,ISEED,ISUBRO,IBUGA2,IBUGA3,IBUGQ,
     1                  IFOUND,IERROR)
C
C     PURPOSE--PERFORM A LINEAR CALIBRATRION ANALYSIS.
C              A LINEAR CALIBRATION WILL BE PERFORMED USING THE
C              FOLLOWING TECHNIQUES:
C               1) CLASSICAL (EISENHART: INVERSE PREDICTION LIMITS)
C               2) GRAYBILL-IYER METHOD
C               3) NETER, WASSERMAN, AND KUTNER
C               4) PROPOGATION OF ERROR
C               5) INVERSE (KRUTCHKOFF)
C               6) MAXIMUM LIKELIHOOD
C               7) BOOTSTRAP (EFRON--RESAMPLE RESIDUALS)
C               8) BOOTSTRAP (WU--RESAMPLE DATA)
C               9) BAYESIAN, CONTROLLED X'S, IMPROPER PRIOR (HOADLEY)
C                  (NOT ON INITIAL IMPLEMENTATION)
C              10) BAYESIAN, RANDOM X'S, IMPROPER PRIOR (HOADLEY)
C                  (NOT ON INITIAL IMPLEMENTATION)
C              11) FIELER
C            --YOU CAN ALSO SPECIFY A QUADRATIC CALIBRATION.  THE
C              FOLLOWING TECHNIQUES ARE SUPPORTED:
C               1) INVERSE PREDICTION LIMITS
C               2) PROPOGATION OF ERROR
C               2) BOOTSTRAP (EFRON--RESAMPLE RESIDUALS)
C               3) BOOTSTRAP (WU--RESAMPLE DATA)
C     WRITTEN BY--ALAN HECKERT/JIM FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2003/7
C     ORIGINAL VERSION--JULY      2003.
C     UPDATED         --JULY      2010. USE DPPARS TO PARSE THE
C                                       COMMAND
C     UPDATED         --SEPTEMBER 2011. ADD FIELER METHOD
C     UPDATED         --NOVEMBER  2016. ADD FIT WITH NO INTERCEPT TERM
C     UPDATED         --NOVEMBER  2016. ADD PROPOGATION OF ERROR
C                                       FOR QUADRATIC
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES----------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 ISUBRO
      CHARACTER*4 IWRITE
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ICASEQ
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      PARAMETER (MAXSPN=20)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      REAL PVAR(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
      CHARACTER*40 INAME
C
      CHARACTER*4 ITYPE
      CHARACTER*4 ICASAN
      CHARACTER*10 ICALTY
C
C----------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      DIMENSION Y1(MAXOBV)
      DIMENSION Y2(MAXOBV)
      DIMENSION Y3(MAXOBV)
C
      DIMENSION Z1(MAXOBV)
      DIMENSION Z2(MAXOBV)
      DIMENSION Z3(MAXOBV)
      DIMENSION Z4(MAXOBV)
      DIMENSION Z5(MAXOBV)
      DIMENSION Z6(MAXOBV)
      DIMENSION IZ(MAXOBV)
C
CCCCC NOTE: EQUIVALENCE TO DOUBLE PRECISION COMMON SINCE DPLIC3
CCCCC CALLS DPFIT WHICH ESSENTIALLY UTILIZES ALL THE SINGLE
CCCCC PRECISION STORAGE.
C
      INCLUDE 'DPCOZD.INC'
      EQUIVALENCE (DGARBG(IDGAR2),Y1(1))
      EQUIVALENCE (DGARBG(IDGAR3),Y2(1))
      EQUIVALENCE (DGARBG(IDGAR4),Y3(1))
      EQUIVALENCE (DGARBG(IDGAR5),Z1(1))
      EQUIVALENCE (DGARBG(IDGAR6),Z2(1))
      EQUIVALENCE (DGARBG(IDGAR7),Z3(1))
      EQUIVALENCE (DGARBG(IDGAR8),Z4(1))
      EQUIVALENCE (DGARBG(IDGAR9),Z5(1))
      EQUIVALENCE (DGARBG(IDGA10),Z6(1))
C
      INCLUDE 'DPCOZI.INC'
      EQUIVALENCE (IGARBG(IIGAR1),IZ(1))
C
C-----COMMON----------------------------------------------------
C
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      ISUBN1='DPLI'
      ISUBN2='CA  '
      IERROR='NO'
      ICASEQ='UNKN'
      ICASAN='LICA'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
      MAXV2=3
      MINN2=2
C
C               *****************************************
C               **  TREAT THE LINEAR CALIBRATION CASE  **
C               *****************************************
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LICA')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLICA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGA2,IBUGA3,IBUGQ
   52   FORMAT('IBUGA2,IBUGA3,IBUGQ = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***************************
C               **  STEP 1--             **
C               **  EXTRACT THE COMMAND  **
C               ***************************
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LICA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.GE.2.AND.ICOM.EQ.'LINE'.AND.
     1  IHARG(1).EQ.'CALI'.AND.IHARG(2).EQ.'ANAL')THEN
        ILASTC=2
      ELSEIF(NUMARG.GE.2.AND.ICOM.EQ.'QUAD'.AND.
     1  IHARG(1).EQ.'CALI'.AND.IHARG(2).EQ.'ANAL')THEN
        ICASAN='QUCA'
        ILASTC=2
      ELSEIF(NUMARG.GE.1.AND.ICOM.EQ.'LINE'.AND.
     1  IHARG(1).EQ.'CALI')THEN
        ILASTC=1
      ELSEIF(NUMARG.GE.1.AND.ICOM.EQ.'QUAD'.AND.
     1  IHARG(1).EQ.'CALI')THEN
        ICASAN='QUCA'
        ILASTC=1
      ELSE
        IFOUND='NO'
        GOTO9000
      ENDIF
C
      CALL ADJUST(ILASTC,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG)
      IFOUND='YES'
C
      ICALTY='LINEAR'
      IF(ICASAN.EQ.'QUCA')ICALTY='QUADRATIC'
C
C               *********************************
C               **  STEP 2--                   **
C               **  EXTRACT THE VARIABLE LIST  **
C               *********************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LICA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      INAME='LINEAR CALIBRATION'
      IF(ICASAN.EQ.'QUCA') INAME='QUADRATIC CALIBRATION'
      MINNA=3
      MAXNA=100
      MAXVAR=3
      MINN2=2
      IFLAGE=99
      IFLAGM=0
      IFLAGP=99
      JMIN=1
      JMAX=NUMARG
      MINNVA=3
      MAXNVA=3
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXVAR,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      ITYPE='VARI'
      IF(IVARTY(3).EQ.'PARA')ITYPE='PARA'
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LICA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
C               *****************************************
C               **  STEP 7--                           **
C               **  BRANCH TO THE APPROPRIATE SUBCASE; **
C               **  THEN FORM THE RESPONSE VARIABLE    **
C               **  AND THE FACTORS                    **
C               *****************************************
C
      ISTEPN='7'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LICA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      J=0
      IMAX=NRIGHT(1)
      IF(NQ.LT.NRIGHT(1))IMAX=NQ
      DO660I=1,IMAX
        IF(ISUB(I).EQ.0)GOTO660
        J=J+1
C
        IJ=MAXN*(ICOLR(1)-1)+I
        IF(ICOLR(1).LE.MAXCOL)Y1(J)=V(IJ)
        IF(ICOLR(1).EQ.MAXCP1)Y1(J)=PRED(I)
        IF(ICOLR(1).EQ.MAXCP2)Y1(J)=RES(I)
        IF(ICOLR(1).EQ.MAXCP3)Y1(J)=YPLOT(I)
        IF(ICOLR(1).EQ.MAXCP4)Y1(J)=XPLOT(I)
        IF(ICOLR(1).EQ.MAXCP5)Y1(J)=X2PLOT(I)
        IF(ICOLR(1).EQ.MAXCP6)Y1(J)=TAGPLO(I)
C
        IJ=MAXN*(ICOLR(2)-1)+I
        IF(ICOLR(2).LE.MAXCOL)Y2(J)=V(IJ)
        IF(ICOLR(2).EQ.MAXCP1)Y2(J)=PRED(I)
        IF(ICOLR(2).EQ.MAXCP2)Y2(J)=RES(I)
        IF(ICOLR(2).EQ.MAXCP3)Y2(J)=YPLOT(I)
        IF(ICOLR(2).EQ.MAXCP4)Y2(J)=XPLOT(I)
        IF(ICOLR(2).EQ.MAXCP5)Y2(J)=X2PLOT(I)
        IF(ICOLR(2).EQ.MAXCP6)Y2(J)=TAGPLO(I)
C
  660 CONTINUE
      NS=J
C
      IF(ITYPE.EQ.'PARA')THEN
        Y3(1)=PVAR(3)
        NCALPT=1
      ELSE
        J=0
        DO670I=1,NRIGHT(3)
          J=J+1
C
          IJ=MAXN*(ICOLR(3)-1)+I
          IF(ICOLR(3).LE.MAXCOL)Y3(J)=V(IJ)
          IF(ICOLR(3).EQ.MAXCP1)Y3(J)=PRED(I)
          IF(ICOLR(3).EQ.MAXCP2)Y3(J)=RES(I)
          IF(ICOLR(3).EQ.MAXCP3)Y3(J)=YPLOT(I)
          IF(ICOLR(3).EQ.MAXCP4)Y3(J)=XPLOT(I)
          IF(ICOLR(3).EQ.MAXCP5)Y3(J)=X2PLOT(I)
          IF(ICOLR(3).EQ.MAXCP6)Y3(J)=TAGPLO(I)
  670   CONTINUE
        NCALPT=NRIGHT(3)
      ENDIF
C
C
C               ***********************************************
C               **  STEP 9--                                 **
C               **  CARRY OUT THE LINEAR CALIBRATION         **
C               ***********************************************
C
      ISTEPN='9'
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LICA')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LICA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,711)
  711   FORMAT('***** FROM DPLICA, AS WE ARE ABOUT TO CALL DPLIC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,712)NRIGHT(1),MAXN,NS,NUMVAR
  712   FORMAT('NRIGHT(1),MAXN,NS,NUMVAR = ',4I8)
        CALL DPWRST('XXX','BUG ')
        DO715I=1,NS
          WRITE(ICOUT,716)I,Y1(I),Y2(I)
  716     FORMAT('I,Y1(I),Y2(I) = ',I6,2X,2G15.7)
          CALL DPWRST('XXX','BUG ')
  715   CONTINUE
      ENDIF
C
      IH='ALPH'
      IH2='A   '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        ALPHA=0.05
      ELSE
        ALPHA=VALUE(ILOCP)
        IF(ALPHA.LE.0.0 .OR. ALPHA.GE.1.0)ALPHA=0.05
        IF(ALPHA.GT.0.5)ALPHA=1.0 - ALPHA
      ENDIF
C
      IWRITE='OFF'
      IF(ICASAN.EQ.'LICA')THEN
        CALL DPLIC2(Y1,Y2,Y3,NS,NCALPT,NUMVAR,
     1              Z1,Z2,Z3,Z4,Z6,IZ,
     1              IVARN1(1),IVARN2(1),IVARN1(2),IVARN2(2),
     1              ALPHA,MAXOBV,ISEED,
     1              EISEN,EISENL,EISENU,
     1              GRAYB,GRAYBL,GRAYBU,
     1              ANWK,ANWKL,ANWKU,
     1              PROPE,PROPEL,PROPEU,
     1              PRO2E,PRO2EL,PRO2EU,
     1              AINVR,AINVRL,AINVRU,
     1              AMLE,AMLEL,AMLEU,
     1              BOOTE,BOOTEL,BOOTEU,
     1              BOOTW,BOOTWL,BOOTWU,
     1              CBAYE,CBAYEL,CBAYEU,
     1              FBAYE,FBAYEL,FBAYEU,
     1              FIEL,FIELL,FIELU,
     1              FIEL2,FIEL2L,FIEL2U,
     1              FIELS,FIELSL,FIELSU,
     1              IWRITE,IFITAC,
     1              ICAPSW,ICAPTY,IFORSW,
     1              ISUBRO,IBUGA3,IERROR)
      ELSE
        CALL DPLIC3(Y1,Y2,Y3,NS,NCALPT,NUMVAR,
     1              Z1,Z2,Z3,Z4,Z5,Z6,IZ,
     1              IVARN1(1),IVARN2(1),IVARN1(2),IVARN2(2),
     1              ALPHA,MAXOBV,ISEED,
     1              EISEN,EISENL,EISENU,
     1              GRAYB,GRAYBL,GRAYBU,
     1              ANWK,ANWKL,ANWKU,
     1              PROPE,PROPEL,PROPEU,
     1              PRO2E,PRO2EL,PRO2EU,
     1              AINVR,AINVRL,AINVRU,
     1              AMLE,AMLEL,AMLEU,
     1              BOOTE,BOOTEL,BOOTEU,
     1              BOOTW,BOOTWL,BOOTWU,
     1              CBAYE,CBAYEL,CBAYEU,
     1              FBAYE,FBAYEL,FBAYEU,
     1              IWRITE,IFITAC,
     1              ICAPSW,ICAPTY,IFORSW,
     1              ISUBRO,IBUGA3,IERROR)
      ENDIF
C
C               ***************************************
C               **  STEP 10--                        **
C               **  UPDATE INTERNAL DATAPLOT TABLES  **
C               ***************************************
C
      ISTEPN='10'
      IF(IBUGA2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NCALPT.GT.1)GOTO9000
      IH='EISE'
      IH2='N   '
      VALUE0=EISEN
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='EISE'
      IH2='NLCL'
      VALUE0=EISENL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='EISE'
      IH2='NUCL'
      VALUE0=EISENU
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='GRAY'
      IH2='B   '
      VALUE0=GRAYB
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='GRAY'
      IH2='BLCL'
      VALUE0=GRAYBL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='GRAY'
      IH2='BUCL'
      VALUE0=GRAYBU
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='NWK '
      IH2='    '
      VALUE0=ANWK
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='NWKL'
      IH2='CL  '
      VALUE0=ANWKL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='NWKU'
      IH2='CL  '
      VALUE0=ANWKU
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='PROP'
      IH2='E   '
      VALUE0=PROPE
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='PROP'
      IH2='ELCL'
      VALUE0=PROPEL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='PROP'
      IH2='EUCL'
      VALUE0=PROPEU
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='PRO2'
      IH2='E   '
      VALUE0=PRO2E
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='PRO2'
      IH2='ELCL'
      VALUE0=PRO2EL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='PRO2'
      IH2='EUCL'
      VALUE0=PRO2EU
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='INVE'
      IH2='R   '
      VALUE0=AINVR
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='INVE'
      IH2='RLCL'
      VALUE0=AINVRL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='INVE'
      IH2='RUCL'
      VALUE0=AINVRU
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='MLE '
      IH2='    '
      VALUE0=AMLE
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='MLEL'
      IH2='CL  '
      VALUE0=AMLEL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='MLEU'
      IH2='CL  '
      VALUE0=AMLEU
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BOOT'
      IH2='E   '
      VALUE0=BOOTE
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BOOT'
      IH2='ELCL'
      VALUE0=BOOTEL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BOOT'
      IH2='EUCL'
      VALUE0=BOOTEU
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BOOT'
      IH2='W   '
      VALUE0=BOOTW
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BOOT'
      IH2='WLCL'
      VALUE0=BOOTWL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='BOOT'
      IH2='WUCL'
      VALUE0=BOOTWU
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='FIEL'
      IH2='LBC '
      VALUE0=FIEL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='FIEL'
      IH2='LLBC'
      VALUE0=FIELL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='FIEL'
      IH2='LUBC'
      VALUE0=FIELU
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='FIEL'
      IH2='L   '
      VALUE0=FIEL2
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='FIEL'
      IH2='LLCL'
      VALUE0=FIEL2L
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='FIEL'
      IH2='LUCL'
      VALUE0=FIEL2U
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='FIEL'
      IH2='LSIM'
      VALUE0=FIELS
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='FIEL'
      IH2='SLCL'
      VALUE0=FIELSL
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
      IH='FIEL'
      IH2='SUCL'
      VALUE0=FIELSU
      CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1IANS,IWIDTH,IBUGA3,IERROR)
C
CCCCC BAYES NOT IMPLEMENTED YET, UNCOMMENT WHEN ACTIVATED IN DPLIC2.
C
CCCCC IH='CBAY'
CCCCC IH2='E   '
CCCCC VALUE0=CBAYE
CCCCC CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
CCCCC1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
CCCCC1IANS,IWIDTH,IBUGA3,IERROR)
C
CCCCC IH='CBAY'
CCCCC IH2='ELCL'
CCCCC VALUE0=CBAYEL
CCCCC CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
CCCCC1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
CCCCC1IANS,IWIDTH,IBUGA3,IERROR)
C
CCCCC IH='CBAY'
CCCCC IH2='EUCL'
CCCCC VALUE0=CBAYEU
CCCCC CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
CCCCC1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
CCCCC1IANS,IWIDTH,IBUGA3,IERROR)
C
CCCCC IH='FBAY'
CCCCC IH2='E   '
CCCCC VALUE0=FBAYE
CCCCC CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
CCCCC1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
CCCCC1IANS,IWIDTH,IBUGA3,IERROR)
C
CCCCC IH='FBAY'
CCCCC IH2='ELCL'
CCCCC VALUE0=FBAYEL
CCCCC CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
CCCCC1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
CCCCC1IANS,IWIDTH,IBUGA3,IERROR)
C
CCCCC IH='FBAY'
CCCCC IH2='EUCL'
CCCCC VALUE0=FBAYEU
CCCCC CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
CCCCC1IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
CCCCC1IANS,IWIDTH,IBUGA3,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LICA')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLICA--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGA2,IBUGA3,IBUGQ
 9012   FORMAT('IBUGA2,IBUGA3,IBUGQ = ',A4,2X,A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NS,NUMVAR
 9014   FORMAT('NS,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLIC2(Y1,Y2,Y3,NPTS,NCALPT,NUMVAR,
     1                  Z1,Z2,Z3,Z4,Z6,IZ,
     1                  IHLEFT,IHLEF2,IHRIGH,IHRIG2,
     1                  ALPHA,MAXNXT,ISEED,
     1                  EISEN,EISENL,EISENU,
     1                  GRAYB,GRAYBL,GRAYBU,
     1                  ANWK,ANWKL,ANWKU,
     1                  PROPE,PROPEL,PROPEU,
     1                  PRO2E,PRO2EL,PRO2EU,
     1                  AINVR,AINVRL,AINVRU,
     1                  AMLE,AMLEL,AMLEU,
     1                  BOOTE,BOOTEL,BOOTEU,
     1                  BOOTW,BOOTWL,BOOTWU,
     1                  CBAYE,CBAYEL,CBAYEU,
     1                  FBAYE,FBAYEL,FBAYEU,
     1                  FIEL,FIELL,FIELU,
     1                  FIEL2,FIEL2L,FIEL2U,
     1                  FIELS,FIELSL,FIELSU,
     1                  IWRITE,IFITAC,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--PERFORM A LINEAR CALIBRATRION ANALYSIS.
C              A LINEAR CALIBRATION WILL BE PERFORMED USING THE
C              FOLLOWING TECHNIQUES:
C               1) CLASSICAL (EISENHART: INVERSE PREDICTION LIMITS)
C               2) GRAYBILL-IYER METHOD
C               3) NETER, WASSERMAN, AND KUTNER
C               4) PROPOGATION OF ERROR
C               5) PROPOGATION OF ERROR (AS GIVEN IN E-HANDBOOK)
C               6) INVERSE (KRUTCHKOFF)
C               7) MAXIMUM LIKELIHOOD
C               8) BOOTSTRAP (EFRON)
C               9) BOOTSTRAP (WU)
C              10) BAYESIAN, CONTROLLED X'S, IMPROPER PRIOR (HOADLEY)
C                  (NOT ON INITIAL IMPLEMENTATION)
C              11) BAYESIAN, RANDOM X'S, IMPROPER PRIOR (HOADLEY)
C                  (NOT ON INITIAL IMPLEMENTATION)
C              12) FIELER'S METHOD
C     PRINTING--YES
C     SUBROUTINES NEEDED--LINFIT, TPPF
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2003/7
C     ORIGINAL VERSION--JULY      2003.
C     UPDATED         --OCTOBER   2003. ADD SUPPORT FOR LATEX OUTPUT
C     UPDATED         --OCTOBER   2006. CALL LIST TO TPPF
C     UPDATED         --JULY      2010. USE DPDTA1, DPDTA2 TO PRINT
C                                       OUTPUT
C     UPDATED         --SEPTEMBER 2011. ADD FIELER'S METHOD
C     UPDATED         --NOVEMBER  2016. ADD E-HANDBOOK PROPOGATION OF
C                                       ERROR METHOD
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IFITAC
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
      CHARACTER*4 ICASJB
      CHARACTER*4 IOP
C
      DOUBLE PRECISION DSUM
      DOUBLE PRECISION DMEAN
C
C----------------------------------------------------------------
C
      REAL Y1(*)
      REAL Y2(*)
      REAL Y3(*)
C
      REAL Z1(*)
      REAL Z2(*)
      REAL Z3(*)
      REAL Z4(*)
      REAL Z6(*)
      INTEGER IZ(*)
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=15)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITL9
      CHARACTER*40 ITEXT(MAXROW)
      INTEGER      NCTEXT(MAXROW)
C
      PARAMETER(NUMCLI=7)
      PARAMETER(MAXLIN=2)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      REAL         AVALUE(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPLI'
      ISUBN2='C2  '
C
      EISEN=0.0
      EISENL=0.0
      EISENU=0.0
      GRAYB=0.0
      GRAYBL=0.0
      GRAYBU=0.0
      ANWK=0.0
      ANWKL=0.0
      ANWKU=0.0
      PROPE=0.0
      PROPEL=0.0
      PROPEU=0.0
      PRO2E=0.0
      PRO2EL=0.0
      PRO2EU=0.0
      AINVR=0.0
      AINVRL=0.0
      AINVRU=0.0
      AMLE=0.0
      AMLEL=0.0
      AMLEU=0.0
      BOOTE=0.0
      BOOTEL=0.0
      BOOTEU=0.0
      BOOTW=0.0
      BOOTWL=0.0
      BOOTWU=0.0
      CBAYE=0.0
      CBAYEL=0.0
      CBAYEU=0.0
      FBAYE=0.0
      FBAYEL=0.0
      FBAYEU=0.0
      FIEL=0.0
      FIELL=0.0
      FIELU=0.0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LIC2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLIC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPTS,NCALPT,NUMVAR
   52   FORMAT('NPTS,NCALPT,NUMVAR = ',3I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NPTS
          WRITE(ICOUT,56)I,Y1(I),Y2(I)
   56     FORMAT('I,Y1(I),Y2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        DO65I=1,NCALPT
          WRITE(ICOUT,66)I,Y3(I)
   66     FORMAT('I,Y3(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(NPTS.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN DPLIC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,102)
  102   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE LINEAR ',
     1         'CALIBRATION MUST BE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,103)NPTS
  103   FORMAT('      AT LEAST 2; THE ENTERED NUMBER OF ',
     1         'OBSERVATIONS = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               **************************************************
C               **  STEP 1.1--                                  **
C               **   OPEN THE STORAGE FILES                     **
C               **************************************************
C
      ISTEPN='1.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOP='OPEN'
      IFLAG1=1
      IFLAG2=1
      IFLAG3=1
      IFLAG4=1
      IFLAG5=0
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               ***********************************************
C               **  STEP 2--                                 **
C               **  COMPUTE THE LINEAR FIT AND PRINT OUT     **
C               **  SUMMARY OF FIT INFORMATION.              **
C               ***********************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IFITAC.EQ.'OFF')THEN
        CALL LINFI3(Y1,Y2,NPTS,
     1              A0,A1,RESSD,RESDF,CCXY,SDA0,SDA1,CCALBE,
     1              ISUBRO,IBUGA3,IERROR)
      ELSE
        CALL LINFIT(Y1,Y2,NPTS,
     1              A0,A1,RESSD,RESDF,CCXY,SDA0,SDA1,CCALBE,
     1              ISUBRO,IBUGA3,IERROR)
      ENDIF
      IF(IERROR.EQ.'YES')GOTO9000
C
C     COMPUTE SOME QUANTITIES NEEDED BY MULTIPLE METHODS
C     AND FOR SUMMARIZING THE FIT
C
      IF(SDA0.GT.0.0 .AND. SDA1.GT.0.0)THEN
        COVAB=CCALBE*SDA0*SDA1
      ELSE
        COVAB=0.0
      ENDIF
      IF(IFITAC.EQ.'OFF')THEN
        TA0=0.0
      ELSE
        TA0=A0/SDA0
      ENDIF
      TA1=A1/SDA1
      ATEMP=1.0 - (ALPHA/2.0)
      N=NPTS
      AN=REAL(N)
      NM2=N - 2
      IF(IFITAC.EQ.'OFF')NM2=N-1
      CALL TPPF(ATEMP,REAL(NM2),T)
      TSSQ=T*T*RESSD*RESSD
      CALL MEAN(Y1,N,IWRITE,YBAR,IBUGA3,IERROR)
      CALL SD(Y1,N,IWRITE,YSD,IBUGA3,IERROR)
      CALL VAR(Y1,N,IWRITE,YVAR,IBUGA3,IERROR)
      CALL MEAN(Y2,N,IWRITE,XBAR,IBUGA3,IERROR)
      CALL SD(Y2,N,IWRITE,XSD,IBUGA3,IERROR)
      CALL VAR(Y2,N,IWRITE,XVAR,IBUGA3,IERROR)
      CALL COV(Y1,Y2,N,IWRITE,COVXY,IBUGA3,IERROR)
      SSDX=(AN-1.0)*XVAR
      SSDY=(AN-1.0)*YVAR
      SSDXY=(AN-1.0)*COVXY
      RATIO=TSSQ/SSDX
C
C     COMPUTE COEFFICIENT OF VARIATION OF SLOPE
C
      CVSLOP=RESSD/(A1*SQRT(SSDX))
C
C     COMPUTE PROPOGATION OF ERROR BASED STANDARD UNCERTAINTY.
C
C
C
C     PRINT HEADER TABLE
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Linear Calibration Analysis'
      NCTITL=27
      ITITL9(1:30)='Summary of Linear Fit Between '
      ITITL9(31:34)=IHLEFT(1:4)
      ITITL9(35:38)=IHLEF2(1:4)
      ITITL9(39:43)=' and '
      ITITL9(44:47)=IHRIGH(1:4)
      ITITL9(48:51)=IHRIG2(1:4)
      NCTITZ=51
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(NPTS)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Intercept:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=A0
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='SD(Intercept):'
      NCTEXT(ICNT)=14
      AVALUE(ICNT)=SDA0
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='t(Intercept):'
      NCTEXT(ICNT)=13
      AVALUE(ICNT)=TA0
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Slope:'
      NCTEXT(ICNT)=18
      AVALUE(ICNT)=A1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='SD(Slope):'
      NCTEXT(ICNT)=10
      AVALUE(ICNT)=SDA1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='t(Slope):'
      NCTEXT(ICNT)=9
      AVALUE(ICNT)=TA1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='CV(Slope):'
      NCTEXT(ICNT)=10
      AVALUE(ICNT)=CVSLOP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Residual Standard Deviation:'
      NCTEXT(ICNT)=38
      AVALUE(ICNT)=RESSD
      IDIGIT(ICNT)=NUMDIG
C
      NUMROW=ICNT
      DO2310I=1,NUMROW
        NTOT(I)=15
 2310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITL9,NCTITZ,ITEXT,
     1            NCTEXT,AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
C               ***********************************************
C               **  STEP 3--                                 **
C               **  COMPUTE THE LINEAR CALIBRATION ESTIMATES **
C               **  USING VARIOUS METHODS.                   **
C               ***********************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOUNT=0
 3000 CONTINUE
      ICOUNT=ICOUNT+1
      IF(ICOUNT.GT.NCALPT)GOTO3999
      Y0=Y3(ICOUNT)
      X0=(Y0 - A0)/A1
C
C               ***********************************************
C               **  STEP 3.1--                               **
C               **  CLASSICAL: EISENHART INVERTED PREDICTION **
C               **  LIMITS.                                  **
C               ***********************************************
C
      ISTEPN='3.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      A=A1*A1 - RATIO
      B=2.0*(A0*A1 - A1*Y0 + RATIO*XBAR)
      C1=Y0*Y0 + A0*A0 - 2.0*A0*Y0
      C2=TSSQ*(1.0 + (1.0/AN) + (XBAR*XBAR)/SSDX)
      C=C1 - C2
      TERM3=B*B - 4.0*A*C
      TERM4=0.0
      IF(TERM3.GT.0.0)THEN
        TERM4=SQRT(TERM3)
        EISEN=X0
        EISENL=(-B - TERM4)/(2.0*A)
        EISENU=(-B + TERM4)/(2.0*A)
C
C       COMPUTE STANDARD ERROR AND EXPANDED UNCERTAINTY
C
        EEISEN=EISENU - EISEN
        CVISEN=T
        SEISEN=EEISEN/CVISEN
      ELSE
        EISENL=CPUMIN
        EISENU=CPUMIN
        EEISEN=CPUMIN
        CVISEN=CPUMIN
        SEISEN=CPUMIN
      ENDIF
C
C               ***********************************************
C               **  STEP 3.2--                               **
C               **  GRAYBILL AND IYER METHOD.                **
C               ***********************************************
C
      ISTEPN='3.2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      TERMA=A1*A1 - RATIO
      GRAYB=X0
      IF(TERMA.NE.0.0)THEN
        TERMB=TERMA*(1.0+(1.0/AN)) + ((Y0 - YBAR)**2)/SSDX
        TERMC=A1*(Y0-YBAR)
        TERMD=RESSD*T
        GRAYBL=XBAR + (TERMC - TERMD*SQRT(TERMB))/TERMA
        GRAYBU=XBAR + (TERMC + TERMD*SQRT(TERMB))/TERMA
        EEGRAY=GRAYBU - GRAYB
        CVGRAY=T
        SEGRAY=EEGRAY/CVGRAY
      ELSE
        GRAYBL=CPUMIN
        GRAYBU=CPUMIN
        EEGRAY=CPUMIN
        CVGRAY=CPUMIN
        SEGRAY=CPUMIN
      ENDIF
C
C               ***********************************************
C               **  STEP 3.3--                               **
C               **  NETER, WASSERMAN, AND KUTNER             **
C               ***********************************************
C
      ISTEPN='3.3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      TERM=1.0 + (1.0/AN) + ((X0 - XBAR)**2)/SSDX
      SDX0=(RESSD/ABS(A1))*SQRT(TERM)
      ANWK=X0
      ANWKL=X0 - T*SDX0
      ANWKU=X0 + T*SDX0
      SENWK=SDX0
      CVNWK=T
      EENWK=CVNWK*SENWK
C
C               ***********************************************
C               **  STEP 3.4--                               **
C               **  PROPOGATION OF ERROR                     **
C               ***********************************************
C
      ISTEPN='3.4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DSUM=0.0D0
      DO3410I=1,N
        DSUM=DSUM+DBLE(Y2(I))**2
 3410 CONTINUE
      DMEAN=DSUM/DBLE(N)
      AMNX2=REAL(DMEAN)
      TERM=AMNX2 + X0**2 + 2.0*X0*XBAR
      SDX0=(RESSD/(ABS(A1)*SQRT(SSDX)))*SQRT(TERM)
      PROPE=X0
      PROPEL=X0 - T*SDX0
      PROPEU=X0 + T*SDX0
      SEPROP=SDX0
      CVPROP=T
      EEPROP=CVPROP*SEPROP
C
C               ***********************************************
C               **  STEP 3.5--                               **
C               **  INVERSE (KRUTCHKOFF)                     **
C               ***********************************************
C
      ISTEPN='3.5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL LINFIT(Y2,Y1,NPTS,
     1B0,B1,RESSDX,RESDFX,CCXY2,SDB0,SDB1,CCALB2,
     1ISUBRO,IBUGA3,IERROR)
C
      C=T*RESSDX*(1.0 + (1.0/AN) + ((Y0-YBAR)**2)/SSDY)
      AINVR=XBAR + (SSDXY/SSDY)*(Y0-YBAR)
      AINVRL=AINVR - C
      AINVRU=AINVR + C
      SEKRUT=RESSDX*(1.0 + (1.0/AN) + ((Y0-YBAR)**2)/SSDY)
      CVKRUT=T
      EEKRUT=C
C
C               ***********************************************
C               **  STEP 3.6--                               **
C               **  MAXIMUM LIKELIHOOD                       **
C               ***********************************************
C
      ISTEPN='3.6'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO3610I=1,NPTS
        Z1(I)=Y2(I) - XBAR
 3610 CONTINUE
C
      CALL LINFIT(Y1,Z1,NPTS,
     1B0,B1,RESSDX,RESDFX,CCXY2,SDB0,SDB1,CCALB2,
     1ISUBRO,IBUGA3,IERROR)
C
      AMLE=0.0
      IF(B1.NE.0.0)AMLE=(Y0 - (B0-B1*XBAR))/B1
C
      NUMSIM=10000
      CALL NORRAN(NUMSIM,ISEED,Z2)
      CALL NORRAN(NUMSIM,ISEED,Z3)
C
      DO3620I=1,NUMSIM
        Z2(I)=SDB0*Z2(I) + B0
        Z3(I)=SDB1*Z3(I) + B1
        IF(Z3(I).NE.0.0)THEN
          Z4(I)=(Y0 - (Z2(I) - Z3(I)*XBAR))/Z3(I)
        ELSE
          Z4(I)=0.0
        ENDIF
 3620 CONTINUE
C
      CALL SD(Z4,NUMSIM,IWRITE,SEMLE,IBUGA3,IERROR)
      P100=100.0*(ALPHA/2.0)
      CALL PERCEN(P100,Z4,NUMSIM,IWRITE,Z1,MAXNXT,
     1            AMLEL,IBUGA3,IERROR)
      P100=100.0*(1.0 - (ALPHA/2.0))
      CALL PERCEN(P100,Z4,NUMSIM,IWRITE,Z1,MAXNXT,
     1            AMLEU,IBUGA3,IERROR)
C
      EEMLE=MAX((AMLEU - AMLE),(AMLE - AMLEL))
      CVMLE=EEMLE/SEMLE
C
C               ***********************************************
C               **  STEP 3.7--                               **
C               **  BOOTSTRAP (EFROM RESAMPLING, I.E.,       **
C               **  RESAMPLE THE RESIDUALS)                  **
C               ***********************************************
C
      ISTEPN='3.7'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL LINFIT(Y1,Y2,NPTS,
     1            B0,B1,XRESSD,XRESDF,CCXY,SDB0,SDB1,CCALBE,
     1            ISUBRO,IBUGA3,IERROR)
      DO3711I=1,NPTS
        Z1(I)=Y1(I)-(B0+B1*Y2(I))
 3711 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')THEN
         WRITE(ICOUT,3712)B0,B1
 3712    FORMAT('B0,B1 = ',2G15.7)
         CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ICASJB='BOOT'
      NRESAM=1000
C
      DO3720IRESAM=1,NRESAM
        CALL DPJBS3(Z1,NPTS,ICASJB,IRESAM,ISEED,Z2,NPTS2,IZ,
     1              Z6,IBUGA3,IERROR)
        DO3722I=1,NPTS2
          Z3(I)=(B0+B1*Y2(I))+Z2(I)
 3722   CONTINUE
        CALL LINFIT(Z3,Y2,NPTS2,
     1      C0,C1,XRESSD,XRESDF,CCXY,SDC0,SDC1,CCALBE,
     1      ISUBRO,IBUGA3,IERROR)
        Z4(IRESAM)=(Y0-C0)/C1
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')THEN
          WRITE(ICOUT,3725)IERROR,IRESAM,C0,C1,Z4(IRESAM)
 3725     FORMAT('IERROR,IRESAM,C0,C1,Z4(IRESAM) = ',A4,I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
 3720 CONTINUE
C
      BOOTE=X0
      CALL SD(Z4,NRESAM,IWRITE,SEBOOE,IBUGA3,IERROR)
      P100=100.0*(ALPHA/2.0)
      CALL PERCEN(P100,Z4,NRESAM,IWRITE,Z3,MAXNXT,
     1            BOOTEL,IBUGA3,IERROR)
      P100=100.0*(1.0 - ALPHA/2.0)
      CALL PERCEN(P100,Z4,NRESAM,IWRITE,Z3,MAXNXT,
     1            BOOTEU,IBUGA3,IERROR)
C
      EEBOOE=MAX((BOOTEU - BOOTE),(BOOTE - BOOTEL))
      CVBOOE=EEBOOE/SEBOOE
C
C               ***********************************************
C               **  STEP 3.8--                               **
C               **  BOOTSTRAP (WU RESAMPLING, I.E., RESAMPLE **
C               **  THE ORIGINAL (X,Y) DATA                  **
C               ***********************************************
C
      ISTEPN='3.8'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASJB='BOOT'
      NRESAM=1000
C
      DO3810IRESAM=1,NRESAM
        CALL DPJBS3(Y1,NPTS,ICASJB,IRESAM,ISEED,Z1,NPTS2,IZ,
     1              Z6,IBUGA3,IERROR)
        DO3820IJ=1,NPTS2
          Z2(IJ)=Y2(IZ(IJ))
 3820   CONTINUE
        CALL LINFIT(Z1,Z2,NPTS2,
     1       C0,C1,XRESSD,XRESDF,CCXY,SDC0,SDC1,CCALBE,
     1       ISUBRO,IBUGA3,IERROR)
        Z4(IRESAM)=(Y0-C0)/C1
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')THEN
          WRITE(ICOUT,3822)IRESAM,C0,C1,Z4(IRESAM)
 3822     FORMAT('IRESAM,C0,C1,Z4(IRESAM) = ',I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
 3810 CONTINUE
C
      BOOTW=X0
      CALL SD(Z4,NRESAM,IWRITE,SEBOOW,IBUGA3,IERROR)
      P100=100.0*(ALPHA/2.0)
      CALL PERCEN(P100,Z4,NRESAM,IWRITE,Z3,MAXNXT,
     1            BOOTWL,IBUGA3,IERROR)
      P100=100.0*(1.0 - ALPHA/2.0)
      CALL PERCEN(P100,Z4,NRESAM,IWRITE,Z3,MAXNXT,
     1            BOOTWU,IBUGA3,IERROR)
C
      EEBOOW=MAX((BOOTWU - BOOTW),(BOOTW - BOOTWL))
      CVBOOW=EEBOOW/SEBOOW
C
C               ***********************************************
C               **  STEP 3.9--FIELLER'S METHOD AS DOCUMENTED **
C               **            ON PAGE 178-179 OF             **
C               **            RUPERT MILLER JR., "BEYOND     **
C               **            ANOVA, BASICS OF APPLIED       **
C               **            STATISTICS", JOHN WILEY & SONS.**
C               ***********************************************
C
      ISTEPN='3.9'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     COMPUTE BOTH THE BIAS CORRECTED AND BIAS UNCORRECTED METHODS
C
      NU1=1
      NU2=N-2
      ALPHAT=1.0 - ALPHA
      CALL FPPF(ALPHAT,NU1,NU2,FF)
      E=FF*RESSD**2/(A1**2*SSDX)
      DEN=A1*(1.0 - E)
      TERM1=(1.0/AN)*(1.0 - E) + (Y0 - YBAR)**2/(A1**2*SSDX)
      ANUM=SQRT(FF)*RESSD*SQRT(TERM1)
C
C     BIAS CORRECTED (EQUATION 5.32 IN MILLER)
C
      FIEL=X0
      ATEMP1=XBAR + ((Y0 - YBAR) - ANUM)/DEN
      ATEMP2=XBAR + ((Y0 - YBAR) + ANUM)/DEN
      FIELL=MIN(ATEMP1,ATEMP2)
      FIELU=MAX(ATEMP1,ATEMP2)
      SEFIBC=RESSD*SQRT(TERM1)/DEN
      EEFIBC=MAX((FIELU - FIEL),(FIEL - FIELL))
      CVFIBC=EEFIBC/SEFIBC
C
C     NO BIAS CORRECTION (EQUATION 5.35 IN MILLER)
C     SHOULD BE ADEQUATE IF CV(SLOPE) < 0.10
C
      TERM1=(SQRT(FF)*RESSD/ABS(A1))
      TERM2=(1.0/AN) + (Y0 - YBAR)**2/(A1**2*SSDX)
      TERM3=TERM1*SQRT(TERM2)
      FIEL2=X0
      ATEMP1=X0 - TERM3
      ATEMP2=X0 + TERM3
      FIEL2L=MIN(ATEMP1,ATEMP2)
      FIEL2U=MAX(ATEMP1,ATEMP2)
      SEFIEL=(RESSD/ABS(A1))*SQRT(TERM2)
      EEFIEL=MAX((FIEL2U - FIEL),(FIEL - FIEL2L))
      CVFIEL=EEFIEL/SEFIEL
C
C     SIMULTANEOUS CALIBRATION INTERVAL
C
      NU1=2
      NU2=N-2
      ALPHAT=1.0 - ALPHA
      CALL FPPF(ALPHAT,NU1,NU2,FF)
      E=2.0*FF*RESSD**2/(A1**2*SSDX)
      DEN=A1*(1.0 - E)
      TERM1=(1.0/AN)*(1.0 - E) + (Y0 - YBAR)**2/(A1**2*SSDX)
      ANUM=SQRT(2.0*FF)*RESSD*SQRT(TERM1)
      FIELS=X0
      ATEMP1=XBAR + ((Y0 - YBAR) - ANUM)/DEN
      ATEMP2=XBAR + ((Y0 - YBAR) + ANUM)/DEN
      FIELSL=MIN(ATEMP1,ATEMP2)
      FIELSU=MAX(ATEMP1,ATEMP2)
      SEFISM=RESSD*SQRT(TERM1)/DEN
      EEFISM=MAX((FIELSU - FIEL),(FIEL - FIELSL))
      CVFISM=EEFISM/SEFISM
C
C               ***********************************************
C               **  STEP 3.10--                              **
C               **  PROPOGATION OF ERROR AS IMPLEMENTED IN   **
C               **  E-HANDBOOK (MPC3673.HTM)                 **
C               ***********************************************
C
      ISTEPN='3.10'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      TERM1=(RESSD/A1)**2
      TERM2=(SDA0/A1)**2
      TERM3=((Y0-A0)**2)*(SDA1**2)/(A1**4)
      TERM3A=-(Y0-A0)/A1**2
      TERM3=TERM3A**2*(SDA1**2)
      TERM4=2.0*(Y0-A0)*COVAB/(A1**3)
      TERM=TERM1 + TERM2 + TERM3 + TERM4
      SDX0=SQRT(TERM)
      PRO2E=X0
      PRO2EL=X0 - T*SDX0
      PRO2EU=X0 + T*SDX0
      SEPRO2=SDX0
      CVPRO2=T
      EEPRO2=T*SDX0
C
C               ***********************************************
C               **  STEP 4--                                 **
C               **  PRINT OUT THE RESULTS.                   **
C               ***********************************************
C
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IMETHD=1
      WRITE(IOUNI1,5401)IMETHD,Y0,EISEN,EISENL,EISENU
      IMETHD=2
      WRITE(IOUNI1,5401)IMETHD,Y0,GRAYB,GRAYBL,GRAYBU
      IMETHD=3
      WRITE(IOUNI1,5401)IMETHD,Y0,ANWK,ANWKL,ANWKU
      IMETHD=4
      WRITE(IOUNI1,5401)IMETHD,Y0,PROPE,PROPEL,PROPEU
      IMETHD=5
      WRITE(IOUNI1,5401)IMETHD,Y0,PRO2E,PRO2EL,PRO2EU
      IMETHD=6
      WRITE(IOUNI1,5401)IMETHD,Y0,AINVR,AINVRL,AINVRU
      IMETHD=7
      WRITE(IOUNI1,5401)IMETHD,Y0,AMLE,AMLEL,AMLEU
      IMETHD=8
      WRITE(IOUNI1,5401)IMETHD,Y0,BOOTE,BOOTEL,BOOTEU
      IMETHD=9
      WRITE(IOUNI1,5401)IMETHD,Y0,BOOTW,BOOTWL,BOOTWU
      IMETHD=10
      WRITE(IOUNI1,5401)IMETHD,Y0,FIEL,FIELL,FIELU
      IMETHD=11
      WRITE(IOUNI1,5401)IMETHD,Y0,FIEL2,FIEL2L,FIEL2U
      IMETHD=12
      WRITE(IOUNI1,5401)IMETHD,Y0,FIELS,FIELSL,FIELSU
 5401 FORMAT(I2,2X,4E15.7)
      WRITE(IOUNI2,5411)Y0,EISEN,GRAYB,ANWK,PROPE,PRO2E,AINVR,AMLE,
     1                  BOOTE,BOOTW,FIEL,FIEL2,FIELS
      WRITE(IOUNI3,5411)Y0,EISENL,GRAYBL,ANWKL,PROPEL,PRO2EL,AINVRL,
     1                  AMLEL,BOOTEL,BOOTWL,FIELL,FIEL2L,FIELSL
      WRITE(IOUNI4,5411)Y0,EISENU,GRAYBU,ANWKU,PROPEU,PRO2EU,AINVRU,
     1                  AMLEU,BOOTEU,BOOTWU,FIELU,FIEL2U,FIELSU
 5411 FORMAT(12E15.7)
C
      ATEMP=1.0-ALPHA
      ITEMP=INT(100.*ATEMP + 0.00001)
C
      IF(ICOUNT.EQ.1)THEN
        ITITLE(1:39)='Linear Calibration Summary'
        NCTITL=26
        ITITL9(1:6)='Y0 = '
        WRITE(ITITL9(7:21),'(G15.7)')Y0
        NCTIT9=21
      ELSE
        ITITLE(1:39)=' '
        NCTITL=0
        ITITL9(1:6)='Y0 = '
        WRITE(ITITL9(7:21),'(G15.7)')Y0
        NCTIT9=21
      ENDIF
      NUMLIN=2
      NUMCOL=6
      ITITL2(1,1)=' '
      NCTIT2(1,1)=0
      ITITL2(2,1)='Method'
      NCTIT2(2,1)=6
      ITITL2(1,2)=' '
      NCTIT2(1,2)=0
      ITITL2(2,2)='X0'
      NCTIT2(2,2)=2
      WRITE(ITITL2(1,3)(1:2),'(I2)')ITEMP
      ITITL2(1,3)(3:3)='%'
      NCTIT2(1,3)=3
      ITITL2(2,3)='Lower Limit'
      NCTIT2(2,3)=11
      WRITE(ITITL2(1,4)(1:2),'(I2)')ITEMP
      ITITL2(1,4)(3:3)='%'
      NCTIT2(1,4)=3
      ITITL2(2,4)='Upper Limit'
      NCTIT2(2,4)=11
      ITITL2(1,5)='Standard'
      NCTIT2(1,5)=8
      ITITL2(2,5)='Error'
      NCTIT2(2,5)=5
      ITITL2(1,6)=' '
      NCTIT2(1,6)=0
      ITITL2(2,6)='Coverage'
      NCTIT2(2,6)=8
      ITITL2(1,7)='Expanded'
      NCTIT2(1,7)=8
      ITITL2(2,7)='Error'
      NCTIT2(2,7)=5
C
      NMAX=0
      DO2521I=1,NUMCOL+1
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.1)THEN
          NTOT(I)=40
          ALIGN(I)='l'
        ENDIF
        NMAX=NMAX+NTOT(I)
        IDIGIT(I)=NUMDIG
 2521 CONTINUE
C
      ICNT=0
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' 1. Inverse Prediction Limits:'
      NCTEXT(ICNT)=30
      AMAT(ICNT,1)=EISEN
      AMAT(ICNT,2)=EISENL
      AMAT(ICNT,3)=EISENU
      AMAT(ICNT,4)=SEISEN
      AMAT(ICNT,5)=CVISEN
      AMAT(ICNT,6)=EEISEN
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' 2. Graybill-Iyer:'
      NCTEXT(ICNT)=19
      AMAT(ICNT,1)=GRAYB
      AMAT(ICNT,2)=GRAYBL
      AMAT(ICNT,3)=GRAYBU
      AMAT(ICNT,4)=SEGRAY
      AMAT(ICNT,5)=CVGRAY
      AMAT(ICNT,6)=EEGRAY
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' 3. Neter-Wasserman-Kutner:'
      NCTEXT(ICNT)=28
      AMAT(ICNT,1)=ANWK
      AMAT(ICNT,2)=ANWKL
      AMAT(ICNT,3)=ANWKU
      AMAT(ICNT,4)=SENWK
      AMAT(ICNT,5)=CVNWK
      AMAT(ICNT,6)=EENWK
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' 4. Propogation of Error:'
      NCTEXT(ICNT)=26
      AMAT(ICNT,1)=PROPE
      AMAT(ICNT,2)=PROPEL
      AMAT(ICNT,3)=PROPEU
      AMAT(ICNT,4)=SEPROP
      AMAT(ICNT,5)=CVPROP
      AMAT(ICNT,6)=EEPROP
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' 5. Propogation of Error (e-Handbook):'
      NCTEXT(ICNT)=38
      AMAT(ICNT,1)=PRO2E
      AMAT(ICNT,2)=PRO2EL
      AMAT(ICNT,3)=PRO2EU
      AMAT(ICNT,4)=SEPRO2
      AMAT(ICNT,5)=CVPRO2
      AMAT(ICNT,6)=EEPRO2
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' 6. Inverse (Krutchkoff):'
      NCTEXT(ICNT)=26
      AMAT(ICNT,1)=AINVR
      AMAT(ICNT,2)=AINVRL
      AMAT(ICNT,3)=AINVRU
      AMAT(ICNT,4)=SEKRUT
      AMAT(ICNT,5)=CVKRUT
      AMAT(ICNT,6)=EEKRUT
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' 7. Maximum Likelihood:'
      NCTEXT(ICNT)=24
      AMAT(ICNT,1)=AMLE
      AMAT(ICNT,2)=AMLEL
      AMAT(ICNT,3)=AMLEU
      AMAT(ICNT,4)=SEMLE
      AMAT(ICNT,5)=CVMLE
      AMAT(ICNT,6)=EEMLE
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' 8. Bootstrap (Residuals):'
      NCTEXT(ICNT)=27
      AMAT(ICNT,1)=BOOTE
      AMAT(ICNT,2)=BOOTEL
      AMAT(ICNT,3)=BOOTEU
      AMAT(ICNT,4)=SEBOOE
      AMAT(ICNT,5)=CVBOOE
      AMAT(ICNT,6)=EEBOOE
C
      ICNT=ICNT+1
      ITEXT(ICNT)=' 9. Bootstrap (Data):'
      NCTEXT(ICNT)=22
      AMAT(ICNT,1)=BOOTW
      AMAT(ICNT,2)=BOOTWL
      AMAT(ICNT,3)=BOOTWU
      AMAT(ICNT,4)=SEBOOW
      AMAT(ICNT,5)=CVBOOW
      AMAT(ICNT,6)=EEBOOW
C
      ICNT=ICNT+1
      ITEXT(ICNT)='10. Fieller (Bias Corrected):'
      NCTEXT(ICNT)=29
      AMAT(ICNT,1)=FIEL
      AMAT(ICNT,2)=FIELL
      AMAT(ICNT,3)=FIELU
      AMAT(ICNT,4)=SEFIBC
      AMAT(ICNT,5)=CVFIBC
      AMAT(ICNT,6)=EEFIBC
C
      ICNT=ICNT+1
      ITEXT(ICNT)='11. Fieller (No Bias Correction):'
      NCTEXT(ICNT)=33
      AMAT(ICNT,1)=FIEL2
      AMAT(ICNT,2)=FIEL2L
      AMAT(ICNT,3)=FIEL2U
      AMAT(ICNT,4)=SEFIEL
      AMAT(ICNT,5)=CVFIEL
      AMAT(ICNT,6)=EEFIEL
C
      ICNT=ICNT+1
      ITEXT(ICNT)='12. Fieller (Simultaneous):'
      NCTEXT(ICNT)=27
      AMAT(ICNT,1)=FIELS
      AMAT(ICNT,2)=FIELSL
      AMAT(ICNT,3)=FIELSU
      AMAT(ICNT,4)=SEFISM
      AMAT(ICNT,5)=CVFISM
      AMAT(ICNT,6)=EEFISM
C
      IWHTML(1)=250
      IWHTML(2)=150
      IWHTML(3)=150
      IWHTML(4)=150
      IWHTML(5)=150
      IWHTML(6)=150
      IWHTML(7)=150
      IWRTF(1)=3000
      IWRTF(2)=IWRTF(1)+2000
      IWRTF(3)=IWRTF(2)+2000
      IWRTF(4)=IWRTF(3)+2000
      IWRTF(5)=IWRTF(4)+2000
      IWRTF(6)=IWRTF(5)+2000
      IWRTF(7)=IWRTF(6)+2000
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA2(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            ITEXT,NCTEXT,AMAT,MAXROW,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
      GOTO3000
C
 3999 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
C
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8102)
 8102   FORMAT('FOLLOWING INFORMATION WRITTEN OUT TO FILES.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8112)
 8112   FORMAT('DPST1F.DAT: METHOD (1 - 8), Y0, X0, LOWER LIMIT, ',
     1         'UPPER LIMIT')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8122)
 8122   FORMAT('DPST2F.DAT: Y0 AND X0 FOR ALL EIGHT METHODS')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8132)
 8132   FORMAT('DPST3F.DAT: Y0 AND LOWER LIMIT FOR ALL EIGHT METHODS')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8142)
 8142   FORMAT('DPST4F.DAT: Y0 AND UPPER LIMIT FOR ALL EIGHT METHODS')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
C
      ENDIF
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LIC2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLIC2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGA3,IERROR
 9012   FORMAT('IBUGA3,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPTS,NUMVAR
 9013   FORMAT('NPTS,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLIC3(Y1,Y2,Y3,NPTS,NCALPT,NUMVAR,
     1                  Z1,Z2,Z3,Z4,Z5,Z6,IZ,
     1                  IHLEFT,IHLEF2,IHRIGH,IHRIG2,
     1                  ALPHA,MAXNXT,ISEED,
     1                  EISEN,EISENL,EISENU,
     1                  GRAYB,GRAYBL,GRAYBU,
     1                  ANWK,ANWKL,ANWKU,
     1                  PROPE,PROPEL,PROPEU,
     1                  PRO2E,PRO2EL,PRO2EU,
     1                  AINVR,AINVRL,AINVRU,
     1                  AMLE,AMLEL,AMLEU,
     1                  BOOTE,BOOTEL,BOOTEU,
     1                  BOOTW,BOOTWL,BOOTWU,
     1                  CBAYE,CBAYEL,CBAYEU,
     1                  FBAYE,FBAYEL,FBAYEU,
     1                  IWRITE,IFITAC,
     1                  ICAPSW,ICAPTY,IFORSW,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--PERFORM A QUADRATIC CALIBRATRION ANALYSIS.
C              A QUADRATIC CALIBRATION WILL BE PERFORMED USING THE
C              FOLLOWING TECHNIQUES:
C               1) CLASSICAL (EISENHART: INVERSE PREDICTION LIMITS)
C               2) PROPOGATION OF ERROR (AS GIVEN IN E-HANDBOOK)
C               2) BOOTSTRAP (EFRON)
C               3) BOOTSTRAP (WU)
C     PRINTING--YES
C     SUBROUTINES NEEDED--QUAFIT, TPPF
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2003/7
C     ORIGINAL VERSION--JULY      2003.
C     UPDATED         --OCTOBER   2003. ADD SUPPORT FOR LATEX OUTPUT
C     UPDATED         --OCTOBER   2006. CALL LIST TO TPPF
C     UPDATED         --JULY      2010. USE DPDTA1, DPDTA2 TO PRINT
C                                       OUTPUT
C     UPDATED         --NOVEMBER  2016. ADD PROPOGATION OF ERROR
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IFORSW
      CHARACTER*4 IFITAC
      CHARACTER*4 ICASAN
      CHARACTER*4 ISUBRO
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISTEPN
      CHARACTER*4 IHP
      CHARACTER*4 IHP2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 IHLEFT
      CHARACTER*4 IHLEF2
      CHARACTER*4 IHRIGH
      CHARACTER*4 IHRIG2
C
      CHARACTER*4 ICASJB
      CHARACTER*80 ISTRT
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=15)
      CHARACTER*60 ITITLE
      CHARACTER*60 ITITL9
      CHARACTER*40 ITEXT(MAXROW)
      INTEGER      NCTEXT(MAXROW)
C
      PARAMETER(NUMCLI=7)
      PARAMETER(MAXLIN=2)
      CHARACTER*60 ITITL2(MAXLIN,NUMCLI)
      INTEGER      NCTIT2(MAXLIN,NUMCLI)
      INTEGER      IWHTML(NUMCLI)
      INTEGER      IWRTF(NUMCLI)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      CHARACTER*4  ALIGN(NUMCLI)
      CHARACTER*4  VALIGN(NUMCLI)
      REAL         AMAT(MAXROW,NUMCLI)
      REAL         AVALUE(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*4 IOP
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
C
      CHARACTER*4 IBUGG2
      CHARACTER*4 IBUGG3
      CHARACTER*4 IBUGCO
      CHARACTER*4 IBUGEV
      CHARACTER*4 IBUGQ
      CHARACTER*4 ICOMT
      CHARACTER*4 ICOM2T
      PARAMETER (MAXART=20)
      CHARACTER*4 ITHARG
      CHARACTER*4 ITHAR2
      CHARACTER*4 ITARGT
      CHARACTER*4 IANST
      DIMENSION ITHARG(MAXART)
      DIMENSION ITHAR2(MAXART)
      DIMENSION ITARG(MAXART)
      DIMENSION TARG(MAXART)
      DIMENSION ITARGT(MAXART)
      DIMENSION IANST(MAXSTR)
C
C----------------------------------------------------------------
C
      REAL Y1(*)
      REAL Y2(*)
      REAL Y3(*)
C
      REAL Z1(*)
      REAL Z2(*)
      REAL Z3(*)
      REAL Z4(*)
      REAL Z5(*)
      REAL Z6(*)
      INTEGER IZ(*)
C
      DOUBLE PRECISION DX
      DOUBLE PRECISION DA0
      DOUBLE PRECISION DA1
      DOUBLE PRECISION DA2
      DOUBLE PRECISION DC0
      DOUBLE PRECISION DC1
      DOUBLE PRECISION DC2
      DOUBLE PRECISION DC3
      DOUBLE PRECISION DC4
      DOUBLE PRECISION DC6
      DOUBLE PRECISION DEPS
      DOUBLE PRECISION DSIG
      DOUBLE PRECISION DZERO
      DOUBLE PRECISION DY0
      DOUBLE PRECISION DXL
      DOUBLE PRECISION DXR
      DOUBLE PRECISION DTERM1
      DOUBLE PRECISION DTERM2
      DOUBLE PRECISION DTERM3
      DOUBLE PRECISION DXRML
      DOUBLE PRECISION DXTEMP
      DOUBLE PRECISION DFXL
      DOUBLE PRECISION DFXR
      DOUBLE PRECISION DFCS
      DOUBLE PRECISION DA0SD
      DOUBLE PRECISION DA1SD
      DOUBLE PRECISION DA2SD
      DOUBLE PRECISION DRESSD
      DOUBLE PRECISION XPYP
      DOUBLE PRECISION XPA0
      DOUBLE PRECISION XPA1
      DOUBLE PRECISION XPA2
      DOUBLE PRECISION DVAR1
      DOUBLE PRECISION DVAR2
      DOUBLE PRECISION DSE
C
      CHARACTER*4 IPRNT2
      CHARACTER*4 IFEED2
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      IPRNT2=IPRINT
      ISUBN1='DPLI'
      ISUBN2='C3  '
      IFEED2=IFEEDB
C
      EISEN=0.0
      EISENL=0.0
      EISENU=0.0
      EEISEN=0.0
      EEBOOW=0.0
      EEBOOE=0.0
      CVISEN=0.0
      CVBOOW=0.0
      CVBOOE=0.0
      GRAYB=0.0
      GRAYBL=0.0
      GRAYBU=0.0
      ANWK=0.0
      ANWKL=0.0
      ANWKU=0.0
      PROPE=0.0
      PROPEL=0.0
      PROPEU=0.0
      AINVR=0.0
      AINVRL=0.0
      AINVRU=0.0
      AMLE=0.0
      AMLEL=0.0
      AMLEU=0.0
      BOOTE=0.0
      BOOTEL=0.0
      BOOTEU=0.0
      BOOTW=0.0
      BOOTWL=0.0
      BOOTWU=0.0
      CBAYE=0.0
      CBAYEL=0.0
      CBAYEU=0.0
      FBAYE=0.0
      FBAYEL=0.0
      FBAYEU=0.0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LIC3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLIC3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NPTS,NCALPT,NUMVAR
   52   FORMAT('NPTS,NCALPT,NUMVAR = ',3I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)PRO2EL,PRO2EU
   53   FORMAT('PRO2EL,PRO2EU = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,NPTS
          WRITE(ICOUT,56)I,Y1(I),Y2(I)
   56     FORMAT('I,Y1(I),Y2(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
        DO65I=1,NCALPT
          WRITE(ICOUT,66)I,Y3(I)
   66     FORMAT('I,Y3(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(NPTS.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN QUADRATIC CALIBRATION--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,102)
  102   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE QUADRATIC ',
     1         'CALIBRATION MUST BE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,103)NPTS
  103   FORMAT('      AT LEAST 2; THE ENTERED NUMBER OF ',
     1         'OBSERVATIONS = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C               ********************************************
C               **  STEP 1B--                             **
C               **  PERFORM A QUADRATIC FIT ON ORIGINAL   **
C               **  DATA; SAVE RELEVANT PARAMETERS        **
C               **  (COEFFICIENTS, COEFFICIENT SD'S,      **
C               **  T-VALUES, RESSD)                      **
C               ********************************************
C
      ISTEPN='1.B'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C
C  SAVE ORIGINAL COMMAND LINE
C
      ICOMT=ICOM
      ICOM2T=ICOM2
      NUMART=NUMARG
      DO100I=1,NUMARG
        ITHARG(I)=IHARG(I)
        ITHAR2(I)=IHARG2(I)
        ITARG(I)=IARG(I)
        TARG(I)=ARG(I)
        ITARGT(I)=IARGT(I)
  100 CONTINUE
      DO112I=1,MAXSTR
        IANST(I)=IANS(I)
  112 CONTINUE
      IWIDT=IWIDTH
C
C     GENERATE A "QUADRATIC FIT Y X" COMMAND
C
C     2016/11: IF INTERCEPT TERM NOT INCLUDED, THEN GENERATE
C
C                 FIT Y = A1*X + A2*X**2
C
      IF(IFITAC.EQ.'OFF')THEN
        ISTRT(1:4)='FIT '
        ISTRT(5:8)=IHLEFT
        ISTRT(9:12)=IHLEF2
        ISTRT(13:18)=' = A1*'
        ISTRT(19:22)=IHRIGH
        ISTRT(23:26)=IHRIG2
        ISTRT(27:29)=' + '
        ISTRT(30:33)=' A2*'
        ISTRT(34:37)=IHRIGH
        ISTRT(38:41)=IHRIG2
        ISTRT(42:44)='**2'
        IWIDTH=44
        DO117JJ=1,IWIDTH
          IANS(JJ)=ISTRT(JJ:JJ)
 117    CONTINUE
        ICOM='FIT '
        ICOM2='    '
        IHARG(1)=IHLEFT
        IHARG2(1)=IHLEF2
        IHARG(2)='=   '
        IHARG2(2)='   '
        IHARG(3)='A1* '
        IHARG(3)(4:4)=IHRIGH(1:1)
        IHARG2(3)(1:3)=IHRIGH(2:4)
        IHARG2(3)(4:4)=IHRIG2(1:1)
        IHARG(4)=' +  '
        IHARG2(4)='    '
        IHARG(5)='A2* '
        IHARG(5)(4:4)=IHRIGH(1:1)
        IHARG2(5)(1:3)=IHRIGH(2:4)
        IHARG2(5)(4:4)=IHRIG2(1:1)
        NUMARG=5
      ELSE
        ICOM='QUAD'
        ICOM2='RATI'
        IHARG(1)='FIT '
        IHARG2(1)='    '
        IHARG(2)=IHLEFT
        IHARG2(2)=IHLEF2
        IHARG(3)=IHRIGH
        IHARG2(3)=IHRIG2
        NUMARG=3
      ENDIF
      ICASAN='FIT'
      IBUGG2='OFF'
      IBUGG3='OFF'
      IBUGCO='OFF'
      IBUGEV='OFF'
      IBUGQ='OFF'
C
      IPRINT='OFF'
      IFEEDB='OFF'
      CALL DPFIT(ICAPSW,IFORSW,
     1           IBUGG2,IBUGA3,IBUGCO,IBUGEV,IBUGQ,ISUBRO,
     1           IFOUND,IERROR)
C
      IPRINT=IPRNT2
      IFEEDB=IFEED2
C
C  RESTORE ORIGINAL COMMAND LINE
C
      NUMARG=NUMART
      ICOM=ICOMT
      ICOM2=ICOM2T
      DO900I=1,NUMARG
        IHARG(I)=ITHARG(I)
        IHARG2(I)=ITHAR2(I)
        IARG(I)=ITARG(I)
        ARG(I)=TARG(I)
        IARGT(I)=ITARGT(I)
  900 CONTINUE
      DO902I=1,MAXSTR
        IANS(I)=IANST(I)
  902 CONTINUE
      IWIDTH=IWIDT
C
      IOP='OPEN'
      IFLAG1=1
      IFLAG2=0
      IFLAG3=1
      IFLAG4=1
      IFLAG5=0
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IFITAC.EQ.'OFF')THEN
        A0=0.0
        SDA0=0.0
        TA0=0.0
        READ(IOUNI1,*,ERR=959,END=959)A1,SDA1,TA1
        READ(IOUNI1,*,ERR=959,END=959)A2,SDA2,TA2
      ELSE
        READ(IOUNI1,*,ERR=959,END=959)A0,SDA0,TA0
        READ(IOUNI1,*,ERR=959,END=959)A1,SDA1,TA1
        READ(IOUNI1,*,ERR=959,END=959)A2,SDA2,TA2
      ENDIF
      GOTO969
C
  959 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,101)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,963)
  963 FORMAT('      UNABLE TO PERFORM THE INITIAL QUADRATIC FIT.')
      CALL DPWRST('XXX','BUG ')
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IERROR='YES'
      GOTO9000
C
  969 CONTINUE
      IHP='RESS'
      IHP2='D   '
      IHWUSE='P'
      MESSAG='YES'
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      RESSD=VALUE(ILOCP)
      IHP='RESD'
      IHP2='F   '
      IHWUSE='P'
      MESSAG='YES'
      CALL CHECKN(IHP,IHP2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
      RESDF=VALUE(ILOCP)
C
      IF(IFITAC.EQ.'OFF')THEN
        B11=0.
        B12=0.
        B13=0.
        B21=0.
        B31=0.
        READ(IOUNI3,*,ERR=979,END=979)B22,B23
        READ(IOUNI3,*,ERR=979,END=979)B32,B33
      ELSE
        READ(IOUNI4,*,ERR=979,END=979)B11
        READ(IOUNI4,*,ERR=979,END=979)B21
        READ(IOUNI4,*,ERR=979,END=979)B31
        READ(IOUNI4,*,ERR=979,END=979)B12
        READ(IOUNI4,*,ERR=979,END=979)B22
        READ(IOUNI4,*,ERR=979,END=979)B32
        READ(IOUNI4,*,ERR=979,END=979)B13
        READ(IOUNI4,*,ERR=979,END=979)B23
        READ(IOUNI4,*,ERR=979,END=979)B33
      ENDIF
      GOTO989
C
  979 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,101)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,973)
  973 FORMAT('      UNABLE TO PERFORM THE INITIAL QUADRATIC FIT.')
      CALL DPWRST('XXX','BUG ')
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IERROR='YES'
      GOTO9000
C
  989 CONTINUE
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
      C0=B11
      C1=B12+B21
      C2=B13+B22+B31
      C3=B23+B32
      C4=B33
C
      IDF=NPTS-3
      IF(IFITAC.EQ.'OFF')IDF=NPTS-2
      IF(ALPHA.LT.0.5)THEN
        ALPHA2=1.0 - (ALPHA/2.0)
      ELSE
        ALPHA2=ALPHA
      ENDIF
      CALL TPPF(ALPHA2,REAL(IDF),TVAL)
      TVAL=ABS(TVAL)
      C6=TVAL*RESSD
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')THEN
        WRITE(ICOUT,991)A0,SDA0,TA0
  991   FORMAT('AFTER QUADRATIC FIT, A0,SDA0,TA0=',3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,992)A1,SDA1,TA1
  992   FORMAT('AFTER QUADRATIC FIT, A1,SDA1,TA1=',3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,993)A2,SDA2,TA2
  993   FORMAT('AFTER QUADRATIC FIT, A2,SDA2,TA2=',3G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,994)RESSD,RESDF
  994   FORMAT('AFTER QUADRATIC FIT, RESSD,RESDF=',2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               **************************************************
C               **  STEP 1.1--                                  **
C               **   OPEN THE STORAGE FILES                     **
C               **************************************************
C
      ISTEPN='1.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOP='OPEN'
      IFLAG1=1
      IFLAG2=1
      IFLAG3=1
      IFLAG4=1
      IFLAG5=0
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
C               ***********************************************
C               **  STEP 2--                                 **
C               **  PRINT OUT SUMMARY OF FIT INFORMATION     **
C               ***********************************************
C
      ISTEPN='2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     PRINT HEADER TABLE
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      NUMDIG=7
      IF(IFORSW.EQ.'1')NUMDIG=1
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=0
      IF(IFORSW.EQ.'E')NUMDIG=-2
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      ITITLE='Quadratic Calibration Analysis'
      NCTITL=30
      ITITL9(1:33)='Summary of Quadratic Fit Between '
      ITITL9(34:37)=IHLEFT(1:4)
      ITITL9(38:41)=IHLEF2(1:4)
      ITITL9(42:46)=' and '
      ITITL9(47:50)=IHRIGH(1:4)
      ITITL9(51:54)=IHRIG2(1:4)
      NCTITZ=54
      ICNT=1
      ITEXT(ICNT)=' '
      NCTEXT(ICNT)=0
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
      ICNT=ICNT+1
      ITEXT(ICNT)='Number of Observations:'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=REAL(NPTS)
      IDIGIT(ICNT)=0
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Intercept:'
      NCTEXT(ICNT)=22
      AVALUE(ICNT)=A0
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='SD(Intercept):'
      NCTEXT(ICNT)=14
      AVALUE(ICNT)=SDA0
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='t(Intercept):'
      NCTEXT(ICNT)=13
      AVALUE(ICNT)=TA0
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Linear Term:'
      NCTEXT(ICNT)=24
      AVALUE(ICNT)=A1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='SD(Linear Term):'
      NCTEXT(ICNT)=16
      AVALUE(ICNT)=SDA1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='t(Linear Term):'
      NCTEXT(ICNT)=15
      AVALUE(ICNT)=TA1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Estimate of Quadratic Term:'
      NCTEXT(ICNT)=28
      AVALUE(ICNT)=A2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='SD(Quadratic Term):'
      NCTEXT(ICNT)=20
      AVALUE(ICNT)=SDA2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='t(Quadratic Term):'
      NCTEXT(ICNT)=19
      AVALUE(ICNT)=TA2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='Residual Standard Deviation:'
      NCTEXT(ICNT)=38
      AVALUE(ICNT)=RESSD
      IDIGIT(ICNT)=NUMDIG
C
      NUMROW=ICNT
      DO2310I=1,NUMROW
        NTOT(I)=15
 2310 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITL9,NCTITZ,ITEXT,
     1            NCTEXT,AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
C
      ATEMP=1.0-ALPHA
      ITEMP=INT(100.*ATEMP + 0.00001)
C
C               **************************************************
C               **  STEP 3--                                    **
C               **  COMPUTE THE QUADRATIC CALIBRATION ESTIMATES **
C               **  USING VARIOUS METHODS.                      **
C               **************************************************
C
      ISTEPN='3'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICOUNT=0
 3000 CONTINUE
      ICOUNT=ICOUNT+1
      IF(ICOUNT.GT.NCALPT)GOTO3999
      Y0=Y3(ICOUNT)
C
C  FIND X0 (THIS APPLIES TO MOST METHODS, SO DO ONCE HERE
C  RATHER THAN FOR EACH METHOD.
C
      CALL MINIM(Y2,NPTS,IWRITE,XLEFT,IBUGA3,IERROR)
      CALL MAXIM(Y2,NPTS,IWRITE,XRIGHT,IBUGA3,IERROR)
      C=A0 - Y0
      B=A1
      A=A2
      X0=0.0
      TERM1=B**2 - 4.0*A*C
C
C  FIND SOME BOUNDING PARAMETERS
C
      RIGH10=0.0
      RIGH20=0.0
      IF(TERM1.GE.0.0)THEN
        TERM1=SQRT(TERM1)
        RIGH10=(-B + TERM1)/(2*A)
        RIGH20=(-B - TERM1)/(2*A)
      ENDIF
      IF(RIGH10.GE.XLEFT .AND. RIGH10.LE.XRIGHT)THEN
        RIGHT0=RIGH10
      ELSEIF(RIGH20.GE.XLEFT .AND. RIGH20.LE.XRIGHT)THEN
        RIGHT0=RIGH20
      ELSE
        RIGHT0=RIGH10
      ENDIF
C
C  FIND ESTIMATE OF X0
C
      TERM1=B**2 - 4.0*A*C
      IF(TERM1.EQ.0.0)THEN
        RIGHT=(-B + TERM1)/(2*A)
      ELSEIF(TERM1.GT.0.0)THEN
        TERM1=SQRT(TERM1)
        RIGH1=(-B + TERM1)/(2*A)
        RIGH2=(-B - TERM1)/(2*A)
        IF(RIGH1.GE.XLEFT .AND. RIGH1.LE.XRIGHT)THEN
          IF(RIGH2.GE.XLEFT .AND. RIGH2.LE.XRIGHT)THEN
            D1DIFF=ABS(RIGH1-RIGHT0)
            D2DIFF=ABS(RIGH2-RIGHT0)
            IF(D1DIFF.LE.D2DIFF)THEN
              RIGHT=RIGH1
            ELSE
              RIGHT=RIGH2
            ENDIF
          ELSE
            RIGHT=RIGH1
          ENDIF
        ELSEIF(RIGH2.GE.XLEFT .AND. RIGH2.LE.XRIGHT)THEN
          RIGHT=RIGH2
        ELSE
          IF(RIGH1.GT.0.0 .AND. RIGH2.LE.0.0)THEN
            RIGHT=RIGH1
          ELSEIF(RIGH2.GT.0.0 .AND. RIGH1.LE.0.0)THEN
            RIGHT=RIGH2
          ELSE
            D1DIFF=ABS(RIGH1-RIGHT0)
            D2DIFF=ABS(RIGH2-RIGHT0)
            IF(D1DIFF.LE.D2DIFF)THEN
              RIGHT=RIGH1
            ELSE
              RIGHT=RIGH2
            ENDIF
          ENDIF
        ENDIF
      ELSEIF(TERM1.LT.0.0)THEN
        IERROR='YES'
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3004)
 3004   FORMAT('      ROOTS FOR QUADRATIC FIT OF ORIGINAL ',
     1         'DATA.')
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
      X0=RIGHT
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')THEN
        WRITE(ICOUT,3012)RIGH10,RIGH20,RIGHT0
 3012   FORMAT('FULL SAMPLE ROOTS: RIGH10,RIGH20,RIGHT0 = ',3E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,3013)RIGHT,X0,RIGH1,RIGH2
 3013   FORMAT('RIGHT,X0,RIGH1,RIGH2 = ',4E15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***********************************************
C               **  STEP 3.1--                               **
C               **  CLASSICAL: EISENHART INVERTED PREDICTION **
C               **  LIMITS.                                  **
C               ***********************************************
C
      ISTEPN='3.11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C  FIND ROOTS OF 4TH DEGREE POLYNOMIAL USING A BISECTION METHOD
C
      EISEN=X0
      DEPS=0.000001D0
      DSIG=1.0D-6
      MAXIT=2000
      DZERO=0.0D0
      IC = 0
      DXL=DBLE(XLEFT)
      DXR=DBLE(XRIGHT)
      DY0=DBLE(Y0)
      DA0=DBLE(A0)
      DA1=DBLE(A1)
      DA2=DBLE(A2)
      DC0=DBLE(C0)
      DC1=DBLE(C1)
      DC2=DBLE(C2)
      DC3=DBLE(C3)
      DC4=DBLE(C4)
      DC6=DBLE(C6)
C
      DTERM1 = DA0 + DA1*DXL + DA2*DXL*DXL - DY0
      DTERM2 = DC0 + DC1*DXL + DC2*DXL**2 + DC3*DXL**3 + DC4*DXL**4
      DFXL = DTERM1 + DC6*DSQRT(1.0D0 + DTERM2)
      DTERM1 = DA0 + DA1*DXR + DA2*DXR*DXR - DY0
      DTERM2 = DC0 + DC1*DXR + DC2*DXR**2 + DC3*DXR**3 + DC4*DXR**4
      DFXR = DTERM1 + DC6*DSQRT(1.0D0 + DTERM2)
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')THEN
        ISTEPN='3.12'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,3104)DXL,DXR,DFXL,DFXR
 3104   FORMAT('DXL,DXR,DFXL,DFXR = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
 3105 CONTINUE
C
      DXTEMP = (DXL+DXR)*0.5D0
      DTERM1 = DA0 + DA1*DXTEMP + DA2*DXTEMP*DXTEMP - DY0
      DTERM2 = DC0 + DC1*DXTEMP + DC2*DXTEMP**2 + DC3*DXTEMP**3
     1         + DC4*dXTEMP**4
      DFCS = DTERM1 + DC6*DSQRT(1.0D0 + DTERM2)
      IF(DFCS*DFXL.GT.DZERO)GOTO3110
      DXR = DXTEMP
      DFXR = DFCS 
C
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')THEN
        ISTEPN='3.13'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,3124)DXL,DXR,DXTEMP,DFXL,DFXR,DFCS
 3124   FORMAT('DXL,DXR,DXTEMP,DFXL,DFXR,DFCS = ',6G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      GOTO3115
 3110 CONTINUE
      DXL = DXTEMP
      DFXL = DFCS
 3115 CONTINUE
      DXRML = DXR - DXL
      IF(DXRML.LE.DSIG .AND. DABS(DFCS).LE.DEPS)GOTO3149
      IC = IC + 1
      IF(IC.LE.MAXIT)GOTO3105
      WRITE(ICOUT,3130)
      CALL DPWRST('XXX','BUG ')
 3130 FORMAT('***** ERROR IN QUADRATIC CALIBRATION: NO CONVERGENCE.')
      EISENL=CPUMIN
      EISENU=CPUMIN
      SEISEN=CPUMIN
      EEISEN=CPUMIN
      CVISEN=CPUMIN
      GOTO3199
C
 3149 CONTINUE
      EISENU=REAL(DXTEMP)
C
      IC = 0
      DXL=DBLE(XLEFT)
      DXR=DBLE(XRIGHT)
      DTERM1 = DA0 + DA1*DXL + DA2*DXL*DXL - DY0
      DTERM2 = DC0 + DC1*DXL + DC2*DXL**2 + DC3*DXL**3 + DC4*DXL**4
      DFXL = DTERM1 - DC6*DSQRT(1.0D0 + DTERM2)
      DTERM1 = DA0 + DA1*DXR + DA2*DXR*DXR - DY0
      DTERM2 = DC0 + DC1*DXR + DC2*DXR**2 + DC3*DXR**3 + DC4*DXR**4
      DFXR = DTERM1 - DC6*DSQRT(1.0D0 + DTERM2)
C
 3155 CONTINUE
C
      DXTEMP = (DXL+DXR)*0.5D0
      DTERM1 = DA0 + DA1*DXTEMP + DA2*DXTEMP*DXTEMP - DY0
      DTERM2 = DC0 + DC1*DXTEMP + DC2*DXTEMP**2 + DC3*DXTEMP**3
     1         + DC4*DXTEMP**4
      DFCS = DTERM1 - DC6*DSQRT(1.0D0 + DTERM2)
      IF(DFCS*DFXL.GT.DZERO)GOTO3160
      DXR = DXTEMP
      DFXR = DFCS 
      GOTO3175
 3160 CONTINUE
      DXL = DXTEMP
      DFXL = DFCS
 3175 CONTINUE
      DXRML = DXR - DXL
      IF(DXRML.LE.DSIG .AND. DABS(DFCS).LE.DEPS)GOTO3189
      IC = IC + 1
      IF(IC.LE.MAXIT)GOTO3155
      WRITE(ICOUT,3180)
 3180 FORMAT('***** ERROR IN QUADRATIC CALIBRATION: NO CONVERGENCE ',
     1       'FOR INVERSE PREDICTION LIMITS.')
      CALL DPWRST('XXX','BUG ')
      EISENL=CPUMIN
      EISENU=CPUMIN
      SEISEN=CPUMIN
      EEISEN=CPUMIN
      CVISEN=CPUMIN
      GOTO3199
C
 3189 CONTINUE
      EISENL=REAL(DXTEMP)
C
      IF(EISENL.GT.EISENU)THEN
        ATEMP=EISENL
        EISENL=EISENU
        EISENU=ATEMP
      ENDIF
C
C     USE DIFFERENCE BETWEEN POINT ESTIMATE AND CONFIDENCE LIMITS TO
C     DETERMINE AN APPROXIMATION OF THE STANDARD ERROR.  NOTE THAT THE
C     CONFIDENCE LIMITS ARE NOT NECESSARILY SYMMETRIC.  ALSO, POINT
C     ESTIMATE MAY NOT BE IN THE CONFIDENCE INTERVAL.  SO USE THE
C     LARGER HALF-INTERVAL.  ALSO, IF POINT ESTIMATE NOT IN THE
C     INTERVAL, THEN DO NOT COMPUTE AN ESTIMATED STANDARD ERROR.
C
      SEISEN=0.0
      IF(EISENL.LT.EISENU)THEN
        IF(X0.GT.EISENL .AND. X0.LT.EISENU)THEN
          AVAL1=ABS(EISENU - X0)
          AVAL2=ABS(X0 - EISENU)
          AVAL=MAX(AVAL1,AVAL2)
          EEISEN=AVAL
          CVISEN=ABS(TVAL)
          SEISEN=AVAL/ABS(TVAL)
        ELSE
          SEISEN=-99.0
        ENDIF
      ENDIF
C
 3199 CONTINUE
C
C               ***********************************************
C               **  STEP 3.2--                               **
C               **  PROPOGATION OF ERROR AS SPECIFIED IN     **
C               **  E-HANDBOOK (MPC3671.HTM)                 **
C               ***********************************************
C
      ISTEPN='3.11'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
C     DEFINE PARTIAL DERIVATIVE TERMS
C
      DY0=DBLE(Y0)
      DA0=DBLE(A0)
      DA1=DBLE(A1)
      DA2=DBLE(A2)
      DA0SD=DBLE(SDA0)
      DA1SD=DBLE(SDA1)
      DA2SD=DBLE(SDA2)
      DTERM1=DSQRT(DA1**2 - 4.0D0*DA2*(DA0-DY0))
      DRESSD=DBLE(RESSD)
C
      XPYP=1.0D0/DTERM1
      XPA0=-1.0D0/DTERM1
      DTERM2=DA1/DTERM1
      XPA1=(-1.0D0 + DTERM2)/(2.0D0*DA2)
      DTERM2=(-DA0 + DY0)/(DA2*DTERM1)
      DTERM3=(-DA1 + DTERM1)/(2.0D0*DA2**2)
      XPA2=DTERM2 - DTERM3
      DVAR1=(XPYP**2)*(DRESSD**2) + (XPA0**2)*(DA0SD**2) +
     1     (XPA1**2)*(DA1SD**2)  + (XPA2**2)*(DA2SD**2)
C
      DVAR2=2.0D0*XPA0*XPA1*DBLE(B12) +
     1      2.0D0*XPA0*XPA2*DBLE(B13) +
     1      2.0D0*XPA1*XPA2*DBLE(B23)
      DSE=DSQRT(DVAR1 + DVAR2)
C
      SEPRO2=REAL(DSE)
      CVPRO2=ABS(TVAL)
      EEPRO2=ABS(TVAL)*SEPRO2
      PRO2E=X0
      PRO2LL=X0 - EEPRO2
      PRO2UL=X0 + EEPRO2
C
C               ***********************************************
C               **  STEP 3.7--                               **
C               **  BOOTSTRAP (EFROM RESAMPLING, I.E.,       **
C               **  RESAMPLE THE RESIDUALS)                  **
C               ***********************************************
C
C     2016/11: IF NO CONSTANT TERM IN FIT, SKIP BOOTSTRAP METHODS.
C
      IF(IFITAC.EQ.'OFF')GOTO4000
C
      ISTEPN='3.7'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,3714)A0,A1,A2
 3714   FORMAT('A0,A1,A2 = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      DO3716I=1,NPTS
        Z1(I)=RES(I)
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')THEN
           WRITE(ICOUT,3717)I,Y1(I),Y2(I),Z1(I)
 3717      FORMAT('I,Y1(I),Y2(I),Z1(I) (=Y,X,RES) =',I8,4G15.7)
           CALL DPWRST('XXX','BUG ')
        ENDIF
 3716 CONTINUE
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')THEN
         WRITE(ICOUT,3718)A0,A1,A2
 3718    FORMAT('A0,A1,A2 = ',3G15.7)
         CALL DPWRST('XXX','BUG ')
      ENDIF
C
      ICASJB='BOOT'
      NRESAM=1000
      NREJ=0
      NNEG=0
      NCOUNT=0
C
      DO3720IRESAM=1,NRESAM
        CALL DPJBS3(Z1,NPTS,ICASJB,IRESAM,ISEED,Z2,NPTS2,IZ,
     1              Z6,IBUGA3,IERROR)
        DO3722I=1,NPTS2
          DX=DBLE(Y2(I))
          DTERM1=DBLE(A0) + DBLE(A1)*DX + DBLE(A2)*DX*DX
          Z3(I)=REAL(DTERM1) + Z2(I)
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')THEN
            WRITE(ICOUT,3727)I,Y2(I),Z3(I)
 3727       FORMAT('I,Y2(I),Z3(I) (I.E., X,Y TO BE FIT) =',I8,2G15.7)
           CALL DPWRST('XXX','BUG ')
        ENDIF
 3722   CONTINUE
        CALL QUAFI2(Y2,Z3,NPTS,
     1              Z5,B0,B1,B2,
     1              ISUBRO,IBUGA3,IERROR)
C
C  DETERMINE APPROPRIATE ROOT
C
        C=B0 - Y0
        B=B1
        A=B2
        TERM1=B**2 - 4.0*A*C
        IF(TERM1.EQ.0.0)THEN
          RIGHT=(-B + TERM1)/(2.0*A)
        ELSEIF(TERM1.GT.0.0)THEN
          TERM1=SQRT(TERM1)
          RIGH1=(-B + TERM1)/(2.0*A)
          RIGH2=(-B - TERM1)/(2.0*A)
          IF(RIGH1.GE.XLEFT .AND. RIGH1.LE.XRIGHT)THEN
            IF(RIGH2.GE.XLEFT .AND. RIGH2.LE.XRIGHT)THEN
              D1DIFF=ABS(RIGH1-RIGHT0)
              D2DIFF=ABS(RIGH2-RIGHT0)
              IF(D1DIFF.LE.D2DIFF)THEN
                RIGHT=RIGH1
              ELSE
                RIGHT=RIGH2
              ENDIF
            ELSE
              RIGHT=RIGH1
            ENDIF
          ELSEIF(RIGH2.GE.XLEFT .AND. RIGH2.LE.XRIGHT)THEN
            RIGHT=RIGH2
          ELSE
            IF(RIGH1.GT.0.0 .AND. RIGH2.LE.0.0)THEN
              RIGHT=RIGH1
            ELSEIF(RIGH2.GT.0.0 .AND. RIGH1.LE.0.0)THEN
              RIGHT=RIGH2
            ELSE
              D1DIFF=ABS(RIGH1-RIGHT0)
              D2DIFF=ABS(RIGH2-RIGHT0)
              IF(D1DIFF.LE.D2DIFF)THEN
                RIGHT=RIGH1
              ELSE
                RIGHT=RIGH2
              ENDIF
            ENDIF
          ENDIF
          IF(RIGHT.LT.0)NNEG=NNEG+1
        ELSEIF(TERM1.LT.0.0)THEN
          NREJ=NREJ+1
          GOTO3720
        ENDIF
C
        NCOUNT=NCOUNT+1
        Z4(NCOUNT)=RIGHT
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')THEN
          WRITE(ICOUT,3725)IERROR,NCOUNT,B0,B1,B2,Z4(NCOUNT)
 3725     FORMAT('IERROR,NCOUNT,B0,B1,B2,Z4(NCOUNT) = ',A4,I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
 3720 CONTINUE
C
      BOOTE=X0
      CALL SD(Z4,NRESAM,IWRITE,SEBOOE,IBUGA3,IERROR)
      P100=100.0*(ALPHA/2.0)
      CALL PERCEN(P100,Z4,NCOUNT,IWRITE,Z3,MAXNXT,
     1            BOOTEL,IBUGA3,IERROR)
      P100=100.0*(1.0 - ALPHA/2.0)
      CALL PERCEN(P100,Z4,NCOUNT,IWRITE,Z3,MAXNXT,
     1            BOOTEU,IBUGA3,IERROR)
      EEBOOE=MAX((BOOTEU - BOOTE),(BOOTE - BOOTEL))
      CVBOOE=EEBOOE/SEBOOE
C
C               ***********************************************
C               **  STEP 3.8--                               **
C               **  BOOTSTRAP (WU RESAMPLING, I.E., RESAMPLE **
C               **  THE ORIGINAL (X,Y) DATA                  **
C               ***********************************************
C
      ISTEPN='3.8'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NNEG=0
      NREJ=0
      NCOUNT=0
      ICASJB='BOOT'
      NRESAM=1000
C
      DO3810IRESAM=1,NRESAM
        IERROR='NO'
        CALL DPJBS3(Y1,NPTS,ICASJB,IRESAM,ISEED,Z1,NPTS2,IZ,
     1              Z6,IBUGA3,IERROR)
        DO3820IJ=1,NPTS2
          Z2(IJ)=Y2(IZ(IJ))
 3820   CONTINUE
        CALL QUAFI2(Z2,Z1,NPTS,
     1            Z5,
     1            B0,B1,B2,
     1            ISUBRO,IBUGA3,IERROR)
C
        IF(IERROR.EQ.'YES')GOTO3810
C
C  DETERMINE APPROPRIATE ROOT
C
        C=B0 - Y0
        B=B1
        A=B2
        TERM1=B**2 - 4.0*A*C
        IF(TERM1.EQ.0.0)THEN
          RIGHT=(-B + TERM1)/(2*A)
        ELSEIF(TERM1.GT.0.0)THEN
          TERM1=SQRT(TERM1)
          RIGH1=(-B + TERM1)/(2*A)
          RIGH2=(-B - TERM1)/(2*A)
          IF(RIGH1.GE.XLEFT .AND. RIGH1.LE.XRIGHT)THEN
            IF(RIGH2.GE.XLEFT .AND. RIGH2.LE.XRIGHT)THEN
              D1DIFF=ABS(RIGH1-RIGHT0)
              D2DIFF=ABS(RIGH2-RIGHT0)
              IF(D1DIFF.LE.D2DIFF)THEN
                RIGHT=RIGH1
              ELSE
                RIGHT=RIGH2
              ENDIF
            ELSE
              RIGHT=RIGH1
            ENDIF
          ELSEIF(RIGH2.GE.XLEFT .AND. RIGH2.LE.XRIGHT)THEN
            RIGHT=RIGH2
          ELSE
            IF(RIGH1.GT.0.0 .AND. RIGH2.LE.0.0)THEN
              RIGHT=RIGH1
            ELSEIF(RIGH2.GT.0.0 .AND. RIGH1.LE.0.0)THEN
              RIGHT=RIGH2
            ELSE
              D1DIFF=ABS(RIGH1-RIGHT0)
              D2DIFF=ABS(RIGH2-RIGHT0)
              IF(D1DIFF.LE.D2DIFF)THEN
                RIGHT=RIGH1
              ELSE
                RIGHT=RIGH2
              ENDIF
            ENDIF
          ENDIF
          IF(RIGHT.LT.0)NNEG=NNEG+1
        ELSEIF(TERM1.LT.0.0)THEN
          NREJ=NREJ+1
          GOTO3810
        ENDIF
C
        NCOUNT=NCOUNT+1
        Z4(NCOUNT)=RIGHT
C
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')THEN
          WRITE(ICOUT,3822)NCOUNT,B0,B1,B2,Z4(IRESAM)
 3822     FORMAT('NCOUNT,B0,B1,B2,Z4(IRESAM) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
 3810 CONTINUE
C
      BOOTW=X0
      CALL SD(Z4,NRESAM,IWRITE,SEBOOW,IBUGA3,IERROR)
      P100=100.0*(ALPHA/2.0)
      CALL PERCEN(P100,Z4,NCOUNT,IWRITE,Z3,MAXNXT,
     1            BOOTWL,IBUGA3,IERROR)
      P100=100.0*(1.0 - ALPHA/2.0)
      CALL PERCEN(P100,Z4,NCOUNT,IWRITE,Z3,MAXNXT,
     1            BOOTWU,IBUGA3,IERROR)
      EEBOOW=MAX((BOOTWU - BOOTW),(BOOTW - BOOTWL))
      CVBOOW=EEBOOW/SEBOOW
C
C               ***********************************************
C               **  STEP 4--                                 **
C               **  PRINT OUT THE RESULTS.                   **
C               ***********************************************
C
 4000 CONTINUE
      ISTEPN='4'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LIC3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IMETHD=1
      WRITE(IOUNI1,5401)IMETHD,Y0,EISEN,EISENL,EISENU
      IMETHD=5
      WRITE(IOUNI1,5401)IMETHD,Y0,PRO2E,PRO2LL,PRO2UL
      IMETHD=7
      IF(IFITAC.EQ.'ON')THEN
        WRITE(IOUNI1,5401)IMETHD,Y0,BOOTE,BOOTEL,BOOTEU
        IMETHD=8
        WRITE(IOUNI1,5401)IMETHD,Y0,BOOTW,BOOTWL,BOOTWU
 5401   FORMAT(I2,2X,4E15.7)
        WRITE(IOUNI2,5411)EISEN,PRO2E,BOOTE,BOOTW
        WRITE(IOUNI3,5411)EISENL,PRO2LL,BOOTEL,BOOTWL
        WRITE(IOUNI4,5411)EISENU,PRO2UL,BOOTEU,BOOTWU
 5411   FORMAT(9E15.7)
      ELSE
        WRITE(IOUNI2,5411)EISEN,PRO2E
        WRITE(IOUNI3,5411)EISENL,PRO2LL
        WRITE(IOUNI4,5411)EISENU,PRO2UL
      ENDIF
C
      ATEMP=1.0-ALPHA
      ITEMP=INT(100.*ATEMP + 0.00001)
C
      IF(ICOUNT.EQ.1)THEN
        ITITLE='Quadratic Calibration Summary'
        NCTITL=29
        ITITL9(1:6)='Y0 = '
        WRITE(ITITL9(7:21),'(G15.7)')Y0
        NCTIT9=21
      ELSE
        ITITLE=' '
        NCTITL=0
        ITITL9(1:6)='Y0 = '
        WRITE(ITITL9(7:21),'(G15.7)')Y0
        NCTIT9=21
      ENDIF
      NUMLIN=2
      NUMCOL=6
      ITITL2(1,1)=' '
      NCTIT2(1,1)=0
      ITITL2(2,1)='Method'
      NCTIT2(2,1)=6
      ITITL2(1,2)=' '
      NCTIT2(1,2)=0
      ITITL2(2,2)='X0'
      NCTIT2(2,2)=2
      WRITE(ITITL2(1,3)(1:2),'(I2)')ITEMP
      ITITL2(1,3)(3:3)='%'
      NCTIT2(1,3)=3
      ITITL2(2,3)='Lower Limit'
      NCTIT2(2,3)=11
      WRITE(ITITL2(1,4)(1:2),'(I2)')ITEMP
      ITITL2(1,4)(3:3)='%'
      NCTIT2(1,4)=3
      ITITL2(2,4)='Upper Limit'
      NCTIT2(2,4)=11
      ITITL2(1,5)='Standard'
      NCTIT2(1,5)=8
      ITITL2(2,5)='Error'
      NCTIT2(2,5)=5
      ITITL2(1,6)=' '
      NCTIT2(1,6)=0
      ITITL2(2,6)='Coverage'
      NCTIT2(2,6)=8
      ITITL2(1,7)='Expanded'
      NCTIT2(1,7)=8
      ITITL2(2,7)='Error'
      NCTIT2(2,7)=5
C
      NMAX=0
      DO2521I=1,NUMCOL+1
        VALIGN(I)='b'
        ALIGN(I)='r'
        NTOT(I)=15
        IF(I.EQ.1)THEN
          NTOT(I)=40
          ALIGN(I)='l'
        ENDIF
        NMAX=NMAX+NTOT(I)
        IDIGIT(I)=NUMDIG
 2521 CONTINUE
C
      ICNT=0
C
      ICNT=ICNT+1
      ITEXT(ICNT)='1. Inverse Prediction Limits:'
      NCTEXT(ICNT)=29
      AMAT(ICNT,1)=EISEN
      AMAT(ICNT,2)=EISENL
      AMAT(ICNT,3)=EISENU
      AMAT(ICNT,4)=SEISEN
      AMAT(ICNT,5)=CVISEN
      AMAT(ICNT,6)=EEISEN
C
      ICNT=ICNT+1
      ITEXT(ICNT)='2. Propogation of Error (Handbook):'
      NCTEXT(ICNT)=37
      AMAT(ICNT,1)=PRO2E
      AMAT(ICNT,2)=PRO2LL
      AMAT(ICNT,3)=PRO2UL
      AMAT(ICNT,4)=SEPRO2
      AMAT(ICNT,5)=CVPRO2
      AMAT(ICNT,6)=EEPRO2
C
      IF(IFITAC.EQ.'ON')THEN
        ICNT=ICNT+1
        ITEXT(ICNT)='7. Bootstrap (Residuals):'
        NCTEXT(ICNT)=26
        AMAT(ICNT,1)=BOOTE
        AMAT(ICNT,2)=BOOTEL
        AMAT(ICNT,3)=BOOTEU
        AMAT(ICNT,4)=SEBOOE
        AMAT(ICNT,5)=CVBOOE
        AMAT(ICNT,6)=EEBOOE
C
        ICNT=ICNT+1
        ITEXT(ICNT)='8. Bootstrap (Data):'
        NCTEXT(ICNT)=21
        AMAT(ICNT,1)=BOOTW
        AMAT(ICNT,2)=BOOTWL
        AMAT(ICNT,3)=BOOTWU
        AMAT(ICNT,4)=SEBOOW
        AMAT(ICNT,5)=CVBOOW
        AMAT(ICNT,6)=EEBOOW
      ENDIF
C
      IWHTML(1)=250
      IWHTML(2)=150
      IWHTML(3)=150
      IWHTML(4)=150
      IWHTML(5)=150
      IWHTML(6)=150
      IWHTML(7)=150
      IWRTF(1)=3000
      IWRTF(2)=IWRTF(1)+2000
      IWRTF(3)=IWRTF(2)+2000
      IWRTF(4)=IWRTF(3)+2000
      IWRTF(5)=IWRTF(4)+2000
      IWRTF(6)=IWRTF(5)+2000
      IWRTF(7)=IWRTF(6)+2000
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA2(ITITLE,NCTITL,
     1            ITITL9,NCTIT9,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,NUMCLI,NUMCOL,
     1            ITEXT,NCTEXT,AMAT,MAXROW,ICNT,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
C
      GOTO3000
C
 3999 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
C
        WRITE(ICOUT,8102)
 8102   FORMAT('FOLLOWING INFORMATION WRITTEN OUT TO FILES.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8112)
 8112   FORMAT('DPST1F.DAT: METHOD (1, 7 - 8), Y0, X0, LOWER LIMIT, ',
     1         'UPPER LIMIT')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8122)
 8122   FORMAT('DPST2F.DAT: Y0 AND X0 FOR THREE METHODS')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8132)
 8132   FORMAT('DPST3F.DAT: Y0 AND LOWER LIMIT FOR THREE METHODS')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,8142)
 8142   FORMAT('DPST4F.DAT: Y0 AND UPPER LIMIT FOR THREE METHODS')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
C
      ENDIF
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LIC3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLIC3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGA3,IERROR
 9012   FORMAT('IBUGA3,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)NPTS,NUMVAR
 9013   FORMAT('NPTS,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLICL(IHARG,IARG,NUMARG,IDEFCO,MAXLIN,ILINCO,ILINC2,
     1                  IRGBMX,ICASCL,IFOUND,IERROR)
C
C     PURPOSE--DEFINE PLOT LINE COLORS FOR USE IN MULTI-TRACE PLOTS.
C              THE COLOR FOR THE LINE FOR THE I-TH TRACE WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE HOLLERITH VECTOR ILINCO(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C                     --IDEFCO
C                     --MAXLIN
C     OUTPUT ARGUMENTS--ILINCO  (A  HOLLERITH VECTOR
C                       WHOSE I-TH ELEMENT IS THE COLOR FOR THE LINE
C                       ASSIGNED TO THE I-TH    TRACE    IN
C                       A MULTI-TRACE PLOT.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1977.
C     UPDATED         --SEPTEMBER 1980.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --OCTOBER   2020. SUPPORT FOR RGB COLORS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IDEFCO
      CHARACTER*4 ILINCO
      CHARACTER*4 ICASCL
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARG(*)
      DIMENSION ILINCO(*)
      DIMENSION ILINC2(MAXLIN,3)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
      NUMLIN=0
C
      IF(NUMARG.EQ.0)GOTO9000
      IF(ICASCL.EQ.'RGB ')GOTO2000
C
C     THIS IS FOR THE "STANDARD" CASE
C
      IF((NUMARG.EQ.1.AND.IHARG(1).EQ.'COLO') .OR.
     1  (NUMARG.EQ.2.AND.IHARG(1).EQ.'COLO'.AND.IHARG(2).EQ.'ALL'))THEN
        IFOUND='YES'
        DO1165I=1,MAXLIN
          ILINCO(I)=IDEFCO
 1165   CONTINUE
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          I=1
          WRITE(ICOUT,1116)ILINCO(I)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ELSEIF(NUMARG.GE.2.AND.IHARG(1).EQ.'COLO')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF' .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA')THEN
          IFOUND='YES'
          DO1115I=1,MAXLIN
            ILINCO(I)=IDEFCO
 1115     CONTINUE
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            I=1
            WRITE(ICOUT,1116)ILINCO(I)
 1116       FORMAT('ALL LINE COLORS HAVE JUST BEEN SET TO ',A4)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ELSEIF(NUMARG.EQ.2)THEN
          IFOUND='YES'
          ILINCO(1)=IHARG(2)
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            I=1
            WRITE(ICOUT,1126)I,ILINCO(I)
 1126       FORMAT('THE COLOR FOR LINE ',I6,' HAS JUST BEEN SET TO ',A4)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ELSEIF(NUMARG.GE.3.AND.IHARG(2).EQ.'ALL')THEN
          IFOUND='YES'
          DO1135I=1,MAXLIN
            ILINCO(I)=IHARG(3)
 1135     CONTINUE
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            I=1
            WRITE(ICOUT,1116)ILINCO(I)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ELSEIF(NUMARG.GE.3.AND.IHARG(3).EQ.'ALL')THEN
          IFOUND='YES'
          DO1145I=1,MAXLIN
            ILINCO(I)=IHARG(2)
 1145     CONTINUE
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            I=1
            WRITE(ICOUT,1116)ILINCO(I)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ELSE
          IFOUND='YES'
          IMAX=NUMARG-1
          IF(MAXLIN.LT.IMAX)IMAX=MAXLIN
          DO1155I=1,IMAX
            IP1=I+1
            ILINCO(I)=IHARG(IP1)
 1155     CONTINUE
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            DO1156I=1,IMAX
              WRITE(ICOUT,1126)I,ILINCO(I)
              CALL DPWRST('XXX','BUG ')
 1156       CONTINUE
          ENDIF
        ENDIF
      ENDIF
      GOTO9000
C
C     THIS IS FOR THE "RGB" CASE
C
 2000 CONTINUE
C
      JHOLD1=-1
      JHOLD2=-1
      JHOLD3=-1
      NUMLIN=MAXLIN
C
      IF(NUMARG.EQ.1)THEN
        GOTO2300
      ELSEIF(NUMARG.EQ.2 .AND. IHARG(2).EQ.'ALL')THEN
        GOTO2300
      ELSEIF(NUMARG.EQ.5)THEN
        IF(IHARG(2).EQ.'ALL')THEN
          JHOLD1=IARG(3)
          JHOLD2=IARG(4)
          JHOLD3=IARG(5)
          GOTO2300
        ELSEIF(IHARG(5).EQ.'ALL')THEN
          JHOLD1=IARG(2)
          JHOLD2=IARG(3)
          JHOLD3=IARG(4)
          GOTO2300
        ENDIF
      ENDIF
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE SINGLE      SPECIFICATION  CASE  **
C               *************************************************
C
      IF(NUMARG.LE.2)THEN
        NUMLIN=1
        ILINC2(1,1)=-1
        ILINC2(1,2)=-1
        ILINC2(1,3)=-1
      ELSE
        NTEMP=NUMARG-1
        NUMLIN=NTEMP/3
        IF(NUMLIN.LT.1)THEN
          ILINC2(1,1)=-1
          ILINC2(1,2)=-1
          ILINC2(1,3)=-1
        ELSEIF(NUMLIN.GT.MAXLIN)THEN
          NUMLIN=MAXLIN
        ENDIF
        DO2225I=1,NUMLIN
          J1=(I-1)*3+2
          J2=J1+1
          J3=J1+2
          JHOLD1=IARG(J1)
          JHOLD2=IARG(J2)
          JHOLD3=IARG(J3)
          IF(JHOLD1.LT.0 .OR. JHOLD1.GT.IRGBMX)JHOLD1=-1
          IF(JHOLD2.LT.0 .OR. JHOLD2.GT.IRGBMX)JHOLD2=-1
          IF(JHOLD3.LT.0 .OR. JHOLD3.GT.IRGBMX)JHOLD3=-1
          ILINC2(I,1)=JHOLD1
          ILINC2(I,2)=JHOLD2
          ILINC2(I,3)=JHOLD3
 2225   CONTINUE
      ENDIF
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        DO2278I=1,NUMLIN
          WRITE(ICOUT,2276)I,ILINC2(I,1),ILINC2(I,2),ILINC2(I,3)
 2276     FORMAT('THE RGB COLORS OF LINE ',I6,
     1           ' HAVE JUST BEEN SET TO ',3I8)
          CALL DPWRST('XXX','BUG ')
 2278   CONTINUE
      ENDIF
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 3--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 2300 CONTINUE
      IF(JHOLD1.LT.0)JHOLD1=0
      IF(JHOLD1.GT.0)JHOLD1=0
      DO2315II=1,NUMLIN
        ILINC2(II,1)=JHOLD1
        ILINC2(II,2)=JHOLD2
        ILINC2(II,3)=JHOLD3
 2315 CONTINUE
C
      IF(IFEEDB.EQ.'ON')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        I=1
        WRITE(ICOUT,2316)ILINC2(I,1),ILINC2(I,2),ILINC2(I,3)
 2316   FORMAT('THE RGB COLORS OF ALL LINES HAVE JUST ',
     1         'BEEN SET TO ',3I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
      IFOUND='YES'
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPLICO(IHARG,NUMARG,IANSSV,IREPMX,ILISMX,IPOINT,
     1                  IHELMX,
     1                  ICPREH,NCPREH,ICPOSH,NCPOSH,
     1                  IBUGS2,ISUBRO,IFOUND,IERROR)
CCCCC 5 ARGS. (IHELMX, ICPREH, ETC.) WERE ADDED ABOVE   JULY 1993
C
C     PURPOSE--RECALL (THAT IS, LIST) THE LAST ILISMX (USUALLY 20, 30, 50)
C              COMMANDS ENTERED
C              FOR POTENTIAL USE BY A    REPEAT OR SAVE     COMMAND.
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--86/1
C     ORIGINAL VERSION--MARCH     1984.
C     UPDATED         --JANUARY   1986.
C     UPDATED         --APRIL     1993. SOFT-CODE DIMEN. FOR IANSSV()
C     UPDATED         --JULY      1993.  ALLOW MORE... TO STOP LIST
C     UPDATED         --SEPTEMBER 1993.  DELETE LEAD BLANK LINES
C     UPDATED         --SEPTEMBER 1993.  ALLOW ALWAYS-PRINTING
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
CCCCC THE FOLLOWING LINE WAS ADDED APRIL 1993
      INCLUDE 'DPCOPA.INC'
      CHARACTER*4 IHARG
      CHARACTER*1 IANSSV
C
CCCCC THE FOLLOWING 3 LINES WERE ADDED JULY 1993
      CHARACTER*40 ICPREH
      CHARACTER*40 ICPOSH
C
      CHARACTER*4 IBUGS2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
      CHARACTER*4 IFOUND
C
      CHARACTER*1 IC1
      CHARACTER (LEN=MAXSTR) :: ISTRIN
C
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1993
      CHARACTER*4 IRESP
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
CCCCC THE FOLLOWING LINE WAS CHANGED APRIL 1993
CCCCC DIMENSION IANSSV(50,80)
      DIMENSION IANSSV(MAXLIS,MAXCIS)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLI'
      ISUBN2='CO  '
      IFOUND='NO'
      IERROR='NO'
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LICO')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('AT THE BEGINNING OF DPLICO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IBUGS2,ISUBRO,NUMARG
   53   FORMAT('IBUGS2,ISUBRO,NUMARG = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMARG.GT.0)THEN
          DO55I=1,NUMARG
            WRITE(ICOUT,56)I,IHARG(I)
   56       FORMAT('I,IHARG(I) = ',I8,2X,A4)
            CALL DPWRST('XXX','BUG ')
   55     CONTINUE
        ENDIF
        WRITE(ICOUT,61)IREPMX,ILISMX,IHELMX,IPOINT
   61   FORMAT('IREPMX,ILISMX,IHELMX,IPOINT = ',4I8)
        CALL DPWRST('XXX','BUG ')
        DO62J=1,IREPMX
          WRITE(ICOUT,63)(IANSSV(J,I),I=1,80)
   63     FORMAT('(IANSSV(J,I),I=1,80) = ',80A1)
          CALL DPWRST('XXX','BUG ')
   62   CONTINUE
        WRITE(ICOUT,64)NCPOSH,ICPOSH
   64   FORMAT('NCPOSH,ICPOSH = ',I5,2X,A40)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,69)IFOUND,IERROR
   69   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IFOUND='YES'
C
C               ******************************************************
C               **  STEP 1--                                        **
C               **  RECALL (= LIST OUT) THE LAST ILISMX COMMANDS    **
C               **  THE COMMAND ILISMX AGO BEING LISTED FIRST,      **
C               **  AND THE MOST RECENT COMMAND BEING LISTED LAST.  **
C               ******************************************************
C
CCCCC THE FOLLOWING 2 LINES WERE ADDED JULY 1989
      NUMLPR=0
      IRESP='YES'
C
CCCCC THE FOLLOWING 2 LINES WERE COMMENTED OUT    SEPTEMBER 1993
CCCCC WRITE(ICOUT,999)
CCCCC CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1010)ILISMX
 1010 FORMAT('THE LAST ',I2,' COMMAND LINES--')
CCCCC THE FOLLOWING LINE WAS CHANGED TO ALLOW ALWAYS-WRITING  SEPTEMBER 1993
CCCCC CALL DPWRST('XXX','BUG ')
      CALL DPWRST('XXX','WRIT')
CCCCC THE FOLLOWING 2 LINES WERE COMMENTED OUT    SEPTEMBER 1993
CCCCC CALL DPWRST('XXX','BUG ')
CCCCC WRITE(ICOUT,999)
C
CCCCC IPOIN2=11
CCCCC IPOIN2=21
      IPOIN2=ILISMX+1
      IF(ILISMX.GT.IREPMX)IPOIN2=IREPMX+1
C
CCCCC JMIN=IPOINT
      JMIN=IPOINT+(IREPMX-ILISMX)
      JMAX=IREPMX
      IF(JMAX.LT.JMIN)GOTO1190
      DO1100J=JMIN,JMAX
      IPOIN2=IPOIN2-1
      IF(IPOIN2.LE.0)GOTO1190
C
CCCCC THE FOLLOWING 4 LINES WERE ADDED JULY 1993
      IF(NUMLPR.GE.IHELMX)
     1CALL DPMORE(NUMLPR,NCPREH,ICPREH,IRESP,IBUGS2,IERROR)
      IF(NUMLPR.GE.IHELMX)NUMLPR=0
      IF(IRESP.EQ.'NO')GOTO1290
C
      DO1110I=1,MAXSTR
      IC1=IANSSV(J,I)
      ISTRIN(I:I)=IC1
 1110 CONTINUE
      NMAX=MAXSTR
      CALL DPDB80(ISTRIN,IMAX,NMAX,IBUGS2,ISUBRO,IERROR)
      WRITE(ICOUT,1115)IPOIN2,(ISTRIN(I:I),I=1,MIN(255,IMAX))
CCCCC THE FOLLOWING LINE WAS CHANGED TO ALLOW ALWAYS-WRITING  SEPTEMBER 1993
CCCCC CALL DPWRST('XXX','BUG ')
      CALL DPWRST('XXX','WRIT')
CCCCC THE FOLLOWING LINE WAS CHANGED APRIL 1993
C1115 FORMAT(4X,I2,'--',80A1)
 1115 FORMAT(4X,I4,'--',255A1)
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1989
      NUMLPR=NUMLPR+1
 1100 CONTINUE
 1190 CONTINUE
C
CCCCC JMIN=1
      JMIN=IPOINT-ILISMX
      IF(JMIN.LE.0)JMIN=1
      JMAX=IPOINT-1
      IF(JMAX.LT.JMIN)GOTO1290
      DO1200J=JMIN,JMAX
      IPOIN2=IPOIN2-1
      IF(IPOIN2.LE.0)GOTO1290
C
CCCCC THE FOLLOWING 4 LINES WERE ADDED JULY 1993
      IF(NUMLPR.GE.IHELMX)
     1CALL DPMORE(NUMLPR,NCPREH,ICPREH,IRESP,IBUGS2,IERROR)
      IF(NUMLPR.GE.IHELMX)NUMLPR=0
      IF(IRESP.EQ.'NO')GOTO1290
C
      DO1210I=1,MAXSTR
      IC1=IANSSV(J,I)
      ISTRIN(I:I)=IC1
 1210 CONTINUE
      NMAX=MAXSTR
      CALL DPDB80(ISTRIN,IMAX,NMAX,IBUGS2,ISUBRO,IERROR)
CCCCC THE FOLLOWING SECTION HAD CHANGES MADE   SEPTEMBER 1993
      IF(J.NE.JMAX)THEN
         WRITE(ICOUT,1215)IPOIN2,(ISTRIN(I:I),I=1,MIN(255,IMAX))
 1215    FORMAT(4X,I4,'--',255A1)
         CALL DPWRST('XXX','WRIT')
      ENDIF
      IF(J.EQ.JMAX)THEN
         WRITE(ICOUT,1216)IPOIN2,(ISTRIN(I:I),I=1,MIN(255,IMAX))
 1216    FORMAT(4X,I4,'--',255A1)
         CALL DPWRST('XXX','WRIT')
      ENDIF
      NUMLPR=NUMLPR+1
 1200 CONTINUE
 1290 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LICO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('AT THE END       OF DPLICO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9029)IFOUND,IERROR,IRESP
 9029   FORMAT('IFOUND,IERROR,IRESP = ',2(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLIGR(IANSLC,IWIDTH,IHARG,IARGT,IARG,NUMARG,
     1                  IBUGS2,ISUBRO,IFOUND,IERROR)
C
C     PURPOSE--LIST THE CURRENTLY SAVED PIXMAPS
C
C                  LIST PLOT  (OR LIST GRAPH, LG, LP)
C                      REPEAT PLOT -2 PLOTS THE SIXTH PIXMAP
C
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGU
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--97/4
C     ORIGINAL VERSION--APRIL     1997.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      INCLUDE 'DPCOPA.INC'
      CHARACTER*4 IANSLC(*)
      CHARACTER*4 IHARG(*)
      CHARACTER*4 IARGT(*)
C
      CHARACTER*4 IBUGS2
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
      CHARACTER*4 IFOUND
C
      CHARACTER*4 ISTEPN
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*80 CTEMP
C
      DIMENSION IARG(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOPM.INC'
      INCLUDE 'DPCOF2.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLI'
      ISUBN2='GR  '
      IFOUND='YES'
      IERROR='NO'
C
      IF(IBUGS2.EQ.'ON' .OR. ISUBRO.EQ.'LIGR')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('AT THE BEGINNING OF DPLIGR--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGS2,ISUBRO,IFOUND,IERROR
   52   FORMAT('IBUGS2,ISUBRO,IFOUND,IERROR = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)IWIDTH,NUMARG
   53   FORMAT('IWIDTH,NUMARG = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(IWIDTH.GE.1)THEN
          WRITE(ICOUT,54)(IANSLC(I),I=1,IWIDTH)
   54     FORMAT('(IANSLC(I),I=1,IWIDTH) = ',80A1)
          CALL DPWRST('XXX','BUG ')
        ENDIF
        IF(NUMARG.GE.1)THEN
          DO56I=1,NUMARG
            WRITE(ICOUT,57)I,IHARG(I),IARGT(I),IARG(I)
   57       FORMAT('I,IHARG(I),IARGT(I),IARG(I) = ',I8,2(2X,A4),I8)
            CALL DPWRST('XXX','BUG ')
   56     CONTINUE
        ENDIF
      ENDIF
C
C               *******************************
C               **  STEP 12--                **
C               **  LOOP THROUGH LIST IN     **
C               **  DPCOPM.INC               **
C               *******************************
C
      ISTEPN='12'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'REGR')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMPXM.LT.1)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1203)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
 1203 FORMAT('***** THERE ARE NO PIXMAPS SAVED FROM THE CURRENT ',
     1       'DATAPLOT SESSION.')
C
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1220I=1,NUMPXM
        WRITE(ICOUT,1229)I
        CALL DPWRST('XXX','BUG ')
        NCSTR=1
        DO1230J=128,1,-1
          NCSTR=J
          IF(IPXMFN(I)(J:J).NE.' ')GOTO1235
 1230   CONTINUE
 1235   CONTINUE
        CTEMP(1:80)=IPXMFN(I)(1:80)
        WRITE(ICOUT,1239)CTEMP
        CALL DPWRST('XXX','BUG ')
        NCSTR=1
        DO1240J=128,1,-1
          NCSTR=J
          IF(IPXMCM(I)(J:J).NE.' ')GOTO1245
 1240   CONTINUE
 1245   CONTINUE
        CTEMP(1:80)=IPXMCM(I)(1:80)
        WRITE(ICOUT,1249)CTEMP
        CALL DPWRST('XXX','BUG ')
 1220 CONTINUE
 1229 FORMAT('PIXMAP ',I5,':')
 1239 FORMAT('      FILE NAME = ',A80)
 1249 FORMAT('      FILE TITLE = ',A80)
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT.      **
C               *****************
C
 9000 CONTINUE
      IF(IBUGS2.EQ.'OFF'.AND.ISUBRO.NE.'REGR')GOTO9090
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9011)
 9011 FORMAT('AT THE END       OF DPLIGR--')
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9012)IBUGS2,ISUBRO,IFOUND,IERROR
 9012 FORMAT('IBUGS2,ISUBRO,IFOUND,IERROR = ',A4,2X,A4,2X,A4,2X,A4)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9013)IWIDTH
 9013 FORMAT('IWIDTH = ',I8)
      CALL DPWRST('XXX','BUG ')
      IF(IWIDTH.GE.1)WRITE(ICOUT,9014)(IANSLC(I),I=1,IWIDTH)
 9014 FORMAT('(IANSLC(I),I=1,IWIDTH) = ',80A1)
      IF(IWIDTH.GE.1)CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,9015)NUMARG
 9015 FORMAT('NUMARG = ',I8)
      CALL DPWRST('XXX','BUG ')
      IF(NUMARG.LE.0)GOTO9018
      DO9016I=1,NUMARG
      WRITE(ICOUT,9017)I,IHARG(I)
 9017 FORMAT('I,IHARG(I) = ',I8,2X,A4)
      CALL DPWRST('XXX','BUG ')
 9016 CONTINUE
 9018 CONTINUE
 9090 CONTINUE
C
      RETURN
      END
      SUBROUTINE DPLIK1(Y,Y2,N,ICASPL,
     1                  SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1                  SHAPE5,SHAPE6,SHAPE7,
     1                  YLOWLM,YUPPLM,A,B,MINMAX,
     1                  IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1                  ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1                  IGETDF,ICONDF,IGOMDF,IKATDF,
     1                  IGIGDF,IGEODF,
     1                  KSLOC,KSSCAL,
     1                  ALIK,AIC,AICC,BIC,
     1                  IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--COMPUTE THE LOG-LIKELIHOOD FUNCTION AT A GIVEN SET
C              OF POINTS.  SPECIFICALLY,
C
C                 LOG-LIKE = SUM[i=1 to n][LOG(f(x(i);theta))]
C
C              WITH theta DENOTING THE PARAMETERS FOR THE
C              DISTRIBUTION.  THE VALUE OF THE LOG-LIKELIHOOD
C              CAN IN TURN BE USED TO COMPUTE THE AIC, AICC, AND
C              BIC GOODNESS OF FIT STATISTICS.
C
C              FOR SELECT DISTRIBUTIONS, SPECIFIC ROUTINES WILL
C              BE CALLED TO COMPUTE THE LIKELIHOOD FUNCTION
C              (THESE TYPICALLY SIMPLIFY THE LOG-LIKELIHOOD FUNCTION).
C              IF A SPECIFIC LIKELIHOOD ROUTINE HAS NOT BEEN CODED
C              FOR THE DISTRIBUTION, THEN CALL DPPDF1 TO COMPUTE
C              THE f(x(i);theta) PART, TAKE THE LOG, AND THEN
C              COMPUTE THE SUM.
C
C              THIS ROUTINE HANDLES THE UNGROUPED, UNCENSORED CASE.
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/10
C     ORIGINAL VERSION--OCTOBER   2009.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IWRITE
      CHARACTER*4 IADEDF
      CHARACTER*4 IGEPDF
      CHARACTER*4 IMAKDF
      CHARACTER*4 IBEIDF
      CHARACTER*4 ILGADF
      CHARACTER*4 ISKNDF
      CHARACTER*4 IGLDDF
      CHARACTER*4 IBGEDF
      CHARACTER*4 IGOMDF
      CHARACTER*4 IGETDF
      CHARACTER*4 ICONDF
      CHARACTER*4 IKATDF
      CHARACTER*4 IGIGDF
      CHARACTER*4 IGEODF
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 IERROR
C
      CHARACTER*4 IGAMFL
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
      REAL KSLOC
      REAL KSLOCT
      REAL KSSCAL
C
CCCCC DOUBLE PRECISION DXOUT
CCCCC DOUBLE PRECISION DTERM1
CCCCC DOUBLE PRECISION DTERM2
CCCCC DOUBLE PRECISION CDFGLO
CCCCC DOUBLE PRECISION CDFWAK
CCCCC DOUBLE PRECISION XPAR(5)
C
      DOUBLE PRECISION DN
      DOUBLE PRECISION DNP
      DOUBLE PRECISION DLIK
      DOUBLE PRECISION DTERM3
C
C---------------------------------------------------------------------
C
      DIMENSION Y(*)
      DIMENSION Y2(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
C
      ISUBN1='DPLI'
      ISUBN2='K1  '
      IERROR='NO'
C
      DLIK=DBLE(CPUMIN)
      AIC=CPUMIN
      AICC=CPUMIN
      BIC=CPUMIN
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               ********************************************
C
      IF(N.LT.2)THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,31)
   31   FORMAT('***** ERROR IN DPLIK1--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,32)
   32   FORMAT('      THE NUMBER OF OBSERVATIONS MUST BE AT LEAST 2.')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,34)N
   34   FORMAT('      THE ENTERED NUMBER OF OBSERVATIONS HERE = ',I6)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      HOLD=Y(1)
      DO60I=1,N
        IF(Y(I).NE.HOLD)GOTO69
   60 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,31)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,62)
   62 FORMAT('      ALL ELEMENTS IN THE RESPONSE VARIABLE ARE ',
     1       'IDENTICALLY EQUAL TO ',G15.7)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      IERROR='YES'
      GOTO9000
C
   69 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LIK1')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,71)
   71   FORMAT('***** AT THE BEGINNING OF DPLIK1--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,72)ICASPL,N,MINMAX
   72   FORMAT('ICASPL,N,MINMAX = ',A4,2X,2X,I8,I8)
        CALL DPWRST('XXX','BUG ')
        DO85I=1,N
          WRITE(ICOUT,86)I,Y(I)
   86     FORMAT('I,Y(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
   85   CONTINUE
      ENDIF
C
C               ****************************************************
C               **  STEP 2.1--                                    **
C               **  COMPUTE LIKELIHOOD FUNCTIION AT GIVEN POINTS  **
C               ****************************************************
C
      NP=-99
      IF(ICASPL.EQ.'UNIF')THEN
        CALL UNILI1(Y,N,A,B,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'NORM')THEN
        CALL NORLI1(Y,N,KSLOC,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'MAX')THEN
        CALL NORLI1(Y,N,KSLOC,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'FNOR')THEN
        CALL FNRLI1(Y,N,SHAPE1,SHAPE2,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'CAUC')THEN
        CALL CAULI1(Y,N,KSLOC,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'LOGI')THEN
        CALL LOGLI1(Y,N,KSLOC,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'DEXP')THEN
        CALL DEXLI1(Y,N,KSLOC,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'EXPO')THEN
        CALL EXPLI1(Y,N,ICASPL,
     1              KSLOC,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'1EXP')THEN
        KSLOCT=0.0
        CALL EXPLI1(Y,N,ICASPL,
     1              KSLOCT,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=1
C
      ELSEIF(ICASPL.EQ.'MAXW')THEN
        CALL MAXLI1(Y,N,ICASPL,
     1              KSLOC,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'1MAX')THEN
        KSLOCT=0.0
        CALL MAXLI1(Y,N,ICASPL,
     1              KSLOCT,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=1
C
      ELSEIF(ICASPL.EQ.'RAYL')THEN
        CALL RAYLI1(Y,N,ICASPL,
     1              KSLOC,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'1RAY')THEN
        KSLOCT=0.0
        CALL RAYLI1(Y,N,ICASPL,
     1              KSLOCT,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=1
C
      ELSEIF(ICASPL.EQ.'EXPO')THEN
        CALL EXPLI1(Y,N,ICASPL,
     1              KSLOCT,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'SLAS')THEN
        CALL SLALI1(Y,Y2,N,KSLOC,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'CAUC')THEN
        CALL CAULI1(Y,N,KSLOC,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'EV1')THEN
        CALL EV1LI1(Y,N,MINMAX,KSLOC,KSSCAL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSEIF(ICASPL.EQ.'WEIB')THEN
        CALL WEILI1(Y,N,ICASPL,MINMAX,KSLOC,KSSCAL,SHAPE1,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
      ELSEIF(ICASPL.EQ.'3WEI')THEN
        CALL WEILI1(Y,N,ICASPL,MINMAX,KSLOC,KSSCAL,SHAPE1,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=3
C
      ELSEIF(ICASPL.EQ.'LOGN')THEN
        CALL LGNLI1(Y,N,KSLOC,KSSCAL,SHAPE1,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
      ELSEIF(ICASPL.EQ.'3LGN')THEN
        CALL LGNLI1(Y,N,KSLOC,KSSCAL,SHAPE1,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=3
C
      ELSEIF(ICASPL.EQ.'LOGN')THEN
        CALL LGNLI1(Y,N,KSLOC,KSSCAL,SHAPE1,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
      ELSEIF(ICASPL.EQ.'3LGN')THEN
        CALL LGNLI1(Y,N,KSLOC,KSSCAL,SHAPE1,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=3
C
      ELSEIF(ICASPL.EQ.'GAMM')THEN
        IGAMFL='GAMM'
        CALL GAMLI1(Y,N,ICASPL,IGAMFL,KSLOC,KSSCAL,SHAPE1,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
      ELSEIF(ICASPL.EQ.'3GAM')THEN
        IGAMFL='GAMM'
        CALL GAMLI1(Y,N,ICASPL,IGAMFL,KSLOC,KSSCAL,SHAPE1,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=3
C
      ELSEIF(ICASPL.EQ.'INGA')THEN
        SCALET=1.0
        KSLOCT=0.0
        CALL IGLI1(Y,N,ICASPL,
     1             KSLOCT,SHAPE1,SHAPE2,
     1             ALIK,AIC,AICC,BIC,
     1             ISUBRO,IBUGA3,IERROR)
        NP=2
      ELSEIF(ICASPL.EQ.'3IGA')THEN
        SCALET=1.0
        CALL IGLI1(Y,N,ICASPL,
     1             KSLOC,SHAPE1,SHAPE2,
     1             ALIK,AIC,AICC,BIC,
     1             ISUBRO,IBUGA3,IERROR)
        NP=3
C
      ELSEIF(ICASPL.EQ.'BU10')THEN
        CALL B10LI1(Y,N,ICASPL,KSLOC,KSSCAL,SHAPE1,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
      ELSEIF(ICASPL.EQ.'3B10')THEN
        CALL B10LI1(Y,N,ICASPL,KSLOC,KSSCAL,SHAPE1,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=3
C
      ELSEIF(ICASPL.EQ.'POWF' .OR. ICASPL.EQ.'RPOW')THEN
        CALL POWLI1(Y,N,Y2,SHAPE1,YLOWLM,YUPPLM,ICASPL,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=1
C
      ELSEIF(ICASPL.EQ.'TOPL')THEN
        CALL TOPLI1(Y,N,Y2,SHAPE1,YLOWLM,YUPPLM,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=1
      ELSEIF(ICASPL.EQ.'RGTL')THEN
        CALL RGTLI1(Y,N,
     1              YLOWLM,YUPPLM,SHAPE1,SHAPE2,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
      ELSEIF(ICASPL.EQ.'BETA')THEN
        NP=2
        CALL BETLI1(Y,N,NP,YLOWLM,YUPPLM,SHAPE1,SHAPE2,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
      ELSEIF(ICASPL.EQ.'4BET')THEN
        NP=4
        CALL BETLI1(Y,N,NP,YLOWLM,YUPPLM,SHAPE1,SHAPE2,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
C
      ELSEIF(ICASPL.EQ.'GEV ')THEN
        CALL GEVLI1(Y,N,MINMAX,KSLOC,KSSCAL,SHAPE1,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
        IF(ABS(KSLOC).GT.0.000001)NP=3
      ELSEIF(ICASPL.EQ.'PARE')THEN
        CALL PARLI1(Y,N,
     1              SHAPE1,SHAPE2,
     1              ALIK,AIC,AICC,BIC,
     1              ISUBRO,IBUGA3,IERROR)
        NP=2
C
      ELSE
        CALL DPPDF1(Y,Y2,N,ICASPL,
     1              SHAPE1,SHAPE2,SHAPE3,SHAPE4,
     1              SHAPE5,SHAPE6,SHAPE7,
     1              YLOWLM,YUPPLM,A,B,MINMAX,
     1              ICAPSW,ICAPTY,
     1              IADEDF,IGEPDF,IMAKDF,IBEIDF,
     1              ILGADF,ISKNDF,IGLDDF,IBGEDF,
     1              IGETDF,ICONDF,IGOMDF,IKATDF,
     1              IGIGDF,IGEODF,
     1              KSLOC,KSSCAL,
     1              IBUGA3,ISUBRO,IERROR)
        DO1000I=1,N
          IF(Y2(I).LE.0.0)THEN
            IERROR='YES'
CCCCC       GOTO9000
            Y2(I)=0.0
          ELSE
            Y2(I)=LOG(Y2(I))
          ENDIF
 1000   CONTINUE
        IWRITE='OFF'
        CALL SUMDP(Y2,N,IWRITE,ALIK,IBUGA3,IERROR)
C
C       DON'T RECOMPUTE AIC, AICC, BIC IF ALREADY COMPUTED.
C
        IF(AIC.NE.CPUMIN .AND. BIC.NE.CPUMIN .AND. AICC.NE.CPUMIN)THEN
          GOTO9000
        ENDIF
C
        IF(NP.LE.0)THEN
          NP=0
          IF(KSLOC.NE.CPUMIN .AND. KSLOC.NE.0.0)NP=NP+1
          IF(KSSCAL.NE.CPUMIN)NP=NP+1
          IF(SHAPE1.NE.CPUMIN)NP=NP+1
          IF(SHAPE2.NE.CPUMIN)NP=NP+1
          IF(SHAPE3.NE.CPUMIN)NP=NP+1
          IF(SHAPE4.NE.CPUMIN)NP=NP+1
          IF(SHAPE5.NE.CPUMIN)NP=NP+1
          IF(SHAPE6.NE.CPUMIN)NP=NP+1
          IF(SHAPE7.NE.CPUMIN)NP=NP+1
        ENDIF
C
        DN=DBLE(N)
        DLIK=DBLE(ALIK)
        DNP=DBLE(NP)
        AIC=REAL(-2.0D0*DLIK + 2.0D0*DNP)
        DTERM3=(2.0D0*DNP*(DNP+1.0D0))/(DN-DNP-1.0D0)
        AICC=REAL(-2.0D0*DLIK + 2.0D0*DNP + DTERM3)
        BIC=REAL(-2.0D0*DLIK + DNP*LOG(DN))
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LIK1')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLIK1--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)ICASPL,N,MINMAX,IERROR
 9012   FORMAT('ICASPL,N,MINMAX,IERROR = ',A4,2X,2I8,2X,A4)
        CALL DPWRST('XXX','BUG ')
        DO9020I=1,N
          WRITE(ICOUT,9021)I,Y(I),Y2(I)
 9021     FORMAT('I,Y(I),Y2(I), = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
 9020   CONTINUE
        WRITE(ICOUT,9031)NP
 9031   FORMAT('NP = ',I8)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9033)DSUM1,DTERM1,DTERM3
 9033   FORMAT('DSUM1,DTERM1,DTERM3 = ',3G15.7)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,9034)ALIK,AIC,AICC,BIC
 9034   FORMAT('ALIK,AIC,AICC,BIC = ',4G15.7)
        CALL DPWRST('XXX','WRIT')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLIM(ICOM,IHARG,IARGT,ARG,NUMARG,
     1                 GX1MIN,GX1MAX,GY1MIN,GY1MAX,
     1                 GX2MIN,GX2MAX,GY2MIN,GY2MAX,
     1                 FX1MIN,FX1MAX,FY1MIN,FY1MAX,
     1                 FX2MIN,FX2MAX,FY2MIN,FY2MAX,
     1                 IX1MIN,IX1MAX,IY1MIN,IY1MAX,
     1                 IX2MIN,IX2MAX,IY2MIN,IY2MAX,
CCCCC                  NOVEMBER 1997.  ADD FOLLOWING 2 LINES
     1                 FX1MNZ,FX1MXZ,FX2MNZ,FX2MXZ,
     1                 FY1MNZ,FY1MXZ,FY2MNZ,FY2MXZ,
     1                 GX1MNX,GX1MXX,GY1MNX,GY1MXX,
     1                 GX2MNX,GX2MXX,GY2MNX,GY2MXX,
     1                 IX1MNX,IX1MXX,IY1MNX,IY1MXX,
     1                 IX2MNX,IX2MXX,IY2MNX,IY2MXX,
     1                 IFOUND,IERROR)
C
C     PURPOSE--DEFINE AXIS LIMITS (HORIZONTAL AXIS OR VERTICAL AXIS OR
C              BOTH) WHICH IN TURN WILL DEFINE THE EXTREMES WHICH WILL
C              APPEAR ON THE PLOT.  THE LIMITS WILL BE PLACED IN THE 8
C              VARIABLES:
C                 GX1MIN,GX1MAX,GY1MIN,GY1MAX,
C                 GX2MIN,GX2MAX,GY2MIN,GY2MAX,
C              THE STATUS (FIXED OR FLOAT) WILL BE PLACED IN THE 8
C              VARIABLES:
C                 IX1MIN,IX1MAX,IY1MIN,IY1MAX,
C                 IX2MIN,IX2MAX,IY2MIN,IY2MAX
C     INPUT  ARGUMENTS--ICOM  (A  HOLLERITH VARIABLE)
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --IARGT  (A  HOLLERITH VECTOR)
C                     --ARG    (A  FLOATING POINT VECTOR)
C                     --NUMARG
C     OUTPUT ARGUMENTS--
C                     --GX1MIN = MINIMUM FOR BOTTOM HORIZONTAL AXIS
C                     --GX1MAX = MAXIMUM FOR BOTTOM HORIZONTAL AXIS
C                     --GY1MIN = MINIMUM FOR LEFT   VERTICAL   AXIS
C                     --GY1MAX = MAXIMUM FOR LEFT   VERTICAL   AXIS
C                     --GX2MIN = MINIMUM FOR TOP    HORIZONTAL AXIS
C                     --GX2MAX = MAXIMUM FOR TOP    HORIZONTAL AXIS
C                     --GX2MIN = MINIMUM FOR RIGHT  VERTICAL   AXIS
C                     --GX2MAX = MAXIMUM FOR RIGHT  VERTICAL   AXIS
C                     --IX1MIN = STATUS FOR MINIMUM FOR BOTTOM HORIZONTAL AXIS
C                     --IX1MAX = STATUS FOR MAXIMUM FOR BOTTOM HORIZONTAL AXIS
C                     --IY1MIN = STATUS FOR MINIMUM FOR LEFT   VERTICAL   AXIS
C                     --IY1MAX = STATUS FOR MAXIMUM FOR LEFT   VERTICAL   AXIS
C                     --IX2MIN = STATUS FOR MINIMUM FOR TOP    HORIZONTAL AXIS
C                     --IX2MAX = STATUS FOR MAXIMUM FOR TOP    HORIZONTAL AXIS
C                     --IX2MIN = STATUS FOR MINIMUM FOR RIGHT  VERTICAL   AXIS
C                     --IX2MAX = STATUS FOR MAXIMUM FOR RIGHT  VERTICAL   AXIS
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--NOVEMBER  1978.
C     UPDATED         --SEPTEMBER 1980.
C     UPDATED         --OCTOBER   1981.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --NOVEMBER  1986.
C     UPDATED         --FEBRUARY  1992. FIX YLIMITS WITH NO ARGS BOMB
C     UPDATED         --JULY      1996. ALLOW UPPER AND LOWER LIMIT TO
C                                       BE SAME (FOR LOG SCALES WHICH
C                                       VARY OVER SMALL RANGE)
C     UPDATED         --NOVEMBER  1997. FIX BUG WITH TIC OFFSET AND
C                                       LIMITS FREEZE.
C     UPDATED         --OCTOBER   2018. RECODE FOR BETTER READABILITY
C     UPDATED         --MARCH     2021. ADD "SAVE" AND "RESTORE" OPTIONS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 ICOM
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IX1MIN
      CHARACTER*4 IX1MAX
      CHARACTER*4 IY1MIN
      CHARACTER*4 IY1MAX
      CHARACTER*4 IX2MIN
      CHARACTER*4 IX2MAX
      CHARACTER*4 IY2MIN
      CHARACTER*4 IY2MAX
      CHARACTER*4 IX1MNX
      CHARACTER*4 IX1MXX
      CHARACTER*4 IY1MNX
      CHARACTER*4 IY1MXX
      CHARACTER*4 IX2MNX
      CHARACTER*4 IX2MXX
      CHARACTER*4 IY2MNX
      CHARACTER*4 IY2MXX
C
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
C
C-----COMMON----------------------------------------------------------
C
      INCLUDE 'DPCOBE.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
      IF(ISUBG4.EQ.'PLIM')THEN
        WRITE(ICOUT,11)FX1MIN,FX1MAX,FY1MIN,FY1MAX
   11   FORMAT('FX1MIN,FX11MAX,FY1MIN,FY1MAX = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,13)FX2MIN,FX2MAX,FY2MIN,FY2MAX
   13   FORMAT('FX2MIN,FX21MAX,FY2MIN,FY2MAX = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ********************************************
C               **  STEP 81--                             **
C               **  TREAT THE    ?    CASE--              **
C               **  DUMP OUT CURRENT AND DEFAULT VALUES.  **
C               ********************************************
C
      IF(NUMARG.GE.1 .AND. IHARG(NUMARG).EQ.'?')THEN
        IFOUND='YES'
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8111)
 8111   FORMAT('THE CURRENT AXIS LIMITS ARE ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8112)GX1MIN,GX1MAX
 8112   FORMAT('            --X1 (BOTTOM HORIZONTAL) = ',2E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8113)GX2MIN,GX2MAX
 8113   FORMAT('            --X2 (TOP    HORIZONTAL) = ',2E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8114)GY1MIN,GY1MAX
 8114   FORMAT('            --Y1 (LEFT   VERTICAL  ) = ',2E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8115)GY2MIN,GY2MAX
 8115   FORMAT('            --Y2 (RIGHT  VERTICAL  ) = ',2E15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8116)CPUMAX
 8116   FORMAT('            --THE VALUE ',E15.7,' INDICATES THE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8117)
 8117   FORMAT('              LIMITS FLOAT WITH DATA AND ARE NEAT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8121)
 8121   FORMAT('THE DEFAULT AXIS LIMITS ARE ')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8122)
 8122   FORMAT('            --X1 (BOTTOM HORIZONTAL) = FLOAT & NEAT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8123)
 8123   FORMAT('            --X2 (TOP    HORIZONTAL) = FLOAT & NEAT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8124)
 8124   FORMAT('            --Y1 (LEFT   VERTICAL  ) = FLOAT & NEAT')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,8125)
 8125   FORMAT('            --Y2 (BOTTOM VERTICAL  ) = FLOAT & NEAT')
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ENDIF
C
C               *****************************************************
C               **  TREAT THE CASE WHEN                            **
C               **  BOTH HORIZONTAL AXIS LIMITS ARE TO BE FIXED    **
C               *****************************************************
C
      IF(ICOM.EQ.'XLIM')THEN
        IF(NUMARG.GE.2 .AND. IARGT(1).EQ.'NUMB' .AND.
     1     IARGT(2).EQ.'NUMB')THEN
          IFOUND='YES'
          A1=ARG(1)
          A2=ARG(2)
          IF(A1.LE.A2)THEN
            GX1MIN=A1
            GX1MAX=A2
            GX2MIN=A1
            GX2MAX=A2
          ELSEIF(A1.GT.A2)THEN
            GX1MIN=A2
            GX1MAX=A1
            GX2MIN=A2
            GX2MAX=A1
          ENDIF
          IX1MIN='FIXE'
          IX1MAX='FIXE'
          IX2MIN='FIXE'
          IX2MAX='FIXE'
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1125)
 1125       FORMAT('THE X AXIS LIMITS (FOR BOTH HORIZONTAL')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1126)GX1MIN,GX1MAX
 1126       FORMAT('FRAME LINES) HAVE JUST BEEN SET TO ',E15.7,E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'FROZ' .OR. IHARG(1).EQ.'FREE')THEN
          IFOUND='YES'
          GX1MIN=FX1MNZ
          GX1MAX=FX1MXZ
          GX2MIN=FX2MNZ
          GX2MAX=FX2MXZ
          IX1MIN='FIXE'
          IX1MAX='FIXE'
          IX2MIN='FIXE'
          IX2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1135)
 1135       FORMAT('THE X AXIS LIMITS (FOR BOTH HORIZONTAL FRAME ',
     1             'LINES) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1137)
 1137       FORMAT('BEEN FROZEN TO THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GX1MIN,GX1MAX
 1138       FORMAT('NAMELY--',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'SAVE')THEN
          IFOUND='YES'
          GX1MNX=FX1MNZ
          GX1MXX=FX1MXZ
          GX2MNX=FX2MNZ
          GX2MXX=FX2MXZ
          IX1MNX='FIXE'
          IX1MXX='FIXE'
          IX2MNX='FIXE'
          IX2MXX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1145)
 1145       FORMAT('THE CURRENT X AXIS LIMITS (FOR BOTH HORIZONTAL ',
     1             'FRAME LINES) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1147)
 1147       FORMAT('BEEN SAVED FROM THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GX1MIN,GX1MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'REST')THEN
          IFOUND='YES'
          GX1MIN=GX1MNX
          GX1MAX=GX1MXX
          GX2MIN=GX2MNX
          GX2MAX=GX2MXX
          IX1MIN='FIXE'
          IX1MAX='FIXE'
          IX2MIN='FIXE'
          IX2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1155)
 1155       FORMAT('THE CURRENT X AXIS LIMITS (FOR BOTH HORIZONTAL ',
     1             'FRAME LINES) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1157)
 1157       FORMAT('BEEN RESTORED FROM THE PREVIOUS LIMITS SAVE,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GX1MIN,GX1MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSE
          IFOUND='YES'
          GX1MIN=CPUMIN
          GX1MAX=CPUMAX
          GX2MIN=CPUMIN
          GX2MAX=CPUMAX
          IX1MIN='FLOA'
          IX1MAX='FLOA'
          IX2MIN='FLOA'
          IX2MAX='FLOA'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1115)
 1115       FORMAT('THE X AXIS LIMITS (FOR BOTH HORIZONTAL FRAME ',
     1             'LINES) HAVE JUST BEEN')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1117)
 1117       FORMAT('SET SO THAT THEY WILL FLOAT WITH THE PLOTTED DATA')
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ENDIF
C
C               *****************************************************
C               **  TREAT THE CASE WHEN THE                        **
C               **  BOTTOM HORIZONTAL AXIS LIMITS ARE TO BE FIXED  **
C               *****************************************************
C
      ELSEIF(ICOM.EQ.'X1LI')THEN
        IF(NUMARG.GE.2 .AND. IARGT(1).EQ.'NUMB' .AND.
     1     IARGT(2).EQ.'NUMB')THEN
          IFOUND='YES'
          A1=ARG(1)
          A2=ARG(2)
          IF(A1.LE.A2)THEN
            GX1MIN=A1
            GX1MAX=A2
          ELSEIF(A1.GT.A2)THEN
            GX1MIN=A2
            GX1MAX=A1
          ENDIF
          IX1MIN='FIXE'
          IX1MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1225)
 1225       FORMAT('THE X AXIS LIMITS (FOR THE BOTTOM HORIZONTAL')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1226)GX1MIN,GX1MAX
 1226       FORMAT('FRAME LINE) HAVE JUST BEEN SET TO ',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'FROZ' .OR. IHARG(1).EQ.'FREE')THEN
          IFOUND='YES'
          GX1MIN=FX1MNZ
          GX1MAX=FX1MXZ
          IX1MIN='FIXE'
          IX1MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1235)
 1235       FORMAT('THE X AXIS LIMITS (FOR THE BOTTOM HORIZONTAL ',
     1             'FRAME LINE) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1237)
 1237       FORMAT('BEEN FROZEN TO THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1238)GX1MIN,GX1MAX
 1238       FORMAT('NAMELY--',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'SAVE')THEN
          IFOUND='YES'
          GX1MNX=FX1MNZ
          GX1MXX=FX1MXZ
          IX1MNX='FIXE'
          IX1MXX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1245)
 1245       FORMAT('THE CURRENT X AXIS LIMITS (FOR THE BOTTOM ',
     1             'HORIZONTAL FRAME LINE) HAS JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1247)
 1247       FORMAT('BEEN SAVED FROM THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GX1MIN,GX1MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'REST')THEN
          IFOUND='YES'
          GX1MIN=GX1MNX
          GX1MAX=GX1MXX
          IX1MIN='FIXE'
          IX1MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1255)
 1255       FORMAT('THE CURRENT X AXIS LIMITS (FOR THE BOTTOM ',
     1             'HORIZONTAL FRAME LINE) HAS JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1257)
 1257       FORMAT('BEEN RESTORED FROM THE PREVIOUS LIMITS SAVE,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GY1MIN,GY1MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSE
          IFOUND='YES'
          GX1MIN=CPUMIN
          GX1MAX=CPUMAX
          IX1MIN='FLOA'
          IX1MAX='FLOA'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1215)
 1215       FORMAT('THE X AXIS LIMITS (FOR THE BOTTOM HORIZONTAL ',
     1            'FRAME LINE) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1217)
 1217       FORMAT('BEEN SET SO THAT THEY WILL FLOAT WITH THE ',
     1             'PLOTTED DATA')
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ENDIF
C
C               *****************************************************
C               **  TREAT THE CASE WHEN THE                        **
C               **  TOP    HORIZONTAL AXIS LIMITS ARE TO BE FIXED  **
C               *****************************************************
C
      ELSEIF(ICOM.EQ.'X2LI')THEN
        IF(NUMARG.GE.2 .AND. IARGT(1).EQ.'NUMB' .AND.
     1     IARGT(2).EQ.'NUMB')THEN
          IFOUND='YES'
          A1=ARG(1)
          A2=ARG(2)
          IF(A1.LE.A2)THEN
            GX2MIN=A1
            GX2MAX=A2
          ELSEIF(A1.GT.A2)THEN
            GX2MIN=A2
            GX2MAX=A1
          ENDIF
          IX2MIN='FIXE'
          IX2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1325)
 1325       FORMAT('THE X AXIS LIMITS (FOR THE TOP HORIZONTAL')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1326)GX2MIN,GX2MAX
 1326       FORMAT('FRAME LINE) HAVE JUST BEEN SET TO ',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'FROZ' .OR. IHARG(1).EQ.'FREE')THEN
          IFOUND='YES'
          GX2MIN=FX2MNZ
          GX2MAX=FX2MXZ
          IX2MIN='FIXE'
          IX2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1335)
 1335       FORMAT('THE X AXIS LIMITS (FOR THE TOP HORIZONTAL FRAME ',
     1             'LINE) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1337)
 1337       FORMAT('BEEN FROZEN TO THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1338)GX2MIN,GX2MAX
 1338       FORMAT('NAMELY--',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'SAVE')THEN
          IFOUND='YES'
          GX2MNX=FX2MNZ
          GX2MXX=FX2MXZ
          IX2MNX='FIXE'
          IX2MXX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1345)
 1345       FORMAT('THE CURRENT X AXIS LIMITS (FOR THE TOP HORIZONTAL ',
     1             'FRAME LINE) HAS JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1347)
 1347       FORMAT('BEEN SAVED FROM THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GX2MIN,GX2MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'REST')THEN
          IFOUND='YES'
          GX2MIN=GX2MNX
          GX2MAX=GX2MXX
          IX2MIN='FIXE'
          IX2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1355)
 1355       FORMAT('THE CURRENT X AXIS LIMITS (FOR THE TOP HORIZONTAL ',
     1             'FRAME LINE) HAS JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1357)
 1357       FORMAT('BEEN RESTORED FROM THE PREVIOUS LIMITS SAVE,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GX1MIN,GX1MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSE
          IFOUND='YES'
          GX2MIN=CPUMIN
          GX2MAX=CPUMAX
          IX2MIN='FLOA'
          IX2MAX='FLOA'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1315)
 1315       FORMAT('THE X AXIS LIMITS (FOR THE TOP HORIZONTAL FRAME ',
     1             'LINE) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1317)
 1317       FORMAT('BEEN SET SO THAT THEY WILL FLOAT WITH THE ',
     1             'PLOTTED DATA')
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ENDIF
C
C               *****************************************************
C               **  TREAT THE CASE WHEN                            **
C               **  BOTH VERTICAL   AXIS LIMITS ARE TO BE FIXED    **
C               *****************************************************
C
      ELSEIF(ICOM.EQ.'YLIM')THEN
        IF(NUMARG.GE.2.AND.IARGT(1).EQ.'NUMB'.AND.
     1     IARGT(2).EQ.'NUMB')THEN
          IFOUND='YES'
          A1=ARG(1)
          A2=ARG(2)
          IF(A1.LE.A2)THEN
            GY1MIN=A1
            GY1MAX=A2
            GY2MIN=A1
            GY2MAX=A2
          ELSEIF(A1.GT.A2)THEN
            GY1MIN=A2
            GY1MAX=A1
            GY2MIN=A2
            GY2MAX=A1
          ENDIF
          IY1MIN='FIXE'
          IY1MAX='FIXE'
          IY2MIN='FIXE'
          IY2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1425)
 1425       FORMAT('THE Y AXIS LIMITS (FOR BOTH VERTICAL')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1426)GY1MIN,GY1MAX
 1426       FORMAT('FRAME LINES) HAVE JUST BEEN SET TO ',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'FROZ' .OR. IHARG(1).EQ.'FREE')THEN
          IFOUND='YES'
          GY1MIN=FY1MNZ
          GY1MAX=FY1MXZ
          GY2MIN=FY2MNZ
          GY2MAX=FY2MXZ
          IY1MIN='FIXE'
          IY1MAX='FIXE'
          IY2MIN='FIXE'
          IY2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1435)
 1435       FORMAT('THE Y AXIS LIMITS (FOR BOTH VERTICAL FRAME ',
     1             'LINES) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1437)
 1437       FORMAT('BEEN FROZEN TO THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1438)GY1MIN,GY1MAX
 1438       FORMAT('NAMELY--',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'SAVE')THEN
          IFOUND='YES'
          GY1MNX=FY1MNZ
          GY1MXX=FY1MXZ
          GY2MNX=FY2MNZ
          GY2MXX=FY2MXZ
          IY1MNX='FIXE'
          IY1MXX='FIXE'
          IY2MNX='FIXE'
          IY2MXX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1445)
 1445       FORMAT('THE CURRENT Y AXIS LIMITS (FOR BOTH VERTICAL ',
     1             'FRAME LINES) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1447)
 1447       FORMAT('BEEN SAVED FROM THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GY1MIN,GY1MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'REST')THEN
          IFOUND='YES'
          GY1MIN=GY1MNX
          GY1MAX=GY1MXX
          GY2MIN=GY2MNX
          GY2MAX=GY2MXX
          IY1MIN='FIXE'
          IY1MAX='FIXE'
          IY2MIN='FIXE'
          IY2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1455)
 1455       FORMAT('THE CURRENT Y AXIS LIMITS (FOR BOTH VERTICAL ',
     1             'FRAME LINES) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1457)
 1457       FORMAT('BEEN RESTORED FROM THE PREVIOUS LIMITS SAVE,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GY1MIN,GY1MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSE
          IFOUND='YES'
          GY1MIN=CPUMIN
          GY1MAX=CPUMAX
          GY2MIN=CPUMIN
          GY2MAX=CPUMAX
          IY1MIN='FLOA'
          IY1MAX='FLOA'
          IY2MIN='FLOA'
          IY2MAX='FLOA'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1415)
 1415       FORMAT('THE Y AXIS LIMITS (FOR BOTH VERTICAL FRAME ',
     1             'LINES) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1417)
 1417       FORMAT('BEEN SET SO THAT THEY WILL FLOAT WITH THE ',
     1             'PLOTTED DATA')
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ENDIF
C
C               *****************************************************
C               **  TREAT THE CASE WHEN THE                        **
C               **  LEFT   VERTICAL   AXIS LIMITS ARE TO BE FIXED  **
C               *****************************************************
C
      ELSEIF(ICOM.EQ.'Y1LI')THEN
        IF(NUMARG.GE.2 .AND. IARGT(1).EQ.'NUMB' .AND.
     1     IARGT(2).EQ.'NUMB')THEN
          IFOUND='YES'
          A1=ARG(1)
          A2=ARG(2)
          IF(A1.LE.A2)THEN
            GY1MIN=A1
            GY1MAX=A2
          ELSEIF(A1.GT.A2)THEN
            GY1MIN=A2
            GY1MAX=A1
          ENDIF
          IY1MIN='FIXE'
          IY1MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1525)
 1525       FORMAT('THE Y AXIS LIMITS (FOR THE LEFT   VERTICAL')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1526)GY1MIN,GY1MAX
 1526       FORMAT('FRAME LINE) HAVE JUST BEEN SET TO ',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'FROZ' .OR. IHARG(1).EQ.'FREE')THEN
          IFOUND='YES'
          GY1MIN=FY1MNZ
          GY1MAX=FY1MXZ
          IY1MIN='FIXE'
          IY1MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1535)
 1535       FORMAT('THE Y AXIS LIMITS (FOR THE LEFT VERTICAL FRAME ',
     1             'LINE) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1537)
 1537       FORMAT('BEEN FROZEN TO THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1538)GY1MIN,GY1MAX
 1538       FORMAT('NAMELY--',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'SAVE')THEN
          IFOUND='YES'
          GY1MNX=FY1MNZ
          GY1MXX=FY1MXZ
          IY1MNX='FIXE'
          IY1MXX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1545)
 1545       FORMAT('THE CURRENT Y AXIS LIMITS (FOR THE LEFT VERTICAL ',
     1             'FRAME LINE) HAS JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1547)
 1547       FORMAT('BEEN SAVED FROM THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GY1MIN,GY1MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'REST')THEN
          IFOUND='YES'
          GY1MIN=GY1MNX
          GY1MAX=GY1MXX
          IY1MIN='FIXE'
          IY1MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1555)
 1555       FORMAT('THE CURRENT Y AXIS LIMITS (FOR THE LEFT VERTICAL ',
     1             'FRAME LINE) HAS JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1557)
 1557       FORMAT('BEEN RESTORED FROM THE PREVIOUS LIMITS SAVE,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GY1MIN,GY1MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSE
          IFOUND='YES'
          GY1MIN=CPUMIN
          GY1MAX=CPUMAX
          IY1MIN='FLOA'
          IY1MAX='FLOA'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1515)
 1515       FORMAT('THE Y AXIS LIMITS (FOR THE LEFT VERTICAL FRAME ',
     1             'LINE) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1517)
 1517       FORMAT('BEEN SET SO THAT THEY WILL FLOAT WITH THE ',
     1             'PLOTTED DATA')
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ENDIF
C
C               *****************************************************
C               **  TREAT THE CASE WHEN THE                        **
C               **  RIGHT  VERTICAL   AXIS LIMITS ARE TO BE FIXED  **
C               *****************************************************
C
      ELSEIF(ICOM.EQ.'Y2LI')THEN
        IF(NUMARG.GE.2 .AND. IARGT(1).EQ.'NUMB' .AND.
     1     IARGT(2).EQ.'NUMB')THEN
          IFOUND='YES'
          A1=ARG(1)
          A2=ARG(2)
          IF(A1.LE.A2)THEN
            GY2MIN=A1
            GY2MAX=A2
          ELSEIF(A1.GT.A2)THEN
            GY2MIN=A2
            GY2MAX=A1
          ENDIF
          IY2MIN='FIXE'
          IY2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1625)
 1625       FORMAT('THE Y AXIS LIMITS (FOR THE RIGHT  VERTICAL')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1626)GY2MIN,GY2MAX
 1626       FORMAT('FRAME LINE) HAVE JUST BEEN SET TO ',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'FROZ' .OR. IHARG(1).EQ.'FREE')THEN
          IFOUND='YES'
          GY2MIN=FY2MNZ
          GY2MAX=FY2MXZ
          IY2MIN='FIXE'
          IY2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1635)
 1635       FORMAT('THE Y AXIS LIMITS (FOR THE RIGHT VERTICAL FRAME ',
     1             'LINE) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1637)
 1637       FORMAT('BEEN FROZEN TO THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1638)GY2MIN,GY2MAX
 1638       FORMAT('NAMELY--',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'SAVE')THEN
          IFOUND='YES'
          GY2MNX=FY2MNZ
          GY2MXX=FY2MXZ
          IY2MNX='FIXE'
          IY2MXX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1645)
 1645       FORMAT('THE CURRENT Y AXIS LIMITS (FOR THE RIGHT VERTICAL ',
     1             'FRAME LINE) HAS JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1647)
 1647       FORMAT('BEEN SAVED FROM THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GY2MIN,GY2MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'REST')THEN
          IFOUND='YES'
          GY2MIN=GY2MNX
          GY2MAX=GY2MXX
          IY2MIN='FIXE'
          IY2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1655)
 1655       FORMAT('THE CURRENT Y AXIS LIMITS (FOR THE RIGHT VERTICAL ',
     1             'FRAME LINE) HAS JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1657)
 1657       FORMAT('BEEN RESTORED FROM THE PREVIOUS LIMITS SAVE,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GY2MIN,GY2MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSE
          IFOUND='YES'
          GY2MIN=CPUMIN
          GY2MAX=CPUMAX
          IY2MIN='FLOA'
          IY2MAX='FLOA'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1615)
 1615       FORMAT('THE Y AXIS LIMITS (FOR THE RIGHT VERTICAL FRAME ',
     1             'LINE) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1617)
 1617       FORMAT('BEEN SET SO THAT THEY WILL FLOAT WITH THE ',
     1             'PLOTTED DATA')
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ENDIF
C
C               ******************************************
C               **  TREAT THE CASE WHEN                 **
C               **  BOTH AXIS LIMITS ARE TO BE FIXED    **
C               ******************************************
C
      ELSEIF(ICOM.EQ.'XYLI' .OR. ICOM.EQ.'YXLI' .OR.
     1       ICOM.EQ.'LIMI' .OR. ICOM.EQ.'LIM ')THEN
        IF(NUMARG.GE.2 .AND. IARGT(1).EQ.'NUMB' .AND.
     1     IARGT(2).EQ.'NUMB')THEN
          IFOUND='YES'
          A1=ARG(1)
          A2=ARG(2)
          IF(A1.LE.A2)THEN
            GX1MIN=A1
            GX1MAX=A2
            GY1MIN=A1
            GY1MAX=A2
            GX2MIN=A1
            GX2MAX=A2
            GY2MIN=A1
            GY2MAX=A2
          ELSEIF(A1.GT.A2)THEN
            GX1MIN=A2
            GX1MAX=A1
            GY1MIN=A2
            GY1MAX=A1
            GX2MIN=A2
            GX2MAX=A1
            GY2MIN=A2
            GY2MAX=A1
          ENDIF
          IX1MIN='FIXE'
          IX1MAX='FIXE'
          IY1MIN='FIXE'
          IY1MAX='FIXE'
          IX2MIN='FIXE'
          IX2MAX='FIXE'
          IY2MIN='FIXE'
          IY2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1725)
 1725       FORMAT('THE AXIS LIMITS (FOR ALL 4 FRAME LINES) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1726)GX1MIN,GX1MAX
 1726       FORMAT('BEEN SET TO ',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'FROZ' .OR. IHARG(1).EQ.'FREE')THEN
          IFOUND='YES'
          GX1MIN=FX1MNZ
          GX1MAX=FX1MXZ
          GX2MIN=FX2MNZ
          GX2MAX=FX2MXZ
          GY1MIN=FY1MNZ
          GY1MAX=FY1MXZ
          GY2MIN=FY2MNZ
          GY2MAX=FY2MXZ
          IX1MIN='FIXE'
          IX1MAX='FIXE'
          IX2MIN='FIXE'
          IX2MAX='FIXE'
          IY1MIN='FIXE'
          IY1MAX='FIXE'
          IY2MIN='FIXE'
          IY2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1735)
 1735       FORMAT('THE AXIS LIMITS (FOR ALL 4 FRAME LINES) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1737)
 1737       FORMAT('BEEN FROZEN TO THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1738)GX1MIN,GX1MAX
 1738       FORMAT('NAMELY--',2E15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'SAVE')THEN
          IFOUND='YES'
          GX1MNX=FX1MNZ
          GX1MXX=FX1MXZ
          GX2MNX=FX2MNZ
          GX2MXX=FX2MXZ
          GY1MNX=FY1MNZ
          GY1MXX=FY1MXZ
          GY2MNX=FY2MNZ
          GY2MXX=FY2MXZ
          IX1MNX='FIXE'
          IX1MXX='FIXE'
          IX2MNX='FIXE'
          IX2MXX='FIXE'
          IY1MNX='FIXE'
          IY1MXX='FIXE'
          IY2MNX='FIXE'
          IY2MXX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1745)
 1745       FORMAT('THE AXIS LIMITS (FOR ALL 4 FRAME LINES) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1747)
 1747       FORMAT('BEEN SAVED FROM THE VALUES FROM THE PREVIOUS PLOT,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GX1MIN,GX1MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSEIF(IHARG(1).EQ.'REST')THEN
          IFOUND='YES'
          GX1MIN=GX1MNX
          GX1MAX=GX1MXX
          GX2MIN=GX2MNX
          GX2MAX=GX2MXX
          GY1MIN=GY1MNX
          GY1MAX=GY1MXX
          GY2MIN=GY2MNX
          GY2MAX=GY2MXX
          IX1MIN='FIXE'
          IX1MAX='FIXE'
          IX2MIN='FIXE'
          IX2MAX='FIXE'
          IY1MIN='FIXE'
          IY1MAX='FIXE'
          IY2MIN='FIXE'
          IY2MAX='FIXE'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1755)
 1755       FORMAT('THE AXIS LIMITS (FOR ALL 4 FRAME LINES) HAVE JUST')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1757)
 1757       FORMAT('BEEN RESTORED FROM THE PREVIOUS LIMITS SAVE,')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1138)GX1MIN,GX1MAX
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ELSE
          IFOUND='YES'
          GX1MIN=CPUMIN
          GX1MAX=CPUMAX
          GY1MIN=CPUMIN
          GY1MAX=CPUMAX
          GX2MIN=CPUMIN
          GX2MAX=CPUMAX
          GY2MIN=CPUMIN
          GY2MAX=CPUMAX
          IX1MIN='FLOA'
          IX1MAX='FLOA'
          IY1MIN='FLOA'
          IY1MAX='FLOA'
          IX2MIN='FLOA'
          IX2MAX='FLOA'
          IY2MIN='FLOA'
          IY2MAX='FLOA'
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1715)
 1715       FORMAT('THE X AXIS LIMITS (FOR ALL 4 FRAME LINES) HAVE ',
     1             'JUST BEEN')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1717)
 1717       FORMAT('SET SO THAT THEY WILL FLOAT WITH THE PLOTTED DATA')
            CALL DPWRST('XXX','BUG ')
          ENDIF
          GOTO9000
        ENDIF
C
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPLIN2(I,IHARG,IHARG2,ILINP2)
C
C     PURPOSE--SHORTEN 5 TO 8-CHARACTER STRINGS
C              FOR VARIOUS DASHED LINES
C              (E.G., DASH3, DASH12, ETC.)
C              INTO 1 TO 4-CHARACTER STRINGS
C              (E.G., DA3, DA12, ETC.)
C     INPUT  ARGUMENTS--I      THE ELEMENT NUMBER
C                              IN IHARG AND IHARG2 THAT IS
C                              BEING EXAMINED.
C                     --IHARG  (A  HOLLERITH VECTOR)
C                     --IHARG2 (A  HOLLERITH VECTOR)
C     OUTPUT ARGUMENTS--ILINP2 (A  HOLLERITH VARIABLE
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--NOVEMBER  1981.
C     UPDATED         --MAY       1982.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IHARG2
      CHARACTER*4 ILINP2
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IHARG2(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(IHARG(I).EQ.'DASH')GOTO1000
      GOTO9000
C
 1000 CONTINUE
      ILINP2='DASH'
      IF(IHARG2(I).EQ.'1   ')ILINP2='DA1 '
      IF(IHARG2(I).EQ.'2   ')ILINP2='DA2 '
      IF(IHARG2(I).EQ.'3   ')ILINP2='DA3 '
      IF(IHARG2(I).EQ.'4   ')ILINP2='DA4 '
      IF(IHARG2(I).EQ.'5   ')ILINP2='DA5 '
      IF(IHARG2(I).EQ.'6   ')ILINP2='DA6 '
      IF(IHARG2(I).EQ.'7   ')ILINP2='DA7 '
      IF(IHARG2(I).EQ.'8   ')ILINP2='DA8 '
      IF(IHARG2(I).EQ.'9   ')ILINP2='DA9 '
      IF(IHARG2(I).EQ.'10  ')ILINP2='DA10'
      IF(IHARG2(I).EQ.'11  ')ILINP2='DA11'
      IF(IHARG2(I).EQ.'12  ')ILINP2='DA12'
      IF(IHARG2(I).EQ.'13  ')ILINP2='DA13'
      IF(IHARG2(I).EQ.'14  ')ILINP2='DA14'
      IF(IHARG2(I).EQ.'15  ')ILINP2='DA15'
      IF(IHARG2(I).EQ.'16  ')ILINP2='DA16'
      IF(IHARG2(I).EQ.'17  ')ILINP2='DA17'
      IF(IHARG2(I).EQ.'18  ')ILINP2='DA18'
      IF(IHARG2(I).EQ.'19  ')ILINP2='DA19'
      IF(IHARG2(I).EQ.'20  ')ILINP2='DA20'
C
 9000 CONTINUE
      RETURN
      END
      SUBROUTINE DPLINE(IHARG,IHARG2,NUMARG,MAXLIN,ILINPA,ILINPO,
     1IFOUND,IERROR)
CCCCC ARGUMENT LIST AUGMENTED FEBRUARY, 1998.
CCCCC SUBROUTINE DPLINE(IHARG,IHARG2,NUMARG,MAXLIN,ILINPA,IFOUND,IERROR)
C
C     PURPOSE--DEFINE PLOT LINES FOR USE IN MULTI-TRACE PLOTS.
C              THE LINE FOR THE I-TH TRACE WILL BE PLACED
C              IN THE I-TH ELEMENT OF THE HOLLERITH
C              VECTOR ILINPA(.).
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --IHARG2   (A HOLLERITH VECTOR)
C                     --NUMARG
C                     --MAXLIN
C     OUTPUT ARGUMENTS--ILINPA  (A  HOLLERITH VECTOR
C                       WHOSE I-TH ELEMENT IS THE LINE
C                       ASSIGNED TO THE I-TH    TRACE    IN
C                       A MULTI-TRACE PLOT.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1977.
C     UPDATED         --SEPTEMBER 1980.
C     UPDATED         --MARCH     1982.
C     UPDATED         --MAY       1982.
C     UPDATED         --JULY      1983.
C     UPDATED         --AUGUST    1987.     TUFTE BOX PLOT
C     UPDATED         --NOVEMBER  1988.     ERROR BAR PLOT
C     UPDATED         --SEPTEMBER 1990.     AUGMENT CONTROL CHART
C     UPDATED         --FEBRUARY  1998.  ADD LINE SAVE/RESTORE FOR
C                                        FRONTEND.
C     UPDATED         --FEBRUARY  2003.  VIOLIN PLOT
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IHARG2
      CHARACTER*4 ILINPA
CCCCC ADD FOLLOWING LINE FEBRUARY 1998.
      CHARACTER*4 ILINPO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 ILINP2
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION IHARG2(*)
C
      DIMENSION ILINPA(*)
CCCCC ADD FOLLOWING LINE FEBRUARY 1998.
      DIMENSION ILINPO(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='NO'
      IERROR='NO'
C
CCCCC ADD FOLLOWING 2 LINES FEBRUARY 1998.
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'SAVE')GOTO2160
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'REST')GOTO2165
C
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'BOX'.AND.IHARG(2).EQ.'PLOT')
     1GOTO2110
      IF(NUMARG.GE.3.AND.IHARG(1).EQ.'TUFT'.AND.
     1                   IHARG(2).EQ.'BOX'.AND.IHARG(3).EQ.'PLOT')
     1GOTO2140
      IF(NUMARG.GE.3.AND.IHARG(1).EQ.'ERRO'.AND.
     1                   IHARG(2).EQ.'BAR'.AND.IHARG(3).EQ.'PLOT')
     1GOTO2150
      IF(NUMARG.GE.3.AND.IHARG(2).EQ.'BOX'.AND.IHARG(3).EQ.'PLOT')
     1GOTO2110
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'I'.AND.IHARG(2).EQ.'PLOT')
     1GOTO2120
      IF(NUMARG.GE.3.AND.IHARG(2).EQ.'I'.AND.IHARG(3).EQ.'PLOT')
     1GOTO2120
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'CONT'.AND.IHARG(2).EQ.'CHAR')
     1GOTO2130
      IF(NUMARG.GE.3.AND.IHARG(2).EQ.'CONT'.AND.IHARG(3).EQ.'CHAR')
     1GOTO2130
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'VIOL'.AND.IHARG(2).EQ.'PLOT')
     1GOTO2145
      IF(NUMARG.GE.3.AND.IHARG(1).EQ.'VIOL'.AND.IHARG(2).EQ.'BOX'
     1.AND.IHARG(3).EQ.'PLOT')GOTO2148
      IF(NUMARG.GE.4.AND.IHARG(1).EQ.'VIOL'.AND.IHARG(2).EQ.'BOX'
     1.AND.IHARG(3).EQ.'TUFT'.AND.IHARG(4).EQ.'PLOT')GOTO2145
C
      IF(NUMARG.LE.0)GOTO1160
      IF(NUMARG.EQ.1.AND.IHARG(1).EQ.'ALL')GOTO1160
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'COLO')GOTO2199
C
      IF(IHARG(NUMARG).EQ.'ON')GOTO1110
      IF(IHARG(NUMARG).EQ.'OFF')GOTO1160
      IF(IHARG(NUMARG).EQ.'AUTO')GOTO1110
      IF(IHARG(NUMARG).EQ.'DEFA')GOTO1110
C
      IF(NUMARG.EQ.1)GOTO1120
      IF(NUMARG.GE.2.AND.IHARG(1).EQ.'ALL')GOTO1130
      IF(NUMARG.GE.2.AND.IHARG(2).EQ.'ALL')GOTO1140
C
      GOTO1150
C
 1110 CONTINUE
      DO1115I=1,MAXLIN
      ILINPA(I)='SOLI'
 1115 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1119
      WRITE(ICOUT,999)
  999 FORMAT(1X)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1116)ILINPA(I)
 1116 FORMAT('ALL LINES HAVE JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1119 CONTINUE
      GOTO2190
C
 1120 CONTINUE
      IF(NUMARG.EQ.0)ILINPA(1)='    '
      IF(NUMARG.GE.1)ILINPA(1)=IHARG(1)
      IF(NUMARG.GE.1.AND.IHARG(1).EQ.'DASH')GOTO1121
      GOTO1125
 1121 CONTINUE
      I=1
      CALL DPLIN2(I,IHARG,IHARG2,ILINP2)
      ILINPA(I)=ILINP2
 1125 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1129
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1126)I,ILINPA(I)
 1126 FORMAT('LINE ',I6,' HAS JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1129 CONTINUE
      GOTO2190
C
 1130 CONTINUE
      ILINP2=IHARG(2)
      IF(IHARG(2).EQ.'DASH')GOTO1131
      GOTO1132
 1131 CONTINUE
      I=2
      CALL DPLIN2(I,IHARG,IHARG2,ILINP2)
 1132 CONTINUE
      DO1135I=1,MAXLIN
      ILINPA(I)=ILINP2
 1135 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1139
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1116)ILINPA(I)
      CALL DPWRST('XXX','BUG ')
 1139 CONTINUE
      GOTO2190
C
 1140 CONTINUE
      ILINP2=IHARG(1)
      IF(IHARG(1).EQ.'DASH')GOTO1141
      GOTO1142
 1141 CONTINUE
      I=1
      CALL DPLIN2(I,IHARG,IHARG2,ILINP2)
 1142 CONTINUE
      DO1145I=1,MAXLIN
      ILINPA(I)=ILINP2
 1145 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1149
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1116)ILINPA(I)
      CALL DPWRST('XXX','BUG ')
 1149 CONTINUE
      GOTO2190
C
 1150 CONTINUE
      IMAX=NUMARG
      IF(MAXLIN.LT.IMAX)IMAX=MAXLIN
      DO1155I=1,IMAX
      ILINP2=IHARG(I)
      IF(IHARG(I).EQ.'DASH')GOTO1151
      GOTO1152
 1151 CONTINUE
      CALL DPLIN2(I,IHARG,IHARG2,ILINP2)
 1152 CONTINUE
      ILINPA(I)=ILINP2
 1155 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1159
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1156I=1,IMAX
      WRITE(ICOUT,1126)I,ILINPA(I)
      CALL DPWRST('XXX','BUG ')
 1156 CONTINUE
 1159 CONTINUE
      GOTO2190
C
 1160 CONTINUE
      DO1165I=1,MAXLIN
      ILINPA(I)='    '
 1165 CONTINUE
C
      IF(IFEEDB.EQ.'OFF')GOTO1169
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1116)ILINPA(I)
      CALL DPWRST('XXX','BUG ')
 1169 CONTINUE
      GOTO2190
C
 2110 CONTINUE
      IMAX=24
      ILINPA(1)='    '
      ILINPA(2)='    '
      ILINPA(3)='    '
      ILINPA(4)='    '
      ILINPA(5)='    '
      ILINPA(6)='    '
      ILINPA(7)='    '
      ILINPA(8)='SOLI'
      ILINPA(9)='    '
      ILINPA(10)='    '
      ILINPA(11)='    '
      ILINPA(12)='    '
      ILINPA(13)='SOLI'
      ILINPA(14)='SOLI'
      ILINPA(15)='SOLI'
      ILINPA(16)='SOLI'
      ILINPA(17)='    '
      ILINPA(18)='    '
      ILINPA(19)='    '
      ILINPA(20)='SOLI'
      ILINPA(21)='    '
      ILINPA(22)='    '
      ILINPA(23)='    '
      ILINPA(24)='    '
      GOTO2170
C
 2120 CONTINUE
      IMAX=5
      ILINPA(1)='    '
      ILINPA(2)='    '
      ILINPA(3)='    '
      ILINPA(4)='SOLI'
      ILINPA(5)='SOLI'
      GOTO2170
C
 2130 CONTINUE
CCCCC THE FOLLOWING SECTION WAS CHANGED SEPTEMBER 1990
      IMAX=7
      ILINPA(1)='SOLI'
      ILINPA(2)='SOLI'
      ILINPA(3)='SOLI'
      ILINPA(4)='SOLI'
      ILINPA(5)='DOT '
      ILINPA(6)='DOT '
      ILINPA(7)='DOT '
      GOTO2170
C
 2140 CONTINUE
      IMAX=24
      ILINPA(1)='    '
      ILINPA(2)='    '
      ILINPA(3)='    '
      ILINPA(4)='    '
      ILINPA(5)='    '
      ILINPA(6)='    '
      ILINPA(7)='    '
      ILINPA(8)='SOLI'
      ILINPA(9)='    '
      ILINPA(10)='    '
      ILINPA(11)='    '
      ILINPA(12)='    '
      ILINPA(13)='SOLI'
      ILINPA(14)='    '
      ILINPA(15)='    '
      ILINPA(16)='    '
      ILINPA(17)='    '
      ILINPA(18)='    '
      ILINPA(19)='    '
      ILINPA(20)='    '
      ILINPA(21)='    '
      ILINPA(22)='    '
      ILINPA(23)='    '
      ILINPA(24)='    '
      GOTO2170
C
 2145 CONTINUE
      IMAX=25
      ILINPA(1)='SOLI'
      ILINPA(2)='    '
      ILINPA(3)='    '
      ILINPA(4)='    '
      ILINPA(5)='    '
      ILINPA(6)='    '
      ILINPA(7)='    '
      ILINPA(8)='    '
      ILINPA(9)='SOLI'
      ILINPA(10)='    '
      ILINPA(11)='    '
      ILINPA(12)='    '
      ILINPA(13)='    '
      ILINPA(14)='SOLI'
      ILINPA(15)='    '
      ILINPA(16)='    '
      ILINPA(17)='    '
      ILINPA(18)='    '
      ILINPA(19)='    '
      ILINPA(20)='    '
      ILINPA(21)='    '
      ILINPA(22)='    '
      ILINPA(23)='    '
      ILINPA(24)='    '
      ILINPA(25)='    '
      GOTO2170
C
 2148 CONTINUE
      IMAX=25
      ILINPA(1)='SOLI'
      ILINPA(2)='SOLI'
      ILINPA(3)='    '
      ILINPA(4)='    '
      ILINPA(5)='    '
      ILINPA(6)='    '
      ILINPA(7)='    '
      ILINPA(8)='    '
      ILINPA(9)='SOLI'
      ILINPA(10)='    '
      ILINPA(11)='    '
      ILINPA(12)='    '
      ILINPA(13)='    '
      ILINPA(14)='SOLI'
      ILINPA(15)='SOLI'
      ILINPA(16)='SOLI'
      ILINPA(17)='SOLI'
      ILINPA(18)='    '
      ILINPA(19)='    '
      ILINPA(20)='    '
      ILINPA(21)='SOLI'
      ILINPA(22)='    '
      ILINPA(23)='    '
      ILINPA(24)='    '
      ILINPA(25)='    '
      GOTO2170
C
 2150 CONTINUE
      IMAX=7
      ILINPA(1)='    '
      ILINPA(2)='    '
      ILINPA(3)='    '
      ILINPA(4)='    '
      ILINPA(5)='    '
      ILINPA(6)='SOLI'
      ILINPA(7)='SOLI'
      GOTO2170
C
 2160 CONTINUE
CCCCC THE FOLLOWING SECTION WAS ADDED FEBRUARY 1998
      DO2163I=1,MAXLIN 
      ILINPO(I)=ILINPA(I)
 2163 CONTINUE
      IF(IFEEDB.EQ.'ON')THEN
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2164)
 2164 FORMAT('THE CURRENT LINE PATTERNS HAVE BEEN SAVED.')
      CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO2190
C
 2165 CONTINUE
CCCCC THE FOLLOWING SECTION WAS ADDED FEBRUARY 1998
      DO2168I=1,MAXLIN 
      ILINPA(I)=ILINPO(I)
 2168 CONTINUE
      IF(IFEEDB.EQ.'ON')THEN
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,2169)
 2169 FORMAT('THE SAVED LINE PATTERNS HAVE BEEN RESTORED.')
      CALL DPWRST('XXX','BUG ')
      ENDIF
      GOTO2190
C
 2170 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO2179
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO2175I=1,IMAX
      WRITE(ICOUT,2176)I,ILINPA(I)
 2176 FORMAT('LINE ',I6,' HAS JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 2175 CONTINUE
 2179 CONTINUE
      GOTO2180
C
 2180 CONTINUE
      IFOUND='YES'
      GOTO2190
C
 2190 CONTINUE
      IFOUND='YES'
C
 2199 CONTINUE
      RETURN
      END
      SUBROUTINE DPLIPO(NLAB,AMEAN,ASD,WTS,N,
     1                  CUMWTS,YUNIF,YNORM,YSAVE,
     1                  XLP,SELIP1,ALOWLP,AUPPLP,
     1                  IWRITE,IOUNI5,
     1                  ICAPSW,ICAPTY,MAXNXT,NUMDIG,ISEED,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--IMPLEMENT LINEAR POOL APPROACH TO CONSENSUS MEANS.
C     PRINTING--YES
C     SUBROUTINES NEEDED--NONE
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     REFERENCES--KOEPKE, LAFARGE, POSSOLO AND TOMAN (2017), "CONSENSUS
C                 BUILDING FOR INTERLABORATORY STUDIES, KEY COMPARISONS,
C                 AND META-ANALYSIS", METROLOGIA 54 PP. S34-S62.
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2023/04
C     ORIGINAL VERSION--APRIL     2023.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
C
      REAL AMEAN(*)
      REAL ASD(*)
      REAL WTS(*)
      REAL CUMWTS(*)
      REAL YUNIF(*)
      REAL YNORM(*)
      REAL YSAVE(*)
C
      INTEGER N(*)
C
      REAL YTEMP(1)
C
C----------------------------------------------------------------
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER (MAXROW=20)
      CHARACTER*65 ITITLE
      CHARACTER*65 ITITLZ
      CHARACTER*65 ITITL9
      CHARACTER*65 ITEXT(MAXROW)
      REAL         AVALUE(MAXROW)
      INTEGER      NCTEXT(MAXROW)
      INTEGER      IDIGIT(MAXROW)
      INTEGER      NTOT(MAXROW)
      LOGICAL IFRST
      LOGICAL ILAST
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPLI'
      ISUBN2='PO  '
C
      IINDX=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LIPO')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLIPO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)NLAB,ISEED,ILIPSS,MAXNXT
   52   FORMAT('NLAB,ISEED,ILIPSS,MAXNXT = ',4I8)
        CALL DPWRST('XXX','BUG ')
        DO60I=1,NLAB
          WRITE(ICOUT,62)I,N(I),AMEAN(I),ASD(I),WTS(I)
   62     FORMAT('I,N(I),AMEAN(I),ASD(I),WTS(I) = ',2I8,3G15.7)
          CALL DPWRST('XXX','BUG ')
   60   CONTINUE
      ENDIF
C
C     STEP 1: CHECK THE WEIGHTS VECTOR
C
C             IF FIRST ENTRY IS 0, THEN ASSUME NO WEIGHT
C             VECTOR GIVEN AND DEFINE EQUAL WEIGHTS
C
      IF(WTS(1).LE.0.0)THEN
        DO190II=1,NLAB
          WTS(II)=1.0/REAL(NLAB)
  190   CONTINUE
      ENDIF
C
      SUM=0.0
      DO201II=1,NLAB
C
        IF(WTS(II).LE.0.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,202)
  202     FORMAT('***** ERROR IN LINEAR POOL CONSENSUS VALUE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,203)II,WTS(II)
  203     FORMAT('      WEIGHT ',I6,' IS NON-POSITIVE (',G15.7,')')
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
        SUM=SUM+WTS(II)
  201 CONTINUE
C
      DO211II=1,NLAB
        WTS(II)=WTS(II)/SUM
        IF(II.EQ.1)THEN
          CUMWTS(II)=WTS(II)
        ELSE
          CUMWTS(II)=CUMWTS(II-1) + WTS(II)
        ENDIF
  211 CONTINUE
C
C     STEP 2: GENERATE 10,000 UNIFORM RANDOM NUMBERS
C
      NSAMP=ILIPSS
      CALL UNIRAN(NSAMP,ISEED,YUNIF)
      CALL NORRAN(NSAMP,ISEED,YNORM)
      ICNTN=0
C
C     STEP 3: LOOP TRHOUGH UNIFORM SAMPLES
C
      DO310II=1,NSAMP
        AVAL=YUNIF(II)
        ILAB=0
        DO320JJ=1,NLAB
          IF(AVAL.LT.CUMWTS(1))THEN
            ILAB=1
            GOTO329
          ELSEIF(AVAL.GE.CUMWTS(JJ-1) .AND. AVAL.LT.CUMWTS(JJ))THEN
            ILAB=JJ
            GOTO329
          ENDIF
  320   CONTINUE
  329   CONTINUE
        IF(ILAB.EQ.0)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,202)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,323)II
  323     FORMAT('      FOR UNIFORM SAMPLE ',I8,' NO LAB ID WAS ',
     1           'DETERMINED.')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,325)AVAL
  325     FORMAT('      UNIFORM VALUE IS ',G15.7)
          CALL DPWRST('XXX','BUG ')
          IERROR='YES'
          GOTO9000
        ENDIF
C
C     STEP 3B: NOW GENERATE A RANDOM SAMPLE FROM THE SPECIFIED LAB
C
        NTEMP=N(ILAB)
        IF(NTEMP.LE.1)THEN
          NTEMP2=1
          ICNTN=ICNTN+1
          XVAL=YNORM(ICNTN)
          ASE=ASD(ILAB)
        ELSE
          ADF=REAL(NTEMP-1)
          NSAMP2=1
          CALL TRAN(NSAMP2,ADF,ISEED,YTEMP)
          XVAL=YTEMP(1)
          ASE=ASD(ILAB)/SQRT(REAL(NLAB))
        ENDIF
        YSAVE(II)=AMEAN(ILAB) + ASE*XVAL
C
        IF(IBUGA3.EQ.'LIPO' .OR. IBUGA3.EQ.'ON')THEN
          WRITE(ICOUT,332)II,ILAB,XVAL,ASE
  332     FORMAT('DPLIPO: II,ILAB,XVAL,ASE = ',2I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
  310 CONTINUE
C
C     STEP 4: NOW COMPUTE STATISTICS FROM THE SAMPLES
C
      CALL MEAN(YSAVE,NSAMP,IWRITE,XLP,IBUGA3,IERROR)
      CALL SD(YSAVE,NSAMP,IWRITE,SELIP1,IBUGA3,IERROR)
      SELIP2=2.0*SELIP1
      P100=2.5
      CALL PERCEN(P100,YSAVE,NSAMP,IWRITE,CUMWTS,MAXNXT,
     1            ALOWLP,IBUGA3,IERROR)
      P100=97.5
      CALL PERCEN(P100,YSAVE,NSAMP,IWRITE,CUMWTS,MAXNXT,
     1            AUPPLP,IBUGA3,IERROR)
C
      IF(IOUNI5.GT.0)THEN
        WRITE(IOUNI5,412)
  412   FORMAT('VALUES FROM LINEAR POOL METHOD')
        DO420II=1,NSAMP
          WRITE(IOUNI5,422)YSAVE(II)
  422     FORMAT(E15.7)
  420   CONTINUE
      ENDIF
C
C     STEP 5: PRINT THE RESULTS IF REQUESTED
C
      IF(IPRINT.EQ.'OFF')GOTO9000
C
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
C
      ICNT=1
      ITEXT(ICNT)='16. Method: Linear Pool'
      NCTEXT(ICNT)=23
      AVALUE(ICNT)=0.0
      IDIGIT(ICNT)=-1
C
      ICNT=ICNT+1
      ITEXT(ICNT)='    Linear Pool Consensus Value:'
      NCTEXT(ICNT)=32
      AVALUE(ICNT)=XLP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Standard Uncertainty (k = 1):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=SELIP1
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Expanded Uncertainty (k = 2):'
      NCTEXT(ICNT)=33
      AVALUE(ICNT)=SELIP2
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Lower 95% (normal) Confidence Limit:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=ALOWLP
      IDIGIT(ICNT)=NUMDIG
      ICNT=ICNT+1
      ITEXT(ICNT)='    Upper 95% (normal) Confidence Limit:'
      NCTEXT(ICNT)=40
      AVALUE(ICNT)=AUPPLP
      IDIGIT(ICNT)=NUMDIG
C
      NUMROW=ICNT
      DO510I=1,NUMROW
        NTOT(I)=15
  510 CONTINUE
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA1(ITITLE,NCTITL,ITITLZ,NCTITZ,ITEXT,NCTEXT,
     1            AVALUE,IDIGIT,
     1            NTOT,NUMROW,
     1            ICAPSW,ICAPTY,ILAST,IFRST,
     1            ISUBRO,IBUGA3,IERROR)
      ITITLE=' '
      NCTITL=0
      ITITLZ=' '
      NCTITZ=0
      ITITL9=' '
      NCTIT9=0
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LIPO')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLIPO--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR
 9012   FORMAT('IERROR = ',A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)XLP,SELIP1,SELIP2,ALOWLP,AUPPLP
 9014   FORMAT('XLP,SELIP1,SELIP2,ALOWLP,AUPPLP = ',5G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
CCCCC SUBROUTINE DPLIST(ICOM,IANSLC,IWIDTH,IHARG,IHARG2,IARGT,
CCCCC1                  IARG,ARG,NUMARG,
      SUBROUTINE DPLIST(ICOM3,ICOM4,ICOM5,NUMCOM,NCOM5,
     1                  IHELMX,
     1                  ICPREH,NCPREH,ICPOSH,NCPOSH,
     1                  ILOOST,ILOOLI,NUMLIL,NUMLOS,
     1                  IANSLO,IWIDLL,
     1                  IBUGS2,IBUGQ,ISUBRO,IFOUND,IERROR)
CCCCC 5 ARGS ADDED ABOVE FOR MORE/PAUSE   JULY 1989
CCCCC ICOM WAS ADDED TO THE ARGUMENT LIST NOVEMBER 1989
C
C     PURPOSE--LIST (= DISPLAY) A USER-DEFINED FILE.
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--86/1
C     ORIGINAL VERSION--JULY      1984.
C     UPDATED         --DECEMBER  1985.
C     UPDATED         --NOVEMBER  1981.
C     UPDATED         --MAY       1982.
C     UPDATED         --DECEMBER  1985.
C     UPDATED         --JANUARY   1987. (TO INCLUDE THE DIRECTORY FILE).
C     UPDATED         --AUGUST    1988. (TO INCLUDE DICTIONARY FILE).
C     UPDATED         --JULY      1989. MORE/PAUSE
C     UPDATED         --NOVEMBER  1989. NUMBERED LIST
C     UPDATED         --JULY      1990. ALLOW MORE... TO STOP LIST
C     UPDATED         --AUGUST    1990. EXPLICIT SETTING OF NUMLPR=0
C     UPDATED         --SEPTEMBER 1993. ALLOW ALWAYS-WRITING
C     UPDATED         --NOVEMBER  1993. PATH + DATASETS.
C     UPDATED         --NOVEMBER  1993. PATH + DESIGNS.
C     UPDATED         --NOVEMBER  1993. PATH + DISTRIBUTIONS.
C     UPDATED         --NOVEMBER  1993. PATH + COMMANDS.
C     UPDATED         --NOVEMBER  1993. PATH + SYNTAX.
C     UPDATED         --NOVEMBER  1993. PATH + FUNCTIONS.
C     UPDATED         --NOVEMBER  1993. PATH + PROGRAMS.
C     UPDATED         --NOVEMBER  1993. PATH + MACROS.
C     UPDATED         --AUGUST    1994. SIMPLIFY CODE THROUGHOUT
C     UPDATED         --JUNE      1995. REMOVE PATH INFO
C     UPDATED         --NOVEMBER  2014. LIST CLIPBOARD (FOR WINDOWS)
C     UPDATED         --SEPTEMBER 2015. LIST FUNCTION BLOCK
C     UPDATED         --AUGUST    2016. LIST STATISTIC BLOCK
C     UPDATED         --OCTOBER   2016. LIST COMMAND LINE ARGUMENTS
C     UPDATED         --JULY      2017. LIST LOOP LINES
C     UPDATED         --JUNE      2018. UP MAXIMUM LINE LENGTH FROM 80
C                                       TO 255
C     UPDATED         --OCTOBER   2019. SUPPORT HEAD/TAIL OPTIONS
C     UPDATED         --NOVEMBER  2019. LIST NEW WINDOW
C     UPDATED         --NOVEMBER  2019. LIST EXCEL/WORD/POWER POINT
C     UPDATED         --FEBRUARY  2020. IF "LIST CLIPBOARD" DETECTED,
C                                       CHECK TO SEE IF FIRST ARGUMENT
C                                       IS ACTUALLY A FILE NAME
C     UPDATED         --JUNE      2020. LIST CLIPBOARD (FOR LINUX)
C                                       THIS USES "xclip" IN THE
C                                       BACKGROUND
C     UPDATED         --FEBRUARY  2021. SOME TWEAKS FOR HELP IN NEW
C                                       WINDOW FOR MACOS
C     UPDATED         --APRIL     2021. ADD "LIST ALIAS"
C     UPDATED         --AUGUST    2023. LIST CLIPBOARD FOR CYGWIN
C     UPDATED         --AUGUST    2023. LIST CLIPBOARD FOR MACOS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
CCCCC THE FOLLOWING LINE WAS ADDED NOVEMBER 1989
CCCCC CHARACTER*4 ICOM
CCCCC CHARACTER*4 IANSLC(*)
CCCCC CHARACTER*4 IHARG(*)
CCCCC CHARACTER*4 IHARG2(*)
CCCCC CHARACTER*4 IARGT(*)
      CHARACTER*4 ICOM3(*)
      CHARACTER*4 ICOM4(*)
      CHARACTER*40 ICOM5(*)
      CHARACTER*4 ILOOST
      CHARACTER*4 IANSLO
      CHARACTER*4 IBUGS2
      CHARACTER*4 IBUGQ
      CHARACTER*4 ISUBRO
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      INCLUDE 'DPCOPA.INC'
C
CCCCC CHARACTER*80 IFILE
      CHARACTER (LEN=MAXFNC) :: IFILE
      CHARACTER*12 ISTAT
      CHARACTER*12 IFORM
      CHARACTER*12 IACCES
      CHARACTER*12 IPROT
      CHARACTER*12 ICURST
      CHARACTER*4 IENDFI
      CHARACTER*4 IREWIN
      CHARACTER*4 ISUBN0
      CHARACTER*4 IERRFI
C
CCCCC THE FOLLOWING 2 LINES WERE ADDED JULY 1989
      CHARACTER*40 ICPREH
      CHARACTER*40 ICPOSH
C
CCCCC THE FOLLOWING LINE WAS ADDED NOVEMBER 1989
      CHARACTER*4 INUMSW
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IFILQ2
      CHARACTER*4 ICASEQ
      CHARACTER*4 ITYPE
      CHARACTER*4 IFLAGN
      CHARACTER*4 IFLAGE
      CHARACTER*4 IFLAGW
      CHARACTER*4 IFLAGP
      CHARACTER*4 ISSAV1
      CHARACTER*4 ISSAV2
      CHARACTER*4 ISSAV3
      CHARACTER*4 ISSAV4
      CHARACTER*4 IOFILE
C
      CHARACTER*4 IANSI
CCCCC CHARACTER*255 ICANS
CCCCC CHARACTER*255 ISTRIN
CCCCC CHARACTER*255 ISTR
      CHARACTER (LEN=MAXSTR) :: ICANS
      CHARACTER (LEN=MAXSTR) :: ISTRIN
      CHARACTER (LEN=MAXSTR) :: ISTR
      CHARACTER*40 ICJUNK
      CHARACTER*25 IFORMT
C
CCCCC THE FOLLOWING LINE WAS ADDED JULY 1990
      CHARACTER*4 IRESP
C
CCCCC DIMENSION IARG(*)
CCCCC DIMENSION ARG(*)
      DIMENSION NCOM5(*)
      DIMENSION IWIDLL(*)
C
C-----COMMON----------------------------------------------------------
C
CCCCC CHARACTER*80 IFILSV
      CHARACTER (LEN=MAXFNC) :: IFILSV
      COMMON/FILSAV/IFILSV
C
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOF2.INC'
      INCLUDE 'DPCOST.INC'
      INCLUDE 'DPCOFB.INC'
      INCLUDE 'DPCOSB.INC'
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOHO.INC'
C
      DIMENSION IANSLO(MAXLIL,MAXCIL)
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLI'
      ISUBN2='ST  '
      IFOUND='YES'
      IERROR='NO'
      IFILQ2=IFILQU
      IFILQU='ON'
      IFLAGN='OFF'
      IFLAGE='OFF'
      IFLAGW='OFF'
      IFLAGP='OFF'
      IFORMT=' '
C
      MINN2=1
      NCSTRI=(-999)
      IFLAGH=0
      IFLAGT=0
      ILINE=0
      MAXLEN=MAXSTR
C
CCCCC THE FOLLOWING LINE WAS ADDED NOVEMBER 1989
      INUMSW='OFF'
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LIST')THEN
         WRITE(ICOUT,999)
  999    FORMAT(1X)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,51)
   51    FORMAT('***** AT THE BEGINNING OF DPLIST--')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,53)ICOM,ILOOST,IBUGS2,ISUBRO,IERROR
   53    FORMAT('ICOM,ILOOST,IBUGS2,ISUBRO,IERROR = ',4(A4,2X),A4)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,54)IWIDTH,ILISNU,ICONNU,IDIRNU
   54    FORMAT('IWIDTH,ILISNU,ICONNU,IDIRNU = ',4I8)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,57)ILOOLI,IWIDLL(1),NUMLOS
   57    FORMAT('ILOOLI,IWIDLL(1),NUMLOS = ',3I8)
         CALL DPWRST('XXX','BUG ')
         IF(IWIDTH.GE.1)THEN
           WRITE(ICOUT,55)(IANSLC(I),I=1,MIN(80,IWIDTH))
   55      FORMAT('(IANSLC(I),I=1,IWIDTH) = ',80A1)
           CALL DPWRST('XXX','BUG ')
         ENDIF
         WRITE(ICOUT,62)ILISNA(1:80)
   62    FORMAT('ILISNA = ',A80)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,63)ILISST,ILISFO,ILISAC,ILISFO,ILISCS
   63    FORMAT('ILISST,ILISFO,ILISAC,ILISFO,ILISCS = ',
     1          4(A12,2X),A12)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,72)ICONNA(1:80)
   72    FORMAT('ICONNA = ',A80)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,73)ICONST,ICONFO,ICONAC,ICONFO,ICONCS
   73    FORMAT('ICONST,ICONFO,ICONAC,ICONFO,ICONCS = ',
     1          4(A12,2X),A12)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,82)IDIRNA(1:80)
   82    FORMAT('IDIRNA = ',A80)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,83)IDIRST,IDIRFO,IDIRAC,IDIRFO,IDIRCS
   83    FORMAT('IDIRST,IDIRFO,IDIRAC,IDIRFO,IDIRCS = ',
     1          4(A12,2X),A12)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,91)IHELMX,NCPREH,NCPOSH
   91    FORMAT('IHELMX,NCPREH,NCPOSH = ',3I8)
         CALL DPWRST('XXX','BUG ')
C
         IF(NCPREH.GE.1)THEN
            DO93I=1,NCPREH
               WRITE(ICOUT,94)I,ICPREH(I:I)
   94          FORMAT('I,ICPREH(I:I) = ',I8,2X,A1,4X)
               CALL DPWRST('XXX','BUG ')
   93       CONTINUE
         ENDIF
C
         IF(NCPOSH.GE.1)THEN
            DO97I=1,NCPOSH
               WRITE(ICOUT,98)I,ICPOSH(I:I)
   98          FORMAT('I,ICPOSH(I:I) = ',I8,2X,A1,4X)
               CALL DPWRST('XXX','BUG ')
   97       CONTINUE
         ENDIF
C
         WRITE(ICOUT,88)NCLSVW,ILSTVW(1:80)
   88    FORMAT('NCLSVW,ILSTVW = ',I8,2X,A80)
         CALL DPWRST('XXX','BUG ')
C
      ENDIF
C
CCCCC THE FOLLOWING LINE WAS ADDED NOVEMBER 1989
      IF(ICOM.EQ.'NLIS')INUMSW='ON'
C
      IF(IHARG(1).EQ.'NEW ' .AND. IHARG(2).EQ.'WIND')THEN
        IFLAGN='ON'
        ISHIFT=2
        CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGS2,IERROR)
      ELSEIF(IHARG(1).EQ.'EXCE')THEN
        IFLAGE='ON'
        ISHIFT=1
        CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGS2,IERROR)
      ELSEIF(IHARG(1).EQ.'WORD')THEN
        IFLAGW='ON'
        ISHIFT=1
        CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGS2,IERROR)
      ELSEIF(IHARG(1).EQ.'POWE' .AND. IHARG(2).EQ.'POIN')THEN
        IFLAGP='ON'
        ISHIFT=2
        CALL SHIFTL(ISHIFT,IHARG,IHARG2,IARG,ARG,IARGT,NUMARG,
     1              IBUGS2,IERROR)
      ELSEIF(ILSTNW.EQ.'ON')THEN
        IFLAGN='ON'
        ISHIFT=0
      ENDIF
C
C               **************************
C               **  STEP 11--           **
C               **  COPY OVER VARIABLES **
C               **************************
C
      ISTEPN='11'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LIST')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IOUNIT=ILISNU
      IFILE=ILISNA
      ISTAT=ILISST
      IFORM=ILISFO
      IACCES=ILISAC
      IPROT=ILISPR
      ICURST=ILISCS
C
      ISUBN0='LIST'
      IERRFI='NO'
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LIST')THEN
        WRITE(ICOUT,1193)ISUBN0,IERRFI,IOUNIT
 1193   FORMAT('ISUBN0,IERRFI,IOUNIT = ',2(A4,2X),I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1194)IFILE(1:80)
 1194   FORMAT('IFILE = ',A80)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,1195)ISTAT,IFORM,IACCES,IPROT,ICURST
 1195   FORMAT('ISTAT,IFORM,IACCES,IPROT,ICURST = ',4(A12,2X),A12)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ***********************************************
C               **  STEP 12--                                **
C               **  CHECK TO SEE IF THE LIST FILE MAY EXIST  **
C               ***********************************************
C
      ISTEPN='12'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LIST')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ISTAT.EQ.'NONE' .AND. IFLAGN.EQ.'OFF' .AND.
     1   IFLAGE.EQ.'OFF' .AND. IFLAGW.EQ.'OFF' .AND.
     1   IFLAGP.EQ.'OFF')THEN
         IERROR='YES'
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1211)
 1211    FORMAT('***** IMPLEMENTATION ERROR IN DPLIST--')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1212)
 1212    FORMAT('      THE DESIRED LISTING CANNOT BE CARRIED OUT')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1214)
 1214    FORMAT('      BECAUSE THE INTERNAL VARIABLE    ILISST ')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1215)
 1215    FORMAT('      WHICH ALLOWS SUCH LISTING HAS BEEN SET TO ',
     1          '  NONE.')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1217)ISTAT,ILISST
 1217    FORMAT('ISTAT,ILISST = ',A12,2X,A12)
         CALL DPWRST('XXX','BUG ')
         GOTO9000
      ENDIF
C
C               ********************************
C               **  STEP 13--                 **
C               **  EXTRACT THE FILE NAME.    **
C               **  DO THE GENERAL CASE OF    **
C               **  LISTING GENERAL FILES.    **
C               **  DO ALSO THE SPECIAL CASES **
C               **  OF LISTING THE            **
C               **  CONCLUSIONS FILE,         **
C               **  AND LISTING THE           **
C               **  DIRECTORY  FILE.          **
C               ********************************
C
      ISTEPN='13'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LIST')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      DO1310I=1,MAXLEN
         IANSI=IANSLC(I)
         ICANS(I:I)=IANSI(1:1)
 1310 CONTINUE
C
C     2014/11: CHECK FOR "LIST CLIPBOARD" CASE
C     2015/09: CHECK FOR "LIST FUNCTION BLOCK" CASE
C     2016/08: CHECK FOR "LIST STATISTIC BLOCK" CASE
C     2016/10: CHECK FOR "LIST COMMAND LINE ARGUMENTS" CASE
C     2017/07: CHECK FOR "LIST LOOP LINES" CASE
C     2019/10: CHECK FOR "HEAD" OR "TAIL" OPTION
C     2021/04: CHECK FOR "ALIAS" OPTION
C
      IF(IHARG(1).EQ.'COMM' .AND. IHARG(2).EQ.'LINE' .AND.
     1   IHARG(3).EQ.'ARGU')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IF(NMACAG.GE.1)THEN
          WRITE(ICOUT,317)
  317     FORMAT('CONTENTS OF ORDERED COMMAND LINE ARGUMENTS')
          CALL DPWRST('XXX','BUG ')
          DO320II=1,NMACAG
            WRITE(ICOUT,323)II,IMACAR(II)(1:80)
  323       FORMAT('ARGUMENT ',I2,': ',A80)
            CALL DPWRST('XXX','BUG ')
  320     CONTINUE
          IF(NMACLA.GE.1)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,337)
  337       FORMAT('CONTENTS OF NAMED COMMAND LINE ARGUMENTS')
            CALL DPWRST('XXX','BUG ')
            DO340II=1,NMACLA
              WRITE(ICOUT,343)IMACLA(II),IMACAR(IMACLL(II))(1:100)
  343         FORMAT('ARGUMENT ',A8,': ',A100)
              CALL DPWRST('XXX','BUG ')
  340       CONTINUE
          ENDIF
        ELSE
          WRITE(ICOUT,307)
  307     FORMAT('NO COMMAND LINE ARGUMENTS ARE CURRENTLY DEFINED.')
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ELSEIF(NUMARG.EQ.1 .AND.
     1       IHARG(1).EQ.'ALIA' .AND. IHARG2(1).EQ.'S   ')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IF(NUMALI.GE.1)THEN
          WRITE(ICOUT,351)
  351     FORMAT('CONTENTS OF USER DEFINED ALIASES:')
          CALL DPWRST('XXX','BUG ')
          DO360II=1,NUMALI
            IFORMT='(A8,": ",A    )'
            NCSTR=80
            DO371JJ=MAXSTR,1,-1
              IF(IALIAS(II)(JJ:JJ).NE.' ')THEN
                NCSTR=JJ
                GOTO379
              ENDIF
  371       CONTINUE
  379       CONTINUE
            WRITE(IFORMT(11:14),'(I4)')NCSTR
            WRITE(ICOUT,IFORMT)IALNAM(II),IALIAS(II)(1:NCSTR)
CC363       FORMAT(A8,': ',A80)
            CALL DPWRST('XXX','BUG ')
  360     CONTINUE
        ELSE
          WRITE(ICOUT,377)
  377     FORMAT('NO ALIASES ARE CURRENTLY DEFINED.')
          CALL DPWRST('XXX','BUG ')
        ENDIF
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        GOTO9000
      ELSEIF(IHARG(1).EQ.'CLIP' .AND. IHARG2(1).EQ.'BOAR')THEN
C
C       CHECK IF ARGUMENT IS A FILE NAME STARTING WITH "CLIPBOARD".
C
        IWORD=2
        IOFILE='NO'
        CALL DPFILE(IANSLC,IWIDTH,IWORD,
     1              IOFILE,IBUGS2,ISUBRO,IERROR)
        IF(IOFILE.EQ.'NO')THEN
          IF(IOPSY1.EQ.'UNIX' .OR. IOPSY1.EQ.'LINU')THEN
#ifdef HAVE_XCLIP
            ISTRIN=' '
            IF(IX11SE.EQ.'CLIP')THEN
              ISTRIN='xclip -o -selection clipboard'
              NCSTR=29
            ELSEIF(IX11SE.EQ.'PRIM')THEN
              ISTRIN='xclip -o -selection primary'
              NCSTR=27
            ELSE
              ISTRIN='xclip -o -selection secondary'
              NCSTR=29
            ENDIF
C
            ISSAV1=ISYSPE
            ISSAV2=ISYSHI
            ISSAV3=ICLEWT
            ISSAV4=ILINSY
            ISYSPE='ON'
            ICLEWT='OFF'
            ILINSY='COMM'
            CALL DPSYS2(ISTRIN,NCSTR,ISUBRO,IERROR)
            ISYSPE=ISSAV1
            ISYSHI=ISSAV2
            ICLEWT=ISSAV3
            ILINSY=ISSAV4
            GOTO9000
#elif defined(CYGWIN)
C
C           FOR CYGWIN, CLIPBOARD CONTENTS ARE IN "/dev/clipboard"
C
            ISTRIN=' '
            ISTRIN='cat /dev/clipboard'
            NCSTR=18
C
            ISSAV1=ISYSPE
            ISSAV2=ISYSHI
            ISSAV3=ICLEWT
            ISSAV4=ILINSY
            ISYSPE='ON'
            ICLEWT='OFF'
            ILINSY='COMM'
            CALL DPSYS2(ISTRIN,NCSTR,ISUBRO,IERROR)
            ISYSPE=ISSAV1
            ISYSHI=ISSAV2
            ICLEWT=ISSAV3
            ILINSY=ISSAV4
            GOTO9000
#elif defined(MACOSX)
C
C           FOR MACOS, USE PBPASTE
C
            ISTRIN=' '
            ISTRIN='pbpaste'
            NCSTR=7
C
            ISSAV1=ISYSPE
            ISSAV2=ISYSHI
            ISSAV3=ICLEWT
            ISSAV4=ILINSY
            ISYSPE='ON'
            ICLEWT='OFF'
            ILINSY='COMM'
            CALL DPSYS2(ISTRIN,NCSTR,ISUBRO,IERROR)
            ISYSPE=ISSAV1
            ISYSHI=ISSAV2
            ICLEWT=ISSAV3
            ILINSY=ISSAV4
            GOTO9000
#else
            IERROR='YES'
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1371)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,411)
  411       FORMAT('      THE xclip COMMAND IS NOT AVAILABLE.')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,413)
  413       FORMAT('      THE CONTENTS OF THE CLIPBOARD WILL NOT BE ',
     1             'LISTED.')
            CALL DPWRST('XXX','BUG ')
#endif
          ELSE
            IOUNIT=-99
            ITYPE='VIEW'
            CALL DPCLI2(ITYPE,IOUNIT,IHELMX,ILINRD,IBUGS2,ISUBRO,IERROR)
            GOTO9000
          ENDIF
        ENDIF
      ELSEIF(IHARG(1).EQ.'FUNC' .AND. IHARG(2).EQ.'BLOC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IF(IHARG(3).EQ.'ONE' .OR. IHARG(3).EQ.'1')THEN
          WRITE(ICOUT,1317)
 1317     FORMAT('CONTENTS OF FUNCTION BLOCK ONE:')
          CALL DPWRST('XXX','BUG ')
          IF(IFBCN1.GE.1)THEN
            DO1311II=1,IFBCN1
              WRITE(ICOUT,1312)IFBLI1(II)(1:100)
 1312         FORMAT(A100)
              CALL DPWRST('XXX','BUG ')
 1311       CONTINUE
          ELSE
            WRITE(ICOUT,1316)
 1316       FORMAT('FUNCTION BLOCK IS EMPTY')
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          WRITE(ICOUT,11310)IFBNA1
11310     FORMAT('NAME FOR FUNCTION BLOCK ONE: ',A8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11311)
11311     FORMAT('PARAMETER LIST FOR FUNCTION BLOCK ONE:')
          CALL DPWRST('XXX','BUG ')
          DO11316JJ=1,IFBCP1
            IF(IFBPL1(JJ).NE.' ')THEN
              WRITE(ICOUT,11318)JJ,IFBPL1(JJ)
11318         FORMAT('PARAMETER ',I2,': ',A8)
              CALL DPWRST('XXX','BUG ')
            ENDIF
11316     CONTINUE
C
          WRITE(ICOUT,11321)IFBAN1
11321     FORMAT('RESPONSE PARAMETER/VARIABLE: ',A8)
          CALL DPWRST('XXX','BUG ')
C
        ELSEIF(IHARG(3).EQ.'TWO' .OR. IHARG(3).EQ.'2')THEN
          WRITE(ICOUT,1318)
 1318     FORMAT('CONTENTS OF FUNCTION BLOCK TWO:')
          CALL DPWRST('XXX','BUG ')
          IF(IFBCN2.GE.1)THEN
            DO1313II=1,IFBCN2
              WRITE(ICOUT,1312)IFBLI2(II)(1:100)
              CALL DPWRST('XXX','BUG ')
 1313       CONTINUE
          ENDIF
C
          WRITE(ICOUT,11330)IFBNA2
11330     FORMAT('NAME FOR FUNCTION BLOCK TWO: ',A8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11331)
11331     FORMAT('PARAMETER LIST FOR FUNCTION BLOCK TWO:')
          CALL DPWRST('XXX','BUG ')
          DO11336JJ=1,IFBCP2
            IF(IFBPL2(JJ).NE.' ')THEN
              WRITE(ICOUT,11318)JJ,IFBPL2(JJ)
              CALL DPWRST('XXX','BUG ')
            ENDIF
11336     CONTINUE
C
          WRITE(ICOUT,11321)IFBAN2
          CALL DPWRST('XXX','BUG ')
C
        ELSEIF(IHARG(3).EQ.'THRE' .OR. IHARG(3).EQ.'3')THEN
          WRITE(ICOUT,1319)
 1319     FORMAT('CONTENTS OF FUNCTION BLOCK THREE:')
          CALL DPWRST('XXX','BUG ')
          IF(IFBCN3.GE.1)THEN
            DO1315II=1,IFBCN3
              WRITE(ICOUT,1312)IFBLI3(II)(1:100)
              CALL DPWRST('XXX','BUG ')
 1315       CONTINUE
          ENDIF
C
          WRITE(ICOUT,11340)IFBNA3
11340     FORMAT('NAME FOR FUNCTION BLOCK THREE: ',A8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11341)
11341     FORMAT('PARAMETER LIST FOR FUNCTION BLOCK THREE:')
          CALL DPWRST('XXX','BUG ')
          DO11346JJ=1,IFBCP3
            IF(IFBPL3(JJ).NE.' ')THEN
              WRITE(ICOUT,11318)JJ,IFBPL3(JJ)
              CALL DPWRST('XXX','BUG ')
            ENDIF
11346     CONTINUE
C
          WRITE(ICOUT,11321)IFBAN2
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
        GOTO9000
      ELSEIF(IHARG(1).EQ.'STAT' .AND. IHARG(2).EQ.'BLOC')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IF(IHARG(3).EQ.'ONE' .OR. IHARG(3).EQ.'1')THEN
          WRITE(ICOUT,1417)
 1417     FORMAT('CONTENTS OF STATISTIC BLOCK ONE:')
          CALL DPWRST('XXX','BUG ')
          IF(ISBCN1.GE.1)THEN
            DO1411II=1,ISBCN1
              WRITE(ICOUT,1412)ISBLI1(II)(1:100)
 1412         FORMAT(A100)
              CALL DPWRST('XXX','BUG ')
 1411       CONTINUE
          ELSE
            WRITE(ICOUT,1416)
 1416       FORMAT('STATISTIC BLOCK IS EMPTY')
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          WRITE(ICOUT,11410)ISBNA1
11410     FORMAT('NAME FOR STATISTIC BLOCK ONE: ',A8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11411)
11411     FORMAT('VARIABLE LIST FOR STATISTIC BLOCK ONE:')
          CALL DPWRST('XXX','BUG ')
          DO11416JJ=1,ISBCP1
            IF(ISBPL1(JJ).NE.' ')THEN
              WRITE(ICOUT,11418)JJ,ISBPL1(JJ)
11418         FORMAT('PARAMETER ',I2,': ',A8)
              CALL DPWRST('XXX','BUG ')
            ENDIF
11416     CONTINUE
C
          WRITE(ICOUT,11421)ISBAN1
11421     FORMAT('RESULT PARAMETER: ',A8)
          CALL DPWRST('XXX','BUG ')
C
        ELSEIF(IHARG(3).EQ.'TWO' .OR. IHARG(3).EQ.'2')THEN
          WRITE(ICOUT,1418)
 1418     FORMAT('CONTENTS OF STATISTIC BLOCK TWO:')
          CALL DPWRST('XXX','BUG ')
          IF(ISBCN2.GE.1)THEN
            DO1413II=1,ISBCN2
              WRITE(ICOUT,1412)ISBLI2(II)(1:100)
              CALL DPWRST('XXX','BUG ')
 1413       CONTINUE
          ENDIF
C
          WRITE(ICOUT,11430)ISBNA2
11430     FORMAT('NAME FOR STATISTIC BLOCK TWO: ',A8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11431)
11431     FORMAT('PARAMETER LIST FOR STATISTIC BLOCK TWO:')
          CALL DPWRST('XXX','BUG ')
          DO11436JJ=1,ISBCP2
            IF(ISBPL2(JJ).NE.' ')THEN
              WRITE(ICOUT,11418)JJ,ISBPL2(JJ)
              CALL DPWRST('XXX','BUG ')
            ENDIF
11436     CONTINUE
C
          WRITE(ICOUT,11321)ISBAN2
          CALL DPWRST('XXX','BUG ')
C
        ELSEIF(IHARG(3).EQ.'THRE' .OR. IHARG(3).EQ.'3')THEN
          WRITE(ICOUT,1419)
 1419     FORMAT('CONTENTS OF STATISTIC BLOCK THREE:')
          CALL DPWRST('XXX','BUG ')
          IF(ISBCN3.GE.1)THEN
            DO1415II=1,ISBCN3
              WRITE(ICOUT,1412)ISBLI3(II)(1:100)
              CALL DPWRST('XXX','BUG ')
 1415       CONTINUE
          ENDIF
C
          WRITE(ICOUT,11440)ISBNA3
11440     FORMAT('NAME FOR STATISTIC BLOCK THREE: ',A8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,11441)
11441     FORMAT('PARAMETER LIST FOR STATISTIC BLOCK THREE:')
          CALL DPWRST('XXX','BUG ')
          DO11446JJ=1,ISBCP3
            IF(ISBPL3(JJ).NE.' ')THEN
              WRITE(ICOUT,11418)JJ,ISBPL3(JJ)
              CALL DPWRST('XXX','BUG ')
            ENDIF
11446     CONTINUE
C
          WRITE(ICOUT,11321)ISBAN2
          CALL DPWRST('XXX','BUG ')
C
        ENDIF
        GOTO9000
      ELSEIF(IHARG(1).EQ.'LOOP' .AND. IHARG(2).EQ.'LINE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        IF(NUMLIL.GE.1)THEN
          DO11501II=1,NUMLIL
            DO11502JJ=1,MAXCIL
              ICANS(JJ:JJ)=IANSLO(II,JJ)(1:1)
11502       CONTINUE
            ILAST=1
            DO11508JJ=MAXCIL,1,-1
              IF(ICANS(JJ:JJ).NE.' ')THEN
                ILAST=JJ
                GOTO11509
              ENDIF
11508       CONTINUE
11509       CONTINUE
            WRITE(ICOUT,11503)II,ICANS(1:MAX(ILAST,220))
11503       FORMAT('Line ',I5,': ',A220)
            CALL DPWRST('XXX','BUG ')
11501     CONTINUE
        ELSE
          WRITE(ICOUT,11506)
11506     FORMAT('THERE ARE CURRENTLY NO SAVED LOOP LINES.')
          CALL DPWRST('XXX','BUG ')
        ENDIF
        GOTO9000
      ELSEIF(IHARG(1).EQ.'HEAD' .AND. IHARG2(1).EQ.'    ')THEN
        IFLAGH=1
      ELSEIF(IHARG(1).EQ.'TAIL' .AND. IHARG2(1).EQ.'    ')THEN
        IFLAGT=1
      ENDIF
C
      ISTART=1
      ISTOP=IWIDTH
      IWORD=2
      IF(IFLAGH.EQ.1)IWORD=IWORD+1
      IF(IFLAGT.EQ.1)IWORD=IWORD+1
      IF(IFLAGN.EQ.'ON' .AND. ISHIFT.EQ.2)IWORD=IWORD+2
      IF(IFLAGE.EQ.'ON' .AND. ISHIFT.GT.0)IWORD=IWORD+ISHIFT
      IF(IFLAGW.EQ.'ON' .AND. ISHIFT.GT.0)IWORD=IWORD+ISHIFT
      IF(IFLAGP.EQ.'ON' .AND. ISHIFT.GT.0)IWORD=IWORD+ISHIFT
      CALL DPEXWO(ICANS,ISTART,ISTOP,IWORD,
     1            ICOL1,ICOL2,IFILE,NCFILE,
     1            IBUGS2,ISUBRO,IERROR)
C
      IF(NCFILE.EQ.11.AND.IFILE.EQ.'CONCLUSIONS')GOTO1320
      IF(NCFILE.EQ.10.AND.IFILE.EQ.'CONCLUSION')GOTO1320
      IF(NCFILE.EQ.11.AND.IFILE.EQ.'conclusions')GOTO1320
      IF(NCFILE.EQ.10.AND.IFILE.EQ.'conclusion')GOTO1320
C
      IF(NCFILE.EQ.9.AND.IFILE.EQ.'DIRECTORY')GOTO1330
      IF(NCFILE.EQ.9.AND.IFILE.EQ.'directory')GOTO1330
C
      IF(NCFILE.EQ.6.AND.IFILE.EQ.'MASTER')GOTO1330
      IF(NCFILE.EQ.6.AND.IFILE.EQ.'master')GOTO1330
C
      IF(NCFILE.EQ.10.AND.IFILE.EQ.'DICTIONARY')GOTO1340
      IF(NCFILE.EQ.10.AND.IFILE.EQ.'dictionary')GOTO1340
C
      IF(NCFILE.EQ.11.AND.IFILE.EQ.'DEFINITIONS')GOTO1350
      IF(NCFILE.EQ.10.AND.IFILE.EQ.'DEFINITION')GOTO1350
      IF(NCFILE.EQ.4.AND.IFILE.EQ.'DEFI')GOTO1350
      IF(NCFILE.EQ.3.AND.IFILE.EQ.'DEF')GOTO1350
      IF(NCFILE.EQ.11.AND.IFILE.EQ.'definitions')GOTO1350
      IF(NCFILE.EQ.10.AND.IFILE.EQ.'definition')GOTO1350
      IF(NCFILE.EQ.4.AND.IFILE.EQ.'defi')GOTO1350
      IF(NCFILE.EQ.3.AND.IFILE.EQ.'def')GOTO1350
C
CCCCC THE FOLLOWING 8 SECTIONS WERE ADDED        NOVEMBER 1993
CCCCC THE FOLLOWING 8 SECTIONS WERE MODIFIED     JUNE 1993
      IF(IFILE(1:8).EQ.'DATASETS'.OR.IFILE(1:8).EQ.'datasets')THEN
         ISTART=1
         ISTOP=ISTART+8+1
         IFILE(ISTART:ISTOP)='datasets.'
         GOTO1370
C
      ELSEIF(IFILE(1:7).EQ.'DESIGNS.'.OR.IFILE(1:7).EQ.'designs.')THEN
         ISTART=1
         ISTOP=ISTART+7+1
         IFILE(ISTART:ISTOP)='designs.'
         GOTO1370
C
      ELSEIF(IFILE(1:8).EQ.'DISTRIBU'.OR.IFILE(1:8).EQ.'distribu')THEN
         ISTART=1
         ISTOP=ISTART+8+1
         IFILE(1:20)='                    '
         IFILE(ISTART:ISTOP)='distribu.'
         GOTO1370
C
      ELSEIF(IFILE(1:8).EQ.'COMMANDS'.OR.IFILE(1:8).EQ.'commands')THEN
         ISTART=1
         ISTOP=ISTART+8+1
         IFILE(ISTART:ISTOP)='commands.'
         GOTO1370
C
      ELSEIF(IFILE(1:6).EQ.'SYNTAX'.OR.IFILE(1:6).EQ.'syntax')THEN
         ISTART=1
         ISTOP=ISTART+6+1
         IFILE(ISTART:ISTOP)='syntax.'
         GOTO1370
C
      ELSEIF(IFILE(1:8).EQ.'FUNCTION'.OR.IFILE(1:8).EQ.'function')THEN
         ISTART=1
         ISTOP=ISTART+8+1
         IFILE(ISTART:ISTOP)='function.'
         GOTO1370
C
      ELSEIF(IFILE(1:8).EQ.'PROGRAMS'.OR.IFILE(1:8).EQ.'programs')THEN
         ISTART=1
         ISTOP=ISTART+8+1
         IFILE(ISTART:ISTOP)='programs.'
         GOTO1370
C
      ELSEIF(IFILE(1:6).EQ.'MACROS'.OR.IFILE(1:6).EQ.'macros')THEN
         ISTART=1
         ISTOP=ISTART+6+1
         IFILE(ISTART:ISTOP)='macros.'
         GOTO1370
      ENDIF
C
      GOTO1370
C
 1320 CONTINUE
      IFILE=ICONNA
      GOTO1370
C
 1330 CONTINUE
      IFILE=IDIRNA
      GOTO1370
C
 1340 CONTINUE
      IFILE=IDICNA
      GOTO1370
C
 1350 CONTINUE
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      WRITE(ICOUT,1351)
 1351 FORMAT('DEFINITIONS--')
      CALL DPWRST('XXX','BUG ')
C
      IF(NUMCOM.GE.1)THEN
         DO1352I=1,NUMCOM
            ICJUNK=ICOM5(I)
            NCJUNK=NCOM5(I)
            IF(NCJUNK.LE.0)THEN
               WRITE(ICOUT,1353)I,ICOM3(I),ICOM4(I)
 1353          FORMAT(I8,'.  ',A4,A4,'--')
               CALL DPWRST('XXX','BUG ')
            ELSE
               WRITE(ICOUT,1354)I,ICOM3(I),ICOM4(I),
     1         (ICJUNK(J:J),J=1,NCJUNK)
 1354          FORMAT(I8,'.  ',A4,A4,'--',40(A1,1X))
               CALL DPWRST('XXX','BUG ')
            ENDIF
 1352    CONTINUE
      ENDIF
      GOTO9000
C
CCCCC THE FOLLOWING SECTION WAS ADDED           NOVEMBER 1993
CCCCC THE FOLLOWING SECTION WAS COMMENTED OUT   JUNE 1995
C1360 CONTINUE
CCCCC IFILE=PATH
CCCCC ISTART=NCPATH+1
CCCCC ISTOP=ISTART+8+1
CCCCC IFILE(ISTART:ISTOP)='distribu.'
CCCCC GOTO1370
C
 1370 CONTINUE
      IF(NCFILE.LE.0)THEN
         IERROR='YES'
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1371)
 1371    FORMAT('***** ERROR IN DPLIST--')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1372)
 1372    FORMAT('      A USER FILE NAME IS REQUIRED')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1373)
 1373    FORMAT('      IN THE LIST COMMAND')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1374)
 1374    FORMAT('      (FOR EXAMPLE,    LIST PROG7.DP)')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1375)
 1375    FORMAT('      BUT NONE WAS GIVEN HERE.')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,1376)
 1376    FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
         CALL DPWRST('XXX','BUG ')
         IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,1377)(IANSLC(I),I=1,MIN(80,IWIDTH))
 1377       FORMAT('      ',80A1)
            CALL DPWRST('XXX','BUG ')
         ELSE
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
         ENDIF
         GOTO9000
      ENDIF
C
      IF(IERROR.EQ.'YES')GOTO9000
C
C               *****************************************
C               **  STEP 21--                          **
C               **  CHECK TO SEE THE TYPE CASE--       **
C               **    1) UNQUALIFIED (THAT IS, FULL);  **
C               **    2) SUBSET/EXCEPT; OR             **
C               **    3) FOR.                          **
C               *****************************************
C
      ISTEPN='21'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LIST')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ICASEQ='FULL'
      ILOCQ=NUMARG+1
      IF(NUMARG.LT.1)GOTO2190
      IF(IFLAGN.EQ.'ON')GOTO2190
      IF(IFLAGE.EQ.'ON')GOTO2190
      IF(IFLAGW.EQ.'ON')GOTO2190
      IF(IFLAGP.EQ.'ON')GOTO2190
      DO2100J=1,NUMARG
         J1=J
         IF(IHARG(J).EQ.'SUBS'.AND.IHARG2(J).EQ.'ET  ')THEN
            ICASEQ='SUBS'
            ILOCQ=J1
            GOTO2190
         ELSEIF(IHARG(J).EQ.'EXCE'.AND.IHARG2(J).EQ.'PT  ')THEN
            ICASEQ='SUBS'
            ILOCQ=J1
            GOTO2190
         ELSEIF(IHARG(J).EQ.'FOR '.AND.IHARG2(J).EQ.'    ')THEN
            ICASEQ='FOR'
            ILOCQ=J1
            GOTO2190
         ENDIF
 2100 CONTINUE
 2190 CONTINUE
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LIST')THEN
         WRITE(ICOUT,2191)NUMARG,ILOCQ
 2191    FORMAT('NUMARG,ILOCQ = ',2I8)
         CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               *********************************************
C               **  STEP 22--                              **
C               **  BRANCH    TO THE APPROPRIATE SUBCASE   **
C               **  (FULL, SUBSET, OR FOR).                **
C               *********************************************
C
      ISTEPN='22'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LIST')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IFLAGH.EQ.1)THEN
        DO2211I=1,MAXN
          ISUB(I)=0
 2211   CONTINUE
        DO2212I=1,IHEALI
          ISUB(I)=1
 2212   CONTINUE
        NQ=IHEALI
      ELSEIF(IFLAGT.EQ.1)THEN
        DO2214I=1,MAXN
          ISUB(I)=0
 2214   CONTINUE
         NQ=MAXN
      ELSEIF(ICASEQ.EQ.'FULL')THEN
         DO2215I=1,MAXN
            ISUB(I)=1
 2215    CONTINUE
         NQ=MAXN
      ELSEIF(ICASEQ.EQ.'SUBS')THEN
         NIOLD=MAXN
         CALL DPSUBS(NIOLD,ILOCS,NS,IBUGQ,IERROR)
         NQ=NIOLD
      ELSEIF(ICASEQ.EQ.'FOR')THEN
         NIOLD=MAXN
         CALL DPFOR(NIOLD,NFOR,IROW1,IROWN,
     1   NLOCAL,ILOCS,NS,IBUGQ,IERROR)
         NQ=NFOR
         NMXFOR=IROWN
      ENDIF
C
      IF(NQ.LT.MINN2)THEN
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,2271)
 2271    FORMAT('***** ERROR IN DPLIST--')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,2272)
 2272    FORMAT('      AFTER THE APPROPRIATE SUBSET HAS BEEN ',
     1   'EXTRACTED,')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,2273)
 2273    FORMAT('      THE NUMBER OF SPECIFIED FILE LINES')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,2276)MINN2
 2276    FORMAT('      TO BE LISTED MUST BE ',I8,' OR LARGER;')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,2277)
 2277    FORMAT('      SUCH WAS NOT THE CASE HERE.')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,2278)
 2278    FORMAT('      THE ENTERED COMMAND LINE WAS AS FOLLOWS--')
         CALL DPWRST('XXX','BUG ')
         IF(IWIDTH.GE.1)THEN
            WRITE(ICOUT,2279)(IANSLC(I),I=1,MIN(80,IWIDTH))
 2279       FORMAT('      ',80A1)
            CALL DPWRST('XXX','BUG ')
         ENDIF
         IERROR='YES'
         GOTO9000
      ENDIF
C
      NS=NQ
C
C               **************************
C               **  STEP 31--           **
C               **  OPEN  THE FILE      **
C               **  (UNLESS ITS THE     **
C               **  CONCLUSIONS FILE).  **
C               **************************
C
      ISTEPN='31'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LIST')THEN
         CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
         WRITE(ICOUT,3111)IFILE
 3111    FORMAT('IFILE = ',A80)
         CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IFILE.EQ.ICONNA)GOTO3190
C
      IF(IFLAGE.EQ.'ON')IFORM='NULL'
      IF(IFLAGW.EQ.'ON')IFORM='NULL'
      IF(IFLAGP.EQ.'ON')IFORM='NULL'
      IREWIN='ON'
      CALL DPOPFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
      IF(IERRFI.EQ.'YES')GOTO9000
C
C     2019/11: OPEN FILE IN NEW WINDOW USING A SPECIFIED EDITOR
C
      IF(IFLAGN.EQ.'ON')THEN
C
C       CLOSE FILE
C
        IENDFI='OFF'
        IREWIN='ON'
        CALL DPCLFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1              IENDFI,IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
C
        ISTR=' '
        IFLAGQ=0
        IF(NCLSVW.GE.1)THEN
          DO3160II=1,NCLSVW
            IF(ILSTVW(II:II).EQ.' ')THEN
              IFLAGQ=1
              GOTO3169
            ENDIF
 3160     CONTINUE
 3169     CONTINUE
        ENDIF
        NCSTR=0
        IF(IOPSY1.EQ.'UNIX')THEN
CCCCC     NCSTR=10
CCCCC     ISTR(1:NCSTR)='xterm -e "'
          IF(NCLSLA.GE.1)THEN
            NCSTR=NCLSLA
            ISTR(1:NCLSLA)=ILSTLA(1:NCLSLA)
            IF(IOPSY2.NE.'MAC ')THEN
              ISTR(NCSTR+1:NCSTR+2)=' "'
              NCSTR=NCSTR+2
            ENDIF
          ELSE
            IF(IOPSY2.EQ.'MAC ')THEN
              NCSTR=8
              ISTR(1:NCSTR)='open -t '
            ELSE
              NCSTR=19
              ISTR(1:NCSTR)='gnome-terminal -e "'
            ENDIF
          ENDIF
        ELSEIF(IFLAGQ.EQ.1)THEN
          NCSTR=NCSTR+1
          ISTR(NCSTR:NCSTR)='"'
        ENDIF
C
C         USE "write.exe" IF WORDPAD IS THE VIEWER
C
        IF(IOPSY1.NE.'UNIX' .AND.
     1    (ILSTVW(1:7).EQ.'WORDPAD' .OR. ILSTVW(1:7).EQ.'wordpad'))THEN
          ISTR(NCSTR+1:NCSTR+9)='write.exe'
          NCSTR=NCSTR+9
        ELSE
          IF(NCLSVW.GE.1)THEN
            ISTR(NCSTR+1:NCSTR+NCLSVW)=ILSTVW(1:NCLSVW)
            NCSTR=NCSTR+NCLSVW
          ENDIF
        ENDIF
C
        IF(IFLAGQ.EQ.1 .AND. IOPSY1.NE.'UNIX')THEN
          NCSTR=NCSTR+1
          ISTR(NCSTR:NCSTR)='"'
        ENDIF
        NCSTR=NCSTR+1
        ISTR(NCSTR:NCSTR)=' '
C
        ILAST=1
        DO3170II=80,1,-1
          IF(IFILSV(II:II).NE.' ')THEN
            ILAST=II
            GOTO3179
          ENDIF
 3170   CONTINUE
 3179   CONTINUE
C
C       NOTE: FOR WINDOWS, IF NOTEPAD IS THE LIST VIEWER THEN FILE
C             NAME NEEDS TO BE QUOTED FOR "HIDDEN" MODE EVEN IF FILE
C             NAME CONTAINS NO SPACES.
C
        IF(IOPSY1.NE.'UNIX')THEN
          IFLAGQ=0
          DO3180II=1,ILAST
            IF(IFILSV(II:II).EQ.' ')THEN
              IFLAGQ=1
              GOTO3189
            ENDIF
 3180     CONTINUE
 3189     CONTINUE
C
          IF(ILSTVW(1:7).EQ.'notepad'.OR.ILSTVW(1:7).EQ.'NOTEPAD')THEN
            IFLAGQ=1
          ENDIF
C
          IF(IFLAGQ.EQ.1)THEN
            NCSTR=NCSTR+1
            ISTR(NCSTR:NCSTR)='"'
          ENDIF
        ENDIF
        IF(IOPSY1.EQ.'UNIX' .AND. IOPSY2.EQ.'MAC ')THEN
          NCSTR=NCSTR+1
          ISTR(NCSTR:NCSTR)='"'
        ENDIF
        ISTR(NCSTR+1:NCSTR+ILAST)=IFILSV(1:ILAST)
        NCSTR=NCSTR+ILAST
        IF(IOPSY1.EQ.'UNIX')THEN
          NCSTR=NCSTR+1
          ISTR(NCSTR:NCSTR)='"'
        ELSE
          IF(IFLAGQ.EQ.1)THEN
            NCSTR=NCSTR+1
            ISTR(NCSTR:NCSTR)='"'
          ENDIF
        ENDIF
        ISSAV1=ISYSPE
        ISSAV2=ISYSHI
        ISSAV3=ICLEWT
        ISSAV4=ILINSY
        IF(IOPSY1.EQ.'UNIX')THEN
          ISYSPE='ON'
          ICLEWT='OFF'
          ILINSY='COMM'
        ELSE
          ISYSPE='OFF'
          ISYSHI='ON'
          ICLEWT='OFF'
        ENDIF
        CALL DPSYS2(ISTR,NCSTR,ISUBRO,IERROR)
        ISYSPE=ISSAV1
        ISYSHI=ISSAV2
        ICLEWT=ISSAV3
        ILINSY=ISSAV4
C
        GOTO9000
C
C       2019/11: OPEN EXCEL/WORD/POWER POINT FILE.
C
C                1. FOR WINDOWS, JUST DISPLAY FILE NAME AND
C                   OPERATING SYSTEM WILL INITIATE THE APPROPRIATE
C                   APPLICATION BASED ON THE FILE EXTENSION.
C
C                2. ON LINUX, USER CAN SPECIFY THE DESIRED APPLICATION.
C                   BY DEFAULT, USE "xdg-open" WHICH WILL AUTOMATICALLY
C                   PICK THE APPLICATION BASED ON THE FILE EXTENSION.
C
C                3. ON MacOS, "open" IS EQUIVALENT TO "xdg-open".
C
      ELSEIF(IFLAGE.EQ.'ON' .OR. IFLAGW.EQ.'ON' .OR.
     1       IFLAGP.EQ.'ON')THEN
C
C       CLOSE FILE
C
        IENDFI='OFF'
        IREWIN='ON'
        CALL DPCLFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1              IENDFI,IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
C
        ISTR=' '
        NCSTR=0
        IFLAGQ=0
        IF(IFLAGE.EQ.'ON' .AND. NCEXVW.GE.1)THEN
          DO6160II=1,NCEXVW
            IF(IEXCVW(II:II).EQ.' ' .AND. IEXCVW(II+1:II+1).NE.'-')THEN
              IFLAGQ=1
              GOTO6169
            ENDIF
 6160     CONTINUE
 6169     CONTINUE
          IF(IFLAGQ.EQ.1)THEN
            NCSTR=NCSTR+1
            ISTR(NCSTR:NCSTR)='"'
          ENDIF
          ISTR(NCSTR+1:NCSTR+NCEXVW)=IEXCVW(1:NCEXVW)
          NCSTR=NCSTR+NCEXVW
          IF(IFLAGQ.EQ.1)THEN
            NCSTR=NCSTR+1
            ISTR(NCSTR:NCSTR)='"'
          ENDIF
        ELSEIF(IFLAGW.EQ.'ON' .AND. NCWOVW.GE.1)THEN
          DO6170II=1,NCWOVW
            IF(IWORVW(II:II).EQ.' ' .AND. IWORVW(II+1:II+1).NE.'-')THEN
              IFLAGQ=1
              GOTO6179
            ENDIF
 6170     CONTINUE
 6179     CONTINUE
          IF(IFLAGQ.EQ.1)THEN
            NCSTR=NCSTR+1
            ISTR(NCSTR:NCSTR)='"'
          ENDIF
          ISTR(NCSTR+1:NCSTR+NCWOVW)=IWORVW(1:NCWOVW)
          NCSTR=NCSTR+NCWOVW
          IF(IFLAGQ.EQ.1)THEN
            NCSTR=NCSTR+1
            ISTR(NCSTR:NCSTR)='"'
          ENDIF
        ELSEIF(IFLAGP.EQ.'ON' .AND. NCPPVW.GE.1)THEN
          DO6180II=1,NCPPVW
            IF(IPPTVW(II:II).EQ.' ' .AND. IPPTVW(II+1:II+1).NE.'-')THEN
              IFLAGQ=1
              GOTO6189
            ENDIF
 6180     CONTINUE
 6189     CONTINUE
          IF(IFLAGQ.EQ.1)THEN
            NCSTR=NCSTR+1
            ISTR(NCSTR:NCSTR)='"'
          ENDIF
          ISTR(NCSTR+1:NCSTR+NCPPVW)=IPPTVW(1:NCPPVW)
          NCSTR=NCSTR+NCPPVW
          IF(IFLAGQ.EQ.1)THEN
            NCSTR=NCSTR+1
            ISTR(NCSTR:NCSTR)='"'
          ENDIF
        ENDIF
C
        NCSTR=NCSTR+1
        ISTR(NCSTR:NCSTR+1)=' "'
        NCSTR=NCSTR+1
C
        ILAST=1
        DO6190II=80,1,-1
          IF(IFILSV(II:II).NE.' ')THEN
            ILAST=II
            GOTO6199
          ENDIF
 6190   CONTINUE
 6199   CONTINUE
C
        ISTR(NCSTR+1:NCSTR+ILAST)=IFILSV(1:ILAST)
        NCSTR=NCSTR+ILAST+1
        ISTR(NCSTR:NCSTR)='"'
        ISSAV1=ISYSPE
        ISSAV2=ISYSHI
        ISSAV3=ICLEWT
        ISSAV4=ILINSY
        IF(IOPSY1.EQ.'UNIX')THEN
          ISYSPE='ON'
          ICLEWT='OFF'
          ILINSY='COMM'
        ELSE
          ISYSPE='OFF'
          ISYSHI='ON'
          ICLEWT='OFF'
        ENDIF
        CALL DPSYS2(ISTR,NCSTR,ISUBRO,IERROR)
        ISYSPE=ISSAV1
        ISYSHI=ISSAV2
        ICLEWT=ISSAV3
        ILINSY=ISSAV4
C
        GOTO9000
      ENDIF
C
C     2019/10: IF "TAIL" OPTION SET, THEN DETERMINE NUMBER OF LINES
C              IN THE FILE.
C
 3190 CONTINUE
C
      IF(IFLAGT.EQ.1)THEN
        REWIND(IOUNIT)
        DO3120II=1,MAXN
          READ(IOUNIT,'(A1)',END=3129)ICJUNK
          ILINE=II
 3120   CONTINUE
        ILINE=MAXN
 3129   CONTINUE
        IFRST=ILINE-ITAILI+1
        IF(IFRST.LT.1)IFRST=1
        ILAST=ILINE
        DO3130II=IFRST,ILAST
          ISUB(II)=1
 3130   CONTINUE
        NQ=ILAST
        REWIND(IOUNIT)
      ENDIF
C
CCCCC THE FOLLOWING SECTION WAS UPDATED JULY 1989
CCCCC THE FOLLOWING SECTION WAS UPDATED NOVEMBER 1989
CCCCC THE FOLLOWING SECTION WAS UPDATED JULY 1990
CCCCC THE FOLLOWING SECTION WAS UPDATED SEPTEMBER 1993
C
C               **********************************
C               **  STEP 41--                   **
C               **  READ A GENERAL FILE.        **
C               **  PRINT IT OUT.               **
C               **********************************
C
      ISTEPN='41'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LIST')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMLPR=0
      IRESP='YES'
      IMAX=1000000
      IF(ICASEQ.EQ.'SUBS')IMAX=MAXN
      IF(ICASEQ.EQ.'FOR')IMAX=IROWN
      IF(IFLAGH.EQ.1)IMAX=IHEALI
      IF(IFLAGT.EQ.1)IMAX=NQ
C
      DO4110I=1,IMAX
C
C        DPWRST SUPPORTS MAXIMUM OF 240 CHARACTERS, SO TRUNCATE
C        AT 240 CHARACTERS
C
         ISTRIN=' '
         NMAX=240
         READ(IOUNIT,4111,END=4190)(ISTRIN(J:J),J=1,NMAX)
 4111    FORMAT(240A1)
C
         IF(IFLAGH.EQ.1 .AND. ISUB(I).EQ.0)GOTO4110
         IF(IFLAGT.EQ.1 .AND. ISUB(I).EQ.0)GOTO4110
         IF(ICASEQ.EQ.'SUBS'.AND.ISUB(I).EQ.0)GOTO4110
         IF(ICASEQ.EQ.'FOR'.AND.ISUB(I).EQ.0)GOTO4110
C
         ILAST=1
         DO4112JJ=240,1,-1
           IF(ISTRIN(JJ:JJ).NE.' ')THEN
             ILAST=JJ
             GOTO4113
           ENDIF
 4112    CONTINUE
 4113    CONTINUE
C
         CALL DPDB80(ISTRIN,JMAX,ILAST,IBUGS2,ISUBRO,IERROR)
         NCSTRI=JMAX
         IF(NCSTRI.EQ.3.AND.ISTRIN(1:3).EQ.'EOF')GOTO4190
C
         IF(NUMLPR.GE.IHELMX)THEN
            CALL DPMORE(NUMLPR,NCPREH,ICPREH,IRESP,IBUGS2,IERROR)
            NUMLPR=0
         ENDIF
C
         IF(IRESP.EQ.'NO')GOTO4150
C
         IF(NCSTRI.GE.1)THEN
            IF(INUMSW.EQ.'OFF')THEN
               WRITE(ICOUT,4117)(ISTRIN(J:J),J=1,NCSTRI)
 4117          FORMAT(240A1)
               CALL DPWRST('XXX','WRIT')
            ELSE
               WRITE(ICOUT,4118)I,(ISTRIN(J:J),J=1,NCSTRI)
 4118          FORMAT(I8,'--',240A1)
               CALL DPWRST('XXX','WRIT')
            ENDIF
C
         ELSEIF(NCSTRI.LE.0)THEN
            IF(INUMSW.EQ.'OFF')THEN
               WRITE(ICOUT,999)
               CALL DPWRST('XXX','WRIT')
            ELSE
               WRITE(ICOUT,4119)I
 4119          FORMAT(I8,'--')
               CALL DPWRST('XXX','WRIT')
            ENDIF
         ENDIF
C
         NUMLPR=NUMLPR+1
 4110 CONTINUE
C
 4150 CONTINUE
C
      IF(NCPOSH.LE.0)GOTO4159
      WRITE(ICOUT,4151)(ICPOSH(J:J),J=1,NCPOSH)
 4151 FORMAT(80A1)
      CALL DPWRST('XXX','WRIT')
 4159 CONTINUE
C
 4190 CONTINUE
C
C               **************************
C               **  STEP 51--           **
C               **  CLOSE THE FILE      **
C               **  (UNLESS ITS THE     **
C               **  CONCLUSIONS FILE).  **
C               **************************
C
      ISTEPN='51'
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LIST')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(IFILE.EQ.ICONNA)GOTO5190
C
      IENDFI='OFF'
      IREWIN='ON'
      CALL DPCLFI(IOUNIT,IFILE,ISTAT,IFORM,IACCES,IPROT,ICURST,
     1IENDFI,IREWIN,ISUBN0,IERRFI,IBUGS2,ISUBRO,IERROR)
C
 5190 CONTINUE
C
C               ****************
C               **  STEP 90-- **
C               **  EXIT.     **
C               ****************
C
 9000 CONTINUE
C
      IFILQU=IFILQ2
C
      IF(IBUGS2.EQ.'ON'.OR.ISUBRO.EQ.'LIST')THEN
         WRITE(ICOUT,999)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9011)
 9011    FORMAT('***** AT THE END       OF DPLIST--')
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9012)IBUGS2,ISUBRO,IERROR,ICASEQ,IRESP
 9012    FORMAT('IBUGS2,ISUBRO,IERROR,ICASEQ,IRESP = ',4(A4,2X),A4)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9013)ICOM,INUMSW,IENDFI,IREWIN,IOUNIT
 9013    FORMAT('ICOM,INUMSW,IENDFI,IREWIN,IOUNIT = ',4(A4,2X),I8)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9022)IFILE
 9022    FORMAT('IFILE  = ',A80)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9023)ISTAT,IFORM,IACCES,IPROT,ICURST
 9023    FORMAT('ISTAT,IFORM,IACCES,IPROT,ICURST  = ',4(A12,2X),A12)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9031)ISUBN0,IERRFI
 9031    FORMAT('ISUBN0,IERRFI = ',A12,2X,A12)
         CALL DPWRST('XXX','BUG ')
         WRITE(ICOUT,9041)NQ,NS,JMAX,NCSTRI,IHELMX,NCPREH,NCPOSH
 9041    FORMAT('NQ,NS,JMAX,NCSTRI,IHELMX,NCPREH,NCPOSH = ',3I8,4I5)
         CALL DPWRST('XXX','BUG ')
C
         IF(NCPREH.GE.1)THEN
            DO9052I=1,NCPREH
               WRITE(ICOUT,9053)I,ICPREH(I:I)
 9053          FORMAT('I,ICPREH(I:I) = ',I8,2X,A1,4X)
               CALL DPWRST('XXX','BUG ')
 9052       CONTINUE
         ENDIF
C
         IF(NCPOSH.GE.1)THEN
            DO9057I=1,NCPOSH
               WRITE(ICOUT,9058)I,ICPOSH(I:I)
 9058          FORMAT('I,ICPOSH(I:I) = ',I8,2X,A1,4X)
               CALL DPWRST('XXX','BUG ')
 9057       CONTINUE
         ENDIF
C
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLITH(IHARG,IARGT,ARG,NUMARG,PDEFLT,MAXLIN,PLINTH,
     1                  IBUGP2,IFOUND,IERROR)
C
C     PURPOSE--DEFINE THE LINE THICKNESSES.
C              THESE ARE LOCATED IN THE VECTOR PLINTH(.).
C     INPUT  ARGUMENTS--IHARG  (A  CHARACTER VECTOR)
C                     --IARGT  (A  CHARACTER VECTOR)
C                     --ARG
C                     --NUMARG
C                     --PDEFLT
C                     --MAXLIN
C                     --IBUGP2 ('ON' OR 'OFF' )
C     OUTPUT ARGUMENTS--PLINTH (A FLOATING POINT VECTOR)
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--JAMES J. FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--82/7
C     ORIGINAL VERSION--DECEMBER  1983.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 IARGT
C
      CHARACTER*4 IBUGP2
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IHOLD1
C
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
C
      DIMENSION IHARG(*)
      DIMENSION IARGT(*)
      DIMENSION ARG(*)
      DIMENSION PLINTH(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      ISUBN1='DPLI'
      ISUBN2='TH  '
      IFOUND='NO'
      IERROR='NO'
C
      NUMLIN=0
      IHOLD1='-999'
      HOLD1=-999.0
      HOLD2=-999.0
C
      IF(IBUGP2.EQ.'ON')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLITH--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)IBUGP2,IFOUND,IERROR,IHOLD1
   52   FORMAT('IBUGP2,IFOUND,IERROR,IHOLD1 = ',3(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)MAXLIN,NUMLIN
   53   FORMAT('MAXLIN,NUMLIN = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)HOLD1,HOLD2,PDEFLT,NUMARG
   54   FORMAT('HOLD1,HOLD2,PDEFLT,NUMARG = ',3G15.7,I10)
        CALL DPWRST('XXX','BUG ')
        DO65I=1,NUMARG
          WRITE(ICOUT,66)IHARG(I),IARGT(I),ARG(I)
   66     FORMAT('IHARG(I),IARGT(I),ARG(I) = ',2(A4,2X),G15.7)
          CALL DPWRST('XXX','BUG ')
   65   CONTINUE
        DO75I=1,10
          WRITE(ICOUT,76)I,PLINTH(I)
   76     FORMAT('I,PLINTH(I) = ',I8,2X,G15.7)
          CALL DPWRST('XXX','BUG ')
   75   CONTINUE
       ENDIF
C
C               **************************************
C               **  STEP 1--                        **
C               **  BRANCH TO THE APPROPRIATE CASE  **
C               **************************************
C
      ISTEPN='1'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.0)GOTO9000
      IF(NUMARG.EQ.1)GOTO1110
      IF(NUMARG.EQ.2)GOTO1120
      IF(NUMARG.EQ.3)GOTO1130
      GOTO1140
C
 1110 CONTINUE
      GOTO1200
C
 1120 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1='    '
      IF(IHARG(2).EQ.'ALL')HOLD1=PDEFLT
      IF(IHARG(2).EQ.'ALL')GOTO1300
      GOTO1200
C
 1130 CONTINUE
      IF(IHARG(2).EQ.'ALL')IHOLD1=IHARG(3)
      IF(IHARG(2).EQ.'ALL')HOLD1=ARG(3)
      IF(IHARG(2).EQ.'ALL')GOTO1300
      IF(IHARG(3).EQ.'ALL')IHOLD1=IHARG(2)
      IF(IHARG(3).EQ.'ALL')HOLD1=ARG(2)
      IF(IHARG(3).EQ.'ALL')GOTO1300
      GOTO1200
C
 1140 CONTINUE
      GOTO1200
C
C               *************************************************
C               **  STEP 2--                                   **
C               **  TREAT THE INDIVIDUAL SPECIFICATIONS CASE  **
C               *************************************************
C
 1200 CONTINUE
      ISTEPN='2'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(NUMARG.LE.1)GOTO1210
      GOTO1220
C
 1210 CONTINUE
      NUMLIN=1
      PLINTH(1)=PDEFLT
      GOTO1270
C
 1220 CONTINUE
      NUMLIN=NUMARG-1
      IF(NUMLIN.GT.MAXLIN)NUMLIN=MAXLIN
      DO1225I=1,NUMLIN
      J=I+1
      IHOLD1=IHARG(J)
      HOLD1=ARG(J)
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=PDEFLT
      IF(IHOLD1.EQ.'OFF')HOLD2=PDEFLT
      IF(IHOLD1.EQ.'AUTO')HOLD2=PDEFLT
      IF(IHOLD1.EQ.'DEFA')HOLD2=PDEFLT
      PLINTH(I)=HOLD2
 1225 CONTINUE
      GOTO1270
C
 1270 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1279
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      DO1278I=1,NUMLIN
      WRITE(ICOUT,1276)I,PLINTH(I)
 1276 FORMAT('LINE THICKNESS ',I6,' HAS JUST BEEN SET TO ',
     1E15.7)
      CALL DPWRST('XXX','BUG ')
 1278 CONTINUE
 1279 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               **************************
C               **  STEP 2--            **
C               **  TREAT THE ALL CASE  **
C               **************************
C
 1300 CONTINUE
      ISTEPN='3'
      IF(IBUGP2.EQ.'ON')CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      NUMLIN=MAXLIN
      HOLD2=HOLD1
      IF(IHOLD1.EQ.'ON')HOLD2=PDEFLT
      IF(IHOLD1.EQ.'OFF')HOLD2=PDEFLT
      IF(IHOLD1.EQ.'AUTO')HOLD2=PDEFLT
      IF(IHOLD1.EQ.'DEFA')HOLD2=PDEFLT
      DO1315I=1,NUMLIN
      PLINTH(I)=HOLD2
 1315 CONTINUE
      GOTO1370
C
 1370 CONTINUE
      IF(IFEEDB.EQ.'OFF')GOTO1319
      WRITE(ICOUT,999)
      CALL DPWRST('XXX','BUG ')
      I=1
      WRITE(ICOUT,1316)PLINTH(I)
 1316 FORMAT('ALL LINE THICKNESSES HAVE JUST BEEN SET TO ',
     1A4)
      CALL DPWRST('XXX','BUG ')
 1319 CONTINUE
      IFOUND='YES'
      GOTO9000
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGP2.EQ.'ON')THEN
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLITH--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)IERROR,HOLD1,HOLD2
 9014   FORMAT('IERROR,HOLD1,HOLD2 = ',A4,2X,2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO9035I=1,10
          WRITE(ICOUT,9036)I,PLINTH(I)
 9036     FORMAT('I,PLINTH(I) = ',I8,2X,G15.7)
          CALL DPWRST('XXX','BUG ')
 9035   CONTINUE
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLIUN(IHARG,NUMARG,MAXLIN,ILINTY,IFOUND,IERROR)
C
C     PURPOSE--DEFINE PLOT LINE UNITS (DATA OR SCREEN) FOR USE IN
C              MULTI-TRACE PLOTS.  THE COLOR FOR THE LINE FOR THE I-TH
C              TRACE WILL BE PLACED IN THE I-TH ELEMENT OF THE HOLLERITH
C              VECTOR ILINTY(.).
C
C              THE UNITS ARE SPECIFIED AS:
C
C                 DD     => X AXIS = DATA UNITS,   Y AXIS = DATA UNITS
C                 DS     => X AXIS = DATA UNITS,   Y AXIS = SCREEN UNITS
C                 SD     => X AXIS = SCREEN UNITS, Y AXIS = DATA UNITS
C                 SS     => X AXIS = SCREEN UNITS, Y AXIS = SCREEN UNITS
C                 DATA   => X AXIS = DATA UNITS,   Y AXIS = DATA UNITS
C                 SCREEN => X AXIS = SCREEN UNITS, Y AXIS = SCREEN UNITS
C
C              THE DEFAULT IS DATA UNITS FOR BOTH AXES.
C
C     INPUT  ARGUMENTS--IHARG  (A  HOLLERITH VECTOR)
C                     --NUMARG
C                     --MAXLIN
C     OUTPUT ARGUMENTS--ILINTY  (A  HOLLERITH VECTOR WHOSE I-TH ELEMENT
C                       IS THE COLOR FOR THE LINE ASSIGNED TO THE I-TH
C                       TRACE IN A MULTI-TRACE PLOT.
C                     --IFOUND ('YES' OR 'NO' )
C                     --IERROR ('YES' OR 'NO' )
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABOARATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2018/01
C     ORIGINAL VERSION--JANUARY   2018.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IHARG
      CHARACTER*4 ILINTY
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IDEFUN
C
C---------------------------------------------------------------------
C
      DIMENSION IHARG(*)
      DIMENSION ILINTY(*)
C
C---------------------------------------------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IFOUND='YES'
      IERROR='NO'
      IDEFUN='DD  '
C
      IF((NUMARG.EQ.1.AND.IHARG(1).EQ.'UNIT') .OR.
     1   (NUMARG.EQ.2.AND.IHARG(1).EQ.'UNIT'.AND.IHARG(2).EQ.'ALL'))THEN
        IFOUND='YES'
        DO1165I=1,MAXLIN
          ILINTY(I)=IDEFUN
 1165   CONTINUE
C
        IF(IFEEDB.EQ.'ON')THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          I=1
          WRITE(ICOUT,1116)ILINTY(I)
          CALL DPWRST('XXX','BUG ')
        ENDIF
      ELSEIF(NUMARG.GE.2.AND.IHARG(1).EQ.'UNIT')THEN
        IF(IHARG(NUMARG).EQ.'ON'   .OR. IHARG(NUMARG).EQ.'OFF' .OR.
     1     IHARG(NUMARG).EQ.'AUTO' .OR. IHARG(NUMARG).EQ.'DEFA')THEN
          IFOUND='YES'
          DO1115I=1,MAXLIN
            ILINTY(I)=IDEFUN
 1115     CONTINUE
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
  999       FORMAT(1X)
            CALL DPWRST('XXX','BUG ')
            I=1
            WRITE(ICOUT,1116)ILINTY(I)
 1116       FORMAT('ALL LINE UNITS HAVE JUST BEEN SET TO ',A4)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ELSEIF(NUMARG.EQ.2)THEN
          ILINTY(1)=IHARG(2)
          IF(ILINTY(1).EQ.'SCRE' .OR. ILINTY(1).EQ.'SS  ')THEN
            ILINTY(1)='SS  '
          ELSEIF(ILINTY(1).EQ.'DATA' .OR. ILINTY(1).EQ.'DD  ')THEN
            ILINTY(1)='DD  '
          ELSE
            IF(ILINTY(1).NE.'DS  ' .AND. ILINTY(1).NE.'SD  ')THEN
              ILINTY(1)='DD'
            ENDIF
          ENDIF
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            I=1
            WRITE(ICOUT,1126)I,ILINTY(I)
 1126       FORMAT('THE UNITS FOR LINE ',I6,' HAS JUST BEEN SET TO ',A4)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ELSEIF(NUMARG.GE.3.AND.IHARG(2).EQ.'ALL')THEN
          IFOUND='YES'
          DO1135I=1,MAXLIN
            ILINTY(I)=IHARG(3)
            IF(ILINTY(I).EQ.'SCRE' .OR. ILINTY(1).EQ.'SS  ')THEN
              ILINTY(I)='SS  '
            ELSEIF(ILINTY(I).EQ.'DATA' .OR. ILINTY(I).EQ.'DD  ')THEN
              ILINTY(I)='DD  '
            ELSE
              IF(ILINTY(I).NE.'DS  ' .AND. ILINTY(I).NE.'SD  ')THEN
                ILINTY(I)='DD'
              ENDIF
            ENDIF
 1135     CONTINUE
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            I=1
            WRITE(ICOUT,1116)ILINTY(I)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ELSEIF(NUMARG.GE.3.AND.IHARG(3).EQ.'ALL')THEN
          IFOUND='YES'
          DO1145I=1,MAXLIN
            ILINTY(I)=IHARG(2)
            IF(ILINTY(I).EQ.'SCRE' .OR. ILINTY(1).EQ.'SS  ')THEN
              ILINTY(I)='SS  '
            ELSEIF(ILINTY(I).EQ.'DATA' .OR. ILINTY(I).EQ.'DD  ')THEN
              ILINTY(I)='DD  '
            ELSE
              IF(ILINTY(I).NE.'DS  ' .AND. ILINTY(I).NE.'SD  ')THEN
                ILINTY(I)='DD'
              ENDIF
            ENDIF
 1145     CONTINUE
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            I=1
            WRITE(ICOUT,1116)ILINTY(I)
            CALL DPWRST('XXX','BUG ')
          ENDIF
        ELSE
          IFOUND='YES'
          IMAX=NUMARG-1
          IF(MAXLIN.LT.IMAX)IMAX=MAXLIN
          DO1155I=1,IMAX
            IP1=I+1
            ILINTY(I)=IHARG(IP1)
            IF(ILINTY(I).EQ.'SCRE' .OR. ILINTY(1).EQ.'SS  ')THEN
              ILINTY(I)='SS  '
            ELSEIF(ILINTY(I).EQ.'DATA' .OR. ILINTY(I).EQ.'DD  ')THEN
              ILINTY(I)='DD  '
            ELSE
              IF(ILINTY(I).NE.'DS  ' .AND. ILINTY(I).NE.'SD  ')THEN
                ILINTY(I)='DD'
              ENDIF
            ENDIF
 1155     CONTINUE
C
          IF(IFEEDB.EQ.'ON')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            DO1156I=1,IMAX
              WRITE(ICOUT,1126)I,ILINTY(I)
              CALL DPWRST('XXX','BUG ')
 1156       CONTINUE
          ENDIF
        ENDIF
      ELSE
        IFOUND='NO'
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLODE(ICASAN,ICAPSW,IFORSW,IMULT,IREPL,
     1                  ISUBRO,IBUGA2,IBUGA3,IBUGQ,IFOUND,IERROR)
C
C     PURPOSE--PERFORM A LIMITS OF DETECTION ANALYIS.  SPECIFICALLY,
C              WE ARE CHECKING FOR A LOWER LIMIT OF DETECTION.
C              IT IS ASSUMED THAT WE CANNOT MEASURE THE MASS BELOW
C              A CERTAIN DETECTION LIMIT AND WE NEED TO DETERMINE
C              WHAT THAT DETECTION LIMIT IS.  THERE ARE 2 CASES:
C
C                  1) FOR A ZERO MASS, THE MEASUREMENT WILL ALWAYS
C                     RETURN A ZERO VALUE.  THIS WILL BE REFERRED
C                     TO AS THE "CLEAN" CASE".
C
C                  2) FOR A ZERO MASS, THE MEASUREMENT MAY BE A
C                     NON-ZERO VALUE.  THIS WILL BE REFERRED TO AS
C                     THE DIRTY CASE.
C
C              THE DATA CONSISTS OF A MASS VALUE ("X") AND A
C              MEASURED VALUE ("Y").  THE COMMAND SYNTAX IS:
C
C                  CLEAN LIMIT OF DETECTION  Y   X
C                  DIRTY LIMIT OF DETECTION  Y   X
C                  LIMIT OF DETECTION  Y   X
C
C              IF THE CLEAN/DIRTY CASE IS NOT SPECIFIED, ASSUME
C              THE DIRTY CASE.
C
C              NOTE THAT THIS HAS BEEN MODIFIED SO THAT IT IS
C              AUTOMATICALLY DETERMINED WHETHER THE DIRTY OR THE CLEAN
C              CASE IS USED (DPLOD2 IS THE "DIRTY" CASE, THIS IS ALWAYS
C              CALLED BY DPLODE AND THEN DPLOD2 WILL CALL DPLOD3 IF THE
C              CLEAN CASE IS DETECTED.
C
C              NOTE THAT THERE ARE A NUMBER OF APPROACHES TO THE LIMITS
C              OF DETECTION.  THIS ROUTINE IMPLEMENTS THE METHOD
C              USED BY THE ASTM E2677 STANDARD.
C
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS AND TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/1
C     ORIGINAL VERSION--JANUARY   2009.
C     UPDATED         --OCTOBER   2018. SUPPORT "MULTIPLE" AND
C                                       "REPLICATION" OPTIONS
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES----------------
C
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 IFORSW
      CHARACTER*4 IREPL
      CHARACTER*4 IMULT
      CHARACTER*4 ISUBRO
      CHARACTER*4 IWRITE
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 IBUGQ
      CHARACTER*4 IFOUND
      CHARACTER*4 IERROR
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 IHWUSE
      CHARACTER*4 MESSAG
      CHARACTER*4 ICASEQ
C
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 ICASE
C
      PARAMETER (MAXSPN=30)
      CHARACTER*4 IVARN1(MAXSPN)
      CHARACTER*4 IVARN2(MAXSPN)
      CHARACTER*4 IVARTY(MAXSPN)
      CHARACTER*4 IVARID(MAXSPN)
      CHARACTER*4 IVARI2(MAXSPN)
      REAL PVAR(MAXSPN)
      REAL PID(MAXSPN)
      INTEGER ILIS(MAXSPN)
      INTEGER NRIGHT(MAXSPN)
      INTEGER ICOLR(MAXSPN)
      CHARACTER*40 INAME
      CHARACTER*4 IFLAGU
      LOGICAL IFRST
      LOGICAL ILAST
C
C----------------------------------------------------------------
C
      INCLUDE 'DPCOPA.INC'
C
      PARAMETER (MAXRPL=1)
      DIMENSION Y1(MAXOBV)
      DIMENSION Y2(MAXOBV)
      DIMENSION Y3(MAXOBV)
      DIMENSION TEMP1(MAXOBV)
      DIMENSION TEMP2(MAXOBV)
      DIMENSION TEMP3(MAXOBV)
      DIMENSION TEMP4(MAXOBV)
      DIMENSION TEMP5(MAXOBV)
      DIMENSION TEMP6(MAXOBV)
      DIMENSION TEMP7(MAXOBV)
      DIMENSION XIDTEM(MAXOBV)
      DIMENSION XIDTE2(MAXOBV)
C
      PARAMETER (MAXMAS=1000)
      REAL DTEMP(MAXMAS)
      REAL BA(MAXMAS)
      REAL BL(MAXMAS)
      REAL SU(MAXMAS)
      REAL T(MAXMAS)
      REAL P(MAXMAS)
      REAL LO(MAXMAS)
      REAL LU(MAXMAS)
      REAL S(MAXMAS)
      REAL UN(MAXMAS)
      REAL TO(MAXMAS)
      REAL UA(MAXMAS)
      REAL SI(MAXMAS)
      REAL B1(MAXMAS)
      REAL YTT(MAXMAS)
      REAL YVAR(MAXMAS)
C
      INTEGER   ITEMP1(MAXOBV)
      INTEGER   ITEMP2(MAXOBV)
      INTEGER   ITEMP3(MAXOBV)
C
      INCLUDE 'DPCOZZ.INC'
      INCLUDE 'DPCOZI.INC'
      EQUIVALENCE (GARBAG(IGARB1),Y1(1))
      EQUIVALENCE (GARBAG(IGARB2),Y2(1))
      EQUIVALENCE (GARBAG(IGARB3),TEMP1(1))
      EQUIVALENCE (GARBAG(IGARB4),TEMP2(1))
      EQUIVALENCE (GARBAG(IGARB5),TEMP6(1))
C
      EQUIVALENCE (GARBAG(IGARB6),DTEMP(1))
      EQUIVALENCE (GARBAG(IGARB6+MAXMAS+1),BA(1))
      EQUIVALENCE (GARBAG(IGARB6+2*MAXMAS+1),BL(1))
      EQUIVALENCE (GARBAG(IGARB6+3*MAXMAS+1),SU(1))
      EQUIVALENCE (GARBAG(IGARB6+4*MAXMAS+1),T(1))
      EQUIVALENCE (GARBAG(IGARB6+5*MAXMAS+1),P(1))
      EQUIVALENCE (GARBAG(IGARB6+6*MAXMAS+1),LO(1))
      EQUIVALENCE (GARBAG(IGARB6+7*MAXMAS+1),LU(1))
      EQUIVALENCE (GARBAG(IGARB6+8*MAXMAS+1),S(1))
      EQUIVALENCE (GARBAG(IGARB6+9*MAXMAS+1),UN(1))
      EQUIVALENCE (GARBAG(IGARB6+10*MAXMAS+1),TO(1))
      EQUIVALENCE (GARBAG(IGARB6+11*MAXMAS+1),UA(1))
      EQUIVALENCE (GARBAG(IGARB6+12*MAXMAS+1),SI(1))
      EQUIVALENCE (GARBAG(IGARB6+13*MAXMAS+1),B1(1))
      EQUIVALENCE (GARBAG(IGARB6+14*MAXMAS+1),YTT(1))
      EQUIVALENCE (GARBAG(IGARB6+15*MAXMAS+1),YVAR(1))
C
      EQUIVALENCE (GARBAG(IGARB7),TEMP4(1))
      EQUIVALENCE (GARBAG(IGARB8),TEMP5(1))
      EQUIVALENCE (GARBAG(IGARB9),XIDTEM(1))
      EQUIVALENCE (GARBAG(IGAR10),XIDTE2(1))
      EQUIVALENCE (GARBAG(JGAR11),Y3(1))
      EQUIVALENCE (GARBAG(JGAR12),TEMP3(1))
      EQUIVALENCE (GARBAG(JGAR13),TEMP7(1))
C
      EQUIVALENCE (IGARBG(IIGAR1),ITEMP1(1))
      EQUIVALENCE (IGARBG(IIGAR2),ITEMP2(1))
      EQUIVALENCE (IGARBG(IIGAR3),ITEMP3(1))
C
C-----COMMON----------------------------------------------------
C
      INCLUDE 'DPCOSU.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCODA.INC'
      INCLUDE 'DPCOST.INC'
C
C----------------------------------------------------------------
C
C-----COMMON VARIABLES (GENERAL)---------------------------------
C
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT------------------------------------------------
C
      ISTEPN='1'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LODE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      ISUBN1='DPLO'
      ISUBN2='DE  '
      IERROR='NO'
      ICASEQ='UNKN'
      IFOUND='YES'
C
      MAXCP1=MAXCOL+1
      MAXCP2=MAXCOL+2
      MAXCP3=MAXCOL+3
      MAXCP4=MAXCOL+4
      MAXCP5=MAXCOL+5
      MAXCP6=MAXCOL+6
C
C
C               **************************************************
C               **  TREAT THE LIMIT OF DETECTION          CASE  **
C               **************************************************
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LODE')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLODE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)ICASAN,IMULT,IREPL,IBUGA2,IBUGA3,IBUGQ
   52   FORMAT('ICASAN,IMULT,IREPL,IBUGA2,IBUGA3,IBUGQ = ',5(A4,2X),A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C               ****************************************
C               **  STEP 1--                          **
C               **  EXTRACT THE VARIABLE LIST         **
C               ****************************************
C
      INAME='LIMITS OF DETECTION ANALYSIS'
      MINNA=2
      MAXNA=100
      MINN2=10
      IFLAGE=1
      IFLAGM=0
      IFLAGP=0
      JMIN=1
      JMAX=NUMARG
      MINNVA=2
      MAXNVA=3
      IF(IMULT.EQ.'ON')THEN
        MAXNVA=MAXSPN
      ENDIF
      IF(IREPL.EQ.'ON')THEN
        MINNVA=3
      ENDIF
C
      CALL DPPARS(IHARG,IHARG2,IARGT,ARG,NUMARG,IANS,IWIDTH,
     1            IHNAME,IHNAM2,IUSE,NUMNAM,IN,IVALUE,VALUE,
     1            JMIN,JMAX,
     1            MINN2,MINNA,MAXNA,MAXSPN,IFLAGE,INAME,
     1            IVARN1,IVARN2,IVARTY,PVAR,
     1            ILIS,NRIGHT,ICOLR,ISUB,NQ,ILOCQ,NUMVAR,
     1            MINNVA,MAXNVA,
     1            IFLAGM,IFLAGP,
     1            IBUGA3,IBUGQ,ISUBRO,IFOUND,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LODE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,281)
  281   FORMAT('***** AFTER CALL DPPARS--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,282)NQ,NUMVAR
  282   FORMAT('NQ,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        IF(NUMVAR.GT.0)THEN
          DO285I=1,NUMVAR
            WRITE(ICOUT,287)I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),
     1                      ICOLR(I)
  287       FORMAT('I,IVARN1(I),IVARN2(I),ILIS(I),NRIGHT(I),',
     1             'ICOLR(I) = ',I8,2X,A4,A4,2X,3I8)
            CALL DPWRST('XXX','BUG ')
  285     CONTINUE
        ENDIF
      ENDIF
C
      IF(IMULT.EQ.'OFF' .AND. NUMVAR.EQ.3)IREPL='ON'
C
C               ******************************************
C               **  STEP 2--                            **
C               **  CHECK FOR USER SETTABLE PARAMETERS  **
C               ******************************************
C
      ISTEPN='2'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LODE')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IH='ALPH'
      IH2='A   '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        ALPHA=0.10
      ELSE
        ALPHA=VALUE(ILOCP)
      ENDIF
      IF(ALPHA.LE.0.0 .OR. ALPHA.GE.1.0)ALPHA=0.05
      IF(ALPHA.GT.0.50)ALPHA=1.0 - ALPHA
C
      IH='BETA'
      IH2='    '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        BETA=0.10
      ELSE
        BETA=VALUE(ILOCP)
      ENDIF
      IF(BETA.LE.0.0 .OR. BETA.GE.1.0)BETA=0.10
      IF(BETA.GT.0.50)BETA=1.0 - BETA
C
      IH='GAMM'
      IH2='A   '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        GAMMA=0.10
      ELSE
        GAMMA=VALUE(ILOCP)
      ENDIF
      IF(GAMMA.LE.0.0 .OR. GAMMA.GE.1.0)GAMMA=0.10
      IF(GAMMA.GT.0.50)GAMMA=1.0 - GAMMA
C
      IH='PA  '
      IH2='    '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        PA=0.10
      ELSE
        PA=VALUE(ILOCP)
      ENDIF
      IF(PA.LE.0.0 .OR. PA.GE.1.0)PA=0.10
      IF(PA.GT.0.50)PA=1.0 - PA
C
C     THRESHOLD PERCENT SHOULD BE BETWEEN 90% AND 100%.  HOWEVER,
C     ALLOW TO GO AS LOW AS 80%.  IF OUT OF 80-100% RANGE,
C     THEN SET TO DEFAULT.
C
      IH='THRE'
      IH2='SHPR'
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        THRPER=CPUMIN
      ELSE
        THRPER=VALUE(ILOCP)
      ENDIF
      IF(THRPER.NE.CPUMIN)THEN
        IF(THRPER.GT.1.0)THEN
           THRPER=THRPER/100.0
           IF(THRPER.LT.0.5)THRPER=0.9
           IF(THRPER.GT.1.0)THRPER=0.9
        ELSEIF(THRPER.LT.0.5)THEN
           THRPER=0.9
        ENDIF
      ENDIF
C
C     SPECIFY CRITICAL VALUE IF KNOWN (SOME INSTRUMENTS PROVIDE THIS
C     VALUE IN THEIR SOFTWARE).  CURRENTLY, ONLY CHECK THAT THE
C     CRITICAL VALUE IS POSITIVE.
C
      IH='CRIT'
      IH2='VAL '
      IHWUSE='P'
      MESSAG='NO'
      CALL CHECKN(IH,IH2,IHWUSE,
     1IHNAME,IHNAM2,IUSE,IN,IVALUE,VALUE,NUMNAM,MAXNAM,
     1ISUBN1,ISUBN2,MESSAG,IANS,IWIDTH,ILOCP,IERROR)
      IF(IERROR.EQ.'YES')THEN
        CVUSER=CPUMIN
      ELSE
        CVUSER=VALUE(ILOCP)
        IF(CVUSER.LE.0.0)CVUSER=CPUMIN
      ENDIF
      CVSAVE=CVUSER
C
C               ****************************************
C               **  STEP 3--                          **
C               **  EXTRACT THE DATA                  **
C               ****************************************
C
      ISTEPN='3'
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LODE')THEN
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,323)ALPHA,BETA,GAMMA,PA,CV
  323   FORMAT('ALPHA,BETA,GAMMA,PA,CV = ',5G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     2018/10: SUPPORT FOR "REPLICATION" AND "MULTIPLE" OPTIONS.
C
C              AT ASTM D22 SYMPOSIUM ON DETECTION LIMITS, A SUGGESTION
C              WAS MADE THAT BEING ABLE TO GENERATE DETECTION LIMITS
C              FOR MULTIPLE ELEMENTS WOULD BE USEFUL ON THE WEB SITE.
C
C              TWO APPROACHES TO REPLICATION ARE SUPPORTED:
C
C              1. REPLICATION (REPLICATED LIMITS OF DETECTION Y X BATCH)
C
C                 IN THIS CASE, WE SIMPLY ADD A "BATCH" VARIABLE.
C
C              2. MULTIPLE (MULTIPLE LIMITS OF DETECTION Y1 ... YK  X)
C
C                 FOR THIS CASE, WE ASSUME 
C
      IF(IREPL.EQ.'OFF' .AND. IMULT.EQ.'OFF' .AND. NUMVAR.EQ.3)
     1   IREPL='ON'
C
      IF(IMULT.EQ.'ON' .OR. NUMVAR.EQ.2)THEN
C
C       LOOP THROUGH EACH OF THE RESPONSE VARIABLES
C
C       FOR MULTIPLE CASE, LAST VARIABLE IS THE "MASS" VARIABLE AND
C       IT IS THE SAME FOR ALL RESPONSE VARIABLES.
C
        ICOL=NUMVAR
        NUMVA2=1
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y2,Y2,Y2,NLOCAL,NLOCAL,NLOCAL,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        NCURVE=0
        DO310IRESP=1,NUMVAR-1
          NCURVE=NCURVE+1
          CVUSER=CVSAVE
C
          IINDX=ICOLR(IRESP)
          PID(1)=CPUMIN
          IVARID(1)=IVARN1(IRESP)
          IVARI2(1)=IVARN2(IRESP)
C
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LODE')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,311)IRESP,NCURVE,IVARID(IRESP),IVARI2(IRESP)
  311       FORMAT('IRESP,NCURVE,IVARID(IRESP),IVARI2(IRESP) = ',
     1             2I5,2X,2A4)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          ICOL=IRESP
          NUMVA2=1
          CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1                INAME,IVARN1,IVARN2,IVARTY,
     1                ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVA2,
     1                MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1                MAXCP4,MAXCP5,MAXCP6,
     1                V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1                Y1,Y1,Y1,NS,NS,NS,ICASE,
     1                IBUGA3,ISUBRO,IFOUND,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
C
C         **************************************************
C         **  STEP 3B--                                   **
C         **  PREPARE FOR ENTRANCE INTO DPLOD2--          **
C         **************************************************
C
          ISTEPN='3B'
          IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LODE')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LODE')THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,321)
  321       FORMAT('***** FROM DPLODE, AS WE ARE ABOUT TO ',
     1             'CALL DPLOD2--')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,322)MAXN,NS,NUMVAR
  322       FORMAT('MAXN,NS,NUMVAR = ',3I8)
            CALL DPWRST('XXX','BUG ')
            DO325I=1,NS
              WRITE(ICOUT,326)I,Y1(I),Y2(I)
  326         FORMAT('I,Y1(I),Y2(I) = ',I6,2X,2G15.7)
              CALL DPWRST('XXX','BUG ')
  325       CONTINUE
          ENDIF
C
          IWRITE='OFF'
          PID(1)=CPUMIN
          PID(2)=CPUMIN
          PID(3)=CPUMIN
          IVARID(1)=IVARN1(IRESP)
          IVARI2(1)=IVARN2(IRESP)
          IVARID(2)=IVARN1(NUMVAR)
          IVARI2(2)=IVARN2(NUMVAR)
          IVARID(3)='   '
          IVARI2(3)='   '
C
          CALL DPLOD2(Y1,Y2,NS,
     1                XIDTEM,TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,
     1                DTEMP,BA,BL,SU,T,P,LO,LU,S,UN,TO,UA,
     1                SI,B1,YTT,YVAR,
     1                ITEMP1,ITEMP2,ITEMP3,
     1                ALPHA,BETA,GAMMA,PA,THRPER,CVUSER,
     1                ALOD,ALODSE,CV,ALODLU,
     1                IVARID,IVARI2,PID,
     1                IWRITE,MAXOBV,
     1                IFORSW,ICASAN,ICAPSW,ICAPTY,
     1                ISUBRO,IBUGA3,IERROR)
C
C         ***************************************
C         **  STEP 3C--                        **
C         **  UPDATE INTERNAL DATAPLOT TABLES  **
C         ***************************************
C
          ISTEPN='3C'
          IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LODE')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          IFLAGU='FILE'
          IF(NUMVAR.EQ.2)IFLAGU='ON'
          IFRST=.FALSE.
          ILAST=.FALSE.
          IF(NCURVE.EQ.1)IFRST=.TRUE.
          IF(NCURVE.EQ.NUMVAR-1)ILAST=.TRUE.
          CALL DPLOD5(ALOD,ALODSE,CV,ALODLU,
     1                IFLAGU,IFRST,ILAST,ICASAN,
     1                IBUGA2,IBUGA3,ISUBRO,IERROR)
          IH='LOD '
          IH2='    '
          VALUE0=ALOD
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA2,IERROR)
C
          IH='LODS'
          IH2='E   '
          VALUE0=ALODSE
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA2,IERROR)
C
          IH='LODC'
          IH2='V   '
          VALUE0=CV
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA2,IERROR)
C
          IH='LODU'
          IH2='CL  '
          VALUE0=ALODLU
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA2,IERROR)
C
  310   CONTINUE
      ELSE
C
C       REPLICATION CASE
C
        ISTEPN='4A'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LODE')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ICOL=1
        CALL DPPAR3(ICOL,IVALUE,IVALU2,IN,MAXN,MAXOBV,
     1              INAME,IVARN1,IVARN2,IVARTY,
     1              ILIS,NRIGHT,ICOLR,ISUB,NQ,NUMVAR,
     1              MAXCOL,MAXCP1,MAXCP2,MAXCP3,
     1              MAXCP4,MAXCP5,MAXCP6,
     1              V,PRED,RES,YPLOT,XPLOT,X2PLOT,TAGPLO,
     1              Y1,Y2,Y3,NS,NS,NS,ICASE,
     1              IBUGA3,ISUBRO,IFOUND,IERROR)
        IF(IERROR.EQ.'YES')GOTO9000
C
        NLOCAL=NS
        NREPL=1
C
        ISTEPN='4B'
        IF(IBUGA2.EQ.'ON'.OR.ISUBRO.EQ.'LODE')
     1    CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        PID(1)=CPUMIN
        PID(2)=CPUMIN
        IVARID(1)=IVARN1(1)
        IVARI2(1)=IVARN2(1)
        IVARID(2)=IVARN1(2)
        IVARI2(2)=IVARN2(2)
        IVARID(3)=IVARN1(3)
        IVARI2(3)=IVARN2(3)
C
C       *****************************************************
C       **  STEP 4C--                                      **
C       **                                                 **
C       **  FOR THIS CASE, WE NEED TO LOOP THROUGH THE     **
C       **  VARIOUS REPLICATIONS AND FIND THE DISTINCT     **
C       **  VALUES IN EACH OF THE REPLICATION VARIABLES.   **
C       *****************************************************
C
        IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LODE')THEN
          ISTEPN='4C'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,361)
  361     FORMAT('***** FROM THE MIDDLE  OF DPLODE--')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,362)NUMVAR,NS,NREPL
  362     FORMAT('NUMVAR,NS,NREPL = ',3I8)
          CALL DPWRST('XXX','BUG ')
          IF(NS.GE.1)THEN
            DO365I=1,NS
              WRITE(ICOUT,366)I,Y1(I),Y2(I),Y3(I)
  366         FORMAT('I,Y1(I),Y2(I),Y3(I) = ',I8,G15.7,2F12.5)
              CALL DPWRST('XXX','BUG ')
  365       CONTINUE
          ENDIF
        ENDIF
C
        IF(NUMVAR.EQ.3)THEN
          CALL DISTIN(Y3,NS,IWRITE,XIDTE2,NUMSET,IBUGA3,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
        ELSE
          NUMSET=1
        ENDIF
C
        IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LODE')THEN
          WRITE(ICOUT,368)NUMSET
  368     FORMAT('AFTER DISTIN: NUMSET = ',I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C       *****************************************************
C       **  STEP 5D--                                      **
C       **  NOW LOOP THROUGH THE VARIOUS REPLICATIONS      **
C       *****************************************************
C
        NPLOTP=0
        NCURVE=0
        J=0
        DO1110ISET1=1,NUMSET
          CVUSER=CVSAVE
          K=0
          PID(3)=XIDTE2(ISET1)
C
          DO1120I=1,MAXOBV
            TEMP1(K)=0.0
            TEMP2(K)=0.0
 1120     CONTINUE
C
          DO1130I=1,NS
            IF(XIDTE2(ISET1).EQ.Y3(I))THEN
              K=K+1
              TEMP1(K)=Y1(I)
              TEMP2(K)=Y2(I)
            ENDIF
 1130     CONTINUE
C
          NTEMP=K
          NCURVE=NCURVE+1
          IF(NTEMP.GT.0)THEN
            CALL DPLOD2(TEMP1,TEMP2,NTEMP,
     1                  XIDTEM,TEMP3,TEMP4,TEMP5,TEMP6,TEMP7,
     1                  DTEMP,BA,BL,SU,T,P,LO,LU,S,UN,TO,UA,
     1                  SI,B1,YTT,YVAR,
     1                  ITEMP1,ITEMP2,ITEMP3,
     1                  ALPHA,BETA,GAMMA,PA,THRPER,CVUSER,
     1                  ALOD,ALODSE,CV,ALODLU,
     1                  IVARID,IVARI2,PID,
     1                  IWRITE,MAXOBV,
     1                  IFORSW,ICASAN,ICAPSW,ICAPTY,
     1                  ISUBRO,IBUGA3,IERROR)
          ENDIF
C
          IFLAGU='FILE'
          IFRST=.FALSE.
          ILAST=.FALSE.
          IF(NCURVE.EQ.1)IFRST=.TRUE.
          IF(NCURVE.EQ.NUMSET)ILAST=.TRUE.
          CALL DPLOD5(ALOD,ALODSE,CV,ALODLU,
     1                IFLAGU,IFRST,ILAST,ICASAN,
     1                IBUGA2,IBUGA3,ISUBRO,IERROR)
 1110   CONTINUE
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LODE')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLODE--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IBUGA2,IBUGA3
 9012   FORMAT('IBUGA2,IBUGA3 = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9014)NS,NUMVAR
 9014   FORMAT('NS,NUMVAR = ',2I8)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9016)IFOUND,IERROR
 9016   FORMAT('IFOUND,IERROR = ',A4,2X,A4)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLOD2(Y,X,N,
     1                  XIDTEM,TEMP1,TEMP2,TEMP3,YT,YM,
     1                  D,BA,BL,SU,T,P,LO,LU,S,UN,TO,UA,
     1                  SI,B1,YTT,YVAR,
     1                  NS,MU,NN,
     1                  ALPHA,BETA,GAMMA,PA,THRPER,CVUSER,
     1                  ALOD,ALODSE,CV,ALODLU,
     1                  IVARID,IVARI2,PID,
     1                  IWRITE,MAXOBV,
     1                  IFORSW,ICASAN,ICAPSW,ICAPTY,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--PERFORM A LIMITS OF DETECTION ANALYIS.  SPECIFICALLY,
C              WE ARE CHECKING FOR A LOWER LIMIT OF DETECTION.
C              IT IS ASSUMED THAT WE CANNOT MEASURE THE MASS BELOW
C              A CERTAIN DETECTION LIMIT AND WE NEED TO DETERMINE
C              WHAT THAT DETECTION LIMIT IS.  THERE ARE 2 CASES:
C
C                  1) FOR A ZERO MASS, THE MEASUREMENT WILL ALWAYS
C                     RETURN A ZERO VALUE.  THIS WILL BE REFERRED
C                     TO AS THE "CLEAN" CASE".
C
C                  2) FOR A ZERO MASS, THE MEASUREMENT MAY BE A
C                     NON-ZERO VALUE.  THIS WILL BE REFERRED TO AS
C                     THE DIRTY CASE.
C
C              THE DATA CONSISTS OF A MASS VALUE ("X") AND A
C              MEASURED VALUE ("Y").  THE COMMAND SYNTAX IS:
C
C                  CLEAN LIMIT OF DETECTION  Y   X
C                  DIRTY LIMIT OF DETECTION  Y   X
C                  LIMIT OF DETECTION  Y   X
C
C              IF THE CLEAN/DIRTY CASE IS NOT SPECIFIED, ASSUME
C              THE DIRTY CASE.
C
C     PRINTING--YES
C     SUBROUTINES NEEDED--NORPPF, CHSPPF
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/1
C     ORIGINAL VERSION--JANUARY   2009.
C     UPDATED         --APRIL     2009. IMPLEMENT NEW STOPPING RULE
C     UPDATED         --MAY       2009. SOME REFINEMENTS
C     UPDATED         --JUNE      2009. SOME ADDITINAL REFINEMENTS
C     UPDATED         --JULY      2009. COMPUTE "SECOND SMALLEST"
C                                       VALUE FROM ALL THE DATA, NOT
C                                       JUST MASS = 0 DATA
C     UPDATED         --JULY      2009. ILODCV WAS NOT INITIALIZED,
C                                       ADD TO "INITSU" ROUTINE
C     UPDATED         --JULY      2009. EXPLICIT CHECK FOR CASE WHERE
C                                       THERE ARE LESS THAN 2 POSITIVE
C                                       MEASUREMENTS FOR A GIVEN MASS
C                                       VALUE
C     UPDATED         --AUGUST    2009. FOR HIGHEST MASS LEVEL, IF
C                                       MORE THAN 10% OF RESPONSES ARE
C                                       LESS THAN CRITIVAL VALUE, THEN
C                                       PRINT AN ERROR SAYING
C                                       MEASUREMENTS AT HIGHER MASS
C                                       LEVEL REQUIRED
C     UPDATED         --JANUARY   2011. ALLOW USER-SPECIFIED CRITICAL
C                                       VALUE
C     UPDATED         --JULY      2012. OPTION WHETHER TO PRINT EACH OF
C                                       THE TABLES
C     UPDATED         --MARCH     2014. THIS LOD ANALYSIS IS NOW AN
C                                       OFFICIAL ASTM STANDARD (E2677).
C                                       A FEW TWEAKS IN THE OUTPUT TO
C                                       BE CONSISTENT WITH E2677.
C     UPDATED         --JULY      2018. IF NEGATIVE DATA ENCOUNTERED,
C                                       THEN TRANSLATE TO POSITIVE
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      CHARACTER*4 IFORSW
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*1 IBASLC
C
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
C----------------------------------------------------------------
C
      REAL Y(*)
      REAL X(*)
      REAL XIDTEM(*)
      REAL TEMP1(*)
      REAL TEMP2(*)
      REAL TEMP3(*)
      REAL YT(*)
      REAL YM(*)
C
      REAL D(*)
      REAL BA(*)
      REAL BL(*)
      REAL SU(*)
      REAL T(*)
      REAL P(*)
      REAL LO(*)
      REAL LU(*)
      REAL S(*)
      REAL UN(*)
      REAL TO(*)
      REAL UA(*)
      REAL SI(*)
      REAL B1(*)
      REAL YTT(*)
      REAL YVAR(*)
      REAL PID(*)
C
      INTEGER NS(*)
      INTEGER MU(*)
      INTEGER NN(*)
C
      REAL ZERO
      REAL EPS
C
      DOUBLE PRECISION DSUM
C
      CHARACTER*4 IOP
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER(MAXLIN=4)
      PARAMETER(MAXROW=30)
      PARAMETER(MAXCOL=8)
      CHARACTER*4  ALIGN(MAXCOL)
      CHARACTER*4  VALIGN(MAXCOL)
      INTEGER      IDIGIT(MAXCOL)
      INTEGER      NTOT(MAXCOL)
      INTEGER      NCTEXT(MAXROW)
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*40 ITITL9
      CHARACTER*40 ITITLE
      CHARACTER*60 ITTEXT
      CHARACTER*40 ITITL2(MAXLIN,MAXCOL)
      INTEGER      NCTIT2(MAXLIN,MAXCOL)
      INTEGER      IWHTML(MAXCOL)
      INTEGER      IWRTF(MAXCOL)
      REAL         AMAT(MAXROW,MAXCOL)
      REAL         AVALUE(MAXROW)
C
      LOGICAL IFLAGA
      LOGICAL IFLAGB
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*4 IRTFMD
      COMMON/COMRTF/IRTFMD
C
      LOGICAL IFLAGY
      LOGICAL IFLAGZ
C
      INCLUDE 'DPCOP2.INC'
C
      DATA ZERO /0.0/
      DATA EPS  /0.1E-7/
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPLO'
      ISUBN2='D2  '
C
      NUMZER=0
      NUMPOS=0
      MINPOS=0
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLOD2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)N,ALPHA,BETA,GAMMA,PA
   52   FORMAT('N,ALPHA,BETA,GAMMA,PA = ',I8,4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)THRPER,CVUSER
   53   FORMAT('THRPER,CVUSER = ',2G15.7)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,56)I,Y(I),X(I)
   56     FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               **  1) NEGATIVE VALUES FOR THE RESPONSE   **
C               **     ARE CONSIDERED ERRORS.             **
C               **  2) IF THERE IS NO "ZERO" MASS VALUE,  **
C               **     CONSIDER THIS AN ERROR FOR NOW.    **
C               ********************************************
C
      ISTEPN='1.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOD2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(N.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN LIMITS OF DETECTION--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,102)
  102   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE LIMITS OF ',
     1         'DETECTION')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,103)N
  103   FORMAT('      IS LESS THAN 2;  THE ENTERED NUMBER OF ',
     1         'OBSERVATIONS = ',I8)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     2018/08: IF NEGATIVE DATA ENCOUNTERED FOR THE RESPONSE VALUE,
C              DON'T TREAT AS AN ERROR.  ADD AN APPROPRIATE CONSTANT
C              TO THE DATA, PERFORM THE LOD ANALYSIS, AND THEN SUBTRACT
C              THE CONSTANT FROM THE CV VALUE.
C
      YMIN=CPUMAX
      DO200I=1,N
        IF(ABS(X(I)).LE.EPS)X(I)=ZERO
        YMIN=MIN(YMIN,Y(I))
        IF(Y(I).LT.ZERO)THEN
CCCCC     WRITE(ICOUT,999)
CCCCC     CALL DPWRST('XXX','WRIT')
CCCCC     WRITE(ICOUT,101)
CCCCC     CALL DPWRST('XXX','WRIT')
CCCCC     WRITE(ICOUT,202)
CC202     FORMAT('      A NEGATIVE VALUE WAS ENCOUNTERED FOR ',
CCCCC1           'THE MEASURED VALUE')
CCCCC     CALL DPWRST('XXX','WRIT')
CCCCC     WRITE(ICOUT,204)I,Y(I)
  204     FORMAT('      ROW ',I8,' HAS THE VALUE ',G15.7)
CCCCC     CALL DPWRST('XXX','WRIT')
CCCCC     IERROR='YES'
CCCCC     GOTO9000
        ELSEIF(X(I).LT.ZERO)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,212)
  212     FORMAT('      A NEGATIVE VALUE WAS ENCOUNTERED FOR ',
     1           'THE MASS VALUE')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,204)I,X(I)
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ENDIF
  200 CONTINUE
C
      IF(YMIN.LT.0.0)THEN
        YCONST=ABS(YMIN) + 1.0
        DO208I=1,N
          Y(I)=Y(I) + YCONST
  208   CONTINUE
      ELSE
        YCONST=0.0
      ENDIF
C
C               ********************************************
C               **  STEP 1B-                              **
C               **  CHECK FOR:                            **
C               **  1) ARE THERE ANY MEASUREMENTS FOR     **
C               **     MASS = 0?  IF NOT, THIS IS AN      **
C               **     ERROR (AT LEAST FOR NOW).          **
C               **  2) ARE ALL MEASUREMENTS FOR MASS = 0  **
C               **     EQUAL TO ZERO?  IF SO, USE THE     **
C               **     "CLEAN" ALGORITHM.                 **
C               **     IF THERE ARE LESS THAN 3 NON-ZERO  **
C               **     MEASUREMENTS FOR MASS = 0, THEN    **
C               **     REMOVE THESE FROM THE DATA AND USE **
C               **     THE CLEAN ALGORITHM.               **
C               ********************************************
C
C     MAY 2009: MICHAEL VERKOUTEREN HAS SUGGESTED THE FOLLOWING
C               MINIMUM REQUIREMENTS:
C
C               1) 10 OR MORE BLANK REPITITIONS
C               2) AT LEAST 3 LEVELS
C               3) AT LEAST 10 REPITITIONS FOR EACH LEVEL
C
C     JUNE 2009: MICHAEL VERKOUTEREN HAS MADE THE FOLLOWING ADDITIONAL
C                SUGGESTIONS:
C
C                1) IF > 90% OF MEASUREMENTS AT HIGHTEST LEVEL
C                   ARE ZERO, THEN REPORT ERROR.
C                2) IF DATA IN ALL LEVELS IS EITHER ALL ZERO'S OR
C                   ALL NON-ZEROS, THEN RECOMMEND MEASUREMENTS
C                   AT MASS VALUE NEAR MID-POINT TWO SUCCESSIVE
C                   MASS LEVELS WHERE LOWER IS ALL ZERO MEASUREMENTS
C                   AND UPPER IS ALL NON-ZERO MEASUREMENTS.
C
C                   09/2010: FOR CASE 2), MICHAEL WANTS THE
C                            RECOMMENDATION PRINTED, BUT HE STILL
C                            WANTS THE RESULTS REPORTED.
C
C     AUGUST 2009: MICHAEL VERKOUTEREN ADDED ADDITIONAL CRITIERION.
C
C                1) IF > 10% OF MEASUREMENTS ARE LESS THAN THE
C                   CRITICAL VALUE, THEN WE NEED TO REPORT AN
C                   ERROR THAT DATA NEEDS TO BE TAKEN AT A HIGHER
C                   LEVEL.
C
      ISTEPN='1.2'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOD2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      CALL DISTIN(X,N,IWRITE,XIDTEM,NDIST,IBUGA3,IERROR)
      CALL SORT(XIDTEM,NDIST,XIDTEM)
C
      IF(XIDTEM(1).NE.ZERO)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1002)
 1002   FORMAT('      THE LIMIT OF DETECTION COMMAND REQUIRES')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1003)
 1003   FORMAT('      SOME MEASUREMENTS FOR MASS = 0.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1004)XIDTEM(1)
 1004   FORMAT('      THE MINIMUM MASS VALUE  = ',G15.7)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      IF(NDIST.LT.3)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1012)
 1012   FORMAT('      AT LEAST THREE DISTINCT LEVELS REQUIRED.')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1013)NDIST
 1013   FORMAT('      THE NUMBER OF LEVELS DETECTED WAS ',I5)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ELSEIF(NDIST.EQ.N)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1014)
 1014   FORMAT('      THE NUMBER OF DISTINCT MASS VALUES IS EQUAL TO ',
     1         'THE SAMPLE SIZE')
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     MAY 2009: MOVE CODE TO DETERMINE THE NUMBER OF REPITITIONS
C               FOR EACH LEVEL HERE.  WE NEED THIS TO DETERMINE
C               IF WE HAVE SUFFICIENT REPITITIONS FOR EACH LEVEL
C               AND TO DETERMINE WHETHER WE NEED THE CLEAN OR
C               DIRTY CASE.
C
      CALL SORTC(X,Y,N,X,TEMP1)
      DO1018I=1,N
        Y(I)=TEMP1(I)
 1018 CONTINUE
C
C     MAY 2009: CHECK FOR MINIMUM NON-ZERO VALUE. DETERMINE
C               IF THIS IS AT A ZERO MASS CASE OR NOT.  THIS
C               IS USED TO DECIDE HOW TO COMPUTE H IN CODE
C               BELOW.
C
      YMIN=CPUMAX
      YMINMS=CPUMAX
      DO1022I=1,N
        IF(Y(I).GT.0.0)THEN
          IF(Y(I).LT.YMIN)THEN
            YMIN=Y(I)
            YMINMS=X(I)
          ENDIF
        ENDIF
 1022 CONTINUE
C
C     JULY 2009: DETERMINE "SECOND SMALLEST VALUE" FROM ALL THE
C                DATA, NOT JUST THE MASS = 0 DATA.
C
      YMIN2=CPUMAX
      DO1024I=1,N
        IF(Y(I).GT.YMIN)THEN
          IF(Y(I).LT.YMIN2)THEN
            YMIN2=Y(I)
          ENDIF
        ENDIF
 1024 CONTINUE
C
      DO1030I=1,NDIST
C
        HOLD=XIDTEM(I)
        NREP=0
        NZERO=0
        NPLUS=0
C
        DO1040J=1,N
          IF(X(J).EQ.HOLD)THEN
            NREP=NREP+1
            IF(Y(J).LE.0.0)THEN
              NZERO=NZERO+1
            ELSE
              NPLUS=NPLUS+1
            ENDIF
          ENDIF
 1040   CONTINUE
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
          WRITE(ICOUT,1041)I,XIDTEM(I),NREP,NZERO,NPLUS
 1041     FORMAT('I,XIDTEM(I),NREP,NZERO,NPLUS=',I5,G15.7,3I5)
          CALL DPWRST('XXX','WRIT')
        ENDIF
C
        IF(NREP.LT.10)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1032)
 1032     FORMAT('      AT LEAST 10 REPITITIONS ARE REQUIRED FOR ',
     1           'EACH LEVEL.')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,1033)I,HOLD,NREP
 1033     FORMAT('      LEVEL ',I5,' (= ',G15.7,') ONLY HAS ',I5,
     1           'REPITITIONS.')
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ELSEIF(I.EQ.1)THEN
          NUMZER=NZERO
          NUMPOS=NPLUS
        ENDIF
C
 1030 CONTINUE
C
C     THE THRESHOLD FOR USING THE "CLEAN" ALGORITHM IS THAT
C     >= 90% OF THE BLANK CASES MUST BE ZERO.
C
C     SET AN ADDITIONAL THRESHOLD OF >= 50% OF BLANKS ARE
C     NON-ZERO.
C
C     SET IFLAG = 0 FOR CLEAN CASE, IFLAG = 1 FOR DIRTY CASE,
C     AND IFLAG = 2 FOR CASE WHERE WE NEED TO CHECK FOR SUFFICIENT
C     NUMBER OF BLANKS (REQUIRE AT LEAST 20).
C
      ATEMP=REAL(NUMZER+NUMPOS)*0.9 + 0.000001
      MINZER=INT(ATEMP)
      ATEMP=REAL(NUMZER+NUMPOS)*0.5 + 0.000001
      MINPOS=INT(ATEMP)
      IF(NUMZER.GE.MINZER)THEN
        IFLAG=0
      ELSEIF(NUMPOS.GE.MINPOS)THEN
        IFLAG=1
      ELSE
        IFLAG=2
      ENDIF
C
C     CHECK FOR SUFFICIENT NUMBER OF BLANK CASES
C
      IF(IFLAG.EQ.2 .AND. NUMZER+NUMPOS.LT.20)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1052)
 1052   FORMAT('      WHEN THE PERCENTAGE OF NON-ZERO MEASUREMENTS ',
     1           'FOR BLANKS')
          CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1053)
 1053   FORMAT('      IS LESS THAN 50%, AT LEAST 20 BLANK ',
     1         'MEASUREMENTS ARE REQUIRED.')
        CALL DPWRST('XXX','WRIT')
        NADD=20 - (NUMZER+NUMPOS)
        WRITE(ICOUT,1054)NADD
 1054   FORMAT('      AT LEAST ',I5,' ADDITIONAL BLANK MEASUREMENTS ',
     1         'ARE REQUIRED.')
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
C     FOR CLEAN CASE, REMOVE ANY POSITIVE MEASUREMENTS
C
      IF(IFLAG.EQ.0 .AND.NUMPOS.GT.0)THEN
        ICNT=0
        DO1065I=1,N
          IF(X(I).EQ.XIDTEM(1) .AND. Y(I).GT.ZERO)THEN
            GOTO1065
          ELSE
            ICNT=ICNT+1
            X(ICNT)=X(I)
            Y(ICNT)=Y(I)
          ENDIF
 1065   CONTINUE
        N=ICNT
CCCCC   WRITE(ICOUT,999)
CCCCC   CALL DPWRST('XXX','WRIT')
CCCCC   WRITE(ICOUT,1031)NUMPOS
C1031   FORMAT('***** THE ',I5,' POSITIVE MEASUREMENTS FOR THE ',
CCCCC1         'ZERO MASS CASE')
CCCCC   CALL DPWRST('XXX','WRIT')
CCCCC   WRITE(ICOUT,1033)
C1033   FORMAT('      WILL NOT BE USED IN THE ANALYSIS.')
CCCCC   CALL DPWRST('XXX','WRIT')
      ENDIF
C
      IF(IFLAG.EQ.0)THEN
        CALL DPLOD3(Y,X,N,
     1              XIDTEM,TEMP1,YT,YM,
     1              D,BA,BL,SU,T,P,LO,LU,S,UN,TO,UA,SI,B1,YTT,YVAR,
     1              NS,MU,NN,
     1              ALPHA,BETA,GAMMA,PA,THRPER,CVUSER,
     1              ALOD,ALODSE,CV,ALODLU,
     1              IVARID,IVARI2,PID,
     1              IWRITE,MAXOBV,
     1              IFORSW,YMIN,YMIN2,
     1              ICASAN,ICAPSW,ICAPTY,
     1              ISUBRO,IBUGA3,IERROR)
        GOTO9000
      ENDIF
C
      IF(THRPER.EQ.CPUMIN)THRPER=0.9
C
C               ***********************************************
C               **  STEP 2.1--                               **
C               **  PERFORM THE BASIC CALCULATIONS.          **
C               ***********************************************
C
      ISTEPN='2.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOD2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IWRITE='OFF'
C
C     ALPHA   = PROBABILITY OF FALSE POSITIVE READINGS
C               (NO SIGNIFICANCE, BUT ALARM SOUNDS)
C     BETA    = PROBABILITY OF FALSE NEGATIVE READINGS
C               (SIGNAL, BUT NO ALARM)
C     GAMMA   = DEFINES CONFIDENCE LIMIT FOR LOD
C               (ALSO DEFINES THE CONFIDENCE FOR THE TOLERANCE
C               LIMIT)
C     PA      = DEFINES THE COVERAGE FACTOR FOR THE TOLERANCE
C               LIMIT
C
      CALL NORPPF(1.0-ALPHA,ZA)
C
CCCCC NOTE 6/2010: ACCORDING TO ANDREW, THE ZA TERM SHOULD NOT
CCCCC              BE SQUARED.
CCCCC ZA=ZA**2
CCCCC AZ=ZA**2
      AZ=ZA
      CALL NORPPF(1.0-BETA,ZB)
      CALL NORPPF(1.0-PA,ZP)
      GA=GAMMA
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
        ISTEPN='2.2'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,61)
   61   FORMAT('***** FROM DPLOD2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,62)ZA,GA,ZB,ZP
   62   FORMAT('ZA,GA,ZB,ZP = ',4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     COMPUTE:
C
C       1)  NUMBER OF BLANK (ZERO) MASS VALUES           (M)
C       2)  NUMBER OF DISTINCT MASS VALUES               (NDIST)
C       3)  SAMPLE SIZES FOR EACH GROUP                  (NS)
C       4)  NUMBER OF ZERO RESPONSES IN EACH GROUP       (MU)
C       5)  NUMBER OF NON-ZERO RESPONSES IN EACH GROUP   (NN)
C       6)  MEAN OF NON-ZERO RESPONSES IN EACH GROUP     (YM)
C
C     FOR THE MASS = 0 CASE, COMPUTE SOME STATISTICS
C
      NFINAL=0
      IFLAGY=.FALSE.
      IFLAGZ=.TRUE.
      IALLZ=-99
      IALLP=-99
C
      DO1100I=1,NDIST
C
        D(I)=0.0
        BL(I)=0.0
        SU(I)=0.0
        T(I)=0.0
        P(I)=0.0
        MU(I)=0
        NN(I)=0
        IF(I.GT.1)THEN
          LO(I)=0.0
          LU(I)=0.0
          BA(I)=0.0
          UN(I)=0.0
          S(I)=0.0
          TO(I)=0.0
        ELSE
          LO(I)=99.0
          LU(I)=99.0
          BA(I)=99.0
          UN(I)=99.0
          S(I)=99.0
          TO(I)=99.0
        ENDIF
C
        NZERO=0
        NPLUS=0
        NABOVE=0
        NBELOW=0
        HOLD=XIDTEM(I)
        DSUM=0.0D0
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
          ISTEPN='2.30'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,11108)I,HOLD
11108     FORMAT('11108: I,HOLD = ',I6,G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        DO1110J=1,N
          IF(X(J).EQ.HOLD)THEN
            IF(Y(J).LE.0.0)THEN
              NZERO=NZERO+1
            ELSE
              NPLUS=NPLUS+1
              TEMP1(NPLUS)=Y(J)
              DSUM=DSUM + DBLE(Y(J))
              IF(I.GT.1 .AND. TEMP1(NPLUS).GE.CV)NABOVE=NABOVE+1
            ENDIF
C
            IF(I.EQ.NDIST)THEN
              IF(Y(J).LT.CV)NBELOW=NBELOW+1
            ENDIF
C
            IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
              WRITE(ICOUT,11109)J,X(J),Y(J),NZERO,NPLUS
11109         FORMAT('11109: J,X(J),Y(J),NZERO,NPLUS = ',I6,2G15.7,2I6)
              CALL DPWRST('XXX','BUG ')
            ENDIF
C
          ENDIF
C
 1110   CONTINUE
        NTOTZ=NZERO+NPLUS
        MU(I)=NZERO
        NN(I)=NPLUS
        NS(I)=NTOTZ
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
          ISTEPN='2.3'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1111)I,NZERO,NPLUS,MU(I),NN(I)
 1111     FORMAT('AFTER 1110: I,NZERO,NPLUS,MU(I),NN(I) = ',5I6)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        IF(NZERO.GE.1 .AND. NPLUS.GE.1)IFLAGZ=.FALSE.
        IF(IFLAGZ)THEN
          IF(NZERO.EQ.NTOTZ)IALLZ=I
          IF(NPLUS.EQ.NTOTZ .AND. IALLP.LT.0)IALLP=I
        ENDIF
        IF(I.EQ.NDIST)THEN
          NTEMPZ=INT(0.90*REAL(NTOTZ)+0.1)
          NTEMPB=INT(0.10*REAL(NTOTZ)+0.1)
          IF(NZERO.GT.NTEMPZ)THEN
            IFLAGY=.TRUE.
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,101)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7071)
 7071       FORMAT('      More than 90% of the measurements at the')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7072)
 7072       FORMAT('      highest mass level are zero.')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7073)
 7073       FORMAT('      The LOD analysis will not be performed.')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            IERROR='YES'
            GOTO9000
          ELSEIF(NBELOW.GT.NTEMPB)THEN
            IFLAGY=.TRUE.
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,101)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7076)
 7076       FORMAT('      More than 10% of the measurements at the')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7077)
 7077       FORMAT('      highest mass level are less than the ',
     1             'critical value..')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7073)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7078)
 7078       FORMAT('      It is recommended that you take ',
     1             'measurements at a higher mass level.')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            IERROR='YES'
            GOTO9000
          ENDIF
        ELSEIF(I.EQ.2)THEN
          AVAL=REAL(NABOVE)/REAL(NTOTZ)
          IF(AVAL.GT.0.90)THEN
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7180)
 7180       FORMAT('***** WARNING IN LIMITS OF DETECTION--')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7181)
 7181       FORMAT('      More than 90% of the measurements at the ',
     1             'lowest non-zero')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7183)
 7183       FORMAT('      mass level are greater than the critical ',
     1             'value.')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7185)
 7185       FORMAT('      Although the LOD analysis will still be ',
     1             'performed,')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7187)
 7187       FORMAT('      it is recommended that measurements be ',
     1             'taken')
            CALL DPWRST('XXX','WRIT')
            AJUNK=XIDTEM(2)/2.0
            WRITE(ICOUT,7189)AJUNK
 7189       FORMAT('      in the vicinity of ',F12.3)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
          ENDIF
        ENDIF
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
          ISTEPN='2.3B'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,11112)I,NZERO,NPLUS,MU(I),NN(I)
11112     FORMAT('AFTER 7189: I,NZERO,NPLUS,MU(I),NN(I) = ',5I6)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        ATEMP=REAL(NTOTZ)*THRPER + 0.00001
        MINTHR=INT(ATEMP)
        IF(NABOVE.GE.MINTHR)THEN
          IF(NFINAL.EQ.0)THEN
            NFINAL=I
          ELSE
            NFINAL=MIN(I,NFINAL)
          ENDIF
        ELSE
          NFINAL=0
        ENDIF
        IF(NN(I).GT.0)THEN
          YM(I)=REAL(DSUM/DBLE(NN(I)))
          CALL SORT(TEMP1,NPLUS,TEMP1)
        ELSE
          YM(I)=0.0
        ENDIF
CCCCC   IF(I.EQ.1 .AND. NPLUS.LE.4)THEN
CCCCC     CALL MEDIAN(TEMP1,NPLUS,IWRITE,TEMP2,MAXOBV,ZMED,
CCCCC1                IBUGA3,IERROR)
CCCCC     HH=ZMED
CCCCC   ELSEIF(I.EQ.1)THEN
CCCCC     HH=2.0*TEMP1(1) - TEMP1(2)
CCCCC   ENDIF
        IF(I.EQ.1)THEN
          IF(YMINMS.LE.0.0)THEN
            HH=YMIN
          ELSE
CCCCC       HH=2.0*YMIN - TEMP1(2)
            HH=2.0*YMIN - YMIN2
          ENDIF
C
          NUMPAD=NTOTZ-NPLUS
          ICNT=0
          IF(NUMPAD.GT.0)THEN
            DO1112II=1,NUMPAD
              ICNT=ICNT+1
              TEMP3(ICNT)=0.0
 1112       CONTINUE
          ENDIF
          DO1113II=1,NPLUS
            ICNT=ICNT+1
            TEMP3(ICNT)=TEMP1(II)
 1113     CONTINUE
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
            ISTEPN='2.3C'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,11113)I,NZERO,NPLUS,MU(I),NN(I)
11113       FORMAT('AFTER 7189: I,NZERO,NPLUS,MU(I),NN(I) = ',5I6)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
CCCCC     P100=95.0
          P100=(1.0 - ALPHA)*100.
          CALL PERCEN(P100,TEMP3,NTOTZ,IWRITE,TEMP2,MAXOBV,CV1,
     1                IBUGA3,IERROR)
        ENDIF
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
          ISTEPN='3.1'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1161)
 1161     FORMAT('***** DPLOD2: AFTER COMPUTE SAMPLE SIZES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1162)I,MU(I),NN(I),NS(I),YM(I)
 1162     FORMAT('I,MU(I),NN(I),NS(I),YM(I) = ',4I8,G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1163)HH,THRPER,NABOVE,NFINAL,MINTHR,CV
 1163     FORMAT('HH,THRPER,NABOVE,NFINAL,MINTHR,CV = ',
     1           2F10.5,3I8,G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C       STATISTICS FOR MASS = 0 VALUES
C
        IF(I.EQ.1)THEN
C
C         IF TOO FEW POSITIVE VALUES, THEN CLEAN CASE IS CALLED.
C
CCCCC     IF(NN(I).LT.2)THEN
CCCCC       WRITE(ICOUT,999)
CCCCC       CALL DPWRST('XXX','WRIT')
CCCCC       WRITE(ICOUT,101)
CCCCC       CALL DPWRST('XXX','WRIT')
CCCCC       WRITE(ICOUT,1002)
CCCCC       CALL DPWRST('XXX','WRIT')
CCCCC       WRITE(ICOUT,1023)
C1023       FORMAT('      AT LEAST TWO NON-ZERO MEASUREMENTS FOR ',
CCCCC1             'MASS = 0.')
CCCCC       CALL DPWRST('XXX','WRIT')
CCCCC       WRITE(ICOUT,1024)NN(I)
C1024       FORMAT('      ONLY ',I8,' NON-ZERO MEASUREMENTS FOUND.')
CCCCC       CALL DPWRST('XXX','WRIT')
CCCCC       IERROR='YES'
CCCCC       GOTO9000
CCCCC     ENDIF
          YM1=YM(I)
          CALL VAR(TEMP1,NPLUS,IWRITE,VYN,IBUGA3,IERROR)
          NU1=NN(I)-1
          YV=REAL(NU1)*VYN/REAL(NN(I))
          CALL NORPPF((REAL(MU(I))+0.5)/(REAL(NS(I))+1.0),ZZ)
          QQ=MAX(ZA,ZZ)
          FT=0.5*ZZ*(YM(1)-HH)
          SIG0=FT + SQRT((FT**2) + YV + (YM(I)-HH)**2)
          CV2=YM1 + QQ*SIG0
          AF=HH - SIG0*ZZ
          IF(NU1.GE.1)THEN
            CALL CHSPPF(GA,NU1,GB1)
            GB=SQRT(REAL(NU1)/GB1)
            SU1=GB*SIG0
          ELSE
            GB=CPUMIN
            SU1=CPUMIN
          ENDIF
          SN=((QQ*SIG0)**2)/REAL(NN(I))
          IF(CVUSER.GT.0.0)THEN
            CV=CVUSER
          ELSE
            IF(ILODCV.EQ.'QUAN')THEN
              CV=CV1
            ELSE
              CV=CV2
            ENDIF
          ENDIF
C
          IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
            ISTEPN='3.1'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1171)
 1171       FORMAT('***** DPLOD2: MASS = 0 CASE')
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1172)HH,YM(1),VYN,YV,ZZ
 1172       FORMAT('HH,YM(1),VYN,YV,ZZ = ',5G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1173)QQ,FT,SIG0,AF,GA
 1173       FORMAT('QQ,FT,SIG0,AF,GA = ',5G15.7)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,1174)NU1,GB1,GB,SU1,SN
 1174       FORMAT('NU1,GB1,GB,SU1,SN = ',I8,4G15.7)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
        ENDIF
C
C       COMPUTE MEAN OF Y - AF FOR NON-ZERO VALUES
C
        IF(NPLUS.GE.1)THEN
          CALL SD(TEMP1,NPLUS,IWRITE,XVAR,IBUGA3,IERROR)
        ELSE
          XVAR=0.0
        ENDIF
        YVAR(I)=XVAR
        SUM=0.0
        DO1180J=1,NPLUS
          TEMP1(J)=TEMP1(J) - AF
          SUM=SUM + TEMP1(J)**2
 1180   CONTINUE
        IF(NPLUS.GE.1)THEN
          CALL MEAN(TEMP1,NPLUS,IWRITE,YTTM,IBUGA3,IERROR)
        ELSE
          YTTM=0.0
        ENDIF
        YT(I)=YTTM
        YTT(I)=SUM
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
          ISTEPN='3.3'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1192)I,YT(I),YTT(I)
 1192     FORMAT('I,YT(I),YTT(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
 1100 CONTINUE
C
      DO2000J=2,NDIST
C
        XXNN=0.0
        BAK=0.0
        SYY2=0.0
        ITN=0
        DO2010I=2,J
          XXNN=XXNN + XIDTEM(I)**2*REAL(NN(I))
          BAK=BAK + XIDTEM(I)*YT(I)*REAL(NN(I))
          SYY2=SYY2 + YTT(I)
          ITN=ITN + NN(I)
 2010   CONTINUE
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
          ISTEPN='4.1'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2061)
 2061     FORMAT('***** DPLOD2: AT 2010')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2062)J,XXNN,BAK,SYY2,ITN
 2062     FORMAT('J,XXNN,BAK,SYY2,ITN = ',I8,3G15.7,I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2063)J,SIG0,ZB,QQ,GA
 2063     FORMAT('J,SIG0,ZB,QQ,GA = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
CCCCC   MAY 2009: IF B1K1 IS NEGATIVE, THEN VALUES COMPUTED
CCCCC             FOR LU(J) AND TO(J) TEND TO BE NONSENSE.
CCCCC             SO IN THIS CASE, SET THEM TO "CPUMIN" (THESE
CCCCC             WILL BE PRINTED AS "**").
CCCCC
CCCCC   JULY 2009: IF GB (COMPUTED ABOVE) = CPUMIN, THEN LIKEWISE
CCCCC              SET LU(J) AND TO(J) TO CPUMIN.
C
        ITN=ITN-1
        IF(GB.EQ.CPUMIN .OR. ITN.LT.1)THEN
          BA(J)=CPUMIN
          SI(J)=CPUMIN
          LO(J)=CPUMIN
          UN(J)=CPUMIN
          LU(J)=CPUMIN
          TO(J)=CPUMIN
        ELSE
          DD=1.0/SQRT(XXNN)
          BA(J)=BAK/XXNN
          UA(J)=(SYY2 - BA(J)*BAK)/REAL(ITN)
          SI(J)=SQRT(UA(J))
          CALL TPPF(1.0 - 0.5*GA,REAL(ITN),TTK)
          T(J)=TTK
          B1K1=BA(J)-(DD*T(J)*SI(J))
          B1K2=0.000001
          B1(J)=MAX(B1K1,0.000001)
          CALL CHSPPF(GA/2.0,ITN,PPK)
          P(J)=PPK
          SU(J)=SI(J)*SQRT(REAL(ITN)/P(J))
          LO(J)=(QQ*SIG0 + ZB*SI(J))/BA(J)
          LU(J)=(QQ*SU1 + ZB*SU(J))/B1(J)
          S(J)=(SN + (AZ*UA(J)/REAL(ITN)) + UA(J)*(DD**2)*
     1         (LO(J)**2))/BA(J)/BA(J)
          UN(J)=SQRT(S(J))
          TO(J)=(QQ*SU1 + (ZB+ZP)*SU(J))/B1(J)
C
          IF(B1(J).EQ.B1K2)THEN
            LU(J)=CPUMIN
            TO(J)=CPUMIN
          ENDIF
C
        ENDIF
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
          ISTEPN='4.2'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2072)J,DD,BA(J),UA(J),SI(J),TTK,B1K1
 2072     FORMAT('J,DD,BA(J),UA(J),SI(J),TTK,B1K1 = ',I8,6G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2073)J,B1(J),P(J),SU(J),LO(J)
 2073     FORMAT('J,B1(J),P(J),SU(J),LO(J) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2074)J,LU(J),S(J),UN(J),TO(J)
 2074     FORMAT('J,LU(J),S(J),UN(J),TO(J) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C
 2000 CONTINUE
C
      SI(1)=SIG0
C
C     NOTE 4/2009: CHECK IF MORE BLANK MEASUREMENTS NEEDED.
C
C     NOTE 5/2009: THIS RULE CHANGED SO THAT A MAXIMUM OF 20
C                  BLANKS CALLED FOR ABOVE.
C
CCCCC DELTA=0.8
CCCCC M0=NN(1)
CCCCC CALL CHSPPF(DELTA,M0,ATEMP)
CCCCC STEMP=(SIG0/ATEMP) - 1.0
CCCCC IF(STEMP.LE.0.0)THEN
CCCCC   IFLAG9=0
CCCCC   NFINAL=NFINAL+1
CCCCC   IF(NFINAL.GT.NDIST)NFINAL=NDIST
CCCCC   ALOD=LO(NFINAL)
CCCCC   ALODSE=UN(NFINAL)
CCCCC ELSE
CCCCC   IFLAG9=1
CCCCC   AMORE=REAL(M0)*STEMP
CCCCC   NMORE=INT(AMORE+0.99)
CCCCC ENDIF
C
      IF(NFINAL.EQ.0)NFINAL=NDIST
      IFLAG9=0
      ALOD=LO(NFINAL)
      ALODSE=UN(NFINAL)
      ALODLU=LU(NFINAL)
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
        ISTEPN='4.3'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2082)NFINAL
 2082   FORMAT('NFINAL,ALOD,ALODSE = ',I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IVAL1=INT(100.0*(1.0 - GAMMA)+0.1)
      IVAL2=INT(100.0*(1.0 - GAMMA)+0.1)
      IVAL3=INT(100.0*(1.0 - PA)+0.1)
C
C               **************************************************
C               **  STEP 5--                                    **
C               **   OPEN THE STORAGE FILES, WRITE RELEVANT     **
C               **   QUANTITIES TO FILE, AND THEN CLOSE         **
C               **   STORAGE FILES.                             **
C               **************************************************
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOD2')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ILODOF.EQ.'OFF')GOTO3019
C
      IOP='OPEN'
      IFLG1=1
      IFLG2=1
      IFLG3=0
      IFLG4=0
      IFLG5=0
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      DO3010I=1,NDIST
        WRITE(IOUNI1,3012)XIDTEM(I),REAL(MU(I)),REAL(NN(I)),YT(I),
     1                    YVAR(I)
        WRITE(IOUNI2,3012)XIDTEM(I),BA(I),SI(I),LO(I),UN(I),LU(I),
     1                    TO(I)
 3012   FORMAT(7E15.7)
 3010 CONTINUE
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
 3019 CONTINUE
C
      NUMDIG=4
      IF(IFORSW.EQ.'1')NUMDIG=2
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=10
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      CALL DPCONA(92,IBASLC)
C
      IF(YCONST.GT.0.5)THEN
        CV=CV - YCONST
      ENDIF
C
C     WRITE "FINAL" ESTIMATES SEPARATELY
C
C     2014/03: TO BE CONSISTENT WITH ASTM E2677 STANDARD, CHANGE
C              "Scxx.x"  to   "CVxx.x" AND CHANGE  "LDxx"  TO  "LODxx".
C
      IF(IPRINT.EQ.'ON')THEN
C
        ITITLE='Limits of Detection Analysis'
        NCTITL=28
        ITITL9='(Based on ASTM E-2677 Standard)'
        NCTIT3=31
C
        ICNT=1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=0
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Response Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Mass Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(2)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(2)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        IF(PID(3).NE.CPUMIN)THEN
          ICNT=ICNT+1
          ITEXT(ICNT)='Group-ID Variable: '
          WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(3)(1:4)
          WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(3)(1:4)
          NCTEXT(ICNT)=27
          AVALUE(ICNT)=PID(3)
          IDIGIT(ICNT)=0
        ENDIF
C
        ICNT=ICNT+1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=0
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        IF(IFLAG9.EQ.0)THEN
          ICNT=ICNT+1
          ITEXT(ICNT)='Final Estimate:'
          NCTEXT(ICNT)=15
          AVALUE(ICNT)=0.0
          IDIGIT(ICNT)=-1
          IF(ILODPC.EQ.'ON')THEN
            ICNT=ICNT+1
            IF(ALPHA.EQ.0.05)THEN
              ITEXT(ICNT)='Critical Value (Cv95):'
              NCTEXT(ICNT)=22
            ELSEIF(ALPHA.EQ.0.10)THEN
              ITEXT(ICNT)='Critical Value (Cv90):'
              NCTEXT(ICNT)=22
            ELSEIF(ALPHA.EQ.0.01)THEN
              ITEXT(ICNT)='Critical Value (Cv99):'
              NCTEXT(ICNT)=22
            ELSE
              ITEXT(ICNT)='Critical Value (Cvxx.x):'
              ATEMP=100.*(1.0 - ALPHA)
              WRITE(ITEXT(ICNT)(19:22),'(F4.1)')ATEMP
              NCTEXT(ICNT)=24
            ENDIF
            AVALUE(ICNT)=CV
            IDIGIT(ICNT)=NUMDIG
          ENDIF
C
          ICNT=ICNT+1
          IF(ALPHA.EQ.0.05)THEN
            ITEXT(ICNT)='Detection Limit (LOD95):'
            NCTEXT(ICNT)=24
          ELSEIF(ALPHA.EQ.0.10)THEN
            ITEXT(ICNT)='Detection Limit (LOD90):'
            NCTEXT(ICNT)=24
          ELSEIF(ALPHA.EQ.0.01)THEN
            ITEXT(ICNT)='Detection Limit (LOD99):'
            NCTEXT(ICNT)=24
          ELSE
            ITEXT(ICNT)='Detection Limit (LODxx.x):'
            NCTEXT(ICNT)=26
            ATEMP=100.*(1.0 - ALPHA)
            WRITE(ITEXT(ICNT)(21:24),'(F4.1)')ATEMP
          ENDIF
          AVALUE(ICNT)=ALOD
          IDIGIT(ICNT)=NUMDIG
C
          ICNT=ICNT+1
          IF(GAMMA.EQ.0.05)THEN
            ITEXT(ICNT)='95% Upper Confidence Limit on LOD:'
            NCTEXT(ICNT)=34
          ELSEIF(ALPHA.EQ.0.10)THEN
            ITEXT(ICNT)='90% Upper Confidence Limit on LOD:'
            NCTEXT(ICNT)=34
          ELSEIF(ALPHA.EQ.0.01)THEN
            ITEXT(ICNT)='99% Upper Confidence Limit on LOD:'
            NCTEXT(ICNT)=34
          ELSE
            ITEXT(ICNT)='xx.x% Upper Confidence Limit on LOD:'
            NCTEXT(ICNT)=36
            ATEMP=100.*(1.0 - GAMMA)
            WRITE(ITEXT(ICNT)(1:4),'(F4.1)')ATEMP
          ENDIF
          AVALUE(ICNT)=ALODLU
          IDIGIT(ICNT)=NUMDIG
C
          NUMROW=ICNT
          DO4210I=1,NUMROW
            NTOT(I)=15
 4210     CONTINUE
C
          IFRST=.TRUE.
          ILAST=.TRUE.
C
          ISTEPN='42A'
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOD2')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
          CALL DPDTA1(ITITLE,NCTITL,ITITL9,NCTIT3,ITEXT,NCTEXT,
     1                AVALUE,IDIGIT,
     1                NTOT,NUMROW,
     1                ICAPSW,ICAPTY,ILAST,IFRST,
     1                ISUBRO,IBUGA3,IERROR)
C
          ISTEPN='42B'
          IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'GRU2')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        ELSEIF(IFLAGZ)THEN
          ATEMP=0.0
          NUMDIG=-1
          ISIZE=0
          IRTFMD='OFF'
          IFLAGA=.TRUE.
          IFLAGB=.FALSE.
          NTOTAL=50
          NBLNK1=0
          NBLNK2=0
          ITYPE2=2
          ITTEXT(1:42)='Measurements at each mass level are either'
          NCTEMP=42
          CALL DPDTXT(ITTEXT,NCTEMP,ATEMP,NUMDIG,NTOTAL,
     1                NBLNK1,NBLNK2,IFLAGA,IFLAGB,ISIZE,
     1                ICAPSW,ICAPTY,ITYPE2,ISUBRO,IBUGA3,IERROR)
          IFLAGA=.FALSE.
          ITTEXT(1:44)='all zero or all non-zero.  It is recommended'
          NCTEMP=44
          CALL DPDTXT(ITTEXT,NCTEMP,ATEMP,NUMDIG,NTOTAL,
     1                NBLNK1,NBLNK2,IFLAGA,IFLAGB,ISIZE,
     1                ICAPSW,ICAPTY,ITYPE2,ISUBRO,IBUGA3,IERROR)
          ITTEXT(1:44)='that you take additional measurements in the'
          NCTEMP=44
          CALL DPDTXT(ITTEXT,NCTEMP,ATEMP,NUMDIG,NTOTAL,
     1                NBLNK1,NBLNK2,IFLAGA,IFLAGB,ISIZE,
     1                ICAPSW,ICAPTY,ITYPE2,ISUBRO,IBUGA3,IERROR)
          ITTEXT(1:12)='vicinity of '
          NCTEMP=12
          ATEMP=(XIDTEM(IALLZ)+XIDTEM(IALLP))/2.0
          NTOTAL=25
          NBLNK1=0
          NBLNK2=1
          IFLAGB=.TRUE.
          CALL DPDTXT(ITTEXT,NCTEMP,ATEMP,NUMDIG,NTOTAL,
     1                NBLNK1,NBLNK2,IFLAGA,IFLAGB,ISIZE,
     1                ICAPSW,ICAPTY,ITYPE2,ISUBRO,IBUGA3,IERROR)
CCCCC   ELSE
CCCCC     ISIZE=0
CCCCC     IRTFMD='OFF'
CCCCC     IFLAGA=.TRUE.
CCCCC     IFLAGB=.FALSE.
CCCCC     NTOTAL=40
CCCCC     NBLNK1=0
CCCCC     NBLNK2=0
CCCCC     ITYPE2=2
CCCCC     ITTEXT(1:33)='It is recommended that you take '
CCCCC     NCTEMP=33
CCCCC     ATEMP=REAL(NMORE)
CCCCC     NUMDIG=0
CCCCC     CALL DPDTXT(ITTEXT,NCTEMP,ATEMP,NUMDIG,NTOTAL,
CCCCC1                NBLNK1,NBLNK2,IFLAGA,IFLAGB,ISIZE,
CCCCC1                ICAPSW,ICAPTY,ITYPE2,ISUBRO,IBUGA3,IERROR)
CCCCC     IFLAGA=.FALSE.
CCCCC     ITTEXT(1:30)='additional blank measurements.'
CCCCC     NCTEMP=30
CCCCC     NBLNK1=0
CCCCC     NBLNK2=1
CCCCC     IFLAGB=.TRUE.
CCCCC     ATEMP=0.0
CCCCC     NUMDIG=-1
CCCCC     CALL DPDTXT(ITTEXT,NCTEMP,ATEMP,NUMDIG,NTOTAL,
CCCCC1                NBLNK1,NBLNK2,IFLAGA,IFLAGB,ISIZE,
CCCCC1                ICAPSW,ICAPTY,ITYPE2,ISUBRO,IBUGA3,IERROR)
        ENDIF
C
      ENDIF
C
C     PRINT TABLES
C
      IF(ILODST.EQ.'OFF' .OR. IPRINT.EQ.'OFF')GOTO4199
C
CCCCC NCTIT9=28
CCCCC ITITL9(1:NCTIT9)='LIMITS OF DETECTION ANALYSIS'
      NCTIT9=0
      ITITL9=' '
      NCTITL=13
      ITITLE(1:NCTITL)='Summary Table'
      NUMLIN=2
      NUMCOL=5
      ITITL2(1,1)='Mass'
      ITITL2(2,1)='Values'
      ITITL2(1,2)='Number of'
      ITITL2(2,2)='Zero Values'
      ITITL2(1,3)='Number of'
      ITITL2(2,3)='Non-Zero Values'
      ITITL2(1,4)='Mean of'
      ITITL2(2,4)='Non-Zero Values'
      ITITL2(1,5)='SD of'
      ITITL2(2,5)='Non-Zero Values'
      NCTIT2(1,1)=4
      NCTIT2(2,1)=6
      NCTIT2(1,2)=9
      NCTIT2(2,2)=11
      NCTIT2(1,3)=9
      NCTIT2(2,3)=15
      NCTIT2(1,4)=7
      NCTIT2(2,4)=15
      NCTIT2(1,5)=5
      NCTIT2(2,5)=15
      NMAX=0
      NTOT(1)=15
      NTOT(2)=15
      NTOT(3)=19
      NTOT(4)=19
      NTOT(5)=18
      DO4010J=1,NUMCOL
        VALIGN(J)='b'
        ALIGN(J)='r'
        NMAX=NMAX+NTOT(J)
        IDIGIT(J)=NUMDIG
        IWHTML(J)=125
 4010 CONTINUE
      IWHTML(NUMCOL+1)=125
      VALIGN(NUMCOL+1)='b'
      ALIGN(NUMCOL+1)='r'
      IDIGIT(2)=0
      IDIGIT(3)=0
      DO4020I=1,NDIST
        NCTEXT(I)=0
        ITEXT(I)=' '
        AMAT(I,1)=XIDTEM(I)
        AMAT(I,2)=REAL(MU(I))
        AMAT(I,3)=REAL(NN(I))
        AMAT(I,4)=YM(I) - YCONST
        AMAT(I,5)=YVAR(I)
 4020 CONTINUE
      IWRTF(1)=1400
      IWRTF(2)=IWRTF(1)+1600
      IWRTF(3)=IWRTF(2)+1600
      IWRTF(4)=IWRTF(3)+1600
      IWRTF(5)=IWRTF(4)+1600
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
        ISTEPN='4.4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4111)
 4111   FORMAT('BEFORE PRINT SUMMARY TABLE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4112)NCTIT9,NCTITL,MAXLIN,NUMLIN,NUMCOL,MAXROW
 4112   FORMAT('NCTIT9,NCTITL,MAXLIN,NUMLIN,NUMCOL,MAXROW = ',6I6)
        CALL DPWRST('XXX','BUG ')
        DO4120I=1,NUMLIN
          DO4130J=1,NUMCOL
            WRITE(ICOUT,4122)I,J,ITITL2(I,J),NCTIT2(I,J),AMAT(I,J)
 4122       FORMAT('I,J,ITITL2(I,J),NCTIT2(I,J),AMAT(I,J) = ',
     1             2I6,A40,I8,G15.7)
            CALL DPWRST('XXX','BUG ')
 4130     CONTINUE
 4120   CONTINUE
      ENDIF
C
      CALL DPDTA2(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,MAXCOL,NUMCOL,
     1            ITEXT,NCTEXT,AMAT,MAXROW,NDIST,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
        WRITE(ICOUT,4132)
 4132   FORMAT('RETURN FROM DPDTA2')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
 4199 CONTINUE
C
      IF(ILODTA.EQ.'OFF' .OR. IPRINT.EQ.'OFF')GOTO5199
C
      NCTIT9=0
      ITITL9(1:NCTIT9)=' '
      NCTITL=9
      ITITLE(1:NCTITL)='LOD Table'
      NUMLIN=4
      NUMCOL=7
C
      ITITL2(1,1)=' '
      ITITL2(2,1)=' '
      ITITL2(3,1)='Mass'
      ITITL2(4,1)='Values'
      NCTIT2(1,1)=0
      NCTIT2(2,1)=0
      NCTIT2(3,1)=4
      NCTIT2(4,1)=6
C
      ITITL2(1,2)='Linear'
      ITITL2(2,2)='Least Squares'
      ITITL2(3,2)='Slope'
      ITITL2(4,2)='Estimates'
      NCTIT2(1,2)=6
      NCTIT2(2,2)=13
      NCTIT2(3,2)=5
      NCTIT2(4,2)=9
C
      ITITL2(1,3)='StdDev of'
      ITITL2(2,3)='Errors From'
      ITITL2(3,3)='Linear'
      ITITL2(4,3)='Model'
      NCTIT2(1,3)=9
      NCTIT2(2,3)=11
      NCTIT2(3,3)=6
      NCTIT2(4,3)=5
C
      ITITL2(1,4)='LOD Estimate'
      ITITL2(2,4)='Based On'
      ITITL2(3,4)='Cumulated'
      ITITL2(4,4)='Sample'
      NCTIT2(1,4)=12
      NCTIT2(2,4)=8
      NCTIT2(3,4)=9
      NCTIT2(4,4)=6
C
      ITITL2(1,5)='1-Sigma'
      ITITL2(2,5)='Uncertainty'
      ITITL2(3,5)='on LOD'
      ITITL2(4,5)='Estimate'
      NCTIT2(1,5)=7
      NCTIT2(2,5)=11
      NCTIT2(3,5)=6
      NCTIT2(4,5)=8
C
C     BASE ON ACTUAL VALUE OF GAMMA
C
      ITITL2(1,6)=' '
      IF(GAMMA.EQ.0.05)THEN
        ITITL2(2,6)='95% Upper'
        NCTIT2(2,6)=9
      ELSEIF(GAMMA.EQ.0.10)THEN
        ITITL2(2,6)='90% Upper'
        NCTIT2(2,6)=9
      ELSEIF(GAMMA.EQ.0.01)THEN
        ITITL2(2,6)='99% Upper'
        NCTIT2(2,6)=9
      ELSE
        ATEMP=100.*(1.0 - GAMMA)
        ITITL2(2,6)='xx.x% Upper'
        WRITE(ITITL2(2,6)(1:4),'(F4.1)')ATEMP
        NCTIT2(2,6)=11
      ENDIF
      ITITL2(3,6)='Confidence'
      ITITL2(4,6)='Limit on LOD'
      NCTIT2(1,6)=0
      NCTIT2(3,6)=10
      NCTIT2(4,6)=12
C
      IF(GAMMA.EQ.0.05.AND.PA.EQ.0.05)THEN
        ITITL2(1,7)='95%-95%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.10.AND.PA.EQ.0.05)THEN
        ITITL2(1,7)='90%-95%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.01.AND.PA.EQ.0.05)THEN
        ITITL2(1,7)='99%-95%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.10.AND.PA.EQ.0.10)THEN
        ITITL2(1,7)='90%-90%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.05.AND.PA.EQ.0.10)THEN
        ITITL2(1,7)='95%-90%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.01.AND.PA.EQ.0.10)THEN
        ITITL2(1,7)='99%-90%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.10.AND.PA.EQ.0.01)THEN
        ITITL2(1,7)='90%-99%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.05.AND.PA.EQ.0.01)THEN
        ITITL2(1,7)='95%-99%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.01.AND.PA.EQ.0.01)THEN
        ITITL2(1,7)='99%-99%'
        NCTIT2(1,7)=7
      ELSE
        ITITL2(1,7)='xx.x%-xx.x%'
        ATEMP=100.*(1.0 - GAMMA)
        WRITE(ITITL2(1,7)(1:4),'(F4.1)')ATEMP
        ATEMP=100.*(1.0 - PA)
        WRITE(ITITL2(1,7)(7:10),'(F4.1)')ATEMP
        NCTIT2(1,7)=11
      ENDIF
      ITITL2(2,7)='Upper'
      ITITL2(3,7)='Tolerance'
      ITITL2(4,7)='Limit on LOD'
      NCTIT2(2,7)=5
      NCTIT2(3,7)=9
      NCTIT2(4,7)=12
C
      NMAX=0
      DO5010J=1,NUMCOL
        NTOT(J)=15
        VALIGN(J)='b'
        ALIGN(J)='r'
        NMAX=NMAX+NTOT(J)
        IDIGIT(J)=NUMDIG
        IWHTML(J)=150
 5010 CONTINUE
      IWHTML(1)=125
      IWHTML(2)=175
      IWHTML(4)=175
      IWHTML(NUMCOL+1)=150
      VALIGN(NUMCOL+1)='b'
      ALIGN(NUMCOL+1)='r'
      DO5020I=1,NDIST
        NCTEXT(I)=0
        AMAT(I,1)=XIDTEM(I)
        IF(I.EQ.1)THEN
          AMAT(I,2)=CPUMIN
          AMAT(I,3)=CPUMIN
          AMAT(I,4)=CPUMIN
          AMAT(I,5)=CPUMIN
          AMAT(I,6)=CPUMIN
          AMAT(I,7)=CPUMIN
        ELSE
          AMAT(I,2)=BA(I)
          AMAT(I,3)=SI(I)
          AMAT(I,4)=LO(I)
          AMAT(I,5)=UN(I)
          AMAT(I,6)=LU(I)
          AMAT(I,7)=TO(I)
        ENDIF
 5020 CONTINUE
      IWRTF(1)=900
      IWRTF(2)=IWRTF(1)+1150
      IWRTF(3)=IWRTF(2)+1150
      IWRTF(4)=IWRTF(3)+1150
      IWRTF(5)=IWRTF(4)+1150
      IWRTF(6)=IWRTF(5)+1150
      IWRTF(7)=IWRTF(6)+1150
      IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')THEN
        IPTSZ=14
        CALL DPCONA(92,IBASLC)
        WRITE(ICOUT,8199)IBASLC,IPTSZ
 8199   FORMAT(A1,'fs',I2)
        CALL DPWRST(ICOUT,'WRIT')
      ENDIF
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
        ISTEPN='4.4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5111)
 5111   FORMAT('BEFORE PRINT LOD TABLE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4112)NCTIT9,NCTITL,MAXLIN,NUMLIN,NUMCOL,MAXROW
        CALL DPWRST('XXX','BUG ')
        DO5120I=1,NUMLIN
          DO5130J=1,NUMCOL
            WRITE(ICOUT,4122)I,J,ITITL2(I,J),NCTIT2(I,J),AMAT(I,J)
            CALL DPWRST('XXX','BUG ')
 5130     CONTINUE
 5120   CONTINUE
      ENDIF
C
      IFRST=.TRUE.
      ILAST=.TRUE.
      CALL DPDTA2(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,MAXCOL,NUMCOL,
     1            ITEXT,NCTEXT,AMAT,MAXROW,NDIST,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
 5199 CONTINUE
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
        WRITE(ICOUT,4132)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')THEN
        IPTSZ=IRTFPS
        WRITE(ICOUT,8199)IBASLC,IPTSZ
        CALL DPWRST(ICOUT,'WRIT')
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD2')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLOD2--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR,IBUGA3
 9012   FORMAT('IERROR,IBUGA3 = ',A4,1X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)N
 9013   FORMAT('N = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLOD3(Y,X,N,
     1                  XIDTEM,TEMP1,YT,YM,
     1                  D,BA,BL,SU,T,P,LO,LU,S,UN,TO,UA,SI,B1,YTT,YVAR,
     1                  NS,MU,NN,
     1                  ALPHA,BETA,GAMMA,PA,THRPER,CVUSER,
     1                  ALOD,ALODSE,CV,ALODLU,
     1                  IVARID,IVARI2,PID,
     1                  IWRITE,MAXOBV,
     1                  IFORSW,YMIN,YMIN2,
     1                  ICASAN,ICAPSW,ICAPTY,
     1                  ISUBRO,IBUGA3,IERROR)
C
C     PURPOSE--PERFORM A LIMITS OF DETECTION ANALYIS.  SPECIFICALLY,
C              WE ARE CHECKING FOR A LOWER LIMIT OF DETECTION.
C              IT IS ASSUMED THAT WE CANNOT MEASURE THE MASS BELOW
C              A CERTAIN DETECTION LIMIT AND WE NEED TO DETERMINE
C              WHAT THAT DETECTION LIMIT IS.  THERE ARE 2 CASES:
C
C                  1) FOR A ZERO MASS, THE MEASUREMENT WILL ALWAYS
C                     RETURN A ZERO VALUE.  THIS WILL BE REFERRED
C                     TO AS THE "CLEAN" CASE".
C
C                  2) FOR A ZERO MASS, THE MEASUREMENT MAY BE A
C                     NON-ZERO VALUE.  THIS WILL BE REFERRED TO AS
C                     THE DIRTY CASE.
C
C              THE DATA CONSISTS OF A MASS VALUE ("X") AND A
C              MEASURED VALUE ("Y").  THE COMMAND SYNTAX IS:
C
C                  CLEAN LIMIT OF DETECTION  Y   X
C                  DIRTY LIMIT OF DETECTION  Y   X
C                  LIMIT OF DETECTION  Y   X
C
C              IF THE CLEAN/DIRTY CASE IS NOT SPECIFIED, ASSUME
C              THE DIRTY CASE.  THIS SUBROUTINE PERFORMS THE
C              COMPUTATIONS FOR THE "CLEAN" CASE.  PERFORM A CHECK
C              THAT ALL MEASUREMENTS FOR THE ZERO MASS ARE INDEED
C              ZERO (IF NOT, PRINT AN ERROR AND RETURN).
C
C     PRINTING--YES
C     SUBROUTINES NEEDED--NORPPF, CHSPPF
C     WRITTEN BY--JAMES FILLIBEN
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORATORY
C                 NATIONAL INSTITUTE OF STANDARDS AND TECHNOLGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2855
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL BUREAU OF STANDARDS.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2009/1
C     ORIGINAL VERSION--JANUARY   2009.
C     UPDATED         --MAY       2009. SOME REFINEMENTS
C     UPDATED         --JUNE      2009. SOME ADDITINAL REFINEMENTS
C     UPDATED         --APRIL     2010. NEED TO CORRECT COMPUTATION
C                                       OF "LO" FOR THE CASE WHERE
C                                       WE HAVE ALL ZERO RESPONSES
C                                       FOR A NON-ZERO MASS
C     UPDATED         --JANUARY   2011. ALLOW USER-SPECIFIED CRITICAL
C                                       VALUE
C     UPDATED         --JULY      2012. USER OPTION AS TO WHETHER TO
C                                       PRINT EACH OF THE TABLES
C     UPDATED         --MARCH     2014. THIS LOD ANALYSIS IS NOW AN
C                                       OFFICIAL ASTM STANDARD (E2677).
C                                       A FEW TWEAKS IN THE OUTPUT TO
C                                       BE CONSISTENT WITH E2677.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES--------------
C
      CHARACTER*4 IVARID(*)
      CHARACTER*4 IVARI2(*)
C
      CHARACTER*4 IFORSW
      CHARACTER*4 ICASAN
      CHARACTER*4 ICAPSW
      CHARACTER*4 ICAPTY
      CHARACTER*4 ISUBRO
      CHARACTER*4 IBUGA3
      CHARACTER*4 IERROR
C
      CHARACTER*4 IWRITE
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*1 IBASLC
      CHARACTER*4 IOP
C
C----------------------------------------------------------------
C
      REAL Y(*)
      REAL X(*)
      REAL TEMP1(*)
      REAL YT(*)
      REAL YM(*)
      REAL XIDTEM(*)
C
      INTEGER NS(*)
      INTEGER MU(*)
      INTEGER NN(*)
C
      REAL D(*)
      REAL BA(*)
      REAL BL(*)
      REAL SU(*)
      REAL T(*)
      REAL P(*)
      REAL LO(*)
      REAL LU(*)
      REAL S(*)
      REAL UN(*)
      REAL TO(*)
      REAL UA(*)
      REAL SI(*)
      REAL B1(*)
      REAL YTT(*)
      REAL YVAR(*)
      REAL PID(*)
C
      REAL ZERO
      REAL EPS
C
      DOUBLE PRECISION DSUM
C
      INCLUDE 'DPCOST.INC'
C
      PARAMETER(MAXLIN=4)
      PARAMETER(MAXROW=30)
      PARAMETER(MAXCOL=8)
      CHARACTER*4  ALIGN(MAXCOL)
      CHARACTER*4  VALIGN(MAXCOL)
      INTEGER      IDIGIT(MAXCOL)
      INTEGER      NTOT(MAXCOL)
      INTEGER      NCTEXT(MAXROW)
      CHARACTER*60 ITEXT(MAXROW)
      CHARACTER*40 ITITL9
      CHARACTER*40 ITITLE
      CHARACTER*60 ITTEXT
      CHARACTER*40 ITITL2(MAXLIN,MAXCOL)
      INTEGER      NCTIT2(MAXLIN,MAXCOL)
      INTEGER      IWHTML(MAXCOL)
      INTEGER      IWRTF(MAXCOL)
      REAL         AMAT(MAXROW,MAXCOL)
      REAL         AVALUE(MAXROW)
C
      LOGICAL IFLAGA
      LOGICAL IFLAGB
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*4 IRTFMD
      COMMON/COMRTF/IRTFMD
C
      LOGICAL IFLAGY
      LOGICAL IFLAGZ
C
      INCLUDE 'DPCOP2.INC'
C
      DATA ZERO /0.0/
      DATA EPS  /0.1E-7/
C
C-----START POINT------------------------------------------------
C
      IERROR='NO'
      ISUBN1='DPLO'
      ISUBN2='D3  '
C
      SIG0=0.0
      AZ=0.0
C
      NUMDIG=4
      IF(IFORSW.EQ.'1')NUMDIG=2
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=7
      IF(IFORSW.EQ.'9')NUMDIG=7
      IF(IFORSW.EQ.'0')NUMDIG=7
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      IF(THRPER.EQ.CPUMIN)THRPER=0.6
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD3')THEN
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLOD3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,52)N,ALPHA,BETA,GAMMA,PA
   52   FORMAT('N,ALPHA,BETA,GAMMA,PA = ',I8,4G15.7)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,53)ICASAN,THRPER,CVUSER,MAXOBV
   53   FORMAT('ICASAN,THRPER,CVUSER,MAXOBV = ',A4,2X,2G15.7,I8)
        CALL DPWRST('XXX','BUG ')
        DO55I=1,N
          WRITE(ICOUT,56)I,Y(I),X(I)
   56     FORMAT('I,Y(I),X(I) = ',I8,2G15.7)
          CALL DPWRST('XXX','BUG ')
   55   CONTINUE
      ENDIF
C
C               ********************************************
C               **  STEP 1--                              **
C               **  CHECK THE INPUT ARGUMENTS FOR ERRORS  **
C               **  BASICALLY, NEGATIVE VALUES ARE        **
C               **  CONSIDERED ERRORS.                    **
C               ********************************************
C
      IF(N.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
  101   FORMAT('***** ERROR IN LIMITS OF DETECTION--')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,102)
  102   FORMAT('      THE NUMBER OF OBSERVATIONS FOR THE LIMITS OF ',
     1         'DETECTION')
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,103)N
  103   FORMAT('      MUST BE AT LEAST 2;  THE ENTERED NUMBER OF ',
     1         'OBSERVATIONS = ',I8)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      DO200I=1,N
        IF(ABS(X(I)).LE.EPS)X(I)=ZERO
        IF(Y(I).LT.ZERO)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,202)
  202     FORMAT('      A NEGATIVE VALUE WAS ENCOUNTERED FOR ',
     1           'THE MEASURED VALUE')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,204)I,Y(I)
  204     FORMAT('      ROW ',I8,' HAS THE VALUE ',G15.7)
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ELSEIF(X(I).LT.ZERO)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,212)
  212     FORMAT('      A NEGATIVE VALUE WAS ENCOUNTERED FOR ',
     1           'THE MASS VALUE')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,204)I,X(I)
          CALL DPWRST('XXX','WRIT')
          IERROR='YES'
          GOTO9000
        ELSEIF(X(I).EQ.ZERO .AND. Y(I).GT.EPS)THEN
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,101)
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,222)
  222     FORMAT('      FOR A ZERO MASS VALUE, A NON-ZERO ',
     1           'MEASUREMENT WAS DETECTED.')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,223)
  223     FORMAT('      FOR THIS CASE, YOU NEED TO USE THE DIRTY ',
     1           'LIMITS OF DETECTION COMMAND')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,224)
  224     FORMAT('      RATHER THAN THE CLEAN LIMITS OF DETECTION ',
     1           'COMMAND.')
          CALL DPWRST('XXX','WRIT')
          WRITE(ICOUT,228)I,X(I),Y(I)
  228     FORMAT('      ROW ',I8,' HAS MASS VALUE ',G15.7, ' AND ',
     1           'MEASUREMENT ',G15.7)
          IERROR='YES'
          GOTO9000
        ENDIF
  200 CONTINUE
C
C               ***********************************************
C               **  STEP 2.1--                               **
C               **  PERFORM THE BASIC CALCULATIONS.          **
C               ***********************************************
C
      ISTEPN='2.1'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOD3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IWRITE='OFF'
      CALL SORTC(X,Y,N,X,TEMP1)
      DO1005I=1,N
        Y(I)=TEMP1(I)
 1005 CONTINUE
C
C     ALPHA   = CRITICAL LEVEL
C     BETA    = LOD UNCERTAINTY CONFIDENCE
C     GAMMA   = UPPER CONFIDENCE BOUND
C     PA      = TOLERANCE BOUND SIGNIFICANCE
C
CCCCC NOTE 6/2010: ACCORDING TO ANDREW RUKHIN, THE ZA TERM SHOULD NOT BE
CCCCC              SQUARED.
C
      CALL NORPPF(1.0-ALPHA,ZA)
CCCCC AZ=ZA**2
CCCCC ZA=ZA**2
      AZ=ZA
      CALL NORPPF(1.0-BETA,ZB)
      CALL NORPPF(1.0-PA,ZP)
      GA=GAMMA
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD3')THEN
        ISTEPN='2.2'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,61)
   61   FORMAT('***** FROM DPLOD3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,62)ZA,ZB,ZP
   62   FORMAT('ZA,ZB,ZP = ',3G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
C     COMPUTE:
C
C       1)  NUMBER OF BLANK (ZERO) MASS VALUES           (M)
C       2)  NUMBER OF DISTINCT MASS VALUES               (NDIST)
C       3)  SAMPLE SIZES FOR EACH GROUP                  (NS)
C       4)  NUMBER OF ZERO RESPONSES IN EACH GROUP       (MU)
C       5)  NUMBER OF NON-ZERO RESPONSES IN EACH GROUP   (NN)
C       6)  MEAN OF NON-ZERO RESPONSES IN EACH GROUP     (YM)
C
C     FOR THE MASS = 0 CASE, COMPUTE SOME STATISTICS
C
      CALL DISTIN(X,N,IWRITE,XIDTEM,NDIST,IBUGA3,IERROR)
C
      IF(NDIST.LT.2)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1012)
 1012   FORMAT('      THE NUMBER OF DISTINCT MASS VALUES IS LESS ',
     1         'THAN 2')
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ELSEIF(NDIST.EQ.N)THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,101)
        CALL DPWRST('XXX','WRIT')
        WRITE(ICOUT,1013)
 1013   FORMAT('      THE NUMBER OF DISTINCT MASS VALUES IS EQUAL TO ',
     1         'THE SAMPLE SIZE')
        CALL DPWRST('XXX','WRIT')
        IERROR='YES'
        GOTO9000
      ENDIF
C
      NFINAL=0
      IFLAGY=.FALSE.
      IFLAGZ=.TRUE.
      IALLZ=-99
      IALLP=-99
      ISTRT=2
C
CCCCC IF(XIDTEM(1).EQ.ZERO)ISTRT=1
C
      DO1100I=1,NDIST
C
C       NOTE: IF THERE ARE "ZERO" MASS VALUES (I.E., BLANKS),
C             THEN THESE NEED TO BE HANDLED SEPARATELY.
C
        HOLD=XIDTEM(I)
C
        D(I)=0.0
        BL(I)=0.0
        SU(I)=0.0
        T(I)=0.0
        P(I)=0.0
        IF(I.GT.1 .OR. (I.EQ.1 .AND. HOLD.EQ.ZERO))THEN
          LO(I)=0.0
          LU(I)=0.0
          BA(I)=0.0
          UN(I)=0.0
          S(I)=0.0
          TO(I)=0.0
        ELSE
          LO(I)=99.0
          LU(I)=99.0
          BA(I)=99.0
          UN(I)=99.0
          S(I)=99.0
          TO(I)=99.0
        ENDIF
C
        NZERO=0
        NPLUS=0
        DSUM=0.0D0
        DO1110J=1,N
          IF(X(J).EQ.HOLD)THEN
            IF(Y(J).LE.EPS)THEN
              NZERO=NZERO+1
            ELSE
              NPLUS=NPLUS+1
              TEMP1(NPLUS)=Y(J)
              DSUM=DSUM + DBLE(Y(J))
            ENDIF
          ENDIF
 1110   CONTINUE
        NTOTZ=NZERO+NPLUS
        ATEMP=REAL(NTOTZ)*(1.0 - THRPER)+0.00001
        MINZER=INT(ATEMP)
        MU(I)=NZERO
        NN(I)=NPLUS
        NS(I)=NTOTZ
C
        IF(NZERO.GE.1 .AND. NPLUS.GE.1)IFLAGZ=.FALSE.
        IF(IFLAGZ)THEN
          IF(NZERO.EQ.NTOTZ)IALLZ=I
          IF(NPLUS.EQ.NTOTZ .AND. IALLP.LT.0)IALLP=I
        ENDIF
        IF(I.EQ.NDIST)THEN
          NTEMPZ=INT(0.90*REAL(NTOTZ)+0.1)
          IF(NZERO.GT.NTEMPZ)THEN
            IFLAGY=.TRUE.
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,101)
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7071)
 7071       FORMAT('      More than 90% of the measurements at the')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7073)
 7073       FORMAT('      highest mass level are zero.')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,7075)
 7075       FORMAT('      The LOD analysis will not be performed.')
            CALL DPWRST('XXX','WRIT')
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','WRIT')
            IERROR='YES'
            GOTO9000
          ENDIF
CCCCC   ELSEIF(I.EQ.2)THEN
CCCCC     AVAL=REAL(NABOVE)/REAL(NTOTZ)
CCCCC     IF(AVAL.GT.0.90)THEN
CCCCC       WRITE(ICOUT,999)
CCCCC       CALL DPWRST('XXX','WRIT')
CCCCC       WRITE(ICOUT,101)
CCCCC       CALL DPWRST('XXX','WRIT')
CCCCC       WRITE(ICOUT,7181)
C7181       FORMAT('      More than 90% of the measurements at the ',
CCCCC1             'lowest non-zero')
CCCCC       CALL DPWRST('XXX','WRIT')
CCCCC       WRITE(ICOUT,7183)
C7183       FORMAT('      mass level are greater than the critical ',
CCCCC1             'value.')
CCCCC       CALL DPWRST('XXX','WRIT')
CCCCC       WRITE(ICOUT,7185)
C7185       FORMAT('      Although the LOD analysis will still be ',
CCCCC1             'performed,')
CCCCC       CALL DPWRST('XXX','WRIT')
CCCCC       WRITE(ICOUT,7187)
C7187       FORMAT('      it is recommended that measurements be ',
CCCCC1             'performed,')
CCCCC       CALL DPWRST('XXX','WRIT')
CCCCC       WRITE(ICOUT,999)
CCCCC       CALL DPWRST('XXX','WRIT')
CCCCC     ENDIF
        ENDIF
C
        IF(NZERO.GT.MINZER)NFINAL=I
        IF(NN(I).GT.0)THEN
          YM(I)=REAL(DSUM/DBLE(NN(I)))
          CALL SORT(TEMP1,NPLUS,TEMP1)
        ELSE
          YM(I)=0.0
        ENDIF
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD3')THEN
          ISTEPN='3.1'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1061)
 1061     FORMAT('***** DPLOD3: AFTER COMPUTE SAMPLE SIZES')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1062)I,MU(I),NN(I),NS(I),YM(I)
 1062     FORMAT('I,MU(I),NN(I),NS(I),YM(I) = ',4I8,G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1063)NZERO,MINZER,NFINAL
 1063     FORMAT('NZERO,MINZER,NFINAL = ',3I8)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
C       STATISTICS FOR MASS = 0 VALUES
C
CCCCC   IF(I.EQ.1 .AND. HOLD.EQ.ZERO)THEN
CCCCC     CALL NORPPF((REAL(MU(I))+0.5)/(REAL(NS(I))+1.0),ZZ)
CCCCC     QQ=MAX(ZA,ZZ)
CCCCC     SIG0=0.0
CCCCC     AF=0.0
CCCCC     SN=((QQ*SIG0)**2)/REAL(NN(I))
C
CCCCC     IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD3')THEN
CCCCC       ISTEPN='3.1'
CCCCC       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
CCCCC       WRITE(ICOUT,999)
CCCCC       CALL DPWRST('XXX','BUG ')
CCCCC       WRITE(ICOUT,1071)
C1071       FORMAT('***** DPLOD3: MASS = 0 CASE')
CCCCC       CALL DPWRST('XXX','BUG ')
CCCCC       WRITE(ICOUT,1073)ZZ,QQ,SIG0,AF,SN
C1073       FORMAT('ZZ,QQ,SIG0,AF,SN = ',5G15.7)
CCCCC       CALL DPWRST('XXX','BUG ')
CCCCC     ENDIF
C
CCCCC   ELSEIF(I.EQ.1 .AND. HOLD.NE.ZERO)THEN
CCCCC     CALL NORPPF((REAL(MU(I))+0.5)/(REAL(NS(I))+1.0),ZZ)
CCCCC     QQ=MAX(ZA,ZZ)
CCCCC   ENDIF
C
C       COMPUTE SUM OF Y**2 FOR NON-ZERO VALUES
C
        IF(NPLUS.GE.1)THEN
          CALL SD(TEMP1,NPLUS,IWRITE,XVAR,IBUGA3,IERROR)
          CALL MEAN(TEMP1,NPLUS,IWRITE,XMEAN,IBUGA3,IERROR)
        ELSE
          XVAR=0.0
          XMEAN=0.0
        ENDIF
        YM(I)=XMEAN
        YVAR(I)=XVAR
        SUM=0.0
        DO1030J=1,NPLUS
          SUM=SUM + TEMP1(J)**2
 1030   CONTINUE
        YTT(I)=SUM
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD3')THEN
          ISTEPN='3.3'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,1082)I,YTT(I)
 1082     FORMAT('I,YTT(I) = ',I8,G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
 1100 CONTINUE
C
C
CCCCC   APRIL 2010: X1 SHOULD BE SET TO X(1) IF ALL
CCCCC               NON-ZERO MASSES HAVE AT LEAST ONE NON-ZERO
CCCCC               RESPONSE.  HOWEVER, IF SOME NON-ZERO MASSES
CCCCC               HAVE ALL ZERO RESPONSES, THEN SET X1 TO X(K)
CCCCC               WHERE K IS THE SMALLEST MASS LEVEL WITH AT LEAST
CCCCC               ONE NON-ZERO RESPONSE.
CCCCC
CCCCC   MAY 2010:   NOTE THAT DEGREES OF FREEDOM FOR CHI-SQUARE AND
CCCCC               T PERCENT POINT ROUTINES BELOW REQUIRES THAT CUMULATIVE
CCCCC               NUMBER OF NON-ZERO VALUES BE AT LEAST TWO.  SO
CCCCC               ACTUALLY LOOK FOR FIRST MASS LEVEL WITH AT LEAST TWO
CCCCC               NON-ZERO RESPONSES.
CCCCC
CCCCC   MAY 2010:   ACTUALLY NEED TO SET X1 TO X(K) WHERE K IS THE
CCCCC               THE SMALLEST MASS LEVEL WITH A NON-ZERO VARIANCE
CCCCC               (I.E., IF HAVE 2 POINTS BUT THEY HAVE THE SAME VALUE,
CCCCC               CANNOT COMPUTE A NON-ZERO VARIANCE).
CCCCC
CCCCC X1=X(1)
      KTEMP=1
      DO1907II=2,NDIST
CCCCC   IF(NN(II).GE.2)THEN
        IF(YVAR(II).GT.0.0)THEN
CCCCC     IF(II.EQ.2)GOTO1908
          KTEMP=II
          GOTO1908
        ENDIF
 1907 CONTINUE
 1908 CONTINUE
      X1=XIDTEM(KTEMP)
      IF(KTEMP.GT.ISTRT)ISTRT=KTEMP
C
      CALL NORPPF((REAL(MU(KTEMP))+0.5)/(REAL(NS(KTEMP))+1.0),ZZ)
      QQ=MAX(ZA,ZZ)
C
C     COMPUTE CRITICAL VALUE FOR CLEAN CASE.
C
C     NOTE: CLARIFICATION FROM MICHAEL VERKOUTEREN - FOR CLEAN CASE,
C           THE REPORTED CRITICAL VALUE IS THE "THRESHOLD" (THE HH
C           TERM BELOW), NOT THE 95-TH PERCENTILE OF THE FIRST MASS
C           LEVEL WHERE WE HAVE DATA.
C
      KTEMP2=KTEMP
      IF(KTEMP.EQ.1)KTEMP2=2
CCCCC IF(ILODCV.EQ.'QUAN' .OR. NN(KTEMP).LT.3)THEN
CCCCC   ICNT=0
CCCCC   DO1910II=1,N
CCCCC     IF(X(II).EQ.XIDTEM(KTEMP2))THEN
CCCCC       ICNT=ICNT+1
CCCCC       TEMP3(ICNT)=Y(II)
CCCCC     ENDIF
C1910   CONTINUE
CCCCC   P100=95.0
CCCCC   CALL PERCEN(P100,TEMP3,ICNT,IWRITE,TEMP2,MAXOBV,CV,
CCCCC1              IBUGA3,IERROR)
CCCCC ELSE
CCCCC   ICNT=0
CCCCC   DO1920II=1,N
CCCCC     IF(X(II).EQ.XIDTEM(KTEMP2) .AND. Y(I).GT.0.0)THEN
CCCCC       ICNT=ICNT+1
CCCCC       TEMP3(ICNT)=Y(II)
CCCCC     ENDIF
C1920   CONTINUE
CCCCC   IF(YMINMS.LE.0.0)THEN
CCCCC     HH=YMIN
CCCCC   ELSE
          IF(CVUSER.GT.0.0)THEN
            HH=CVUSER
          ELSE
            HH=2.0*YMIN - YMIN2
          ENDIF
CCCCC   ENDIF
CCCCC   YM1=YM(KTEMP2)
CCCCC   CALL VAR(TEMP3,ICNT,IWRITE,VYN,IBUGA3,IERROR)
CCCCC   NU1=NN(KTEMP2)-1
CCCCC   YV=REAL(NU1)*VYN/REAL(NN(KTEMP2))
CCCCC   CALL NORPPF((REAL(MU(KTEMP2))+0.5)/(REAL(NS(KTEMP2))+1.0),ZZ)
CCCCC   QQ=MAX(ZA,ZZ)
CCCCC   FT=0.5*ZZ*(YM(KTEMP2)-HH)
CCCCC   SIG0=FT + SQRT((FT**2) + YV + (YM(I)-HH)**2)
CCCCC   CV=YM1 + QQ*SIG0
CCCCC ENDIF
C
      DO2000J=ISTRT,NDIST
C
        XXNN=0.0
        BAK=0.0
        SYY2=0.0
        ITN=0
        DO2010I=ISTRT,J
          XXNN=XXNN + XIDTEM(I)**2*REAL(NN(I))
          BAK=BAK + XIDTEM(I)*YM(I)*REAL(NN(I))
          SYY2=SYY2 + YTT(I)
          ITN=ITN + NN(I)
 2010   CONTINUE
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD3')THEN
          ISTEPN='4.1'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2061)
 2061     FORMAT('***** DPLOD3: AT 2010')
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2062)J,XXNN,BAK,SYY2,ITN
 2062     FORMAT('J,XXNN,BAK,SYY2,ITN = ',I8,3G15.7,I8)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2063)ZA,ZB,QQ,X1
 2063     FORMAT('ZA,ZB,QQ,X1 = ',4G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
        DD=1.0/SQRT(XXNN)
        BA(J)=BAK/XXNN
        ITN=ITN-1
        UA(J)=(SYY2 - BA(J)*BAK)/REAL(ITN)
        SI(J)=SQRT(UA(J))
        CALL TPPF(1.0 - 0.5*GA,REAL(ITN),TTK)
        T(J)=TTK
        B1K1=BA(J)-(DD*T(J)*SI(J))
        B1K2=0.000001
        B1(J)=MAX(B1K1,0.000001)
        CALL CHSPPF(GA/2.0,ITN,PPK)
        P(J)=PPK
        SU(J)=SI(J)*SQRT(REAL(ITN)/P(J))
        LO(J)=X1 + ((QQ + ZB)*SI(J))/BA(J)
        LU(J)=X1 + ((QQ+ZB)*SU(J))/B1(J)
        S(J)=((AZ*UA(J)/REAL(ITN)) + UA(J)*(DD**2)*(LO(J)**2))/
     1       BA(J)/BA(J)
        UN(J)=SQRT(S(J))
        TO(J)=X1 + ((QQ+ZB+ZP)*SU(J))/B1(J)
C
        IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD3')THEN
          ISTEPN='4.2'
          CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
          WRITE(ICOUT,999)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2072)J,DD,BA(J),UA(J),SI(J),TTK
 2072     FORMAT('J,DD,BA(J),UA(J),SI(J),TTK = ',I8,5G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2073)J,B1(J),P(J),SU(J),LO(J)
 2073     FORMAT('J,B1(J),P(J),SU(J),LO(J) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
          WRITE(ICOUT,2074)J,LU(J),S(J),UN(J),TO(J)
 2074     FORMAT('J,LU(J),S(J),UN(J),TO(J) = ',I8,4G15.7)
          CALL DPWRST('XXX','BUG ')
        ENDIF
C
 2000 CONTINUE
C
      SI(1)=SIG0
C
      NFINAL=NFINAL+1
      IF(NFINAL.GT.NDIST)NFINAL=NDIST
      ALOD=LO(NFINAL)
      ALODSE=UN(NFINAL)
      ALODLU=LU(NFINAL)
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD3')THEN
        ISTEPN='4.3'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,2082)NFINAL
 2082   FORMAT('NFINAL,ALOD,ALODSE = ',I8,2G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IVAL1=INT(100.0*(1.0 - GAMMA)+0.1)
      IVAL2=INT(100.0*(1.0 - GAMMA)+0.1)
      IVAL3=INT(100.0*(1.0 - PA)+0.1)
C
C               **************************************************
C               **  STEP 5--                                    **
C               **   OPEN THE STORAGE FILES, WRITE RELEVANT     **
C               **   QUANTITIES TO FILE, AND THEN CLOSE         **
C               **   STORAGE FILES.                             **
C               **************************************************
C
      ISTEPN='5'
      IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOD3')
     1CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
      IF(ILODOF.EQ.'OFF')GOTO3019
C
      IOP='OPEN'
      IFLG1=1
      IFLG2=1
      IFLG3=0
      IFLG4=0
      IFLG5=0
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
      IF(IERROR.EQ.'YES')GOTO9000
C
      DO3010I=1,NDIST
        WRITE(IOUNI1,3012)XIDTEM(I),REAL(MU(I)),REAL(NN(I)),YT(I),
     1                    YVAR(I)
        WRITE(IOUNI2,3012)XIDTEM(I),BA(I),SI(I),LO(I),UN(I),LU(I),
     1                    TO(I)
 3012   FORMAT(7E15.7)
 3010 CONTINUE
C
      IOP='CLOS'
      CALL DPAUFI(IOP,IFLG1,IFLG2,IFLG3,IFLG4,IFLG5,
     1            IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1            IBUGA3,ISUBRO,IERROR)
C
 3019 CONTINUE
C
      NUMDIG=4
      IF(IFORSW.EQ.'1')NUMDIG=2
      IF(IFORSW.EQ.'2')NUMDIG=2
      IF(IFORSW.EQ.'3')NUMDIG=3
      IF(IFORSW.EQ.'4')NUMDIG=4
      IF(IFORSW.EQ.'5')NUMDIG=5
      IF(IFORSW.EQ.'6')NUMDIG=6
      IF(IFORSW.EQ.'7')NUMDIG=7
      IF(IFORSW.EQ.'8')NUMDIG=8
      IF(IFORSW.EQ.'9')NUMDIG=9
      IF(IFORSW.EQ.'0')NUMDIG=10
      IF(IFORSW.EQ.'-2')NUMDIG=-2
      IF(IFORSW.EQ.'-3')NUMDIG=-3
      IF(IFORSW.EQ.'-4')NUMDIG=-4
      IF(IFORSW.EQ.'-5')NUMDIG=-5
      IF(IFORSW.EQ.'-6')NUMDIG=-6
      IF(IFORSW.EQ.'-7')NUMDIG=-7
      IF(IFORSW.EQ.'-8')NUMDIG=-8
      IF(IFORSW.EQ.'-9')NUMDIG=-9
C
      CALL DPCONA(92,IBASLC)
      CV=HH
C
C     WRITE "FINAL" ESTIMATES SEPARATELY
C
C     2014/03: TO BE CONSISTENT WITH ASTM E2677 STANDARD, CHANGE
C              "Scxx.x"  to   "CVxx.x" AND CHANGE  "LDxx"  TO  "LODxx".
C
      IF(IPRINT.EQ.'ON')THEN
C
        ITITLE='Limits of Detection Analysis'
        NCTITL=28
        ITITL9='(Based on ASTM E-2677 Standard)'
        NCTIT3=31
C
        ICNT=1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=0
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Response Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(1)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(1)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        ICNT=ICNT+1
        ITEXT(ICNT)='Mass Variable: '
        WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(2)(1:4)
        WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(2)(1:4)
        NCTEXT(ICNT)=27
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        IF(PID(3).NE.CPUMIN)THEN
          ICNT=ICNT+1
          ITEXT(ICNT)='Group-ID Variable: '
          WRITE(ITEXT(ICNT)(20:23),'(A4)')IVARID(3)(1:4)
          WRITE(ITEXT(ICNT)(24:27),'(A4)')IVARI2(3)(1:4)
          NCTEXT(ICNT)=27
          AVALUE(ICNT)=PID(3)
          IDIGIT(ICNT)=0
        ENDIF
C
        ICNT=ICNT+1
        ITEXT(ICNT)=' '
        NCTEXT(ICNT)=0
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
C
        ICNT=ICNT+1
        ITEXT(ICNT)='Final Estimate:'
        NCTEXT(ICNT)=15
        AVALUE(ICNT)=0.0
        IDIGIT(ICNT)=-1
        IF(ILODPC.EQ.'ON')THEN
          ICNT=ICNT+1
          IF(ALPHA.EQ.0.05)THEN
            ITEXT(ICNT)='Critical Value (Cv95):'
            NCTEXT(ICNT)=22
          ELSEIF(ALPHA.EQ.0.10)THEN
            ITEXT(ICNT)='Critical Value (Cv90):'
            NCTEXT(ICNT)=22
          ELSEIF(ALPHA.EQ.0.01)THEN
            ITEXT(ICNT)='Critical Value (Cv99):'
            NCTEXT(ICNT)=22
          ELSE
            ITEXT(ICNT)='Critical Value (Cvxx.x):'
            ATEMP=100.*(1.0 - ALPHA)
            WRITE(ITEXT(ICNT)(19:22),'(F4.1)')ATEMP
            NCTEXT(ICNT)=24
          ENDIF
          AVALUE(ICNT)=CV
          IDIGIT(ICNT)=NUMDIG
        ENDIF
C
        ICNT=ICNT+1
        IF(ALPHA.EQ.0.05)THEN
          ITEXT(ICNT)='Detection Limit (LOD95):'
          NCTEXT(ICNT)=24
        ELSEIF(ALPHA.EQ.0.10)THEN
          ITEXT(ICNT)='Detection Limit (LOD90):'
          NCTEXT(ICNT)=24
        ELSEIF(ALPHA.EQ.0.01)THEN
          ITEXT(ICNT)='Detection Limit (LOD99):'
          NCTEXT(ICNT)=24
        ELSE
          ITEXT(ICNT)='Detection Limit (LODxx.x):'
          NCTEXT(ICNT)=26
          ATEMP=100.*(1.0 - ALPHA)
          WRITE(ITEXT(ICNT)(21:24),'(F4.1)')ATEMP
        ENDIF
        AVALUE(ICNT)=ALOD
        IDIGIT(ICNT)=NUMDIG
C
        ICNT=ICNT+1
        IF(GAMMA.EQ.0.05)THEN
          ITEXT(ICNT)='95% Upper Confidence Limit on LOD:'
          NCTEXT(ICNT)=34
        ELSEIF(ALPHA.EQ.0.10)THEN
          ITEXT(ICNT)='90% Upper Confidence Limit on LOD:'
          NCTEXT(ICNT)=34
        ELSEIF(ALPHA.EQ.0.01)THEN
          ITEXT(ICNT)='99% Upper Confidence Limit on LOD:'
          NCTEXT(ICNT)=34
        ELSE
          ITEXT(ICNT)='xx.x% Upper Confidence Limit on LOD:'
          NCTEXT(ICNT)=36
          ATEMP=100.*(1.0 - GAMMA)
          WRITE(ITEXT(ICNT)(1:4),'(F4.1)')ATEMP
        ENDIF
        AVALUE(ICNT)=ALODLU
        IDIGIT(ICNT)=NUMDIG
C
        NUMROW=ICNT
        DO4210I=1,NUMROW
          NTOT(I)=15
 4210   CONTINUE
C
        IFRST=.TRUE.
        ILAST=.TRUE.
C
        ISTEPN='42A'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOD2')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        CALL DPDTA1(ITITLE,NCTITL,ITITL9,NCTIT3,ITEXT,NCTEXT,
     1              AVALUE,IDIGIT,
     1              NTOT,NUMROW,
     1              ICAPSW,ICAPTY,ILAST,IFRST,
     1              ISUBRO,IBUGA3,IERROR)
C
        ISTEPN='42B'
        IF(IBUGA3.EQ.'ON'.OR.ISUBRO.EQ.'LOD2')
     1       CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
C
        IF(IFLAGZ)THEN
          ATEMP=0.0
          NUMDIG=-1
          ISIZE=0
          IRTFMD='OFF'
          IFLAGA=.TRUE.
          IFLAGB=.FALSE.
          NTOTAL=50
          NBLNK1=0
          NBLNK2=0
          ITYPE2=2
          ITTEXT(1:42)='Measurements at each mass level are either'
          NCTEMP=42
          CALL DPDTXT(ITTEXT,NCTEMP,ATEMP,NUMDIG,NTOTAL,
     1                NBLNK1,NBLNK2,IFLAGA,IFLAGB,ISIZE,
     1                ICAPSW,ICAPTY,ITYPE2,ISUBRO,IBUGA3,IERROR)
          IFLAGA=.FALSE.
          ITTEXT(1:44)='all zero or all non-zero.  It is recommended'
          NCTEMP=44
          CALL DPDTXT(ITTEXT,NCTEMP,ATEMP,NUMDIG,NTOTAL,
     1                NBLNK1,NBLNK2,IFLAGA,IFLAGB,ISIZE,
     1                ICAPSW,ICAPTY,ITYPE2,ISUBRO,IBUGA3,IERROR)
          ITTEXT(1:44)='that you take additional measurements in the'
          NCTEMP=44
          CALL DPDTXT(ITTEXT,NCTEMP,ATEMP,NUMDIG,NTOTAL,
     1                NBLNK1,NBLNK2,IFLAGA,IFLAGB,ISIZE,
     1                ICAPSW,ICAPTY,ITYPE2,ISUBRO,IBUGA3,IERROR)
          ITTEXT(1:12)='vicinity of '
          NCTEMP=12
          ATEMP=(XIDTEM(IALLZ)+XIDTEM(IALLP))/2.0
          NTOTAL=25
          NBLNK1=0
          NBLNK2=1
          IFLAGB=.TRUE.
          CALL DPDTXT(ITTEXT,NCTEMP,ATEMP,NUMDIG,NTOTAL,
     1                NBLNK1,NBLNK2,IFLAGA,IFLAGB,ISIZE,
     1                ICAPSW,ICAPTY,ITYPE2,ISUBRO,IBUGA3,IERROR)
        ENDIF
C
      ENDIF
C
C     PRINT TABLES
C
      IF(ILODST.EQ.'OFF' .OR. IPRINT.EQ.'OFF')GOTO4199
C
      NCTIT9=0
CCCCC ITITL9(1:NCTIT9)='LIMITS OF DETECTION ANALYSIS'
      ITITL9(1:NCTIT9)=' '
      NCTITL=13
      ITITLE(1:NCTITL)='Summary Table'
      NUMLIN=2
      NUMCOL=5
      ITITL2(1,1)='Mass'
      ITITL2(2,1)='Values'
      ITITL2(1,2)='Number of'
      ITITL2(2,2)='Zero Values'
      ITITL2(1,3)='Number of'
      ITITL2(2,3)='Non-Zero Values'
      ITITL2(1,4)='Mean of'
      ITITL2(2,4)='Non-Zero Values'
      ITITL2(1,5)='SD of'
      ITITL2(2,5)='Non-Zero Values'
      NCTIT2(1,1)=4
      NCTIT2(2,1)=6
      NCTIT2(1,2)=9
      NCTIT2(2,2)=11
      NCTIT2(1,3)=9
      NCTIT2(2,3)=15
      NCTIT2(1,4)=7
      NCTIT2(2,4)=15
      NCTIT2(1,5)=5
      NCTIT2(2,5)=15
      NMAX=0
      NTOT(1)=15
      NTOT(2)=15
      NTOT(3)=19
      NTOT(4)=19
      NTOT(5)=18
      DO4010J=1,NUMCOL
        VALIGN(J)='b'
        ALIGN(J)='r'
        NMAX=NMAX+NTOT(J)
        IDIGIT(J)=NUMDIG
        IWHTML(J)=125
 4010 CONTINUE
      IWHTML(NUMCOL+1)=125
      VALIGN(NUMCOL+1)='b'
      ALIGN(NUMCOL+1)='r'
      IDIGIT(2)=0
      IDIGIT(3)=0
      DO4020I=1,NDIST
        NCTEXT(I)=0
        ITEXT(I)=' '
        AMAT(I,1)=XIDTEM(I)
        AMAT(I,2)=REAL(MU(I))
        AMAT(I,3)=REAL(NN(I))
        AMAT(I,4)=YM(I)
        AMAT(I,5)=YVAR(I)
 4020 CONTINUE
      IWRTF(1)=1400
      IWRTF(2)=IWRTF(1)+1600
      IWRTF(3)=IWRTF(2)+1600
      IWRTF(4)=IWRTF(3)+1600
      IWRTF(5)=IWRTF(4)+1600
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD3')THEN
        ISTEPN='4.4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4111)
 4111   FORMAT('BEFORE PRINT SUMMARY TABLE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4112)NCTIT9,NCTITL,MAXLIN,NUMLIN,NUMCOL,MAXROW
 4112   FORMAT('NCTIT9,NCTITL,MAXLIN,NUMLIN,NUMCOL,MAXROW = ',6I6)
        CALL DPWRST('XXX','BUG ')
        DO4120I=1,NUMLIN
          DO4130J=1,NUMCOL
            WRITE(ICOUT,4122)I,J,ITITL2(I,J),NCTIT2(I,J),AMAT(I,J)
 4122       FORMAT('I,J,ITITL2(I,J),NCTIT2(I,J),AMAT(I,J) = ',
     1             2I6,A40,I8,G15.7)
            CALL DPWRST('XXX','BUG ')
 4130     CONTINUE
 4120   CONTINUE
      ENDIF
C
      CALL DPDTA2(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,MAXCOL,NUMCOL,
     1            ITEXT,NCTEXT,AMAT,MAXROW,NDIST,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
C
 4199 CONTINUE
C
      IF(ILODTA.EQ.'OFF' .OR. IPRINT.EQ.'OFF')GOTO5199
C
      NCTIT9=0
      ITITL9(1:NCTIT9)=' '
      NCTITL=9
      ITITLE(1:NCTITL)='LOD Table'
      NUMLIN=4
      NUMCOL=7
C
      ITITL2(1,1)=' '
      ITITL2(2,1)=' '
      ITITL2(3,1)='Mass'
      ITITL2(4,1)='Values'
      NCTIT2(1,1)=0
      NCTIT2(2,1)=0
      NCTIT2(3,1)=4
      NCTIT2(4,1)=6
C
      ITITL2(1,2)='Linear'
      ITITL2(2,2)='Least Squares'
      ITITL2(3,2)='Slope'
      ITITL2(4,2)='Estimates'
      NCTIT2(1,2)=6
      NCTIT2(2,2)=13
      NCTIT2(3,2)=5
      NCTIT2(4,2)=9
C
      ITITL2(1,3)='StdDev of'
      ITITL2(2,3)='Errors From'
      ITITL2(3,3)='Linear'
      ITITL2(4,3)='Model'
      NCTIT2(1,3)=9
      NCTIT2(2,3)=11
      NCTIT2(3,3)=6
      NCTIT2(4,3)=5
C
      ITITL2(1,4)='LOD Estimate'
      ITITL2(2,4)='Based On'
      ITITL2(3,4)='Cumulated'
      ITITL2(4,4)='Sample'
      NCTIT2(1,4)=12
      NCTIT2(2,4)=8
      NCTIT2(3,4)=9
      NCTIT2(4,4)=6
C
      ITITL2(1,5)='1-Sigma'
      ITITL2(2,5)='Uncertainty'
      ITITL2(3,5)='on LOD'
      ITITL2(4,5)='Estimate'
      NCTIT2(1,5)=7
      NCTIT2(2,5)=11
      NCTIT2(3,5)=6
      NCTIT2(4,5)=8
C
      IF(GAMMA.EQ.0.05)THEN
        ITITL2(2,6)='95% Upper'
        NCTIT2(2,6)=9
      ELSEIF(GAMMA.EQ.0.10)THEN
        ITITL2(2,6)='90% Upper'
        NCTIT2(2,6)=9
      ELSEIF(GAMMA.EQ.0.01)THEN
        ITITL2(2,6)='99% Upper'
        NCTIT2(2,6)=9
      ELSE
        ATEMP=100.*(1.0 - GAMMA)
        ITITL2(2,6)='xx.x% Upper'
        WRITE(ITITL2(2,6)(1:4),'(F4.1)')ATEMP
        NCTIT2(2,6)=11
      ENDIF
      ITITL2(1,6)=' '
      ITITL2(3,6)='Confidence'
      ITITL2(4,6)='Limit on LOD'
      NCTIT2(1,6)=0
      NCTIT2(3,6)=10
      NCTIT2(4,6)=12
C
      IF(GAMMA.EQ.0.05.AND.PA.EQ.0.05)THEN
        ITITL2(1,7)='95%-95%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.10.AND.PA.EQ.0.05)THEN
        ITITL2(1,7)='90%-95%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.01.AND.PA.EQ.0.05)THEN
        ITITL2(1,7)='99%-95%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.10.AND.PA.EQ.0.10)THEN
        ITITL2(1,7)='90%-90%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.05.AND.PA.EQ.0.10)THEN
        ITITL2(1,7)='95%-90%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.01.AND.PA.EQ.0.10)THEN
        ITITL2(1,7)='99%-90%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.10.AND.PA.EQ.0.01)THEN
        ITITL2(1,7)='90%-99%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.05.AND.PA.EQ.0.01)THEN
        ITITL2(1,7)='95%-99%'
        NCTIT2(1,7)=7
      ELSEIF(GAMMA.EQ.0.01.AND.PA.EQ.0.01)THEN
        ITITL2(1,7)='99%-99%'
        NCTIT2(1,7)=7
      ELSE
        ITITL2(1,7)='xx.x%-xx.x%'
        ATEMP=100.*(1.0 - GAMMA)
        WRITE(ITITL2(1,7)(1:4),'(F4.1)')ATEMP
        ATEMP=100.*(1.0 - PA)
        WRITE(ITITL2(1,7)(7:10),'(F4.1)')ATEMP
        NCTIT2(1,7)=11
      ENDIF
      ITITL2(2,7)='Upper'
      ITITL2(3,7)='Tolerance'
      ITITL2(4,7)='Limit on LOD'
      NCTIT2(2,7)=5
      NCTIT2(3,7)=9
      NCTIT2(4,7)=12
C
      NMAX=0
      DO5010J=1,NUMCOL
        NTOT(J)=15
        VALIGN(J)='b'
        ALIGN(J)='r'
        NMAX=NMAX+NTOT(J)
        IDIGIT(J)=NUMDIG
        IWHTML(J)=150
 5010 CONTINUE
      IWHTML(1)=125
      IWHTML(2)=175
      IWHTML(4)=175
      IWHTML(NUMCOL+1)=150
      VALIGN(NUMCOL+1)='b'
      ALIGN(NUMCOL+1)='r'
      DO5020I=1,NDIST
        NCTEXT(I)=0
        AMAT(I,1)=XIDTEM(I)
CCCCC   IF(I.EQ.1)THEN
        IF(I.EQ.1 .OR. I.LT.ISTRT)THEN
          AMAT(I,2)=CPUMIN
          AMAT(I,3)=CPUMIN
          AMAT(I,4)=CPUMIN
          AMAT(I,5)=CPUMIN
          AMAT(I,6)=CPUMIN
          AMAT(I,7)=CPUMIN
        ELSE
          AMAT(I,2)=BA(I)
          AMAT(I,3)=SI(I)
          AMAT(I,4)=LO(I)
          AMAT(I,5)=UN(I)
          AMAT(I,6)=LU(I)
          AMAT(I,7)=TO(I)
        ENDIF
 5020 CONTINUE
      IWRTF(1)=900
      IWRTF(2)=IWRTF(1)+1150
      IWRTF(3)=IWRTF(2)+1150
      IWRTF(4)=IWRTF(3)+1150
      IWRTF(5)=IWRTF(4)+1150
      IWRTF(6)=IWRTF(5)+1150
      IWRTF(7)=IWRTF(6)+1150
      IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')THEN
        IPTSZ=14
        CALL DPCONA(92,IBASLC)
        WRITE(ICOUT,8199)IBASLC,IPTSZ
 8199   FORMAT(A1,'fs',I2)
        CALL DPWRST(ICOUT,'WRIT')
      ENDIF
      IFRST=.TRUE.
      ILAST=.TRUE.
C
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD3')THEN
        ISTEPN='4.4'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,5111)
 5111   FORMAT('BEFORE PRINT LOD TABLE')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,4112)NCTIT9,NCTITL,MAXLIN,NUMLIN,NUMCOL,MAXROW
        CALL DPWRST('XXX','BUG ')
        DO5120I=1,NUMLIN
          DO5130J=1,NUMCOL
            WRITE(ICOUT,4122)I,J,ITITL2(I,J),NCTIT2(I,J),AMAT(I,J)
            CALL DPWRST('XXX','BUG ')
 5130     CONTINUE
 5120   CONTINUE
      ENDIF
C
      CALL DPDTA2(ITITL9,NCTIT9,
     1            ITITLE,NCTITL,ITITL2,NCTIT2,
     1            MAXLIN,NUMLIN,MAXCOL,NUMCOL,
     1            ITEXT,NCTEXT,AMAT,MAXROW,NDIST,
     1            IDIGIT,NTOT,IWHTML,IWRTF,VALIGN,ALIGN,NMAX,
     1            ICAPSW,ICAPTY,IFRST,ILAST,
     1            ISUBRO,IBUGA3,IERROR)
      IF(ICAPSW.EQ.'ON' .AND. ICAPTY.EQ.'RTF ')THEN
        IPTSZ=IRTFPS
        WRITE(ICOUT,8199)IBASLC,IPTSZ
        CALL DPWRST(ICOUT,'WRIT')
      ENDIF
C
 5199 CONTINUE
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
      IF(IBUGA3.EQ.'ON' .OR. ISUBRO.EQ.'LOD3')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END       OF DPLOD3--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9012)IERROR,IBUGA3
 9012   FORMAT('IERROR,IBUGA3 = ',A4,1X,A4)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9013)N
 9013   FORMAT('N = ',2I8)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
      SUBROUTINE DPLOD5(ALOD,ALODSE,CV,ALODLU,
     1                  IFLAGU,IFRST,ILAST,ICASPL,
     1                  IBUGA2,IBUGA3,ISUBRO,IERROR)
C
C     PURPOSE--UTILITY ROUTINE USED BY DPLODE.  THIS ROUTINE
C              UPDATES THE PARAMETERS "LOD", LODSE", "LODCV", AND
C              "LODUCL" AFTER PERFORMING A LIMITS OF DETECTION
C              COMMAND.
C     WRITTEN BY--ALAN HECKERT
C                 STATISTICAL ENGINEERING DIVISION
C                 INFORMATION TECHNOLOGY LABORAOTRY
C                 NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY
C                 GAITHERSBURG, MD 20899-8980
C                 PHONE--301-975-2899
C     NOTE--DATAPLOT IS A REGISTERED TRADEMARK
C           OF THE NATIONAL INSTITUTE OF STANDARDS OF TECHNOLOGY.
C     LANGUAGE--ANSI FORTRAN (1977)
C     VERSION NUMBER--2018/10
C     ORIGINAL VERSION--OCTOBER   2018.
C
C-----CHARACTER STATEMENTS FOR NON-COMMON VARIABLES-------------------
C
      CHARACTER*4 IFLAGU
      CHARACTER*4 ICASPL
      CHARACTER*4 IBUGA2
      CHARACTER*4 IBUGA3
      CHARACTER*4 ISUBRO
      CHARACTER*4 IERROR
C
      LOGICAL IFRST
      LOGICAL ILAST
C
      CHARACTER*4 IH
      CHARACTER*4 IH2
      CHARACTER*4 ISUBN0
      CHARACTER*4 ISUBN1
      CHARACTER*4 ISUBN2
      CHARACTER*4 ISTEPN
      CHARACTER*4 IOP
C
      SAVE IOUNI1
C
C
C-----COMMON VARIABLES (GENERAL)--------------------------------------
C
      INCLUDE 'DPCOPA.INC'
      INCLUDE 'DPCOHK.INC'
      INCLUDE 'DPCOHO.INC'
      INCLUDE 'DPCOF2.INC'
      INCLUDE 'DPCOP2.INC'
C
C-----START POINT-----------------------------------------------------
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LOD5')THEN
        ISTEPN='1'
        CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
        WRITE(ICOUT,999)
  999   FORMAT(1X)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,51)
   51   FORMAT('***** AT THE BEGINNING OF DPLOD5--')
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,54)ICASPL,ALOD,ALODSE,CV,ALODLU
   54   FORMAT('ICASPL,ALOD,ALODSE,CV,ALODLU = ',A4,2X,4G15.7)
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      IF(IFLAGU.EQ.'FILE')THEN
        IF(IFRST)THEN
          IOP='OPEN'
          IFLAG1=1
          IFLAG2=0
          IFLAG3=0
          IFLAG4=0
          IFLAG5=0
          CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1                IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1                IBUGA3,ISUBRO,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
          IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LOD5')THEN
            ISTEPN='2A'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,201)IOUNI1
  201       FORMAT('AFTER CALL DPOPFI, IOUNI1 = ',I8)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
          WRITE(IOUNI1,295)
  295     FORMAT(12X,'LOD',10X,'LODSE',10X,'LODCV',9X,'LODUCL')
        ENDIF
        WRITE(IOUNI1,299)ALOD,ALODSE,CV,ALODLU
  299   FORMAT(4E15.7)
      ELSEIF(IFLAGU.EQ.'ON')THEN
C
        IF(ALOD.NE.CPUMIN)THEN
          IH='LOD '
          IH2='    '
          VALUE0=ALOD
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
        IF(ALODSE.NE.CPUMIN)THEN
          IH='LODS'
          IH2='E   '
          VALUE0=ALODSE
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
        IF(CV.NE.CPUMIN)THEN
          IH='LODC'
          IH2='V   '
          VALUE0=CV
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
        IF(ALODLU.NE.CPUMIN)THEN
          IH='LODU'
          IH2='CL  '
          VALUE0=ALODLU
          CALL DPADDP(IH,IH2,VALUE0,IHOST1,ISUBN0,
     1                IHNAME,IHNAM2,IUSE,VALUE,IVALUE,NUMNAM,MAXNAM,
     1                IANS,IWIDTH,IBUGA3,IERROR)
        ENDIF
C
      ENDIF
C
      IF(IFLAGU.EQ.'FILE')THEN
        IF(ILAST)THEN
          IOP='CLOS'
          IFLAG1=1
          IFLAG2=0
          IFLAG3=0
          IFLAG4=0
          IFLAG5=0
          CALL DPAUFI(IOP,IFLAG1,IFLAG2,IFLAG3,IFLAG4,IFLAG5,
     1                IOUNI1,IOUNI2,IOUNI3,IOUNI4,IOUNI5,
     1                IBUGA3,ISUBRO,IERROR)
          IF(IERROR.EQ.'YES')GOTO9000
C
          IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LOD5')THEN
            ISTEPN='3A'
            CALL TRACE2(ISTEPN,ISUBN1,ISUBN2)
            WRITE(ICOUT,999)
            CALL DPWRST('XXX','BUG ')
            WRITE(ICOUT,301)IERROR,IOUNI1
  301       FORMAT('AFTER CALL DPCLFI: IERROR,IOUNI1 = ',A4,2X,I5)
            CALL DPWRST('XXX','BUG ')
          ENDIF
C
        ENDIF
      ENDIF
C
C               *****************
C               **  STEP 90--  **
C               **  EXIT       **
C               *****************
C
 9000 CONTINUE
C
      IF(IBUGA2.EQ.'ON' .OR. ISUBRO.EQ.'LOD5')THEN
        WRITE(ICOUT,999)
        CALL DPWRST('XXX','BUG ')
        WRITE(ICOUT,9011)
 9011   FORMAT('***** AT THE END OF DPLOD5--')
        CALL DPWRST('XXX','BUG ')
      ENDIF
C
      RETURN
      END
