This is file locatest.men--Formal t Test: Shift in Location
 
--------------------
 1. Formal t Test: Shift in Location
 2. T TEST Y MU0
 3.
 4. The Problem: 1) IF   a process has a pre-mod
 5.                 reference location (= typical
 6.                 value) = mu0, &
 7.              2) IF   an engineering mod is made, &
 8.              3) IF   post-mod data is collected,
 9.              4) THEN can we conclude that
10.                 the process location has improved?
11.
12. The Engineering Deliverable: A Yes/No Conclusion
13.
14.
15. Pre -mod Reference mu0 (%):
15. @CE 1 0 35 50 ?
16. Post-mod Response  Variable  :
16. @CE 2 0 35 50 ? gui-vari
17.
18. Define "improvement" (select one):
19.    The process has "improved" if the
20.    post-mod mu .?. pre-mod mu
21. @CE 3 1  4 16 is < than
21. @CE 3 2 20 32 is > than
21. @CE 3 3 36 48 differs from
22.
23. Alpha (= Type I) error (select one):
24. @CE 4 1  4  8 5%
24. @CE 4 2 20 24 1%
25.
26. Subset/Except/For Specification:
27. @CE 5 0 1 50 *
28.
29. Do t Test?
--------------------
GR FE
T TEST _2 _1 _5
 
LET ZMU0 = _1
 
LET ZN = NUMBER _2 _5
LET ZDF = ZN-1
 
LET ZSTAT = MEAN _2 _5
LET ZSDSTAT = SD MEAN _2 _5
LET ZTESTSTA = (ZSTAT-ZMU0)/ZSDSTAT
 
LET ZP = .95
@IF 4 2 LET ZP = .99
LET ZQ = 1-ZP
LET ZP2 = ZP+(1-ZP)/2
LET ZQ2 = 1-ZP2
LET ZPERC = 100*ZP
LET ZALPHA = 100*ZQ
 
@IF 3 2 LET ZCUT1 = TPPF(.001,ZDF)
@IF 3 2 LET ZCUT2 = TPPF(ZP,ZDF)
@IF 3 1 LET ZCUT1 = TPPF(ZQ,ZDF)
@IF 3 1 LET ZCUT2 = TPPF(.999,ZDF)
@IF 3 3 LET ZCUT1 = TPPF(ZQ2,ZDF)
@IF 3 3 LET ZCUT2 = TPPF(ZP2,ZDF)
 
LET Z80 = TPPF(.80,ZDF)
LET ZLOWER = TPPF(.001,ZDF)
LET ZUPPER = TPPF(.999,ZDF)
LET ZLOWER2 = MIN(ZTESTSTA,ZLOWER)
LET ZUPPER2 = MAX(ZUPPER,ZTESTSTA)
 
LET FUNCTION ZF = TPDF(ZZ,ZDF)
PLOT ZF FOR ZZ = ZLOWER2 .1 ZUPPER2 AND
PLOT 0 FOR ZZ = ZLOWER2 .1 ZUPPER2
 
JUSTIFICATION CENTER
LET ZZ = ZTESTSTA; LET ZPDFSTAT = ZF
LET ZZ = ZLOWER; LET ZPDFLOWE = ZF
LET ZZ = ZUPPER; LET ZPDFUPPE = ZF
LET ZZ = ZCUT1; LET ZPDFCUT1 = ZF
LET ZZ = ZCUT2; LET ZPDFCUT2 = ZF
LET ZZ = Z80; LET ZPDF80 = ZF
 
DRAWDSDS ZTESTSTA 25 ZTESTSTA 10
MOVEDS ZTESTSTA 26; TEXT TSV
MOVEDS ZTESTSTA 26; TEXT TSV
MOVEDS ZTESTSTA 6; TEXT ^ZTESTSTA
MOVEDS ZTESTSTA 6; TEXT ^ZTESTSTA
 
@IF 3 2 DRAWDDDS ZCUT2 ZPDFCUT2 ZCUT2 5
@IF 3 2 DRAWDSDS ZCUT2 85 ZCUT2 5
@IF 3 2 DRAWDSDS ZCUT2 85 ZLOWER2 85
@IF 3 2 LET ZLOWER2P = ZLOWER2+(ZCUT2-ZLOWER2)/20
@IF 3 2 DRAWDSDS ZLOWER2P 86 ZLOWER2 85 ZLOWER2P 84
@IF 3 2 MOVEDS ZCUT2 1; TEXT ^ZCUT2
 
@IF 3 1 DRAWDDDS ZCUT1 ZPDFCUT1 ZCUT1 5
@IF 3 1 DRAWDSDS ZCUT1 85 ZCUT1 5
@IF 3 1 DRAWDSDS ZCUT1 85 ZUPPER2 85
@IF 3 1 LET ZUPPER2P = ZUPPER2-(ZUPPER2-ZCUT1)/20
@IF 3 1 DRAWDSDS ZUPPER2P 86 ZUPPER2 85 ZUPPER2P 84
@IF 3 1 MOVEDS ZCUT1 1; TEXT ^ZCUT1
 
@IF 3 3 DRAWDDDS ZCUT1 ZPDFCUT1 ZCUT1 5
@IF 3 3 DRAWDSDS ZCUT1 85 ZCUT1 5
@IF 3 3 DRAWDDDS ZCUT2 ZPDFCUT2 ZCUT2 5
@IF 3 3 DRAWDSDS ZCUT2 85 ZCUT2 5
@IF 3 3 DRAWDSDS ZCUT1 85 ZCUT2 85
@IF 3 3 MOVEDS ZCUT1 1; TEXT ^ZCUT1
@IF 3 3 MOVEDS ZCUT2 1; TEXT ^ZCUT2
 
LET ZHALF = (ZCUT1+ZCUT2)/2
MOVEDS ZHALF 80; TEXT NO
MOVEDS ZHALF 75; TEXT IMPROVEMENT
MOVEDS ZHALF 70; TEXT REGION
 
JUSTIFICATION LEFT
MOVEDD Z80 ZPDF80
TEXT t(^ZDF)
 
WRITE ZALPHA ZMU0 ZN ZSTAT ZSDSTAT ZTESTSTA ZCUT1 ZCUT2
--------------------
WEB HELP T TEST
--------------------
