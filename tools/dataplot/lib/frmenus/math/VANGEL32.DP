----- <~math\VANGEL32.DP> Run VANGEL32.DP Example

. This is file    VANGEL32.DP

. RECIPE Tolerance Limits Analysis of Graphite/Epoxy Tape Strength
. Regression Case
. Date--September 1997
.
. ------------------------
. Step 1--Read in the data
.
skip 25
read vangel32.dat y x b
set minmax 1
.
. -----------------------------------------
. Step 2--Test for randomness and normality
.
4-plot y
sleep 3
.
. ----------------------------------------------------------
. Step 3--Test for homoegneity (wrt location, wrt variation)
.
y1label Strength
x1label Temperature
x3label automatic
characters x all
lines solid all
plot y x x
sleep 3
.
characters box plot
lines box plot
box plot y x
sleep 3
.
characters blank all
lines solid all
y1label
x1label
x3label
.
f location test y x
sleep 3
levene test y x
sleep 3
.
. -------------------------
. Step 4--Test for outliers
.
let ysave = y
linear fit y x
let y = res
.
grubbs test y
sleep 3
let y = ysave
.
. --------------------------------------
. Step 5--Test for best-fit distribution
.
multiplot corner coordinates 2 2 98 98
multiplot 2 4
   font simplex
   justification center; hw 4 3
   normal probability plot y
      move 50 95; text Normal Prob Plot
      move 28 85; let ppcc = round(ppcc,4); text ^ppcc
      move 50 10; text loc = ^ppa0 scale = ^ppa1
   lognormal probability plot y
      move 50 95; text Lognormal Prob Plot
      move 28 85; let ppcc = round(ppcc,4); text ^ppcc
      move 50 10; text loc = ^ppa0 scale = ^ppa1
   tukey ppcc plot y
      move 50 95; text Tukey PPCC Plot
      move 50 85; text optimal tail length = ^shape
   let lambda = shape; tukey probability plot y
      move 50 95; text Tukey Prob Plot (^lambda)
      move 28 85; let ppcc = round(ppcc,4); text ^ppcc
      move 50 10; text loc = ^ppa0 scale = ^ppa1
   let miny = minimum y
   weibull plot y
      move 50 95
      text 2-par. Weibull Plot
      move 50 10
      text (eta = ^eta, beta = ^beta)
      let gamma = beta
      weibull probability plot y
      move 50 95
      text Weibull Prob Plot (^gamma)
      move 28 85
      let ppcc = round(ppcc,4)
      text ^ppcc
      move 50 10
      text loc = ^ppa0 scale = ^ppa1
   weibull PPCC plot y
      move 50 95; text 3-par. Weibull PPCC Plot
      move 50 85; text optimal shape = ^shape
   let gamma = shape; weibull probability plot y
      move 50 95; text Weibull Prob Plot (^gamma)
      move 28 85; let ppcc = round(ppcc,4); text ^ppcc
      move 50 10; text loc = ^ppa0 scale = ^ppa1
multiplot off
font tektronix
sleep 3
.
pre-erase off
   erase
   title Weibull Density Functions

   let miny = min y
   let maxy = max y
   let plotxmin = 1
   if miny < 0
      let plotxmin = 100*int(2*miny/100)
   end if
   let plotxmax = 100*int(2*maxy/100)
   xlimits plotxmin plotxmax
   let plotymin = 0
   let plotymax = .01
   ylimits plotymin plotymax

   relative histogram y
   lines dotted
   let loc = 0
   let scale = ^eta
   let shape = ^beta
   plot (1/scale)*weipdf((x-loc)/scale,shape) for x = plotxmin 1 plotxmax
   lines solid
   let loc = ^ppa0
   let scale = ^ppa1
   let shape = ^gamma
   plot (1/scale)*weipdf((x-loc)/scale,shape) for x = plotxmin 1 plotxmax

   justification left; hw 2 1
   move 16 85; text 2-parameter
   lines dotted; draw 31 85 38 85
   move 16 80; text 3-parameter
   lines solid; draw 31 80 38 80

   limits
pre-erase on
sleep 3
. ------------------------------------------------
. Step 6--Compute (recipe/normal) tolerance limits
.
let y = ysave
recipe content 90
recipe confidence 95
recipe degree 1
let x2 = sequence -75 25 200
recipe fit y x b x2
.
characters x blank circle
character fill off off on
character size 1 all
lines blank solid dotted
plot y pred versus x and
plot tol versus x2
reset plot control
sleep 3
.
