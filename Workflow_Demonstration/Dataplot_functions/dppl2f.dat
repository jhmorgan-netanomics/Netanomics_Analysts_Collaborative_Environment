%!PS-Adobe-2.0
%%Creator: Dataplot
%%Title: Dataplot Postscript File
%%CreationDate: NULL
%%Pages: (atend)
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Times-BoldItalic
%%+ Helvetica Helvetica-Bold Helvetica-Oblique Helvetica-BoldOblique Courier
%%+ Courier-Bold Courier-Oblique  Courier-BoldOblique
%%+ AvantGarde-Book AvantGarde-BookOblique AvantGarde-Demi AvantGarde-DemiOblique
%%+ Bookman-Demi Bookman-DemiItalic       Bookman-Light Bookman-LightItalic      
%%+ Helvetica-Narrow Helvetica-Narrow-Bold Helvetica-Narrow-BoldOblique          
%%+ Helvetica-Narrow-Oblique              NewCentury-Schlbk-Bold                 
%%+ NewCentury-Schlbk-Italic              NewCenturySchlbk-BoldItalic            
%%+ Palatino-Roman Palatino-Bold          Palatino-Italic Palatino-BoldItalic    
%%+ ZapfChancery-MediumItalic  Symbol                                            
%%BoundingBox: 0 0 792 792
% DATAPLOT POSTSCRIPT DRIVER, JANUARY, 1990
% PROLOG SECTION: DATAPLOT DEFINITIONS     
%DEFINE PROCEDURE "rightshow" TO PRINT RIGHT JUSTIFIED STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% (STRING) rightshow
/rightshow
  {dup stringwidth pop
   IX exch sub
   IY moveto
   show} def
%DEFINE PROCEDURE "centshow" TO PRINT CENTER JUSTIFIED STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% (STRING) centshow
/centshow
  {dup stringwidth pop
   2 div
   IX exch sub
   IY moveto
   show} def
%DEFINE PROCEDURE "leftshow" TO PRINT LEFT   JUSTIFIED STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% (STRING) leftshow
/leftshow
  {IX IY moveto show} def
%DEFINE PROCEDURE "vrightshow" TO PRINT RIGHT JUSTIFIED VERTICAL STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% newpath IX IY moveto gsave
% (STRING) vrightshow grestore
/vrightshow
  {dup stringwidth pop
   IY exch sub
   IX exch moveto
    90 rotate
   show} def
%DEFINE PROCEDURE "vcentshow" TO PRINT CENTER JUSTIFIED VERTICAL STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% newpath IX IY moveto gsave
% (STRING) vcentshow grestore
/vcentshow
  {dup stringwidth pop
   2 div
   IY exch sub
   IX exch moveto
     90 rotate
   show} def
%DEFINE PROCEDURE "vleftshow" TO PRINT LEFT   JUSTIFIED VERTICAL STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% newpath IX IY moveto gsave
% (STRING) vleftshow grestore
/vleftshow
  {IX IY moveto 90 rotate show} def 
%DEFINE PROCEDURE "setpsfont" TO DEFINE THE POSTSCRIPT FONT NAME AND SIZE.  CALL BY:
%  /PSFONT <FONTNAME> def /PSSIZE <FONTSIZE> def setpsfont
/setpsfont
  {PSFONT  findfont  PSSIZE  scalefont  setfont} def
%DEFINE PROCEDURE "psstringwidthr" TO MOVE THE STARTING POSITION OF A RIGHT JUSTIFIED STRING.
%CALL BY:
%  (STRING) psstringwidthr
/psstringwidthr
  {dup stringwidth pop 0 exch sub 0 rmoveto} def
%DEFINE PROCEDURE "psstringwidthc" TO MOVE THE STARTING POSITION OF A CENTER JUSTIFIED STRING.
%CALL BY:
%  (STRING) psstringwidthc
/psstringwidthc
  {dup stringwidth pop 2 div 0 exch sub 0 rmoveto}  def
%DEFINE PROCEDURE "psstringwidthtv" TO MOVE THE STARTING POSITION OF A TOP JUSTIFIED VERTICA STRING.
%CALL BY:
%  (STRING) psstringwidthtv
/psstringwidthtv
  {dup stringwidth pop 0 exch sub 0 exch    rmoveto} def
%DEFINE PROCEDURE "psstringwidthcv" TO MOVE THE STARTING POSITION OF A CENTER JUSTIFIEDVERTICAL STRING.
%CALL BY:
%  (STRING) psstringwidthcv
/psstringwidthcv
  {dup stringwidth pop 2 div 0 exch sub 0 exch rmoveto} def
%DEFINE PROCEDURE "leftshow2" TO PRINT LEFT  JUSTIFIED STRING AT CURRENT POSITION.  CALL BY: 
% (STRING) leftshow2
/leftshow2
  {show} def
%DEFINE PROCEDURE "vleftshow2" TO PRINT BOTTOM  JUSTIFIED VERTICAL STRING.  CALL BY:
% (STRING) vleftshow2
/vleftshow2
  {90 rotate show -90 rotate} def
% DEFINE PROCEDURE "l" AS ABBREVIATION OF lineto    
/l {lineto} def
% DEFINE PROCEDURE "m" AS ABBREVIATION OF moveto    
/m {moveto} def
/Helvetica-Bold                           findfont  98 scalefont setfont
gsave    % SAVE INITIAL GRAPHICS STATE   
%%EndProlog
%%Page: 1 1
0 0 moveto    0.12000    0.12000 scale  5015    85 translate 90 rotate 
1.00000 1.00000 1.00000 setrgbcolor
    0     0 m
 6429     0 l
 6429  4929 l
    0  4929 l
    0     0 l
closepath fill 0. 0. 0. setrgbcolor
%!PS-Adobe-2.0
%%Creator: Dataplot
%%Title: Dataplot Postscript File
%%CreationDate: NULL
%%Pages: (atend)
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Times-BoldItalic
%%+ Helvetica Helvetica-Bold Helvetica-Oblique Helvetica-BoldOblique Courier
%%+ Courier-Bold Courier-Oblique  Courier-BoldOblique
%%+ AvantGarde-Book AvantGarde-BookOblique AvantGarde-Demi AvantGarde-DemiOblique
%%+ Bookman-Demi Bookman-DemiItalic       Bookman-Light Bookman-LightItalic      
%%+ Helvetica-Narrow Helvetica-Narrow-Bold Helvetica-Narrow-BoldOblique          
%%+ Helvetica-Narrow-Oblique              NewCentury-Schlbk-Bold                 
%%+ NewCentury-Schlbk-Italic              NewCenturySchlbk-BoldItalic            
%%+ Palatino-Roman Palatino-Bold          Palatino-Italic Palatino-BoldItalic    
%%+ ZapfChancery-MediumItalic  Symbol                                            
%%BoundingBox: 0 0 792 792
% DATAPLOT POSTSCRIPT DRIVER, JANUARY, 1990
% PROLOG SECTION: DATAPLOT DEFINITIONS     
%DEFINE PROCEDURE "rightshow" TO PRINT RIGHT JUSTIFIED STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% (STRING) rightshow
/rightshow
  {dup stringwidth pop
   IX exch sub
   IY moveto
   show} def
%DEFINE PROCEDURE "centshow" TO PRINT CENTER JUSTIFIED STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% (STRING) centshow
/centshow
  {dup stringwidth pop
   2 div
   IX exch sub
   IY moveto
   show} def
%DEFINE PROCEDURE "leftshow" TO PRINT LEFT   JUSTIFIED STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% (STRING) leftshow
/leftshow
  {IX IY moveto show} def
%DEFINE PROCEDURE "vrightshow" TO PRINT RIGHT JUSTIFIED VERTICAL STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% newpath IX IY moveto gsave
% (STRING) vrightshow grestore
/vrightshow
  {dup stringwidth pop
   IY exch sub
   IX exch moveto
    90 rotate
   show} def
%DEFINE PROCEDURE "vcentshow" TO PRINT CENTER JUSTIFIED VERTICAL STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% newpath IX IY moveto gsave
% (STRING) vcentshow grestore
/vcentshow
  {dup stringwidth pop
   2 div
   IY exch sub
   IX exch moveto
     90 rotate
   show} def
%DEFINE PROCEDURE "vleftshow" TO PRINT LEFT   JUSTIFIED VERTICAL STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% newpath IX IY moveto gsave
% (STRING) vleftshow grestore
/vleftshow
  {IX IY moveto 90 rotate show} def 
%DEFINE PROCEDURE "setpsfont" TO DEFINE THE POSTSCRIPT FONT NAME AND SIZE.  CALL BY:
%  /PSFONT <FONTNAME> def /PSSIZE <FONTSIZE> def setpsfont
/setpsfont
  {PSFONT  findfont  PSSIZE  scalefont  setfont} def
%DEFINE PROCEDURE "psstringwidthr" TO MOVE THE STARTING POSITION OF A RIGHT JUSTIFIED STRING.
%CALL BY:
%  (STRING) psstringwidthr
/psstringwidthr
  {dup stringwidth pop 0 exch sub 0 rmoveto} def
%DEFINE PROCEDURE "psstringwidthc" TO MOVE THE STARTING POSITION OF A CENTER JUSTIFIED STRING.
%CALL BY:
%  (STRING) psstringwidthc
/psstringwidthc
  {dup stringwidth pop 2 div 0 exch sub 0 rmoveto}  def
%DEFINE PROCEDURE "psstringwidthtv" TO MOVE THE STARTING POSITION OF A TOP JUSTIFIED VERTICA STRING.
%CALL BY:
%  (STRING) psstringwidthtv
/psstringwidthtv
  {dup stringwidth pop 0 exch sub 0 exch    rmoveto} def
%DEFINE PROCEDURE "psstringwidthcv" TO MOVE THE STARTING POSITION OF A CENTER JUSTIFIEDVERTICAL STRING.
%CALL BY:
%  (STRING) psstringwidthcv
/psstringwidthcv
  {dup stringwidth pop 2 div 0 exch sub 0 exch rmoveto} def
%DEFINE PROCEDURE "leftshow2" TO PRINT LEFT  JUSTIFIED STRING AT CURRENT POSITION.  CALL BY: 
% (STRING) leftshow2
/leftshow2
  {show} def
%DEFINE PROCEDURE "vleftshow2" TO PRINT BOTTOM  JUSTIFIED VERTICAL STRING.  CALL BY:
% (STRING) vleftshow2
/vleftshow2
  {90 rotate show -90 rotate} def
% DEFINE PROCEDURE "l" AS ABBREVIATION OF lineto    
/l {lineto} def
% DEFINE PROCEDURE "m" AS ABBREVIATION OF moveto    
/m {moveto} def
/Helvetica-Bold                           findfont  98 scalefont setfont
gsave    % SAVE INITIAL GRAPHICS STATE   
%%EndProlog
%%Page: 1 1
0 0 moveto    0.12000    0.12000 scale  5015    85 translate 90 rotate 
1.00000 1.00000 1.00000 setrgbcolor
    0     0 m
 6429     0 l
 6429  4929 l
    0  4929 l
    0     0 l
closepath fill 0. 0. 0. setrgbcolor
%!PS-Adobe-2.0
%%Creator: Dataplot
%%Title: Dataplot Postscript File
%%CreationDate: NULL
%%Pages: (atend)
%%DocumentFonts: Times-Roman Times-Bold Times-Italic Times-BoldItalic
%%+ Helvetica Helvetica-Bold Helvetica-Oblique Helvetica-BoldOblique Courier
%%+ Courier-Bold Courier-Oblique  Courier-BoldOblique
%%+ AvantGarde-Book AvantGarde-BookOblique AvantGarde-Demi AvantGarde-DemiOblique
%%+ Bookman-Demi Bookman-DemiItalic       Bookman-Light Bookman-LightItalic      
%%+ Helvetica-Narrow Helvetica-Narrow-Bold Helvetica-Narrow-BoldOblique          
%%+ Helvetica-Narrow-Oblique              NewCentury-Schlbk-Bold                 
%%+ NewCentury-Schlbk-Italic              NewCenturySchlbk-BoldItalic            
%%+ Palatino-Roman Palatino-Bold          Palatino-Italic Palatino-BoldItalic    
%%+ ZapfChancery-MediumItalic  Symbol                                            
%%BoundingBox: 0 0 792 792
% DATAPLOT POSTSCRIPT DRIVER, JANUARY, 1990
% PROLOG SECTION: DATAPLOT DEFINITIONS     
%DEFINE PROCEDURE "rightshow" TO PRINT RIGHT JUSTIFIED STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% (STRING) rightshow
/rightshow
  {dup stringwidth pop
   IX exch sub
   IY moveto
   show} def
%DEFINE PROCEDURE "centshow" TO PRINT CENTER JUSTIFIED STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% (STRING) centshow
/centshow
  {dup stringwidth pop
   2 div
   IX exch sub
   IY moveto
   show} def
%DEFINE PROCEDURE "leftshow" TO PRINT LEFT   JUSTIFIED STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% (STRING) leftshow
/leftshow
  {IX IY moveto show} def
%DEFINE PROCEDURE "vrightshow" TO PRINT RIGHT JUSTIFIED VERTICAL STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% newpath IX IY moveto gsave
% (STRING) vrightshow grestore
/vrightshow
  {dup stringwidth pop
   IY exch sub
   IX exch moveto
    90 rotate
   show} def
%DEFINE PROCEDURE "vcentshow" TO PRINT CENTER JUSTIFIED VERTICAL STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% newpath IX IY moveto gsave
% (STRING) vcentshow grestore
/vcentshow
  {dup stringwidth pop
   2 div
   IY exch sub
   IX exch moveto
     90 rotate
   show} def
%DEFINE PROCEDURE "vleftshow" TO PRINT LEFT   JUSTIFIED VERTICAL STRING.  CALL BY:
%  /IX <XCOOR> def /IY <YCOOR> def 
% newpath IX IY moveto gsave
% (STRING) vleftshow grestore
/vleftshow
  {IX IY moveto 90 rotate show} def 
%DEFINE PROCEDURE "setpsfont" TO DEFINE THE POSTSCRIPT FONT NAME AND SIZE.  CALL BY:
%  /PSFONT <FONTNAME> def /PSSIZE <FONTSIZE> def setpsfont
/setpsfont
  {PSFONT  findfont  PSSIZE  scalefont  setfont} def
%DEFINE PROCEDURE "psstringwidthr" TO MOVE THE STARTING POSITION OF A RIGHT JUSTIFIED STRING.
%CALL BY:
%  (STRING) psstringwidthr
/psstringwidthr
  {dup stringwidth pop 0 exch sub 0 rmoveto} def
%DEFINE PROCEDURE "psstringwidthc" TO MOVE THE STARTING POSITION OF A CENTER JUSTIFIED STRING.
%CALL BY:
%  (STRING) psstringwidthc
/psstringwidthc
  {dup stringwidth pop 2 div 0 exch sub 0 rmoveto}  def
%DEFINE PROCEDURE "psstringwidthtv" TO MOVE THE STARTING POSITION OF A TOP JUSTIFIED VERTICA STRING.
%CALL BY:
%  (STRING) psstringwidthtv
/psstringwidthtv
  {dup stringwidth pop 0 exch sub 0 exch    rmoveto} def
%DEFINE PROCEDURE "psstringwidthcv" TO MOVE THE STARTING POSITION OF A CENTER JUSTIFIEDVERTICAL STRING.
%CALL BY:
%  (STRING) psstringwidthcv
/psstringwidthcv
  {dup stringwidth pop 2 div 0 exch sub 0 exch rmoveto} def
%DEFINE PROCEDURE "leftshow2" TO PRINT LEFT  JUSTIFIED STRING AT CURRENT POSITION.  CALL BY: 
% (STRING) leftshow2
/leftshow2
  {show} def
%DEFINE PROCEDURE "vleftshow2" TO PRINT BOTTOM  JUSTIFIED VERTICAL STRING.  CALL BY:
% (STRING) vleftshow2
/vleftshow2
  {90 rotate show -90 rotate} def
% DEFINE PROCEDURE "l" AS ABBREVIATION OF lineto    
/l {lineto} def
% DEFINE PROCEDURE "m" AS ABBREVIATION OF moveto    
/m {moveto} def
/Helvetica-Bold                           findfont  98 scalefont setfont
gsave    % SAVE INITIAL GRAPHICS STATE   
%%EndProlog
